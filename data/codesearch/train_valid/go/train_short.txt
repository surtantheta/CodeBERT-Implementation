1<CODESPLIT>https://github.com/spacemonkeygo/openssl/blob/c2dcc5cca94ac8f7f3f0c20e20050d4cce9d9730/cert.go#L367-L377<CODESPLIT>MarshalPEM<CODESPLIT>MarshalPEM converts the X509 certificate to PEM - encoded format<CODESPLIT>func ( c * Certificate ) MarshalPEM ( ) ( pem_block [ ] byte , err error ) { bio := C . BIO_new ( C . BIO_s_mem ( ) )   if bio == nil { return nil , errors . New ( " " )   }   defer C . BIO_free ( bio )   if int ( C . PEM_write_bio_X509 ( bio , c . x ) ) != 1 { return nil , errors . New ( " " )   }   return ioutil . ReadAll ( asAnyBio ( bio ) )   }

1<CODESPLIT>https://github.com/revel/revel/blob/a3d7a7c23ca885cc5036d3641ede49ce4a14ee2e/compress.go#L166-L191<CODESPLIT>Write<CODESPLIT>Write to the underling buffer<CODESPLIT>func ( c * CompressResponseWriter ) Write ( b [ ] byte ) ( int , error ) { if c . closed { return 0 , io . ErrClosedPipe   }   // Abort if parent has been closed if c . parentNotify != nil { select { case <- c . parentNotify : return 0 , io . ErrClosedPipe   default : }   }   // Abort if we ourselves have been closed if c . closed { return 0 , io . ErrClosedPipe   }    if ! c . headersWritten { c . prepareHeaders ( )   c . headersWritten = true   }   if c . compressionType != " " { return c . compressWriter . Write ( b )   }   return c . OriginalWriter . Write ( b )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/ssm/api.go#L13833-L13836<CODESPLIT>SetStatusDetails<CODESPLIT>SetStatus sets the Status field s value .<CODESPLIT>func ( s * CommandInvocation ) SetStatusDetails ( v string ) * CommandInvocation { s . StatusDetails = & v   return s   }

1<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/apiserver/stateauthenticator/context.go#L118-L120<CODESPLIT>CheckLocalLoginRequest<CODESPLIT>CheckLocalLoginRequest checks that the given HTTP request contains at least one valid local login macaroon minted using CreateLocalLoginMacaroon . It returns an error with a * bakery . VerificationError cause if the macaroon verification failed . If the macaroon is valid CheckLocalLoginRequest returns a list of caveats to add to the discharge macaroon .<CODESPLIT>func ( ctxt * authContext ) CheckLocalLoginRequest ( req * http . Request , tag names . UserTag ) ( [ ] checkers . Caveat , error ) { return authentication . CheckLocalLoginRequest ( ctxt . localUserThirdPartyBakeryService , req , tag , ctxt . clock )   }

1<CODESPLIT>https://github.com/decred/dcrdata/blob/02d6f8e648f7e2c5cf78ea92fb17b1d4aa4a99f6/db/dcrpg/queries.go#L3095-L3101<CODESPLIT>retrieveCoinSupply<CODESPLIT>retrieveCoinSupply fetches the coin supply data from the vins table .<CODESPLIT>func retrieveCoinSupply ( ctx context . Context , db * sql . DB , charts * cache . ChartData ) ( * sql . Rows , error ) { rows , err := db . QueryContext ( ctx , internal . SelectCoinSupply , charts . NewAtomsTip ( ) )   if err != nil { return nil , err   }   return rows , nil   }

1<CODESPLIT>https://github.com/dcos/dcos-metrics/blob/d56806e5335baf0f12fec2278f9526d77ec0bb1e/plugins/plugin.go#L54-L86<CODESPLIT>New<CODESPLIT>New returns a mandatory plugin config which every plugin for metrics will need<CODESPLIT>func New ( options ... Option ) ( * Plugin , error ) { newPlugin := & Plugin { Name : " " , PollingInterval : 10 , }    newPlugin . App = cli . NewApp ( )   newPlugin . App . Version = version   newPlugin . App . Flags = [ ] cli . Flag { cli . IntFlag { Name : " " , Value : newPlugin . PollingInterval , Usage : " " , Destination : & newPlugin . PollingInterval , } , cli . StringFlag { Name : " " , Value : newPlugin . Role , Usage : " " , Destination : & newPlugin . Role , } , }    for _ , o := range options { if err := o ( newPlugin ) ; err != nil { return newPlugin , err   }   }    newPlugin . Log = logrus . WithFields ( logrus . Fields { " " : newPlugin . Name } )    return newPlugin , nil   }

0<CODESPLIT>https://github.com/alexkappa/mustache/blob/d29845f60a879542625ba65812ddfb99fd9b12b9/lex.go#L292-L305<CODESPLIT>stateComment<CODESPLIT>stateIdent scans an alphanumeric or field .<CODESPLIT>func stateComment ( l * lexer ) stateFn { i := strings . Index ( l . input [ l . pos : ] , l . rightDelim )   if i < 0 { return l . errorf ( " " )   }   l . seek ( i )   l . emit ( tokenText )   return stateRightDelim   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/datasync/api.go#L1526-L1546<CODESPLIT>ListLocationsPagesWithContext<CODESPLIT>ListLocationsPagesWithContext same as ListLocationsPages except it takes a Context and allows setting request options on the pages . The context must be non - nil and will be used for request cancellation . If the context is nil a panic will occur . In the future the SDK may create sub - contexts for http . Requests . See https : // golang . org / pkg / context / for more information on using Contexts .<CODESPLIT>func ( c * DataSync ) ListLocationsPagesWithContext ( ctx aws . Context , input * ListLocationsInput , fn func ( * ListLocationsOutput , bool ) bool , opts ... request . Option ) error { p := request . Pagination { NewRequest : func ( ) ( * request . Request , error ) { var inCpy * ListLocationsInput   if input != nil { tmp := * input   inCpy = & tmp   }   req , _ := c . ListLocationsRequest ( inCpy )   req . SetContext ( ctx )   req . ApplyOptions ( opts ... )   return req , nil   } , }    cont := true   for p . Next ( ) && cont { cont = fn ( p . Page ( ) . ( * ListLocationsOutput ) , ! p . HasNextPage ( ) )   }   return p . Err ( )   }

1<CODESPLIT>https://github.com/yourbasic/graph/blob/40eb135c0b2618a87b653037e2697f58436d4666/immutable.go#L107-L118<CODESPLIT>VisitFrom<CODESPLIT>VisitFrom calls the do function starting from the first neighbor w for which w ≥ a with c equal to the cost of the edge from v to w . The neighbors are then visited in increasing numerical order . If do returns true VisitFrom returns immediately skipping any remaining neighbors and returns true .<CODESPLIT>func ( g * Immutable ) VisitFrom ( v int , a int , do func ( w int , c int64 ) bool ) bool { neighbors := g . edges [ v ]   n := len ( neighbors )   i := sort . Search ( n , func ( i int ) bool { return a <= neighbors [ i ] . vertex } )   for ; i < n ; i ++ { e := neighbors [ i ]   if do ( e . vertex , e . cost ) { return true   }   }   return false   }

1<CODESPLIT>https://github.com/brocaar/loraserver/blob/33ed6586ede637a540864142fcda0b7e3b90203d/internal/backend/gateway/mqtt/backend.go#L117-L131<CODESPLIT>Close<CODESPLIT>Close closes the backend . Note that this closes the backend one - way ( gateway to backend ) . This makes it possible to perform a graceful shutdown ( e . g . when there are still packets to send back to the gateway ) .<CODESPLIT>func ( b * Backend ) Close ( ) error { log . Info ( " " )    log . WithField ( " " , b . eventTopic ) . Info ( " " )   if token := b . conn . Unsubscribe ( b . eventTopic ) ; token . Wait ( ) && token . Error ( ) != nil { return fmt . Errorf ( " " , b . eventTopic , token . Error ( ) )   }    log . Info ( " " )   b . wg . Wait ( )   close ( b . rxPacketChan )   close ( b . statsPacketChan )   close ( b . downlinkTXAckChan )   return nil   }

0<CODESPLIT>https://github.com/appropriate/go-virtualboxclient/blob/83f77bb344f9aadbb994afa7492069b872e9074f/vboxwebsrv/vboxwebsrv.go#L29215-L29223<CODESPLIT>IUSBDeviceFiltersetName<CODESPLIT>Error can be either of the following types : - InvalidObjectFault - RuntimeFault<CODESPLIT>func ( service * VboxPortType ) IUSBDeviceFiltersetName ( request * IUSBDeviceFiltersetName ) ( * IUSBDeviceFiltersetNameResponse , error ) { response := new ( IUSBDeviceFiltersetNameResponse )   err := service . client . Call ( " " , request , response )   if err != nil { return nil , err   }    return response , nil   }

0<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/provider/azure/instance.go#L490-L505<CODESPLIT>explodeIngressRules<CODESPLIT>securityRuleName returns the security rule name for the given ingress rule and prefix returned by instanceNetworkSecurityRulePrefix .<CODESPLIT>func explodeIngressRules ( inRules jujunetwork . IngressRuleSlice ) jujunetwork . IngressRuleSlice { // If any rule has an empty source CIDR slice, a default // source value of "*" is used. var singleSourceIngressRules jujunetwork . IngressRuleSlice   for _ , rule := range inRules { sourceCIDRs := rule . SourceCIDRs   if len ( sourceCIDRs ) == 0 { sourceCIDRs = [ ] string { " " }   }   for _ , sr := range sourceCIDRs { r := rule   r . SourceCIDRs = [ ] string { sr }   singleSourceIngressRules = append ( singleSourceIngressRules , r )   }   }   return singleSourceIngressRules   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/glacier/api.go#L6000-L6003<CODESPLIT>SetPartSize<CODESPLIT>SetPartSize sets the PartSize field s value .<CODESPLIT>func ( s * InitiateMultipartUploadInput ) SetPartSize ( v string ) * InitiateMultipartUploadInput { s . PartSize = & v   return s   }

1<CODESPLIT>https://github.com/opsee/portmapper/blob/b0d47bf007a82594da260866bc0b7904914ebdfa/portmapper.go#L236-L298<CODESPLIT>Services<CODESPLIT>Services returns an array of Service pointers detailing the service name and port of each registered service . ( from etcd )<CODESPLIT>func Services ( ) ( [ ] * Service , error ) { // initialize a new etcd client c , err := client . New ( cfg )   if err != nil { log . WithFields ( log . Fields { " " : " " , " " : err . Error ( ) } ) . Fatal ( " " )   return nil , err   }    kAPI := client . NewKeysAPI ( c )    // attempt to delete the svc's path with exponential backoff for try := 0 ; try < MaxRetries ; try ++ { // 5 second context ctx , cancel := context . WithTimeout ( context . Background ( ) , RequestTimeoutSec * time . Second )   defer cancel ( )    resp , err := kAPI . Get ( ctx , RegistryPath , & client . GetOptions { Sort : true } )   if err != nil { // handle error if err == context . DeadlineExceeded { log . WithFields ( log . Fields { " " : " " , " " : try , " " : err . Error ( ) , } ) . Warn ( " " )   } else { log . WithFields ( log . Fields { " " : " " , " " : try , " " : err . Error ( ) , } ) . Error ( " " )   return nil , err   }   } else if resp == nil { log . WithFields ( log . Fields { " " : " " , " " : try , " " : " " , } ) . Error ( " " )   return nil , errors . New ( " " )   } else { svcNodes := resp . Node . Nodes   services := make ( [ ] * Service , len ( svcNodes ) )    for i , node := range svcNodes { svcStr := node . Value   svc , err := UnmarshalService ( [ ] byte ( svcStr ) )    if err != nil { return nil , err   }    services [ i ] = svc   }    return services , nil   }    time . Sleep ( 2 << uint ( try ) * time . Millisecond )   }    return nil , errors . New ( " " )   }

0<CODESPLIT>https://github.com/influxdata/telegraf/blob/6a73ad56ae733953e7c1108d9f9b5e6fd699c0b1/plugins/inputs/tcp_listener/tcp_listener.go#L279-L283<CODESPLIT>remember<CODESPLIT>forget a TCP connection<CODESPLIT>func ( t * TcpListener ) remember ( id string , conn * net . TCPConn ) { t . cleanup . Lock ( )   defer t . cleanup . Unlock ( )   t . conns [ id ] = conn   }

0<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/pkg/apis/core/zz_generated.deepcopy.go#L4810-L4815<CODESPLIT>DeepCopy<CODESPLIT>DeepCopyObject is an autogenerated deepcopy function copying the receiver creating a new runtime . Object .<CODESPLIT>func ( in * ServiceAccountTokenProjection ) DeepCopy ( ) * ServiceAccountTokenProjection { if in == nil { return nil   }   out := new ( ServiceAccountTokenProjection )   in . DeepCopyInto ( out )   return out   }

1<CODESPLIT>https://github.com/sacloud/libsacloud/blob/41c392dee98a83260abbe0fcd5c13beb7c75d103/api/gslb_gen.go#L22-L25<CODESPLIT>Offset<CODESPLIT>Offset オフセット<CODESPLIT>func ( api * GSLBAPI ) Offset ( offset int ) * GSLBAPI { api . offset ( offset )   return api   }

1<CODESPLIT>https://github.com/kubernetes/kops/blob/06b81aeae67d8ad440828a31247c74a46bccf04d/pkg/apis/kops/v1alpha2/zz_generated.conversion.go#L2249-L2251<CODESPLIT>Convert_kops_EgressProxySpec_To_v1alpha2_EgressProxySpec<CODESPLIT>Convert_kops_EgressProxySpec_To_v1alpha2_EgressProxySpec is an autogenerated conversion function .<CODESPLIT>func Convert_kops_EgressProxySpec_To_v1alpha2_EgressProxySpec ( in * kops . EgressProxySpec , out * EgressProxySpec , s conversion . Scope ) error { return autoConvert_kops_EgressProxySpec_To_v1alpha2_EgressProxySpec ( in , out , s )   }

1<CODESPLIT>https://github.com/ciena/onosms/blob/c983f001ca814993f3303846319b7387b121287b/cmd/wrapper/wrapper.go#L194-L420<CODESPLIT>watchPods<CODESPLIT>watchPods watches updates from kubernetes and updates the cluster information ( and kicks onos ) when membership changes .<CODESPLIT>func watchPods ( kube string ) { cluster := onosms . StringSet { }   byName := map [ string ] string { }    // The set in the cluster will always include myself. ip , err := onosms . GetMyIP ( )   if err != nil { // add loopback, may not be the best solution cluster . Add ( " " )   } else { cluster . Add ( ip )   }    // We are going to use a SSL transport with verification turned off timeout , err := time . ParseDuration ( httpTimeout )   if err != nil { log . Printf ( " \n " , httpTimeout )   }    bearer := " "   if b , err := ioutil . ReadFile ( serviceAccountTokenFile ) ; err == nil { log . Println ( " " )   bearer = string ( b )   } else { log . Printf ( " \n " , serviceAccountTokenFile , err )   }    var caCertPool * x509 . CertPool   var cacert [ ] byte   if cacert , err = ioutil . ReadFile ( serviceAccountCACertFile ) ; err == nil { log . Println ( " " )    caCertPool = x509 . NewCertPool ( )   if ok := caCertPool . AppendCertsFromPEM ( cacert ) ; ! ok { log . Fatalln ( " " )   } else { log . Printf ( " \n " , string ( cacert ) )   }   } else { log . Printf ( " \n " , serviceAccountCACertFile , err )   }    // If we have a bearer and a cert then we should be using those as credentials, if not we will // check the environment kubeCreds := " "   if bearer != " " && caCertPool != nil { kubeUser := os . Getenv ( kubeUserKey )   kubePassword := os . Getenv ( kubePasswordKey )   log . Printf ( " \n " , kubeUser , kubePassword )   if kubeUser != " " { val , err := base64 . StdEncoding . DecodeString ( kubeUser )   if err == nil { kubeUser = string ( val )   val , err = base64 . StdEncoding . DecodeString ( kubePassword )   if err == nil { kubePassword = string ( val )   kubeCreds = kubeUser + " " + kubePassword + " "   } else { log . Printf ( " \n " , kubeUser , err )   }   } else { log . Printf ( " \n " , kubePassword , err )   }   }   }    log . Printf ( " \n " , kubeCreds , kube , url . QueryEscape ( kubeOnosSelector ) )    req , err := http . NewRequest ( " " , " " + kubeCreds + kube + " " + url . QueryEscape ( kubeOnosSelector ) , nil )   if err != nil { log . Fatalf ( " \n " , err )   }   if len ( bearer ) > 0 { log . Printf ( " \n " , httpBearerHeader , bearer )   req . Header . Add ( httpAuthorizationHeader , httpBearerHeader + " " + bearer )   }    client := & http . Client { Transport : & http . Transport { TLSClientConfig : & tls . Config { InsecureSkipVerify : true , RootCAs : caCertPool , } , TLSHandshakeTimeout : timeout , ResponseHeaderTimeout : timeout , } , Timeout : timeout , }    resp , err := client . Do ( req )   if err != nil { log . Fatalf ( " \n " , err )   }   log . Printf ( " \n " , resp . Status )    if int ( resp . StatusCode / 100 ) != 2 { log . Fatalf ( " \n " , resp . Status )   }    var data map [ string ] interface { }   err = json . NewDecoder ( resp . Body ) . Decode ( & data )   if err != nil { log . Fatalf ( " \n " , err )   }    // Populate the cluster set with the base from the query jq := jsonq . NewQuery ( data )   items , err := jq . Array ( " " )   if err != nil { log . Printf ( " \n " , err )   } else { modified := false   for _ , item := range items { jq = jsonq . NewQuery ( item )   ip , err = jq . String ( " " )   if err == nil { if ! cluster . Contains ( ip ) { cluster . Add ( ip )   modified = true   }   byName [ jq . AsString ( " " ) ] = ip   }   }   if modified { onosms . WriteClusterConfig ( cluster . Array ( ) )   } else { log . Println ( " " )   }   }    log . Printf ( " \n " , cluster . Array ( ) )    b , _ := json . MarshalIndent ( data , " " , " " )   log . Printf ( " \n " , string ( b ) )    errCount := 0   client . Timeout = 0   for { req , err := http . NewRequest ( " " , " " + kubeCreds + kube + " " + url . QueryEscape ( kubeOnosSelector ) + " " , nil )   if err != nil { errCount ++   if errCount > maxErrorCount { log . Fatalf ( " " , errCount , err )   }   }   if bearer != " " { log . Printf ( " \n " , httpBearerHeader , bearer )   req . Header . Add ( httpAuthorizationHeader , httpBearerHeader + " " + bearer )   }    resp , err := client . Do ( req )   if err != nil { errCount ++   if errCount > maxErrorCount { log . Fatalf ( " " , errCount , err )   }   } else { // Worked, reset error count errCount = 0    decoder := json . NewDecoder ( resp . Body )   if err != nil { errCount ++   if errCount > maxErrorCount { log . Fatalf ( " " , errCount , err )   }   } else { // Worked, reset error count errCount = 0    for { var data map [ string ] interface { }   err := decoder . Decode ( & data )   if err == nil { log . Printf ( " \n " , cluster )   log . Printf ( " \n " , byName )   b , _ := json . MarshalIndent ( data , " " , " " )   log . Printf ( " \n " , string ( b ) )   jq := jsonq . NewQuery ( data )   name := jq . AsString ( " " )   ip , err = jq . String ( " " )   modified := false   log . Printf ( " \n " , jq . AsString ( " " ) , name , ip , byName [ name ] )   switch jq . AsString ( " " ) { case " " : if ip == " " { ip = byName [ name ]   }   if ip != " " { if cluster . Contains ( ip ) { cluster . Remove ( ip )   modified = true   }   delete ( byName , name )   } else { log . Printf ( " \n " , err )   }   case " " : fallthrough   case " " : if ip != " " { if ! cluster . Contains ( ip ) { cluster . Add ( ip )   modified = true   }   byName [ name ] = ip   } else { log . Println ( " " )   }   }   if modified { onosms . WriteClusterConfig ( cluster . Array ( ) )   } else { log . Println ( " " )   }    } else { log . Printf ( " \n " , err )   }   }   }   }   }   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/iam/api.go#L30802-L30805<CODESPLIT>SetRoleName<CODESPLIT>SetRoleName sets the RoleName field s value .<CODESPLIT>func ( s * UpdateRoleInput ) SetRoleName ( v string ) * UpdateRoleInput { s . RoleName = & v   return s   }

0<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/apiserver/apiserverhttp/mux.go#L46-L55<CODESPLIT>ServeHTTP<CODESPLIT>NewMux returns a new empty mux .<CODESPLIT>func ( m * Mux ) ServeHTTP ( w http . ResponseWriter , r * http . Request ) { m . pmu . Lock ( )   p := m . p   m . pmu . Unlock ( )   p . ServeHTTP ( w , r )   }

1<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/staging/src/k8s.io/apiextensions-apiserver/pkg/registry/customresourcedefinition/etcd.go#L161-L167<CODESPLIT>NewStatusREST<CODESPLIT>NewStatusREST makes a RESTStorage for status that has more limited options . It is based on the original REST so that we can share the same underlying store<CODESPLIT>func NewStatusREST ( scheme * runtime . Scheme , rest * REST ) * StatusREST { statusStore := * rest . Store   statusStore . CreateStrategy = nil   statusStore . DeleteStrategy = nil   statusStore . UpdateStrategy = NewStatusStrategy ( scheme )   return & StatusREST { store : & statusStore }   }

0<CODESPLIT>https://github.com/jmoiron/sqlx/blob/38398a30ed8516ffda617a04c822de09df8a3ec5/sqlx.go#L798-L821<CODESPLIT>MapScan<CODESPLIT>SliceScan a row returning a [] interface {} with values similar to MapScan . This function is primarily intended for use where the number of columns is not known . Because you can pass an [] interface {} directly to Scan it s recommended that you do that as it will not have to allocate new slices per row .<CODESPLIT>func MapScan ( r ColScanner , dest map [ string ] interface { } ) error { // ignore r.started, since we needn't use reflect for anything. columns , err := r . Columns ( )   if err != nil { return err   }    values := make ( [ ] interface { } , len ( columns ) )   for i := range values { values [ i ] = new ( interface { } )   }    err = r . Scan ( values ... )   if err != nil { return err   }    for i , column := range columns { dest [ column ] = * ( values [ i ] . ( * interface { } ) )   }    return r . Err ( )   }

1<CODESPLIT>https://github.com/google/seesaw/blob/34716af0775ecb1fad239a726390d63d6b0742dd/quagga/bgp.go#L226-L228<CODESPLIT>Advertise<CODESPLIT>Advertise requests the BGP daemon to advertise the specified network .<CODESPLIT>func ( b * BGP ) Advertise ( n * net . IPNet ) error { return b . network ( n , true )   }

1<CODESPLIT>https://github.com/gobs/cmd/blob/4980f07f0e1e95ac7da8fd33097708a86ffb46d3/cmd.go#L109-L111<CODESPLIT>NewWordCompleter<CODESPLIT>Create a WordCompleter and initialize with list of words<CODESPLIT>func NewWordCompleter ( words CompleterWords , cond CompleterCond ) * WordCompleter { return & WordCompleter { Words : words , Cond : cond }   }

0<CODESPLIT>https://github.com/hashicorp/consul/blob/277f73400b746b6c287d19e5076e38df7bba3405/agent/agent.go#L3473-L3504<CODESPLIT>DisableServiceMaintenance<CODESPLIT>EnableServiceMaintenance will register a false health check against the given service ID with critical status . This will exclude the service from queries .<CODESPLIT>func ( a * Agent ) DisableServiceMaintenance ( serviceID string ) error { if _ , ok := a . State . Services ( ) [ serviceID ] ; ! ok { return fmt . Errorf ( " " , serviceID )   }    // Check if maintenance mode is enabled checkID := serviceMaintCheckID ( serviceID )   if _ , ok := a . State . Checks ( ) [ checkID ] ; ! ok { return nil   }    // Deregister the maintenance check a . RemoveCheck ( checkID , true )   a . logger . Printf ( " " , serviceID )    return nil   }

1<CODESPLIT>https://github.com/dotabuff/manta/blob/f51563b05e0e19c9ac19196e26455af1782ed3f0/reader.go#L127-L140<CODESPLIT>readVarUint64<CODESPLIT>readVarUint64 reads an unsigned 64 - bit varint<CODESPLIT>func ( r * reader ) readVarUint64 ( ) uint64 { var x , s uint64   for i := 0 ; ; i ++ { b := r . readByte ( )   if b < 0x80 { if i > 9 || i == 9 && b > 1 { _panicf ( " " )   }   return x | uint64 ( b ) << s   }   x |= uint64 ( b & 0x7f ) << s   s += 7   }   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/neptune/api.go#L12888-L12891<CODESPLIT>SetSourceArn<CODESPLIT>SetSourceArn sets the SourceArn field s value .<CODESPLIT>func ( s * Event ) SetSourceArn ( v string ) * Event { s . SourceArn = & v   return s   }

1<CODESPLIT>https://github.com/projecteru2/core/blob/b12208b63ff460ec82327f36d39a2cee786f4dbb/utils/utils.go#L53-L60<CODESPLIT>GetGitRepoName<CODESPLIT>GetGitRepoName return git repo name<CODESPLIT>func GetGitRepoName ( url string ) ( string , error ) { if ! ( strings . Contains ( url , " " ) || strings . Contains ( url , " " ) || strings . Contains ( url , " " ) ) || ! strings . HasSuffix ( url , " " ) { return " " , fmt . Errorf ( " " , url )   }    return strings . TrimSuffix ( Tail ( url ) , " " ) , nil   }

0<CODESPLIT>https://github.com/go-playground/locales/blob/630ebbb602847eba93e75ae38bbc7bb7abcf1ff3/en_ZM/en_ZM.go#L185-L187<CODESPLIT>WeekdayNarrow<CODESPLIT>WeekdayShort returns the locales short weekday given the weekday provided<CODESPLIT>func ( en * en_ZM ) WeekdayNarrow ( weekday time . Weekday ) string { return en . daysNarrow [ weekday ]   }

1<CODESPLIT>https://github.com/hashicorp/go-sockaddr/blob/c7188e74f6acae5a989bdc959aa779f8b9f42faf/ifaddrs.go#L100-L102<CODESPLIT>AscIfAddress<CODESPLIT>AscIfAddress is a sorting function to sort IfAddrs by their respective address type . Non - equal types are deferred in the sort .<CODESPLIT>func AscIfAddress ( p1Ptr , p2Ptr * IfAddr ) int { return AscAddress ( & p1Ptr . SockAddr , & p2Ptr . SockAddr )   }

0<CODESPLIT>https://github.com/urfave/cli/blob/693af58b4d51b8fcc7f9d89576da170765980581/context.go#L125-L137<CODESPLIT>IsSet<CODESPLIT>GlobalIsSet determines if the global flag was actually set<CODESPLIT>func ( c * Context ) IsSet ( name string ) bool { if c . setFlags == nil { c . setFlags = make ( map [ string ] bool )    c . flagSet . Visit ( func ( f * flag . Flag ) { c . setFlags [ f . Name ] = true   } )    c . flagSet . VisitAll ( func ( f * flag . Flag ) { if _ , ok := c . setFlags [ f . Name ] ; ok { return   }   c . setFlags [ f . Name ] = false   } )    // XXX hack to support IsSet for flags with EnvVar // // There isn't an easy way to do this with the current implementation since // whether a flag was set via an environment variable is very difficult to // determine here. Instead, we intend to introduce a backwards incompatible // change in version 2 to add `IsSet` to the Flag interface to push the // responsibility closer to where the information required to determine // whether a flag is set by non-standard means such as environment // variables is available. // // See https://github.com/urfave/cli/issues/294 for additional discussion flags := c . Command . Flags   if c . Command . Name == " " { // cannot == Command{} since it contains slice types if c . App != nil { flags = c . App . Flags   }   }   for _ , f := range flags { eachName ( f . GetName ( ) , func ( name string ) { if isSet , ok := c . setFlags [ name ] ; isSet || ! ok { return   }    val := reflect . ValueOf ( f )   if val . Kind ( ) == reflect . Ptr { val = val . Elem ( )   }    filePathValue := val . FieldByName ( " " )   if filePathValue . IsValid ( ) { eachName ( filePathValue . String ( ) , func ( filePath string ) { if _ , err := os . Stat ( filePath ) ; err == nil { c . setFlags [ name ] = true   return   }   } )   }    envVarValue := val . FieldByName ( " " )   if envVarValue . IsValid ( ) { eachName ( envVarValue . String ( ) , func ( envVar string ) { envVar = strings . TrimSpace ( envVar )   if _ , ok := syscall . Getenv ( envVar ) ; ok { c . setFlags [ name ] = true   return   }   } )   }   } )   }   }    return c . setFlags [ name ]   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/neptune/api.go#L6183-L6186<CODESPLIT>SetDisableLogTypes<CODESPLIT>SetCharacterSetName sets the CharacterSetName field s value .<CODESPLIT>func ( s * CloudwatchLogsExportConfiguration ) SetDisableLogTypes ( v [ ] * string ) * CloudwatchLogsExportConfiguration { s . DisableLogTypes = v   return s   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/sagemaker/api.go#L21151-L21154<CODESPLIT>SetInstanceType<CODESPLIT>SetInstanceType sets the InstanceType field s value .<CODESPLIT>func ( s * ProductionVariant ) SetInstanceType ( v string ) * ProductionVariant { s . InstanceType = & v   return s   }

0<CODESPLIT>https://github.com/cosiner/gohper/blob/700f92d01d8a55070e4db9cf57bc3d346d65c9e8/ds/tree/trie.go#L146-L153<CODESPLIT>addChild<CODESPLIT>Match one longest route node and return values of path variable<CODESPLIT>func ( t * Trie ) addChild ( b byte , n * Trie ) { chars , childs := t . ChildChars , t . Childs   l := len ( chars )   chars , childs = make ( [ ] byte , l + 1 ) , make ( [ ] * Trie , l + 1 )   copy ( chars , t . ChildChars )   copy ( childs , t . Childs )    for ; l > 0 && chars [ l - 1 ] > b ; l -- { chars [ l ] , childs [ l ] = chars [ l - 1 ] , childs [ l - 1 ]   }   chars [ l ] , childs [ l ] = b , n   t . ChildChars , t . Childs = chars , childs   }

1<CODESPLIT>https://github.com/kylelemons/godebug/blob/009bb93e63da0d3607040fbc75007ff3e635a5a5/pretty/public.go#L130-L134<CODESPLIT>Fprint<CODESPLIT>Fprint writes the representation of the given value to the writer according to the cfg .<CODESPLIT>func ( cfg * Config ) Fprint ( w io . Writer , vals ... interface { } ) ( n int64 , err error ) { buf := new ( bytes . Buffer )   cfg . fprint ( buf , vals ... )   return buf . WriteTo ( w )   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/elastictranscoder/api.go#L2817-L2820<CODESPLIT>SetUserMetadata<CODESPLIT>SetUserMetadata sets the UserMetadata field s value .<CODESPLIT>func ( s * CreateJobInput ) SetUserMetadata ( v map [ string ] * string ) * CreateJobInput { s . UserMetadata = v   return s   }

1<CODESPLIT>https://github.com/decred/dcrdata/blob/02d6f8e648f7e2c5cf78ea92fb17b1d4aa4a99f6/db/dcrpg/upgrades_legacy.go#L1367-L1370<CODESPLIT>updateAllTicketsMainchain<CODESPLIT>updateAllTicketsMainchain sets is_mainchain for all tickets according to their containing block .<CODESPLIT>func updateAllTicketsMainchain ( db * sql . DB ) ( rowsUpdated int64 , err error ) { return sqlExec ( db , internal . UpdateTicketsMainchainAll , " " )   }

0<CODESPLIT>https://github.com/luci/luci-go/blob/f6cef429871eee3be7c6903af88d3ee884eaf683/gce/appengine/backend/bots.go#L186-L197<CODESPLIT>manageBot<CODESPLIT>terminateBotAsync schedules a task queue task to terminate a Swarming bot .<CODESPLIT>func manageBot ( c context . Context , payload proto . Message ) error { task , ok := payload . ( * tasks . ManageBot )   switch { case ! ok : return errors . Reason ( " " , payload ) . Err ( )   case task . GetId ( ) == " " : return errors . Reason ( " " ) . Err ( )   }   vm := & model . VM { ID : task . Id , }   switch err := datastore . Get ( c , vm ) ; { case err == datastore . ErrNoSuchEntity : return nil   case err != nil : return errors . Annotate ( err , " " ) . Err ( )   case vm . URL == " " : logging . Debugf ( c , " " , vm . Hostname )   return nil   }   logging . Debugf ( c , " " , vm . Hostname , vm . Swarming )   bot , err := getSwarming ( c , vm . Swarming ) . Bot . Get ( vm . Hostname ) . Context ( c ) . Do ( )   if err != nil { if gerr , ok := err . ( * googleapi . Error ) ; ok { if gerr . Code == http . StatusNotFound { logging . Debugf ( c , " " )   return manageMissingBot ( c , vm )   }   logErrors ( c , gerr )   return errors . Reason ( " " ) . Err ( )   }   return errors . Annotate ( err , " " ) . Err ( )   }   logging . Debugf ( c , " " )   return manageExistingBot ( c , bot , vm )   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/codedeploy/api.go#L9042-L9045<CODESPLIT>SetLifecycleEventName<CODESPLIT>SetLifecycleEventName sets the LifecycleEventName field s value .<CODESPLIT>func ( s * LifecycleEvent ) SetLifecycleEventName ( v string ) * LifecycleEvent { s . LifecycleEventName = & v   return s   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/cloudfront/api.go#L6348-L6351<CODESPLIT>SetLocation<CODESPLIT>SetLocation sets the Location field s value .<CODESPLIT>func ( s * CreatePublicKeyOutput ) SetLocation ( v string ) * CreatePublicKeyOutput { s . Location = & v   return s   }

1<CODESPLIT>https://github.com/instana/go-sensor/blob/9854c6e5d3e8c264693416ef9ee0646fa89cdc18/recorder.go#L165-L176<CODESPLIT>send<CODESPLIT>Retrieve the queued spans and post them to the host agent asynchronously .<CODESPLIT>func ( r * Recorder ) send ( ) { spansToSend := r . GetQueuedSpans ( )   if len ( spansToSend ) > 0 { go func ( ) { _ , err := sensor . agent . request ( sensor . agent . makeURL ( agentTracesURL ) , " " , spansToSend )   if err != nil { log . debug ( " " , err )   sensor . agent . reset ( )   }   } ( )   }   }

0<CODESPLIT>https://github.com/peterbourgon/diskv/blob/0be1b92a6df0e4f5cb0a5d15fb7f643d0ad93ce6/examples/advanced-transform/advanced-transform.go#L22-L28<CODESPLIT>rebuild<CODESPLIT>If you provide an AdvancedTransform you must also provide its inverse :<CODESPLIT>func rebuild ( less LessFunction , keys <- chan string ) * btree . BTree { tree := btree . New ( 2 )   for key := range keys { tree . ReplaceOrInsert ( btreeString { s : key , l : less } )   }   return tree   }

1<CODESPLIT>https://github.com/moby/moby/blob/e516af6e5636023e85335ed8d9d0d824349dd6ff/pkg/devicemapper/devmapper.go#L312-L337<CODESPLIT>RemoveDevice<CODESPLIT>RemoveDevice is a useful helper for cleaning up a device .<CODESPLIT>func RemoveDevice ( name string ) error { task , err := TaskCreateNamed ( deviceRemove , name )   if task == nil { return err   }    cookie := new ( uint )   if err := task . setCookie ( cookie , 0 ) ; err != nil { return fmt . Errorf ( " " , err )   }   defer UdevWait ( cookie )    dmSawBusy = false // reset before the task is run   dmSawEnxio = false   if err = task . run ( ) ; err != nil { if dmSawBusy { return ErrBusy   }   if dmSawEnxio { return ErrEnxio   }   return fmt . Errorf ( " " , err )   }    return nil   }

0<CODESPLIT>https://github.com/jmoiron/jsonq/blob/e874b168d07ecc7808bc950a17998a8aa3141d82/jsonq.go#L117-L123<CODESPLIT>Int<CODESPLIT>String extracts a string from the JsonQuery<CODESPLIT>func ( j * JsonQuery ) Int ( s ... string ) ( int , error ) { val , err := rquery ( j . blob , s ... )   if err != nil { return 0 , err   }   return intFromInterface ( val )   }

1<CODESPLIT>https://github.com/segmentio/stats/blob/17e5e763373e9d6a80804ff4dab85a842ad03a09/netstats/handler.go#L24-L29<CODESPLIT>NewHandlerWith<CODESPLIT>NewHandlerWith returns a Handler object that warps hdl and produces metrics on eng .<CODESPLIT>func NewHandlerWith ( eng * stats . Engine , hdl Handler ) Handler { return & handler { handler : hdl , eng : eng , }   }

1<CODESPLIT>https://github.com/cloudfoundry-incubator/credhub-cli/blob/379b3fbcf59cce9ff1359f0434d537c63154f37a/credhub/set.go#L30-L35<CODESPLIT>SetPassword<CODESPLIT>SetPassword sets a password credential with a user - provided value .<CODESPLIT>func ( ch * CredHub ) SetPassword ( name string , value values . Password ) ( credentials . Password , error ) { var cred credentials . Password   err := ch . setCredential ( name , " " , value , & cred )    return cred , err   }

1<CODESPLIT>https://github.com/go-playground/locales/blob/630ebbb602847eba93e75ae38bbc7bb7abcf1ff3/sr_Latn_BA/sr_Latn_BA.go#L184-L186<CODESPLIT>WeekdayAbbreviated<CODESPLIT>WeekdayAbbreviated returns the locales abbreviated weekday given the weekday provided<CODESPLIT>func ( sr * sr_Latn_BA ) WeekdayAbbreviated ( weekday time . Weekday ) string { return sr . daysAbbreviated [ weekday ]   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/storagegateway/api.go#L13697-L13700<CODESPLIT>SetReadOnly<CODESPLIT>SetPath sets the Path field s value .<CODESPLIT>func ( s * NFSFileShareInfo ) SetReadOnly ( v bool ) * NFSFileShareInfo { s . ReadOnly = & v   return s   }

1<CODESPLIT>https://github.com/gdamore/tcell/blob/dcf1bb30770eb1158b67005e1e472de6d74f055d/views/textbar.go#L64-L71<CODESPLIT>SetRight<CODESPLIT>SetRight sets the right text for the textbar . It is always right - aligned .<CODESPLIT>func ( t * TextBar ) SetRight ( s string , style tcell . Style ) { t . initialize ( )   if style == tcell . StyleDefault { style = t . style   }   t . right . SetText ( s )   t . right . SetStyle ( style )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/aws/request/request_pagination.go#L250-L264<CODESPLIT>DetectPHIRequest<CODESPLIT>EachPage iterates over each page of a paginated request object . The fn parameter should be a function with the following sample signature : func ( page * T lastPage bool ) bool { return true // return false to stop iterating } Where T is the structure type matching the output structure of the given operation . For example a request object generated by DynamoDB . ListTablesRequest () would expect to see dynamodb . ListTablesOutput as the structure T . The lastPage value represents whether the page is the last page of data or not . The return value of this function should return true to keep iterating or false to stop . Deprecated Use Pagination type for configurable pagination of API operations<CODESPLIT>func ( c * ComprehendMedical ) DetectPHIRequest ( input * DetectPHIInput ) ( req * request . Request , output * DetectPHIOutput ) { op := & request . Operation { Name : opDetectPHI , HTTPMethod : " " , HTTPPath : " " , }    if input == nil { input = & DetectPHIInput { }   }    output = & DetectPHIOutput { }   req = c . newRequest ( op , input , output )   return   }

0<CODESPLIT>https://github.com/vrischmann/rdbtools/blob/cd9eb17adda8fa11d4415be7e96d8f5fddb37532/sortedset.go#L29-L31<CODESPLIT>TransformVect<CODESPLIT>Returns a visualization of a sorted set entry<CODESPLIT>func ( xf * Transform ) TransformVect ( v vect . Vect ) vect . Vect { return vect . Add ( xf . Position , xf . RotateVect ( v ) )   }

0<CODESPLIT>https://github.com/xanzy/go-cloudstack/blob/b6f53ed3282d22b6446422879587b0a78e1b0f11/cloudstack/SnapshotService.go#L281-L290<CODESPLIT>CreateSnapshot<CODESPLIT>You should always use this function to get a new CreateSnapshotPolicyParams instance as then you are sure you have configured all required params<CODESPLIT>func ( s * SnapshotService ) CreateSnapshot ( p * CreateSnapshotParams ) ( * CreateSnapshotResponse , error ) { resp , err := s . cs . newRequest ( " " , p . toURLValues ( ) )   if err != nil { return nil , err   }    var r CreateSnapshotResponse   if err := json . Unmarshal ( resp , & r ) ; err != nil { return nil , err   }    // If we have a async client, we need to wait for the async result if s . cs . async { b , err := s . cs . GetAsyncJobResult ( r . JobID , s . cs . timeout )   if err != nil { if err == AsyncTimeoutErr { return & r , err   }   return nil , err   }    b , err = getRawValue ( b )   if err != nil { return nil , err   }    if err := json . Unmarshal ( b , & r ) ; err != nil { return nil , err   }   }    return & r , nil   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/firehose/api.go#L1650-L1653<CODESPLIT>SetDeliveryStreamARN<CODESPLIT>SetTags sets the Tags field s value .<CODESPLIT>func ( s * CreateDeliveryStreamOutput ) SetDeliveryStreamARN ( v string ) * CreateDeliveryStreamOutput { s . DeliveryStreamARN = & v   return s   }

1<CODESPLIT>https://github.com/pebbe/zmq4/blob/7a493a642e7acbd03045d4f5fe9516908a62f86f/socketget.go#L543-L549<CODESPLIT>GetConnectTimeout<CODESPLIT>ZMQ_CONNECT_TIMEOUT : Retrieve connect () timeout Returns ErrorNotImplemented42 with ZeroMQ version < 4 . 2 See : http : // api . zeromq . org / 4 - 2 : zmq - getsockopt#toc5<CODESPLIT>func ( soc * Socket ) GetConnectTimeout ( ) ( time . Duration , error ) { if minor < 2 { return time . Duration ( 0 ) , ErrorNotImplemented42   }   v , err := soc . getInt ( C . ZMQ_CONNECT_TIMEOUT )   return time . Duration ( v ) * time . Millisecond , err   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/cloudtrail/api.go#L2193-L2196<CODESPLIT>SetCloudWatchLogsLogGroupArn<CODESPLIT>SetCloudWatchLogsLogGroupArn sets the CloudWatchLogsLogGroupArn field s value .<CODESPLIT>func ( s * CreateTrailOutput ) SetCloudWatchLogsLogGroupArn ( v string ) * CreateTrailOutput { s . CloudWatchLogsLogGroupArn = & v   return s   }

0<CODESPLIT>https://github.com/gravitational/teleport/blob/d5243dbe8d36bba44bf640c08f1c49185ed2c8a4/lib/web/terminal.go#L544-L546<CODESPLIT>Read<CODESPLIT>Write wraps the data bytes in a raw envelope and sends .<CODESPLIT>func ( w * terminalStream ) Read ( out [ ] byte ) ( n int , err error ) { return w . terminal . read ( out , w . ws )   }

1<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/state/machine.go#L1144-L1166<CODESPLIT>SetAgentPresence<CODESPLIT>SetAgentPresence signals that the agent for machine m is alive . It returns the started pinger .<CODESPLIT>func ( m * Machine ) SetAgentPresence ( ) ( * presence . Pinger , error ) { presenceCollection := m . st . getPresenceCollection ( )   recorder := m . st . getPingBatcher ( )   p := presence . NewPinger ( presenceCollection , m . st . modelTag , m . globalKey ( ) , func ( ) presence . PingRecorder { return m . st . getPingBatcher ( ) } )   err := p . Start ( )   if err != nil { return nil , err   }   // Make sure this Agent status is written to the database before returning. recorder . Sync ( )   // We preform a manual sync here so that the // presence pinger has the most up-to-date information when it // starts. This ensures that commands run immediately after bootstrap // like status or enable-ha will have an accurate values // for agent-state. // // TODO: Does not work for multiple controllers. Trigger a sync across all controllers. if m . IsManager ( ) { m . st . workers . presenceWatcher ( ) . Sync ( )   }   return p , nil   }

0<CODESPLIT>https://github.com/kubernetes/kops/blob/06b81aeae67d8ad440828a31247c74a46bccf04d/upup/tools/generators/pkg/codegen/parse.go#L81-L108<CODESPLIT>check<CODESPLIT>parsePackage analyzes the single package constructed from the named files . If text is non - nil it is a string to be used instead of the content of the file to be used for testing . parsePackage exits if there is an error .<CODESPLIT>func ( pkg * Package ) check ( fs * token . FileSet , astFiles [ ] * ast . File ) { pkg . defs = make ( map [ * ast . Ident ] types . Object )   config := types . Config { Importer : importer . For ( " " , nil ) , FakeImportC : true }   info := & types . Info { Defs : pkg . defs , }   typesPkg , err := config . Check ( pkg . dir , fs , astFiles , info )   if err != nil { log . Fatalf ( " " , err )   }   pkg . typesPkg = typesPkg   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/ssm/api.go#L29864-L29867<CODESPLIT>SetResourceId<CODESPLIT>SetResourceType sets the ResourceType field s value .<CODESPLIT>func ( s * PutComplianceItemsInput ) SetResourceId ( v string ) * PutComplianceItemsInput { s . ResourceId = & v   return s   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/lightsail/api.go#L19305-L19308<CODESPLIT>SetTags<CODESPLIT>SetUsername sets the Username field s value .<CODESPLIT>func ( s * Instance ) SetTags ( v [ ] * Tag ) * Instance { s . Tags = v   return s   }

1<CODESPLIT>https://github.com/ory/fosite/blob/27bbe0033273157ea449310c064675127e2550e6/token/jwt/claims_id_token.go#L93-L98<CODESPLIT>Add<CODESPLIT>Add will add a key - value pair to the extra field<CODESPLIT>func ( c * IDTokenClaims ) Add ( key string , value interface { } ) { if c . Extra == nil { c . Extra = make ( map [ string ] interface { } )   }   c . Extra [ key ] = value   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/lightsail/api.go#L21627-L21630<CODESPLIT>SetContinentCode<CODESPLIT>SetContinentCode sets the ContinentCode field s value .<CODESPLIT>func ( s * Region ) SetContinentCode ( v string ) * Region { s . ContinentCode = & v   return s   }

0<CODESPLIT>https://github.com/uber/ringpop-go/blob/6475220d53092c8264fc6ce9416a351c960fe9fc/swim/gossip.go#L62-L73<CODESPLIT>GetMembers<CODESPLIT>newGossip returns a new gossip SWIM sub - protocol with the given protocol period<CODESPLIT>func ( p * RoleServiceClient ) GetMembers ( role string ) ( r [ ] string , err error ) { if err = p . sendGetMembers ( role ) ; err != nil { return   }   return p . recvGetMembers ( )   }

0<CODESPLIT>https://github.com/go-delve/delve/blob/71a7fe04d9a7f7292146988f0e737aea47543dd0/pkg/proc/gdbserial/gdbserver_conn.go#L502-L522<CODESPLIT>readRegisters<CODESPLIT>readRegister executes p ( read register ) command .<CODESPLIT>func ( conn * gdbConn ) readRegisters ( threadID string , data [ ] byte ) error { if ! conn . threadSuffixSupported { if err := conn . selectThread ( 'g' , threadID , " " ) ; err != nil { return err   }   }   conn . outbuf . Reset ( )   conn . outbuf . WriteString ( " " )   conn . appendThreadSelector ( threadID )   resp , err := conn . exec ( conn . outbuf . Bytes ( ) , " " )   if err != nil { return err   }    for i := 0 ; i < len ( resp ) ; i += 2 { n , _ := strconv . ParseUint ( string ( resp [ i : i + 2 ] ) , 16 , 8 )   data [ i / 2 ] = uint8 ( n )   }    return nil   }

0<CODESPLIT>https://github.com/google/go-github/blob/1fef44b9b427e6c43f92b2f20918e496c275393f/github/teams.go#L310-L318<CODESPLIT>IsTeamRepo<CODESPLIT>AddTeamRepo adds a repository to be managed by the specified team . The specified repository must be owned by the organization to which the team belongs or a direct fork of a repository owned by the organization . GitHub API docs : https : // developer . github . com / v3 / teams / #add - team - repo<CODESPLIT>func ( s * TeamsService ) IsTeamRepo ( ctx context . Context , team int64 , owner string , repo string ) ( * Repository , * Response , error ) { u := fmt . Sprintf ( " " , team , owner , repo )   req , err := s . client . NewRequest ( " " , u , nil )   if err != nil { return nil , nil , err   }    headers := [ ] string { mediaTypeOrgPermissionRepo , mediaTypeNestedTeamsPreview }   req . Header . Set ( " " , strings . Join ( headers , " " ) )    repository := new ( Repository )   resp , err := s . client . Do ( ctx , req , repository )   if err != nil { return nil , resp , err   }    return repository , resp , nil   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/signer/api.go#L2684-L2687<CODESPLIT>SetProfileName<CODESPLIT>SetSource sets the Source field s value .<CODESPLIT>func ( s * StartSigningJobInput ) SetProfileName ( v string ) * StartSigningJobInput { s . ProfileName = & v   return s   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/ssm/api.go#L26367-L26370<CODESPLIT>SetFilters<CODESPLIT>SetFilters sets the Filters field s value .<CODESPLIT>func ( s * ListResourceComplianceSummariesInput ) SetFilters ( v [ ] * ComplianceStringFilter ) * ListResourceComplianceSummariesInput { s . Filters = v   return s   }

0<CODESPLIT>https://github.com/pearkes/dnsimple/blob/0adf7d0dae07ba10af74af1a047c98d3d02b3382/api.go#L55-L63<CODESPLIT>Close<CODESPLIT>NewClient returns a new dnsimple client requires an authorization token . You can generate an OAuth token by visiting the Apps & API section of the DNSimple control panel for your account .<CODESPLIT>func ( b * MultiHandler ) Close ( ) { wg := sync . WaitGroup { }   wg . Add ( len ( b . handlers ) )   for _ , handler := range b . handlers { go func ( handler Handler ) { handler . Close ( )   wg . Done ( )   } ( handler )   }   wg . Wait ( )   }

0<CODESPLIT>https://github.com/fhs/gompd/blob/e9f7b69903c5ed916cfc447488363d709ecd5492/mpd/client.go#L350-L352<CODESPLIT>SeekSongID<CODESPLIT>SeekPos seeks to the position d of the song at playlist position pos .<CODESPLIT>func ( c * Client ) SeekSongID ( id int , d time . Duration ) error { return c . Command ( " " , id , d . Seconds ( ) ) . OK ( )   }

0<CODESPLIT>https://github.com/rpaloschi/dxf-go/blob/946d856c548ad7cfc2a1af2e10e5ec98f9327743/core/data_types.go#L49-L54<CODESPLIT>NewStringValue<CODESPLIT>Equals Compares two Strings for equality . If other cannot be casted to a String returns false .<CODESPLIT>func NewStringValue ( value string ) * String { returnValue := new ( String )   returnValue . value = value   return returnValue   }

0<CODESPLIT>https://github.com/luci/luci-go/blob/f6cef429871eee3be7c6903af88d3ee884eaf683/milo/frontend/ui/build.go#L589-L594<CODESPLIT>NewEmptyLink<CODESPLIT>NewPatchLink generates a URL to a Gerrit CL .<CODESPLIT>func NewEmptyLink ( label string ) * Link { return & Link { Link : model . Link { Label : label } }   }

1<CODESPLIT>https://github.com/remind101/pkg/blob/6c8f1a7b080e58f5c69a857536d9989fc9356841/svc/handler.go#L46-L98<CODESPLIT>NewStandardHandler<CODESPLIT>NewStandardHandler returns an http . Handler with a standard middleware stack . The last middleware added is the first middleware to handle the request . Order is pretty important as some middleware depends on others having run already .<CODESPLIT>func NewStandardHandler ( opts HandlerOpts ) http . Handler { h := httpx . Handler ( opts . Router )    if opts . HandlerTimeout != 0 { // Timeout requests after the given Timeout duration. h = middleware . TimeoutHandler ( h , opts . HandlerTimeout )   }    // Recover from panics. A panic is converted to an error. This should be first, // even though it means panics in middleware will not be recovered, because // later middleware expects endpoint panics to be returned as an error. h = middleware . BasicRecover ( h )    // Handler errors returned by endpoint handler or recovery middleware. // Errors will no longer be returned after this middeware. errorHandler := opts . ErrorHandler   if errorHandler == nil { errorHandler = middleware . ReportingErrorHandler   }   h = middleware . HandleError ( h , errorHandler )    // Add request tracing. Must go after the HandleError middleware in order // to capture the status code written to the response. h = middleware . OpentracingTracing ( h , opts . Router )    // Insert logger into context and log requests at INFO level. h = middleware . LogTo ( h , middleware . LoggerWithRequestID )    // Add reporter to context and request to reporter context. h = middleware . WithReporter ( h , opts . Reporter )    // Add the request id to the context. h = middleware . ExtractRequestID ( h )    // Add basic auth if opts . BasicAuth != " " { user := strings . Split ( opts . BasicAuth , " " ) [ 0 ]   pass := strings . Split ( opts . BasicAuth , " " ) [ 1 ]   h = middleware . BasicAuth ( h , user , pass , " " )   }    // Adds forwarding headers from request to the context. This allows http clients // to get those headers from the context and add them to upstream requests. if len ( opts . ForwardingHeaders ) > 0 { for _ , header := range opts . ForwardingHeaders { h = middleware . ExtractHeader ( h , header )   }   }    // Wrap the route in middleware to add a context.Context. This middleware must be // last as it acts as the adaptor between http.Handler and httpx.Handler. return middleware . BackgroundContext ( h )   }

0<CODESPLIT>https://github.com/git-lfs/git-lfs/blob/fe8f7002c6efb083feadc0a078fa2fbb389127c7/lfshttp/retries.go#L32-L36<CODESPLIT>WithRetries<CODESPLIT>Retries returns the number of retries requested for a given http . Request .<CODESPLIT>func WithRetries ( req * http . Request , n int ) * http . Request { ctx := req . Context ( )   ctx = context . WithValue ( ctx , contextKeyRetries , n )    return req . WithContext ( ctx )   }

0<CODESPLIT>https://github.com/deis/controller-sdk-go/blob/c9ffa05111835e74d71a6659f1339b849a9b0a7b/http.go#L15-L22<CODESPLIT>handleAppVariantType<CODESPLIT>createHTTPClient creates a HTTP Client with proper SSL options .<CODESPLIT>func handleAppVariantType ( service * push . Service , appName string , appVariant string ) string { // custom apps have separate certificate base := getKey ( " " , true ) // 'arn:aws:sns:eu-west-1:123454678:app'   env := getKey ( " " , true )   specialType := " " + appVariant   if _ , ok := service . Platforms [ specialType ] ; ! ok { service . Platforms [ specialType ] = fmt . Sprintf ( " " , base , " " , env , appName , appVariant )   }   return specialType   }

1<CODESPLIT>https://github.com/cilium/cilium/blob/6ecfff82c2314dd9d847645361b57e2646eed64b/pkg/kvstore/store/store.go#L265-L278<CODESPLIT>syncLocalKey<CODESPLIT>syncLocalKey synchronizes a key to the kvstore<CODESPLIT>func ( s * SharedStore ) syncLocalKey ( key LocalKey ) error { jsonValue , err := key . Marshal ( )   if err != nil { return err   }    // Update key in kvstore, overwrite an eventual existing key, attach // lease to expire entry when agent dies and never comes back up. if _ , err := s . backend . UpdateIfDifferent ( context . TODO ( ) , s . keyPath ( key ) , jsonValue , true ) ; err != nil { return err   }    return nil   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/redshift/api.go#L21304-L21307<CODESPLIT>SetTableRestoreRequestId<CODESPLIT>SetTableRestoreRequestId sets the TableRestoreRequestId field s value .<CODESPLIT>func ( s * TableRestoreStatus ) SetTableRestoreRequestId ( v string ) * TableRestoreStatus { s . TableRestoreRequestId = & v   return s   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/s3/api.go#L23461-L23464<CODESPLIT>SetEvents<CODESPLIT>SetId sets the Id field s value .<CODESPLIT>func ( s * TopicConfigurationDeprecated ) SetEvents ( v [ ] * string ) * TopicConfigurationDeprecated { s . Events = v   return s   }

1<CODESPLIT>https://github.com/iikira/baidu-tools/blob/79c93d8033cdda61dd2278f0e4a75c5ea8388f3c/randominfo/randominfo.go#L15-L21<CODESPLIT>RamdomNumber<CODESPLIT>RamdomNumber 返回 [ min max ] 随机数字<CODESPLIT>func RamdomNumber ( min , max uint64 ) ( v uint64 ) { if min > max { min , max = max , min   }   binary . Read ( cryptorand . Reader , binary . BigEndian , & v )   return v % ( max - min ) + min   }

1<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/staging/src/k8s.io/client-go/kubernetes/typed/core/v1/fake/fake_resourcequota.go#L75-L79<CODESPLIT>Watch<CODESPLIT>Watch returns a watch . Interface that watches the requested resourceQuotas .<CODESPLIT>func ( c * FakeResourceQuotas ) Watch ( opts v1 . ListOptions ) ( watch . Interface , error ) { return c . Fake . InvokesWatch ( testing . NewWatchAction ( resourcequotasResource , c . ns , opts ) )    }

0<CODESPLIT>https://github.com/golang/geo/blob/476085157cff9aaeef4d4f124649436542d4114a/s2/regioncoverer.go#L222-L227<CODESPLIT>addCandidate<CODESPLIT>adjustLevel returns the reduced level so that it satisfies levelMod . Levels smaller than minLevel are not affected ( since cells at these levels are eventually expanded ) .<CODESPLIT>func ( c * coverer ) addCandidate ( cand * candidate ) { if cand == nil { return   }    if cand . terminal { c . result = append ( c . result , cand . cell . id )   return   }    // Expand one level at a time until we hit minLevel to ensure that we don't skip over it. numLevels := c . levelMod   level := int ( cand . cell . level )   if level < c . minLevel { numLevels = 1   }    numTerminals := c . expandChildren ( cand , cand . cell , numLevels )   maxChildrenShift := uint ( 2 * c . levelMod )   if cand . numChildren == 0 { return   } else if ! c . interiorCovering && numTerminals == 1 << maxChildrenShift && level >= c . minLevel { // Optimization: add the parent cell rather than all of its children. // We can't do this for interior coverings, since the children just // intersect the region, but may not be contained by it - we need to // subdivide them further. cand . terminal = true   c . addCandidate ( cand )   } else { // We negate the priority so that smaller absolute priorities are returned // first. The heuristic is designed to refine the largest cells first, // since those are where we have the largest potential gain. Among cells // of the same size, we prefer the cells with the fewest children. // Finally, among cells with equal numbers of children we prefer those // with the smallest number of children that cannot be refined further. cand . priority = - ( ( ( level << maxChildrenShift ) + cand . numChildren ) << maxChildrenShift + numTerminals )   heap . Push ( & c . pq , cand )   }   }

0<CODESPLIT>https://github.com/luci/luci-go/blob/f6cef429871eee3be7c6903af88d3ee884eaf683/dm/api/service/v1/quest_desc_normalize.go#L63-L98<CODESPLIT>QuestID<CODESPLIT>Normalize returns an error iff the Quest_Desc is invalid .<CODESPLIT>func ( q * Quest_Desc ) QuestID ( ) string { data , err := proto . Marshal ( q )   if err != nil { panic ( err )   }   h := sha256 . Sum256 ( data )   return base64 . URLEncoding . EncodeToString ( h [ : ] ) [ : QuestIDLength ]   }

0<CODESPLIT>https://github.com/leanovate/gopter/blob/634a59d12406abc51545000deab7cf43ebc32378/locked_source.go#L47-L52<CODESPLIT>NewLockedSource<CODESPLIT>seedPos implements Seed for a lockedSource without a race condition .<CODESPLIT>func NewLockedSource ( seed int64 ) * lockedSource { return & lockedSource { src : rand . NewSource ( seed ) . ( rand . Source64 ) , }   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/rds/api.go#L15747-L15750<CODESPLIT>SetStorageType<CODESPLIT>SetTags sets the Tags field s value .<CODESPLIT>func ( s * CreateDBInstanceReadReplicaInput ) SetStorageType ( v string ) * CreateDBInstanceReadReplicaInput { s . StorageType = & v   return s   }

0<CODESPLIT>https://github.com/apcera/libretto/blob/3178799fbb1e39c74b02e3ecf46330b3ef0ed486/virtualmachine/vmrun/vm.go#L80-L117<CODESPLIT>delete<CODESPLIT>Run runs a vmrun command .<CODESPLIT>func ( svc * googleService ) delete ( ) error { op , err := svc . service . Instances . Delete ( svc . vm . Project , svc . vm . Zone , svc . vm . Name ) . Do ( )   if err != nil { return err   }    return svc . waitForOperationReady ( op . Name )   }

0<CODESPLIT>https://github.com/lestrrat/go-slack/blob/0a277f80881a4cd1e12ca3228786c50f6922c0a8/usergroups_gen.go#L268-L273<CODESPLIT>IncludeCount<CODESPLIT>ValidateArgs checks that all required fields are set in the UsergroupsEnableCall object<CODESPLIT>func ( c * UsergroupsEnableCall ) IncludeCount ( includeCount bool ) * UsergroupsEnableCall { c . includeCount = includeCount   return c   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/organizations/api.go#L4789-L4804<CODESPLIT>EnableAWSServiceAccessRequest<CODESPLIT>EnableAWSServiceAccessRequest generates a aws / request . Request representing the client s request for the EnableAWSServiceAccess operation . The output return value will be populated with the request s response once the request completes successfully . Use Send method on the returned Request to send the API call to the service . the output return value is not valid until after Send returns without error . See EnableAWSServiceAccess for more information on using the EnableAWSServiceAccess API call and error handling . This method is useful when you want to inject custom logic or configuration into the SDK s request lifecycle . Such as custom headers or retry logic . // Example sending a request using the EnableAWSServiceAccessRequest method . req resp : = client . EnableAWSServiceAccessRequest ( params ) err : = req . Send () if err == nil { // resp is now filled fmt . Println ( resp ) } See also https : // docs . aws . amazon . com / goto / WebAPI / organizations - 2016 - 11 - 28 / EnableAWSServiceAccess<CODESPLIT>func ( c * Organizations ) EnableAWSServiceAccessRequest ( input * EnableAWSServiceAccessInput ) ( req * request . Request , output * EnableAWSServiceAccessOutput ) { op := & request . Operation { Name : opEnableAWSServiceAccess , HTTPMethod : " " , HTTPPath : " " , }    if input == nil { input = & EnableAWSServiceAccessInput { }   }    output = & EnableAWSServiceAccessOutput { }   req = c . newRequest ( op , input , output )   req . Handlers . Unmarshal . Swap ( jsonrpc . UnmarshalHandler . Name , protocol . UnmarshalDiscardBodyHandler )   return   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/mturk/api.go#L5038-L5041<CODESPLIT>SetReward<CODESPLIT>SetQualificationRequirements sets the QualificationRequirements field s value .<CODESPLIT>func ( s * CreateHITTypeInput ) SetReward ( v string ) * CreateHITTypeInput { s . Reward = & v   return s   }

1<CODESPLIT>https://github.com/abhishekkr/gol/blob/d04ee3dc97da79ffdd80bf5601d767df44b9301d/golbin/run.go#L25-L32<CODESPLIT>startCommand<CODESPLIT>/ * startCommand runs passed command string and returns it .<CODESPLIT>func startCommand ( sysCommand string ) * exec . Cmd { cmdTokens := strings . Split ( sysCommand , " " )   cmd := cmdTokens [ 0 ]   if len ( cmdTokens ) == 1 { return exec . Command ( cmd )   }   return exec . Command ( cmd , strings . Join ( cmdTokens [ 1 : ] , " " ) )   }

0<CODESPLIT>https://github.com/google/go-github/blob/1fef44b9b427e6c43f92b2f20918e496c275393f/github/github-accessors.go#L10088-L10093<CODESPLIT>GetDownloadURL<CODESPLIT>GetContent returns the Content field if it s non - nil zero value otherwise .<CODESPLIT>func ( r * RepositoryLicense ) GetDownloadURL ( ) string { if r == nil || r . DownloadURL == nil { return " "   }   return * r . DownloadURL   }

1<CODESPLIT>https://github.com/hairyhenderson/gomplate/blob/20937becaa32cdec93e77a84ad04c73e9155b8e7/vault/vault.go#L99-L119<CODESPLIT>List<CODESPLIT>List -<CODESPLIT>func ( v * Vault ) List ( path string ) ( [ ] byte , error ) { secret , err := v . client . Logical ( ) . List ( path )   if err != nil { return nil , err   }   if secret == nil { return nil , nil   }    keys , ok := secret . Data [ " " ]   if ! ok { return nil , errors . Errorf ( " " )   }    var buf bytes . Buffer   enc := json . NewEncoder ( & buf )   if err := enc . Encode ( keys ) ; err != nil { return nil , err   }   return buf . Bytes ( ) , nil   }

1<CODESPLIT>https://github.com/appleboy/gorush/blob/55ff87f96fb660b9b632289448a880f7249e4c90/storage/boltdb/boltdb.go#L115-L120<CODESPLIT>GetIosError<CODESPLIT>GetIosError show error counts of iOS notification .<CODESPLIT>func ( s * Storage ) GetIosError ( ) int64 { var count int64   s . getBoltDB ( storage . IosErrorKey , & count )    return count   }

1<CODESPLIT>https://github.com/mikkeloscar/gopkgbuild/blob/2bb4f1f1db67f81fe50f9c1c4ad9db4f20fd6b22/pkgbuild.go#L22-L92<CODESPLIT>Restrict<CODESPLIT>Restrict merges two dependencies together into a new dependency where the conditions of both a and b are met<CODESPLIT>func ( a * Dependency ) Restrict ( b * Dependency ) * Dependency { newDep := & Dependency { Name : a . Name , }    if a . MaxVer != nil || b . MaxVer != nil { newDep . MaxVer = & CompleteVersion { }    if a . MaxVer == nil { * newDep . MaxVer = * b . MaxVer   newDep . slt = b . slt   } else if b . MaxVer == nil { * newDep . MaxVer = * a . MaxVer   newDep . slt = a . slt   } else { cmpMax := a . MaxVer . cmp ( b . MaxVer )   if cmpMax >= 1 { * newDep . MaxVer = * b . MaxVer   newDep . slt = b . slt   } else if cmpMax <= - 1 { * newDep . MaxVer = * a . MaxVer   newDep . slt = a . slt   } else if cmpMax == 0 { if len ( a . MaxVer . Pkgrel ) > len ( b . MaxVer . Pkgrel ) { * newDep . MaxVer = * a . MaxVer   } else { * newDep . MaxVer = * b . MaxVer   }   if a . slt != b . slt { newDep . slt = true   } else { newDep . slt = a . slt   }   }   }   }    if a . MinVer != nil || b . MinVer != nil { newDep . MinVer = & CompleteVersion { }    if a . MinVer == nil { * newDep . MinVer = * b . MinVer   newDep . sgt = b . slt   } else if b . MinVer == nil { * newDep . MinVer = * a . MinVer   newDep . sgt = a . sgt   } else { cmpMin := a . MinVer . cmp ( b . MinVer )   if cmpMin >= 1 { * newDep . MinVer = * a . MinVer   newDep . sgt = a . sgt   } else if cmpMin <= - 1 { * newDep . MinVer = * b . MinVer   newDep . sgt = b . sgt   } else if cmpMin == 0 { if len ( a . MinVer . Pkgrel ) > len ( b . MinVer . Pkgrel ) { * newDep . MinVer = * a . MinVer   } else { * newDep . MinVer = * b . MinVer   }   if a . sgt != b . sgt { newDep . sgt = true   } else { newDep . sgt = a . sgt   }   }   }   }    return newDep   }

0<CODESPLIT>https://github.com/hashicorp/go-sockaddr/blob/c7188e74f6acae5a989bdc959aa779f8b9f42faf/ipv6addr.go#L456-L461<CODESPLIT>NetIPNet<CODESPLIT>NetIPMask create a new net . IPMask from the IPv6Addr .<CODESPLIT>func ( ipv6 IPv6Addr ) NetIPNet ( ) * net . IPNet { ipv6net := & net . IPNet { }   ipv6net . IP = make ( net . IP , IPv6len )   copy ( ipv6net . IP , * ipv6 . NetIP ( ) )   ipv6net . Mask = * ipv6 . NetIPMask ( )   return ipv6net   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/redshift/api.go#L15492-L15495<CODESPLIT>SetTargetNumberOfNodes<CODESPLIT>SetTargetNumberOfNodes sets the TargetNumberOfNodes field s value .<CODESPLIT>func ( s * DescribeResizeOutput ) SetTargetNumberOfNodes ( v int64 ) * DescribeResizeOutput { s . TargetNumberOfNodes = & v   return s   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/redshift/api.go#L15735-L15738<CODESPLIT>SetSnapshotSchedules<CODESPLIT>SetSnapshotSchedules sets the SnapshotSchedules field s value .<CODESPLIT>func ( s * DescribeSnapshotSchedulesOutput ) SetSnapshotSchedules ( v [ ] * SnapshotSchedule ) * DescribeSnapshotSchedulesOutput { s . SnapshotSchedules = v   return s   }

0<CODESPLIT>https://github.com/docker/distribution/blob/3226863cbcba6dbc2f6c83a37b28126c934af3f8/contrib/token-server/main.go#L219-L298<CODESPLIT>postToken<CODESPLIT>getToken handles authenticating the request and authorizing access to the requested scopes .<CODESPLIT>func ( ts * tokenServer ) postToken ( ctx context . Context , w http . ResponseWriter , r * http . Request ) { grantType := r . PostFormValue ( " " )   if grantType == " " { handleError ( ctx , ErrorMissingRequiredField . WithDetail ( " " ) , w )   return   }    service := r . PostFormValue ( " " )   if service == " " { handleError ( ctx , ErrorMissingRequiredField . WithDetail ( " " ) , w )   return   }    clientID := r . PostFormValue ( " " )   if clientID == " " { handleError ( ctx , ErrorMissingRequiredField . WithDetail ( " " ) , w )   return   }    var offline bool   switch r . PostFormValue ( " " ) { case " " , " " : case " " : offline = true   default : handleError ( ctx , ErrorUnsupportedValue . WithDetail ( " " ) , w )   return   }    requestedAccessList := ResolveScopeList ( ctx , r . PostFormValue ( " " ) )    var subject string   var rToken string   switch grantType { case " " : rToken = r . PostFormValue ( " " )   if rToken == " " { handleError ( ctx , ErrorUnsupportedValue . WithDetail ( " " ) , w )   return   }   rt , ok := ts . refreshCache [ rToken ]   if ! ok || rt . service != service { handleError ( ctx , errcode . ErrorCodeUnauthorized . WithDetail ( " " ) , w )   return   }   subject = rt . subject   case " " : ca , ok := ts . accessController . ( auth . CredentialAuthenticator )   if ! ok { handleError ( ctx , ErrorUnsupportedValue . WithDetail ( " " ) , w )   return   }   subject = r . PostFormValue ( " " )   if subject == " " { handleError ( ctx , ErrorUnsupportedValue . WithDetail ( " " ) , w )   return   }   password := r . PostFormValue ( " " )   if password == " " { handleError ( ctx , ErrorUnsupportedValue . WithDetail ( " " ) , w )   return   }   if err := ca . AuthenticateUser ( subject , password ) ; err != nil { handleError ( ctx , errcode . ErrorCodeUnauthorized . WithDetail ( " " ) , w )   return   }   default : handleError ( ctx , ErrorUnsupportedValue . WithDetail ( " " ) , w )   return   }    ctx = context . WithValue ( ctx , acctSubject { } , subject )   ctx = dcontext . WithLogger ( ctx , dcontext . GetLogger ( ctx , acctSubject { } ) )    dcontext . GetLogger ( ctx ) . Info ( " " )    ctx = context . WithValue ( ctx , requestedAccess { } , requestedAccessList )   ctx = dcontext . WithLogger ( ctx , dcontext . GetLogger ( ctx , requestedAccess { } ) )    grantedAccessList := filterAccessList ( ctx , subject , requestedAccessList )   ctx = context . WithValue ( ctx , grantedAccess { } , grantedAccessList )   ctx = dcontext . WithLogger ( ctx , dcontext . GetLogger ( ctx , grantedAccess { } ) )    token , err := ts . issuer . CreateJWT ( subject , service , grantedAccessList )   if err != nil { handleError ( ctx , err , w )   return   }    dcontext . GetLogger ( ctx ) . Info ( " " )    response := postTokenResponse { Token : token , ExpiresIn : int ( ts . issuer . Expiration . Seconds ( ) ) , IssuedAt : time . Now ( ) . UTC ( ) . Format ( time . RFC3339 ) , Scope : ToScopeList ( grantedAccessList ) , }    if offline { rToken = newRefreshToken ( )   ts . refreshCache [ rToken ] = refreshToken { subject : subject , service : service , }   }    if rToken != " " { response . RefreshToken = rToken   }    ctx , w = dcontext . WithResponseWriter ( ctx , w )    w . Header ( ) . Set ( " " , " " )   json . NewEncoder ( w ) . Encode ( response )    dcontext . GetResponseLogger ( ctx ) . Info ( " " )   }

0<CODESPLIT>https://github.com/hyperledger/fabric-sdk-go/blob/48bb0d199e2cee03ad3af0a413bdfc064fc69bfe/pkg/fab/events/service/service.go#L216-L238<CODESPLIT>RegisterTxStatusEvent<CODESPLIT>RegisterChaincodeEvent registers for chaincode events . If the client is not authorized to receive chaincode events then an error is returned . - ccID is the chaincode ID for which events are to be received - eventFilter is the chaincode event name for which events are to be received<CODESPLIT>func ( s * Service ) RegisterTxStatusEvent ( txID string ) ( fab . Registration , <- chan * fab . TxStatusEvent , error ) { if txID == " " { return nil , nil , errors . New ( " " )   }    eventch := make ( chan * fab . TxStatusEvent , s . eventConsumerBufferSize )   regch := make ( chan fab . Registration )   errch := make ( chan error )    if err := s . Submit ( dispatcher . NewRegisterTxStatusEvent ( txID , eventch , regch , errch ) ) ; err != nil { return nil , nil , errors . WithMessage ( err , " " )   }    select { case response := <- regch : return response , eventch , nil   case err := <- errch : return nil , nil , err   }   }

1<CODESPLIT>https://github.com/hashicorp/consul/blob/277f73400b746b6c287d19e5076e38df7bba3405/agent/structs/config_entry.go#L424-L437<CODESPLIT>MarshalBinary<CODESPLIT>MarshalBinary writes ServiceConfigResponse as msgpack encoded . It s only here because we need custom decoding of the raw interface {} values .<CODESPLIT>func ( r * ServiceConfigResponse ) MarshalBinary ( ) ( data [ ] byte , err error ) { // bs will grow if needed but allocate enough to avoid reallocation in common // case. bs := make ( [ ] byte , 128 )   enc := codec . NewEncoderBytes ( & bs , msgpackHandle )    type Alias ServiceConfigResponse    if err := enc . Encode ( ( * Alias ) ( r ) ) ; err != nil { return nil , err   }    return bs , nil   }

0<CODESPLIT>https://github.com/grafana-tools/sdk/blob/5158161510f07142e96b0c3d4be124b47fe2c070/rest-org.go#L163-L176<CODESPLIT>UpdateOrg<CODESPLIT>DeleteOrg deletes the organization identified by the organization id Reflects DELETE / api / orgs / : orgId<CODESPLIT>func ( r * Client ) UpdateOrg ( org Org , oid uint ) ( StatusMessage , error ) { var ( raw [ ] byte   resp StatusMessage   err error   )   if raw , err = json . Marshal ( org ) ; err != nil { return StatusMessage { } , err   }   if raw , _ , err = r . put ( fmt . Sprintf ( " " , oid ) , nil , raw ) ; err != nil { return StatusMessage { } , err   }   if err = json . Unmarshal ( raw , & resp ) ; err != nil { return StatusMessage { } , err   }   return resp , nil   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/ses/api.go#L12553-L12556<CODESPLIT>Validate<CODESPLIT>SetTimestamp sets the Timestamp field s value .<CODESPLIT>func ( s * SendEmailInput ) Validate ( ) error { invalidParams := request . ErrInvalidParams { Context : " " }   if s . Destination == nil { invalidParams . Add ( request . NewErrParamRequired ( " " ) )   }   if s . Message == nil { invalidParams . Add ( request . NewErrParamRequired ( " " ) )   }   if s . Source == nil { invalidParams . Add ( request . NewErrParamRequired ( " " ) )   }   if s . Message != nil { if err := s . Message . Validate ( ) ; err != nil { invalidParams . AddNested ( " " , err . ( request . ErrInvalidParams ) )   }   }   if s . Tags != nil { for i , v := range s . Tags { if v == nil { continue   }   if err := v . Validate ( ) ; err != nil { invalidParams . AddNested ( fmt . Sprintf ( " " , " " , i ) , err . ( request . ErrInvalidParams ) )   }   }   }    if invalidParams . Len ( ) > 0 { return invalidParams   }   return nil   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/lightsail/api.go#L22396-L22399<CODESPLIT>SetFromRelationalDatabaseBundleId<CODESPLIT>SetFromRelationalDatabaseBundleId sets the FromRelationalDatabaseBundleId field s value .<CODESPLIT>func ( s * RelationalDatabaseSnapshot ) SetFromRelationalDatabaseBundleId ( v string ) * RelationalDatabaseSnapshot { s . FromRelationalDatabaseBundleId = & v   return s   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/cloudsearch/api.go#L4659-L4662<CODESPLIT>SetStatus<CODESPLIT>SetOptions sets the Options field s value .<CODESPLIT>func ( s * ExpressionStatus ) SetStatus ( v * OptionStatus ) * ExpressionStatus { s . Status = v   return s   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/glue/api.go#L8106-L8121<CODESPLIT>StartCrawlerScheduleRequest<CODESPLIT>StartCrawlerScheduleRequest generates a aws / request . Request representing the client s request for the StartCrawlerSchedule operation . The output return value will be populated with the request s response once the request completes successfully . Use Send method on the returned Request to send the API call to the service . the output return value is not valid until after Send returns without error . See StartCrawlerSchedule for more information on using the StartCrawlerSchedule API call and error handling . This method is useful when you want to inject custom logic or configuration into the SDK s request lifecycle . Such as custom headers or retry logic . // Example sending a request using the StartCrawlerScheduleRequest method . req resp : = client . StartCrawlerScheduleRequest ( params ) err : = req . Send () if err == nil { // resp is now filled fmt . Println ( resp ) } See also https : // docs . aws . amazon . com / goto / WebAPI / glue - 2017 - 03 - 31 / StartCrawlerSchedule<CODESPLIT>func ( c * Glue ) StartCrawlerScheduleRequest ( input * StartCrawlerScheduleInput ) ( req * request . Request , output * StartCrawlerScheduleOutput ) { op := & request . Operation { Name : opStartCrawlerSchedule , HTTPMethod : " " , HTTPPath : " " , }    if input == nil { input = & StartCrawlerScheduleInput { }   }    output = & StartCrawlerScheduleOutput { }   req = c . newRequest ( op , input , output )   req . Handlers . Unmarshal . Swap ( jsonrpc . UnmarshalHandler . Name , protocol . UnmarshalDiscardBodyHandler )   return   }

1<CODESPLIT>https://github.com/thetruetrade/gotrade/blob/08b7c41e93d91276f0a4014dfdd20a23fd63db31/indicators/typprice.go#L64-L68<CODESPLIT>NewTypPriceForStreamWithSrcLen<CODESPLIT>NewTypPriceForStreamWithSrcLen creates a Typical Price Indicator ( TypPrice ) for offline usage with a source data stream<CODESPLIT>func NewTypPriceForStreamWithSrcLen ( sourceLength uint , priceStream gotrade . DOHLCVStreamSubscriber ) ( indicator * TypPrice , err error ) { ind , err := NewTypPriceWithSrcLen ( sourceLength )   priceStream . AddTickSubscription ( ind )   return ind , err   }

1<CODESPLIT>https://github.com/Microsoft/go-winio/blob/3fe4fa31662f6ede2353d913e93907b8e096e0b6/pkg/etw/eventmetadata.go#L168-L170<CODESPLIT>writeCountedArray<CODESPLIT>writeCountedArray writes the metadata for an array field to the buffer . The size of a counted array is fixed and the size is written into the metadata directly .<CODESPLIT>func ( em * eventMetadata ) writeCountedArray ( name string , count uint16 , inType inType , outType outType , tags uint32 ) { em . writeFieldInner ( name , inType | inTypeCountedArray , outType , tags , count )   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/codecommit/api.go#L645-L648<CODESPLIT>CreatePullRequest<CODESPLIT>CreatePullRequest API operation for AWS CodeCommit . Creates a pull request in the specified repository . Returns awserr . Error for service API and SDK errors . Use runtime type assertions with awserr . Error s Code and Message methods to get detailed information about the error . See the AWS API reference guide for AWS CodeCommit s API operation CreatePullRequest for usage and error information . Returned Error Codes : * ErrCodeRepositoryNameRequiredException RepositoryNameRequiredException A repository name is required but was not specified . * ErrCodeInvalidRepositoryNameException InvalidRepositoryNameException At least one specified repository name is not valid . This exception only occurs when a specified repository name is not valid . Other exceptions occur when a required repository parameter is missing or when a specified repository does not exist . * ErrCodeRepositoryDoesNotExistException RepositoryDoesNotExistException The specified repository does not exist . * ErrCodeEncryptionIntegrityChecksFailedException EncryptionIntegrityChecksFailedException An encryption integrity check failed . * ErrCodeEncryptionKeyAccessDeniedException EncryptionKeyAccessDeniedException An encryption key could not be accessed . * ErrCodeEncryptionKeyDisabledException EncryptionKeyDisabledException The encryption key is disabled . * ErrCodeEncryptionKeyNotFoundException EncryptionKeyNotFoundException No encryption key was found . * ErrCodeEncryptionKeyUnavailableException EncryptionKeyUnavailableException The encryption key is not available . * ErrCodeClientRequestTokenRequiredException ClientRequestTokenRequiredException A client request token is required . A client request token is an unique client - generated idempotency token that when provided in a request ensures the request cannot be repeated with a changed parameter . If a request is received with the same parameters and a token is included the request will return information about the initial request that used that token . * ErrCodeInvalidClientRequestTokenException InvalidClientRequestTokenException The client request token is not valid . * ErrCodeIdempotencyParameterMismatchException IdempotencyParameterMismatchException The client request token is not valid . Either the token is not in a valid format or the token has been used in a previous request and cannot be re - used . * ErrCodeReferenceNameRequiredException ReferenceNameRequiredException A reference name is required but none was provided . * ErrCodeInvalidReferenceNameException InvalidReferenceNameException The specified reference name format is not valid . Reference names must conform to the Git references format for example refs / heads / master . For more information see Git Internals - Git References ( https : // git - scm . com / book / en / v2 / Git - Internals - Git - References ) or consult your Git documentation . * ErrCodeReferenceDoesNotExistException ReferenceDoesNotExistException The specified reference does not exist . You must provide a full commit ID . * ErrCodeReferenceTypeNotSupportedException ReferenceTypeNotSupportedException The specified reference is not a supported type . * ErrCodeTitleRequiredException TitleRequiredException A pull request title is required . It cannot be empty or null . * ErrCodeInvalidTitleException InvalidTitleException The title of the pull request is not valid . Pull request titles cannot exceed 100 characters in length . * ErrCodeInvalidDescriptionException InvalidDescriptionException The pull request description is not valid . Descriptions are limited to 1 000 characters in length . * ErrCodeTargetsRequiredException TargetsRequiredException An array of target objects is required . It cannot be empty or null . * ErrCodeInvalidTargetsException InvalidTargetsException The targets for the pull request is not valid or not in a valid format . Targets are a list of target objects . Each target object must contain the full values for the repository name source branch and destination branch for a pull request . * ErrCodeTargetRequiredException TargetRequiredException A pull request target is required . It cannot be empty or null . A pull request target must contain the full values for the repository name source branch and destination branch for the pull request . * ErrCodeInvalidTargetException InvalidTargetException The target for the pull request is not valid . A target must contain the full values for the repository name source branch and destination branch for the pull request . * ErrCodeMultipleRepositoriesInPullRequestException MultipleRepositoriesInPullRequestException You cannot include more than one repository in a pull request . Make sure you have specified only one repository name in your request and then try again . * ErrCodeMaximumOpenPullRequestsExceededException MaximumOpenPullRequestsExceededException You cannot create the pull request because the repository has too many open pull requests . The maximum number of open pull requests for a repository is 1 000 . Close one or more open pull requests and then try again . * ErrCodeSourceAndDestinationAreSameException SourceAndDestinationAreSameException The source branch and the destination branch for the pull request are the same . You must specify different branches for the source and destination . See also https : // docs . aws . amazon . com / goto / WebAPI / codecommit - 2015 - 04 - 13 / CreatePullRequest<CODESPLIT>func ( c * CodeCommit ) CreatePullRequest ( input * CreatePullRequestInput ) ( * CreatePullRequestOutput , error ) { req , out := c . CreatePullRequestRequest ( input )   return out , req . Send ( )   }

1<CODESPLIT>https://github.com/scgolang/sc/blob/2b87756659e2b72d97cec43b6896ed01c0365097/ugen.go#L250-L252<CODESPLIT>LT<CODESPLIT>LT computes x < y .<CODESPLIT>func ( u * Ugen ) LT ( val Input ) Input { return binOpLT ( u . Rate , u , val , u . NumOutputs )   }

0<CODESPLIT>https://github.com/muesli/beehive/blob/4bfd4852e0b4bdcbc711323775cc7144ccd81b7e/bees/fsnotifybee/fsnotifybeefactory.go#L33-L40<CODESPLIT>New<CODESPLIT>New returns a new Bee instance configured with the supplied options .<CODESPLIT>func ( factory * DevrantBeeFactory ) New ( name , description string , options bees . BeeOptions ) bees . BeeInterface { bee := DevrantBee { Bee : bees . NewBee ( name , factory . ID ( ) , description , options ) , }   bee . ReloadOptions ( options )    return & bee   }

0<CODESPLIT>https://github.com/fabiorphp/kongo/blob/4b98febd8f13378979c33e392de0a78adc06e336/node.go#L229-L247<CODESPLIT>Status<CODESPLIT>StatusWithContext retrieves the server node status .<CODESPLIT>func ( n * NodeService ) Status ( ) ( * NodeStatus , * http . Response , error ) { return n . StatusWithContext ( context . TODO ( ) )   }

1<CODESPLIT>https://github.com/tideland/golib/blob/b56169c6bd620eeb7cfc4b9b4027fc10d2934c84/loop/loop.go#L251-L267<CODESPLIT>Restart<CODESPLIT>Restart implements the Observable interface .<CODESPLIT>func ( l * loop ) Restart ( ) error { l . mux . Lock ( )   defer l . mux . Unlock ( )   if l . status != Stopped { return errors . New ( ErrRestartNonStopped , errorMessages , l )   }   l . err = nil   l . recoverings = nil   l . status = Running   l . stopC = make ( chan struct { } )   l . doneC = make ( chan struct { } )   // Restart the goroutine. l . logf ( false , " " , l )   go l . run ( )   <- l . startedC   return nil   }

1<CODESPLIT>https://github.com/qlik-oss/enigma-go/blob/7fdea27298e888663c973c15dbbfba2c0a1ec085/qix_generated.go#L6995-L7001<CODESPLIT>GetScriptBreakpointsRaw<CODESPLIT>Lists the breakpoints in the script of an app .<CODESPLIT>func ( obj * Doc ) GetScriptBreakpointsRaw ( ctx context . Context ) ( json . RawMessage , error ) { result := & struct { Breakpoints json . RawMessage `json:"qBreakpoints"`   } { }   err := obj . rpc ( ctx , " " , result )   return result . Breakpoints , err   }

0<CODESPLIT>https://github.com/graymeta/stow/blob/00c3b5928f2a541754b130a072c98a7389609686/oracle/container.go#L68-L94<CODESPLIT>Items<CODESPLIT>Put creates or updates a CloudStorage object within the given container .<CODESPLIT>func ( c * container ) Items ( prefix , cursor string , count int ) ( [ ] stow . Item , string , error ) { params := & swift . ObjectsOpts { Limit : count , Marker : cursor , Prefix : prefix , }   objects , err := c . client . Objects ( c . id , params )   if err != nil { return nil , " " , err   }    items := make ( [ ] stow . Item , len ( objects ) )   for i , obj := range objects { items [ i ] = & item { id : obj . Name , container : c , client : c . client , hash : obj . Hash , size : obj . Bytes , lastModified : obj . LastModified , }   }   marker := " "   if len ( objects ) == count { marker = objects [ len ( objects ) - 1 ] . Name   }   return items , marker , nil   }

0<CODESPLIT>https://github.com/pingcap/tidb/blob/b6218d415cf77bca6910057a7b391a379c287e59/util/chunk/iterator.go#L250-L258<CODESPLIT>Begin<CODESPLIT>Next implements the Iterator interface .<CODESPLIT>func ( it * iterator4RowPtr ) Begin ( ) Row { if it . Len ( ) == 0 { return it . End ( )   }   it . cursor = 1   return it . li . GetRow ( it . ptrs [ 0 ] )   }

0<CODESPLIT>https://github.com/qor/transition/blob/4015a3eee19c49a63b1d22beab1c0c084e72c53b/state_change_log.go#L52-L60<CODESPLIT>GetStateChangeLogs<CODESPLIT>ConfigureQorResource used to configure transition for qor admin<CODESPLIT>func GetStateChangeLogs ( model interface { } , db * gorm . DB ) [ ] StateChangeLog { var ( changelogs [ ] StateChangeLog   scope = db . NewScope ( model )   )    db . Where ( " " , scope . TableName ( ) , GenerateReferenceKey ( model , db ) ) . Find ( & changelogs )    return changelogs   }

1<CODESPLIT>https://github.com/gopasspw/gopass/blob/fe4e21d62182f0f2e4ef9a0ca8168d849dc52bd4/pkg/backend/crypto/xc/keyring/pubring.go#L27-L34<CODESPLIT>NewPubring<CODESPLIT>NewPubring initializes a new public key ring<CODESPLIT>func NewPubring ( sec * Secring ) * Pubring { return & Pubring { data : & xcpb . Pubring { PublicKeys : make ( [ ] * xcpb . PublicKey , 0 , 10 ) , } , secring : sec , }   }

1<CODESPLIT>https://github.com/cri-o/cri-o/blob/0eac7be02d0a9d12b8b4bd1f2f0919c386ed61f5/oci/runtime_oci.go#L49-L55<CODESPLIT>newRuntimeOCI<CODESPLIT>newRuntimeOCI creates a new runtimeOCI instance<CODESPLIT>func newRuntimeOCI ( r * Runtime , handler * RuntimeHandler ) RuntimeImpl { return & runtimeOCI { Runtime : r , path : handler . RuntimePath , root : handler . RuntimeRoot , }   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/workspaces/api.go#L6550-L6553<CODESPLIT>SetWorkspaceSecurityGroupId<CODESPLIT>SetDescription sets the Description field s value .<CODESPLIT>func ( s * WorkspaceDirectory ) SetWorkspaceSecurityGroupId ( v string ) * WorkspaceDirectory { s . WorkspaceSecurityGroupId = & v   return s   }

1<CODESPLIT>https://github.com/BurntSushi/xgbutil/blob/f7c97cef3b4e6c88280a5a7091c3314e815ca243/ewmh/ewmh.go#L518-L520<CODESPLIT>WmDesktopReq<CODESPLIT>_NET_WM_DESKTOP req<CODESPLIT>func WmDesktopReq ( xu * xgbutil . XUtil , win xproto . Window , desk uint ) error { return WmDesktopReqExtra ( xu , win , desk , 2 )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/lexmodelbuildingservice/api.go#L42-L56<CODESPLIT>BuildInputShape<CODESPLIT>CreateBotVersionRequest generates a aws / request . Request representing the client s request for the CreateBotVersion operation . The output return value will be populated with the request s response once the request completes successfully . Use Send method on the returned Request to send the API call to the service . the output return value is not valid until after Send returns without error . See CreateBotVersion for more information on using the CreateBotVersion API call and error handling . This method is useful when you want to inject custom logic or configuration into the SDK s request lifecycle . Such as custom headers or retry logic . // Example sending a request using the CreateBotVersionRequest method . req resp : = client . CreateBotVersionRequest ( params ) err : = req . Send () if err == nil { // resp is now filled fmt . Println ( resp ) } See also https : // docs . aws . amazon . com / goto / WebAPI / lex - models - 2017 - 04 - 19 / CreateBotVersion<CODESPLIT>func ( c SmokeTestCase ) BuildInputShape ( ref * ShapeRef ) string { var b ShapeValueBuilder   return fmt . Sprintf ( " \n \n " , b . GoType ( ref , true ) , b . BuildShape ( ref , c . Input , false ) , )   }

1<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/apiserver/apiserverhttp/mux.go#L93-L109<CODESPLIT>RemoveHandler<CODESPLIT>RemoveHandler removes the http . Handler for the given method and pattern if any . If there is no handler registered with the method and pattern this is a no - op . This is safe to call concurrently with m . ServeHTTP and m . AddHandler .<CODESPLIT>func ( m * Mux ) RemoveHandler ( meth , pat string ) { m . mu . Lock ( )   defer m . mu . Unlock ( )   phs , ok := m . added [ meth ]   if ! ok { return   }   for i , ph := range phs { if ph . pat != pat { continue   }   head , tail := phs [ : i ] , phs [ i + 1 : ]   m . added [ meth ] = append ( head , tail ... )   m . recreate ( )   return   }   }

1<CODESPLIT>https://github.com/olivere/elastic/blob/0534a7b1bf47b1ccf57e905491a641709f8a623d/errors.go#L28-L40<CODESPLIT>checkResponse<CODESPLIT>checkResponse will return an error if the request / response indicates an error returned from Elasticsearch . HTTP status codes between in the range [ 200 .. 299 ] are considered successful . All other errors are considered errors except they are specified in ignoreErrors . This is necessary because for some services HTTP status 404 is a valid response from Elasticsearch ( e . g . the Exists service ) . The func tries to parse error details as returned from Elasticsearch and encapsulates them in type elastic . Error .<CODESPLIT>func checkResponse ( req * http . Request , res * http . Response , ignoreErrors ... int ) error { // 200-299 are valid status codes if res . StatusCode >= 200 && res . StatusCode <= 299 { return nil   }   // Ignore certain errors? for _ , code := range ignoreErrors { if code == res . StatusCode { return nil   }   }   return createResponseError ( res )   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/cognitoidentityprovider/api.go#L12751-L12754<CODESPLIT>SetChallengeName<CODESPLIT>SetChallengeName sets the ChallengeName field s value .<CODESPLIT>func ( s * AdminInitiateAuthOutput ) SetChallengeName ( v string ) * AdminInitiateAuthOutput { s . ChallengeName = & v   return s   }

1<CODESPLIT>https://github.com/gramework/gramework/blob/31c8d0b9955432cea19730996643bd857481d6a8/context_writers.go#L114-L121<CODESPLIT>BadRequest<CODESPLIT>BadRequest sends HTTP / 1 . 1 400 Bad Request<CODESPLIT>func ( ctx * Context ) BadRequest ( err ... error ) { e := badRequest   if len ( err ) > 0 { e = err [ 0 ] . Error ( )   }    ctx . Error ( e , fasthttp . StatusBadRequest )   }

1<CODESPLIT>https://github.com/kubernetes-retired/contrib/blob/89f6948e24578fed2a90a87871b2263729f90ac3/service-loadbalancer/Godeps/_workspace/src/k8s.io/kubernetes/pkg/client/typed/generated/core/unversioned/pod.go#L130-L139<CODESPLIT>List<CODESPLIT>List takes label and field selectors and returns the list of Pods that match those selectors .<CODESPLIT>func ( c * pods ) List ( opts api . ListOptions ) ( result * api . PodList , err error ) { result = & api . PodList { }   err = c . client . Get ( ) . Namespace ( c . ns ) . Resource ( " " ) . VersionedParams ( & opts , api . ParameterCodec ) . Do ( ) . Into ( result )   return   }

0<CODESPLIT>https://github.com/stripe/stripe-go/blob/aa901d66c475fdd6d86581c5e1f2f85ec1f074f6/sourcetransaction.go#L34-L55<CODESPLIT>Get<CODESPLIT>UnmarshalJSON handles deserialization of a SourceTransaction . This custom unmarshaling is needed to extract the type specific data ( accessible under TypeData ) but stored in JSON under a hash named after the type of the source transaction .<CODESPLIT>func ( c Client ) Get ( id string , params * stripe . PayoutParams ) ( * stripe . Payout , error ) { path := stripe . FormatURLPath ( " " , id )   payout := & stripe . Payout { }   err := c . B . Call ( http . MethodGet , path , c . Key , params , payout )   return payout , err   }

1<CODESPLIT>https://github.com/paked/configure/blob/28f9c3f21a4454ca2e6ae1358856c6908293a46f/configure.go#L32-L34<CODESPLIT>IntVar<CODESPLIT>IntVar binds a provided * int to a flag value .<CODESPLIT>func ( c * Configure ) IntVar ( value * int , name string , def int , description string ) { c . option ( value , name , def , description , intType )   }

0<CODESPLIT>https://github.com/perkeep/perkeep/blob/e28bbbd1588d64df8ab7a82393afd39d64c061f7/pkg/client/remove.go#L91-L93<CODESPLIT>setClient<CODESPLIT>RemoveBlob removes the provided blob . An error is returned if the server failed to remove the blob . Removing a non - existent blob isn t an error .<CODESPLIT>func ( c * listCmd ) setClient ( ) error { ss , err := c . syncCmd . storageFromParam ( " " , c . syncCmd . src )   if err != nil { fmt . Errorf ( " " , err )   }   var ok bool   c . cl , ok = ss . ( * client . Client )   if ! ok { return fmt . Errorf ( " " , ss )   }   return nil   }

1<CODESPLIT>https://github.com/Azure/go-autorest/blob/da8db3a19ec5aba5d01f6032407abf1bb1cc15d3/autorest/azure/cli/profile.go#L63-L79<CODESPLIT>LoadProfile<CODESPLIT>LoadProfile restores a Profile object from a file located at path .<CODESPLIT>func LoadProfile ( path string ) ( result Profile , err error ) { var contents [ ] byte   contents , err = ioutil . ReadFile ( path )   if err != nil { err = fmt . Errorf ( " " , path , err )   return   }   reader := utfbom . SkipOnly ( bytes . NewReader ( contents ) )    dec := json . NewDecoder ( reader )   if err = dec . Decode ( & result ) ; err != nil { err = fmt . Errorf ( " " , path , err )   return   }    return   }

0<CODESPLIT>https://github.com/coredns/coredns/blob/e178291ed6a9eae5d24bae132b0f4c2f4d75f662/core/dnsserver/server.go#L123-L129<CODESPLIT>ListenPacket<CODESPLIT>Listen implements caddy . TCPServer interface .<CODESPLIT>func ( s * Server ) ListenPacket ( ) ( net . PacketConn , error ) { p , err := listenPacket ( " " , s . Addr [ len ( transport . DNS + " " ) : ] )   if err != nil { return nil , err   }    return p , nil   }

0<CODESPLIT>https://github.com/ipfs/go-ipfs/blob/5fd5d444796d4936166f3a38dc066fda7183399c/core/coredag/dagtransl.go#L74-L86<CODESPLIT>AddParser<CODESPLIT>ParseInputs parses io . Reader described by input encoding and format to an instance of ipld Node<CODESPLIT>func ( iep InputEncParsers ) AddParser ( ienc , format string , f DagParser ) { m , ok := iep [ ienc ]   if ! ok { m = make ( FormatParsers )   iep [ ienc ] = m   }    m [ format ] = f   }

0<CODESPLIT>https://github.com/go-delve/delve/blob/71a7fe04d9a7f7292146988f0e737aea47543dd0/pkg/proc/types.go#L1054-L1224<CODESPLIT>typeForKind<CODESPLIT>constructTypeForKind synthesizes a * dwarf . StructType for the specified kind . This is necessary because on go1 . 8 and previous the specialized types of runtime . _type were not exported .<CODESPLIT>func typeForKind ( kind int64 , bi * BinaryInfo ) ( * godwarf . StructType , error ) { var typ godwarf . Type   switch reflect . Kind ( kind & kindMask ) { case reflect . Array : typ , _ = bi . findType ( " " )   case reflect . Chan : // typ , _ = bi . findType ( " " )   case reflect . Func : typ , _ = bi . findType ( " " )   case reflect . Interface : typ , _ = bi . findType ( " " )   case reflect . Map : typ , _ = bi . findType ( " " )   case reflect . Ptr : typ , _ = bi . findType ( " " )   case reflect . Slice : typ , _ = bi . findType ( " " )   case reflect . Struct : typ , _ = bi . findType ( " " )   default : return nil , nil   }   if typ != nil { typ = resolveTypedef ( typ )   return typ . ( * godwarf . StructType ) , nil   }   return constructTypeForKind ( kind , bi )   }

1<CODESPLIT>https://github.com/trivago/tgo/blob/efdb64f40efe6e7cd3f50415710e7af6a7c316ad/errorstack.go#L63-L69<CODESPLIT>PushAndDescribe<CODESPLIT>PushAndDescribe behaves like Push but allows to prepend a text before the error messages returned by err . The type of err will be lost .<CODESPLIT>func ( stack * ErrorStack ) PushAndDescribe ( message string , err error ) bool { if err != nil { stack . errors = append ( stack . errors , fmt . Errorf ( message + " " , err . Error ( ) ) )   return true   }   return false   }

0<CODESPLIT>https://github.com/biogo/hts/blob/aafaa03b4ed961cf75d5f7ace0d70cf9fa921f64/sam/sam.go#L200-L208<CODESPLIT>NewMerger<CODESPLIT>Write writes r to the SAM stream .<CODESPLIT>func NewMerger ( less func ( a , b * sam . Record ) bool , src ... * Reader ) ( * Merger , error ) { if len ( src ) == 0 { return nil , io . EOF   }    m := & Merger { readers : make ( [ ] * reader , len ( src ) ) }    headers := make ( [ ] * sam . Header , len ( src ) )   so := src [ 0 ] . Header ( ) . SortOrder   for i , r := range src { h := r . Header ( )   if h . SortOrder != so { return nil , errors . New ( " " )   }   headers [ i ] = h   }   var err error   m . h , m . refLinks , err = sam . MergeHeaders ( headers )   if err != nil { return nil , err   }   m . h . SortOrder = so    readers := make ( [ ] reader , len ( src ) )   switch m . h . SortOrder { default : fallthrough   case sam . UnknownOrder : m . less = less   case sam . Unsorted : case sam . QueryName : m . less = ( * sam . Record ) . LessByName   case sam . Coordinate : m . less = ( * sam . Record ) . LessByCoordinate   }   for i , r := range src { if m . less == nil { readers [ i ] . id = i   readers [ i ] . r = r   m . readers [ i ] = & readers [ i ]   continue   }   rec , err := r . Read ( )   readers [ i ] = reader { id : i , r : r , head : rec , err : err }   m . readers [ i ] = & readers [ i ]   }   if m . less != nil { heap . Init ( ( * bySortOrderAndID ) ( m ) )   }    return m , nil   }

0<CODESPLIT>https://github.com/hyperledger/fabric/blob/49f496925df1e66198d7ec794849536c9f8b104b/core/scc/lscc/lscc.go#L302-L337<CODESPLIT>checkCollectionMemberPolicy<CODESPLIT>putChaincodeCollectionData adds collection data for the chaincode<CODESPLIT>func checkCollectionMemberPolicy ( collectionConfig * common . CollectionConfig , mspmgr msp . MSPManager ) error { if mspmgr == nil { return fmt . Errorf ( " " )   }   msps , err := mspmgr . GetMSPs ( )   if err != nil { return errors . Wrapf ( err , " " )   }   if collectionConfig == nil { return fmt . Errorf ( " " )   }   coll := collectionConfig . GetStaticCollectionConfig ( )   if coll == nil { return fmt . Errorf ( " " )   }   if coll . MemberOrgsPolicy == nil { return fmt . Errorf ( " " )   }   if coll . MemberOrgsPolicy . GetSignaturePolicy ( ) == nil { return fmt . Errorf ( " " )   }   // make sure that the orgs listed are actually part of the channel // check all principals in the signature policy for _ , principal := range coll . MemberOrgsPolicy . GetSignaturePolicy ( ) . Identities { found := false   var orgID string   // the member org policy only supports certain principal types switch principal . PrincipalClassification { case mb . MSPPrincipal_ROLE : msprole := & mb . MSPRole { }   err := proto . Unmarshal ( principal . Principal , msprole )   if err != nil { return errors . Wrapf ( err , " " , coll . GetName ( ) )   }   orgID = msprole . MspIdentifier   // the msp map is indexed using msp IDs - this behavior is implementation specific, making the following check a bit of a hack for mspid := range msps { if mspid == orgID { found = true   break   }   }    case mb . MSPPrincipal_ORGANIZATION_UNIT : mspou := & mb . OrganizationUnit { }   err := proto . Unmarshal ( principal . Principal , mspou )   if err != nil { return errors . Wrapf ( err , " " , coll . GetName ( ) )   }   orgID = mspou . MspIdentifier   // the msp map is indexed using msp IDs - this behavior is implementation specific, making the following check a bit of a hack for mspid := range msps { if mspid == orgID { found = true   break   }   }    case mb . MSPPrincipal_IDENTITY : orgID = " "   for _ , msp := range msps { _ , err := msp . DeserializeIdentity ( principal . Principal )   if err == nil { found = true   break   }   }   default : return fmt . Errorf ( " " , coll . GetName ( ) , principal . PrincipalClassification )   }   if ! found { logger . Warningf ( " " , coll . GetName ( ) , orgID )   }   }    return nil   }

0<CODESPLIT>https://github.com/go-playground/locales/blob/630ebbb602847eba93e75ae38bbc7bb7abcf1ff3/ms/ms.go#L99-L101<CODESPLIT>New<CODESPLIT>CardinalPluralRule returns the cardinal PluralRule given num and digits / precision of v for ms<CODESPLIT>func New ( ) locales . Translator { return & ms { locale : " " , pluralsCardinal : [ ] locales . PluralRule { 6 } , pluralsOrdinal : [ ] locales . PluralRule { 2 , 6 } , pluralsRange : [ ] locales . PluralRule { 6 } , decimal : " " , group : " " , minus : " " , percent : " " , perMille : "   timeSeparator : " " , inifinity : "   currencies : [ ] string {€ " F M " F D " F P " F F " £ , G E " G E " G H " G H " G I " G M " G N " G N " G Q " G R " G T " G W " G W " G Y " H K " H N " H R " H R " H T " H U " I D " I E " I L " I L " ₪ "   ,   I ,   I ,   I ,   I ,   I ,   J ,   J ,   J ,   K   " G   " H   " M   " P   " R   " R   " " K W " K Y " K Z " L A " L B " L K " L R " L S " L T " L T " L U " L U " L U " L V " L V " L Y " M A " M A " M C " M D " M D " M G " M G " M K " M K " M L " M M " M N " M O " M R " M T " M T " M U " M V " M V " M W " M X " M X " M X " R M , Z E , M Z " M Z " N A " N G " N I " N I " N L " N O " N P " N Z " O M " P A " P E " P E " P E " P G " P H " P K " P L " P L " P T " P Y " Q A " R H " R O " R O " R S " R U " R U " R W " S A " S B " S C " S D " S D " S D " S E " S G " S H " S I " S K " S L " S O " S R " S R " S S " S T " S T " S U " S V " S Y " S Z " T H " T J " T J " T M " T M " T N " T O " T P " T R " T R " T T " N T " T Z " U A " U A " U G " U G " U S " U S " U S " U Y " U Y " U Y " U Z " V E " V E " ₫ "   N "   V "   T "   F A , A G , U "   A "   B "   C "   D "   $ "   R "   U "   O "   U "   A "   D "   P F , P T , E "   U "   S "   A "   X "   D "   R "   D "   M "   N "   R "   L "   R "   K "   W "   N "   Z "   D "   L "   R " ,       currencyNegativePrefix : " " , currencyNegativeSuffix : " " , monthsAbbreviated : [ ] string { " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " } , monthsNarrow : [ ] string { " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " } , monthsWide : [ ] string { " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " } , daysAbbreviated : [ ] string { " " , " " , " " , " " , " " , " " , " " } , daysNarrow : [ ] string { " " , " " , " " , " " , " " , " " , " " } , daysShort : [ ] string { " " , " " , " " , " " , " " , " " , " " } , daysWide : [ ] string { " " , " " , " " , " " , " " , " " , " " } , periodsAbbreviated : [ ] string { " " , " " } , periodsNarrow : [ ] string { " " , " " } , periodsWide : [ ] string { " " , " " } , erasAbbreviated : [ ] string { " " , " " } , erasNarrow : [ ] string { " " , " " } , erasWide : [ ] string { " " , " " } , timezones : map [ string ] string { " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " k t   S T : k t   E G : k t   T "   k t   T "   k t   W S " k t   E G : k t   D T : k t   P M : k t   T "   k t   T "   k t   T "   k t   A S " k t   T "   k t   P M " k t   D T : k t   O G : k t   Z "   k t   T "   k t   N O X k t   T "   k t   S T : k t   T "   k t   T "   k t   S T : k t   T "   k t   Z "   k t   S T : k t   S Z : k t   T "   k t   T "   k t   " : " k t   O G : k t   R S " k t   S T : k t   D T : k t   T "   k t   T "   k t   T "   k t   S T : k t   C U : k t   B "   k t   S T : k t   D T : k t   T "   k t   T "   k t   S T : k t   R T : k t   S T : k t   S T : k t   W D " k t   T A : k t   T "   k t   T "   k t   S Z : k t   T "   k t   T "   k t   N O X k t   S T : k t   T "   k t   T "   k t   T "   k t   Z "   k t   T "   k t   T "   k t   S T : k t   S T : k t   T "   k t   T "   k t   S T : k t   S T : k t   D T : k t   P M : k t   P M " k t   T "   k t   D T : k t   S T : k t      }   }

0<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/upgrades/steps_222.go#L7-L17<CODESPLIT>ParseVolumeAttachmentIds<CODESPLIT>stateStepsFor222 returns upgrade steps for Juju 2 . 2 . 2 that manipulate state directly .<CODESPLIT>func ParseVolumeAttachmentIds ( stringIds [ ] string ) ( [ ] params . MachineStorageId , error ) { ids := make ( [ ] params . MachineStorageId , len ( stringIds ) )   for i , s := range stringIds { m , v , err := state . ParseVolumeAttachmentId ( s )   if err != nil { return nil , err   }   ids [ i ] = params . MachineStorageId { MachineTag : m . String ( ) , AttachmentTag : v . String ( ) , }   }   return ids , nil   }

0<CODESPLIT>https://github.com/karlkfi/inject/blob/27c5323a07f81a37802552bb0734fc4bb649aaa1/auto_provider.go#L14-L28<CODESPLIT>String<CODESPLIT>NewAutoProvider specifies how to construct a value given its constructor function . Argument values are auto - resolved by type .<CODESPLIT>func ( g graph ) String ( ) string { return fmt . Sprintf ( " \n \n " , indent ( fmt . Sprintf ( " " , g . fmtDefinitions ( ) ) , 1 ) , )   }

0<CODESPLIT>https://github.com/gmallard/stompngo/blob/b61c67049c28a4361e7b2cb69200d9d137411822/message_methods.go#L29-L33<CODESPLIT>Ack<CODESPLIT>/ * String makes Message a Stringer .<CODESPLIT>func ( c * Connection ) Ack ( h Headers ) error { c . log ( ACK , " " , h , c . Protocol ( ) )   if ! c . connected { return ECONBAD   }   e := checkHeaders ( h , c . Protocol ( ) )   if e != nil { return e   }   switch c . Protocol ( ) { case SPL_12 : if _ , ok := h . Contains ( HK_ID ) ; ! ok { return EREQIDACK   }   case SPL_11 : if _ , ok := h . Contains ( HK_SUBSCRIPTION ) ; ! ok { return EREQSUBACK   }   if _ , ok := h . Contains ( HK_MESSAGE_ID ) ; ! ok { return EREQMIDACK   }   default : // SPL_10 if _ , ok := h . Contains ( HK_MESSAGE_ID ) ; ! ok { return EREQMIDACK   }   }    e = c . transmitCommon ( ACK , h ) // transmitCommon Clones() the headers   c . log ( ACK , " " , h , c . Protocol ( ) )   return e   }

1<CODESPLIT>https://github.com/luci/luci-go/blob/f6cef429871eee3be7c6903af88d3ee884eaf683/common/data/text/indented/writer.go#L38-L89<CODESPLIT>Write<CODESPLIT>Write writes data inserting a newline before each line . Panics if w . Indent is outside of [ 0 Limit ) range .<CODESPLIT>func ( w * Writer ) Write ( data [ ] byte ) ( n int , err error ) { // Do not print indentation if there is no data. indentBuf := indentationTabs   if w . UseSpaces { indentBuf = indentationSpaces   }    for len ( data ) > 0 { var printUntil int   endsWithNewLine := false    lineBeginning := ! w . insideLine   if data [ 0 ] == '\n' && lineBeginning { // This is a blank line. Do not indent it, just print as is. printUntil = 1   } else { if lineBeginning { // Print indentation. w . Writer . Write ( indentBuf [ : w . Level ] )   w . insideLine = true   }    lineEnd := bytes . IndexRune ( data , '\n' )   if lineEnd < 0 { // Print the whole thing. printUntil = len ( data )   } else { // Print until the newline inclusive. printUntil = lineEnd + 1   endsWithNewLine = true   }   }   toPrint := data [ : printUntil ]   data = data [ printUntil : ]    // Assertion: none of the runes in toPrint // can be newline except the last rune. // The last rune is newline iff endsWithNewLine==true. m , err := w . Writer . Write ( toPrint )   n += m    if m == len ( toPrint ) && endsWithNewLine { // We've printed the newline, so we are the line beginning again. w . insideLine = false   }   if err != nil { return n , err   }   }   return n , nil   }

1<CODESPLIT>https://github.com/teambition/gear/blob/a2c5175e04298aa0918a50d40e95475520e9d78e/logging/logger.go#L325-L329<CODESPLIT>Crit<CODESPLIT>Crit produce a Critical log<CODESPLIT>func ( l * Logger ) Crit ( v interface { } ) { if l . checkLogLevel ( CritiLevel ) { l . Output ( time . Now ( ) , CritiLevel , formatError ( v ) )   }   }

0<CODESPLIT>https://github.com/dlclark/regexp2/blob/7632a260cbaf5e7594fc1544a503456ecd0827f1/syntax/parser.go#L1648-L1681<CODESPLIT>scanControl<CODESPLIT>Scan hex digits until we hit a closing brace . Non - hex digits hex value too large for UTF - 8 or running out of chars are errors<CODESPLIT>func ( p * parser ) scanControl ( ) ( rune , error ) { if p . charsRight ( ) <= 0 { return 0 , p . getErr ( ErrMissingControl )   }    ch := p . moveRightGetChar ( )    // \ca interpreted as \cA if ch >= 'a' && ch <= 'z' { ch = ( ch - ( 'a' - 'A' ) )   }   ch = ( ch - '@' )   if ch >= 0 && ch < ' ' { return ch , nil   }    return 0 , p . getErr ( ErrUnrecognizedControl )    }

0<CODESPLIT>https://github.com/Workiva/go-datastructures/blob/f07cbe3f82ca2fd6e5ab94afce65fe43319f675f/trie/xfast/xfast.go#L60-L62<CODESPLIT>newNode<CODESPLIT>hasInternal returns a bool indicating if the provided node has a child that is an internal node .<CODESPLIT>func newNode ( parent * node , entry Entry ) * node { return & node { children : [ 2 ] * node { } , entry : entry , parent : parent , }   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/backup/api.go#L3817-L3820<CODESPLIT>PutBackupVaultAccessPolicy<CODESPLIT>PutBackupVaultAccessPolicy API operation for AWS Backup . Sets a resource - based policy that is used to manage access permissions on the target backup vault . Requires a backup vault name and an access policy document in JSON format . Returns awserr . Error for service API and SDK errors . Use runtime type assertions with awserr . Error s Code and Message methods to get detailed information about the error . See the AWS API reference guide for AWS Backup s API operation PutBackupVaultAccessPolicy for usage and error information . Returned Error Codes : * ErrCodeResourceNotFoundException ResourceNotFoundException A resource that is required for the action doesn t exist . * ErrCodeInvalidParameterValueException InvalidParameterValueException Indicates that something is wrong with a parameter s value . For example the value is out of range . * ErrCodeMissingParameterValueException MissingParameterValueException Indicates that a required parameter is missing . * ErrCodeServiceUnavailableException ServiceUnavailableException The request failed due to a temporary failure of the server . See also https : // docs . aws . amazon . com / goto / WebAPI / backup - 2018 - 11 - 15 / PutBackupVaultAccessPolicy<CODESPLIT>func ( c * Backup ) PutBackupVaultAccessPolicy ( input * PutBackupVaultAccessPolicyInput ) ( * PutBackupVaultAccessPolicyOutput , error ) { req , out := c . PutBackupVaultAccessPolicyRequest ( input )   return out , req . Send ( )   }

0<CODESPLIT>https://github.com/google/netstack/blob/70ebca9c30730cf3887cdef3b85bb96ed7a97593/tcpip/transport/raw/raw.go#L429-L441<CODESPLIT>HandlePacket<CODESPLIT>GetRemoteAddress implements tcpip . Endpoint . GetRemoteAddress .<CODESPLIT>func ( ep * endpoint ) HandlePacket ( route * stack . Route , netHeader buffer . View , vv buffer . VectorisedView ) { ep . rcvMu . Lock ( )    // Drop the packet if our buffer is currently full. if ep . rcvClosed || ep . rcvBufSize >= ep . rcvBufSizeMax { ep . stack . Stats ( ) . DroppedPackets . Increment ( )   ep . rcvMu . Unlock ( )   return   }    if ep . bound { // If bound to a NIC, only accept data for that NIC. if ep . boundNIC != 0 && ep . boundNIC != route . NICID ( ) { ep . rcvMu . Unlock ( )   return   }   // If bound to an address, only accept data for that address. if ep . boundAddr != " " && ep . boundAddr != route . RemoteAddress { ep . rcvMu . Unlock ( )   return   }   }    // If connected, only accept packets from the remote address we // connected to. if ep . connected && ep . route . RemoteAddress != route . RemoteAddress { ep . rcvMu . Unlock ( )   return   }    wasEmpty := ep . rcvBufSize == 0    // Push new packet into receive list and increment the buffer size. packet := & packet { senderAddr : tcpip . FullAddress { NIC : route . NICID ( ) , Addr : route . RemoteAddress , } , }    combinedVV := netHeader . ToVectorisedView ( )   combinedVV . Append ( vv )   packet . data = combinedVV . Clone ( packet . views [ : ] )   packet . timestampNS = ep . stack . NowNanoseconds ( )    ep . rcvList . PushBack ( packet )   ep . rcvBufSize += packet . data . Size ( )    ep . rcvMu . Unlock ( )    // Notify waiters that there's data to be read. if wasEmpty { ep . waiterQueue . Notify ( waiter . EventIn )   }   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/autoscaling/api.go#L12170-L12173<CODESPLIT>SetEstimatedInstanceWarmup<CODESPLIT>SetCooldown sets the Cooldown field s value .<CODESPLIT>func ( s * ScalingPolicy ) SetEstimatedInstanceWarmup ( v int64 ) * ScalingPolicy { s . EstimatedInstanceWarmup = & v   return s   }

0<CODESPLIT>https://github.com/moby/moby/blob/e516af6e5636023e85335ed8d9d0d824349dd6ff/daemon/cluster/services.go#L105-L122<CODESPLIT>CreateService<CODESPLIT>GetService returns a service based on an ID or name .<CODESPLIT>func ( c * Cluster ) CreateService ( s types . ServiceSpec , encodedAuth string , queryRegistry bool ) ( * apitypes . ServiceCreateResponse , error ) { var resp * apitypes . ServiceCreateResponse   err := c . lockedManagerAction ( func ( ctx context . Context , state nodeState ) error { err := c . populateNetworkID ( ctx , state . controlClient , & s )   if err != nil { return err   }    serviceSpec , err := convert . ServiceSpecToGRPC ( s )   if err != nil { return errdefs . InvalidParameter ( err )   }    resp = & apitypes . ServiceCreateResponse { }    switch serviceSpec . Task . Runtime . ( type ) { case * swarmapi . TaskSpec_Attachment : return fmt . Errorf ( " " , types . RuntimeNetworkAttachment )   // handle other runtimes here case * swarmapi . TaskSpec_Generic : switch serviceSpec . Task . GetGeneric ( ) . Kind { case string ( types . RuntimePlugin ) : if ! c . config . Backend . HasExperimental ( ) { return fmt . Errorf ( " " , types . RuntimePlugin )   }   if s . TaskTemplate . PluginSpec == nil { return errors . New ( " " )   }    default : return fmt . Errorf ( " " , serviceSpec . Task . GetGeneric ( ) . Kind )   }    r , err := state . controlClient . CreateService ( ctx , & swarmapi . CreateServiceRequest { Spec : & serviceSpec } )   if err != nil { return err   }    resp . ID = r . Service . ID   case * swarmapi . TaskSpec_Container : ctnr := serviceSpec . Task . GetContainer ( )   if ctnr == nil { return errors . New ( " " )   }   if encodedAuth != " " { ctnr . PullOptions = & swarmapi . ContainerSpec_PullOptions { RegistryAuth : encodedAuth }   }    // retrieve auth config from encoded auth authConfig := & apitypes . AuthConfig { }   if encodedAuth != " " { authReader := strings . NewReader ( encodedAuth )   dec := json . NewDecoder ( base64 . NewDecoder ( base64 . URLEncoding , authReader ) )   if err := dec . Decode ( authConfig ) ; err != nil { logrus . Warnf ( " " , err )   }   }    // pin image by digest for API versions < 1.30 // TODO(nishanttotla): The check on "DOCKER_SERVICE_PREFER_OFFLINE_IMAGE" // should be removed in the future. Since integration tests only use the // latest API version, so this is no longer required. if os . Getenv ( " " ) != " " && queryRegistry { digestImage , err := c . imageWithDigestString ( ctx , ctnr . Image , authConfig )   if err != nil { logrus . Warnf ( " " , ctnr . Image , err . Error ( ) )   // warning in the client response should be concise resp . Warnings = append ( resp . Warnings , digestWarning ( ctnr . Image ) )    } else if ctnr . Image != digestImage { logrus . Debugf ( " " , ctnr . Image , digestImage )   ctnr . Image = digestImage    } else { logrus . Debugf ( " " , ctnr . Image )    }    // Replace the context with a fresh one. // If we timed out while communicating with the // registry, then "ctx" will already be expired, which // would cause UpdateService below to fail. Reusing // "ctx" could make it impossible to create a service // if the registry is slow or unresponsive. var cancel func ( )   ctx , cancel = c . getRequestContext ( )   defer cancel ( )   }    r , err := state . controlClient . CreateService ( ctx , & swarmapi . CreateServiceRequest { Spec : & serviceSpec } )   if err != nil { return err   }    resp . ID = r . Service . ID   }   return nil   } )    return resp , err   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/backup/api.go#L10035-L10051<CODESPLIT>SetIamRoleArn<CODESPLIT>Validate inspects the fields of the type to determine if they are valid .<CODESPLIT>func ( s * StartRestoreJobInput ) SetIamRoleArn ( v string ) * StartRestoreJobInput { s . IamRoleArn = & v   return s   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/cognitosync/api.go#L309-L314<CODESPLIT>DescribeDataset<CODESPLIT>DescribeDatasetWithContext is the same as DescribeDataset with the addition of the ability to pass a context and additional request options . See DescribeDataset for details on how to use this API operation . The context must be non - nil and will be used for request cancellation . If the context is nil a panic will occur . In the future the SDK may create sub - contexts for http . Requests . See https : // golang . org / pkg / context / for more information on using Contexts .<CODESPLIT>func ( c * CognitoSync ) DescribeDataset ( input * DescribeDatasetInput ) ( * DescribeDatasetOutput , error ) { req , out := c . DescribeDatasetRequest ( input )   return out , req . Send ( )   }

0<CODESPLIT>https://github.com/luci/luci-go/blob/f6cef429871eee3be7c6903af88d3ee884eaf683/logdog/common/types/projectname.go#L51-L58<CODESPLIT>validateUpdateMask<CODESPLIT>Set implements flag . Value .<CODESPLIT>func validateUpdateMask ( m * field_mask . FieldMask ) error { switch { case m == nil : return status . Error ( codes . InvalidArgument , " " )   case len ( m . Paths ) == 0 : return status . Error ( codes . InvalidArgument , " " )   }   // Path names must be unique. // Keep records of ones we've already seen. paths := stringset . New ( len ( m . Paths ) )   for _ , path := range m . Paths { if ! paths . Add ( path ) { return status . Errorf ( codes . InvalidArgument , " " , path )   }   }   return nil   }

1<CODESPLIT>https://github.com/gravitational/teleport/blob/d5243dbe8d36bba44bf640c08f1c49185ed2c8a4/lib/services/tunnel.go#L345-L381<CODESPLIT>MarshalReverseTunnel<CODESPLIT>MarshalRole marshalls role into JSON<CODESPLIT>func ( * TeleportTunnelMarshaler ) MarshalReverseTunnel ( rt ReverseTunnel , opts ... MarshalOption ) ( [ ] byte , error ) { cfg , err := collectOptions ( opts )   if err != nil { return nil , trace . Wrap ( err )   }   type tunv1 interface { V1 ( ) * ReverseTunnelV1   }   type tunv2 interface { V2 ( ) * ReverseTunnelV2   }   version := cfg . GetVersion ( )   switch version { case V1 : v , ok := rt . ( tunv1 )   if ! ok { return nil , trace . BadParameter ( " " , V1 )   }   return json . Marshal ( v . V1 ( ) )   case V2 : v , ok := rt . ( tunv2 )   if ! ok { return nil , trace . BadParameter ( " " , V2 )   }   v2 := v . V2 ( )   if ! cfg . PreserveResourceID { // avoid modifying the original object // to prevent unexpected data races copy := * v2   copy . SetResourceID ( 0 )   v2 = & copy   }   return utils . FastMarshal ( v2 )   default : return nil , trace . BadParameter ( " " , version )   }   }

1<CODESPLIT>https://github.com/moby/buildkit/blob/89851c6c69bca875dd64b5e9d5d6ec60ff437d74/cache/refs.go#L70-L74<CODESPLIT>ref<CODESPLIT>hold ref lock before calling<CODESPLIT>func ( cr * cacheRecord ) ref ( triggerLastUsed bool ) * immutableRef { ref := & immutableRef { cacheRecord : cr , triggerLastUsed : triggerLastUsed }   cr . refs [ ref ] = struct { } { }   return ref   }

1<CODESPLIT>https://github.com/Fs02/grimoire/blob/3299e8812ada63f878179b2b759a9f4959c8593f/errors/errors.go#L39-L41<CODESPLIT>NewWithCode<CODESPLIT>NewWithCode creates an error with code .<CODESPLIT>func NewWithCode ( message string , field string , code int , kind Kind ) Error { return Error { message , field , code , kind }   }

0<CODESPLIT>https://github.com/minio/minio/blob/4b858b562a0887e10bfd0414dc87e68f1af31c3a/pkg/event/target/mqtt.go#L55-L78<CODESPLIT>Send<CODESPLIT>Validate MQTTArgs fields<CODESPLIT>func ( target * MQTTTarget ) Send ( eventKey string ) error { if ! target . client . IsConnectionOpen ( ) { return errNotConnected   }    eventData , eErr := target . store . Get ( eventKey )   if eErr != nil { // The last event key in a successful batch will be sent in the channel atmost once by the replayEvents() // Such events will not exist and wouldve been already been sent successfully. if os . IsNotExist ( eErr ) { return nil   }   return eErr   }    objectName , err := url . QueryUnescape ( eventData . S3 . Object . Key )   if err != nil { return err   }   key := eventData . S3 . Bucket . Name + " " + objectName    data , err := json . Marshal ( event . Log { EventName : eventData . EventName , Key : key , Records : [ ] event . Event { eventData } } )   if err != nil { return err   }    token := target . client . Publish ( target . args . Topic , target . args . QoS , false , string ( data ) )   token . Wait ( )   if token . Error ( ) != nil { return token . Error ( )   }    // Delete the event from store. return target . store . Del ( eventKey )   }

1<CODESPLIT>https://github.com/decred/dcrdata/blob/02d6f8e648f7e2c5cf78ea92fb17b1d4aa4a99f6/db/dcrpg/pgblockchain.go#L1865-L1889<CODESPLIT>AddressRowsMerged<CODESPLIT>AddressRowsMerged gets the merged address rows either from cache or via DB query .<CODESPLIT>func ( pgb * ChainDB ) AddressRowsMerged ( address string ) ( [ ] dbtypes . AddressRowMerged , error ) { // Try the address cache. hash := pgb . BestBlockHash ( )   rowsCompact , validBlock := pgb . AddressCache . Rows ( address )   cacheCurrent := validBlock != nil && validBlock . Hash == * hash && rowsCompact != nil   if cacheCurrent { log . Tracef ( " " , address )   return dbtypes . MergeRowsCompact ( rowsCompact ) , nil   }    log . Tracef ( " " , address )    // Update or wait for an update to the cached AddressRows. rows , _ , err := pgb . updateAddressRows ( address )   if err != nil { if err . Error ( ) == " " { // Try again, starting with cache. return pgb . AddressRowsMerged ( address )   }   return nil , err   }    // We have a result. return dbtypes . MergeRows ( rows )   }

1<CODESPLIT>https://github.com/crossdock/crossdock-go/blob/049aabb0122b03bc9bd30cab8f3f91fb60166361/assert/assertion_forward.go#L261-L263<CODESPLIT>NoError<CODESPLIT>NoError asserts that a function returned no error ( i . e . nil ) . actualObj err : = SomeFunction () if a . NoError ( err ) { assert . Equal ( t actualObj expectedObj ) } Returns whether the assertion was successful ( true ) or not ( false ) .<CODESPLIT>func ( a * Assertions ) NoError ( err error , msgAndArgs ... interface { } ) bool { return NoError ( a . t , err , msgAndArgs ... )   }

1<CODESPLIT>https://github.com/luci/luci-go/blob/f6cef429871eee3be7c6903af88d3ee884eaf683/scheduler/appengine/engine/engine.go#L1112-L1139<CODESPLIT>allocateInvocations<CODESPLIT>allocateInvocations is a batch version of allocateInvocation . It launches N independent transactions in parallel to create N invocations .<CODESPLIT>func ( e * engineImpl ) allocateInvocations ( c context . Context , job * Job , req [ ] task . Request ) ( [ ] * Invocation , error ) { wg := sync . WaitGroup { }   wg . Add ( len ( req ) )    invs := make ( [ ] * Invocation , len ( req ) )   merr := errors . NewLazyMultiError ( len ( req ) )   for i := range req { go func ( i int ) { defer wg . Done ( )   inv , err := e . allocateInvocation ( c , job , req [ i ] )   invs [ i ] = inv   merr . Assign ( i , err )   if err != nil { logging . WithError ( err ) . Errorf ( c , " " , len ( req [ i ] . IncomingTriggers ) )   }   } ( i )   }    wg . Wait ( )    // Bail if any of them failed. Try best effort cleanup. if err := merr . Get ( ) ; err != nil { cleanupUnreferencedInvocations ( c , invs )   return nil , transient . Tag . Apply ( err )   }    return invs , nil   }

1<CODESPLIT>https://github.com/sbunce/bson/blob/2aa5ebe749b24e053f742541fe8242e80f40c4a0/encode.go#L147-L247<CODESPLIT>encodeVal<CODESPLIT>encodeVal encodes a struct field .<CODESPLIT>func encodeVal ( buf * bytes . Buffer , path , name string , src interface { } ) error { if src == nil { return encodeNull ( buf , name )   }   rvsrc := reflect . ValueOf ( src )   if rvsrc . Kind ( ) == reflect . Ptr && rvsrc . IsNil ( ) { return encodeNull ( buf , name )   }   src = indirect ( rvsrc ) . Interface ( )    // Try non-reflect first. switch srct := src . ( type ) { case Float : return encodeFloat ( buf , name , srct )   case String : return encodeString ( buf , name , srct )   case Map : return encodeEmbeddedDocument ( buf , path , name , srct )   case Slice : return encodeEmbeddedDocument ( buf , path , name , srct )   case BSON : _ , err := buf . Write ( srct )   return err   case Array : return encodeArray ( buf , path , name , srct )   case Binary : return encodeBinary ( buf , name , srct )   case Undefined : return encodeUndefined ( buf , name )   case ObjectId : return encodeObjectId ( buf , path , name , srct )   case Bool : return encodeBool ( buf , name , srct )   case UTCDateTime : return encodeUTCDateTime ( buf , name , srct )   case Null : return encodeNull ( buf , name )   case Regexp : return encodeRegexp ( buf , name , srct )   case DBPointer : return encodeDBPointer ( buf , path , name , srct )   case Javascript : return encodeJavascript ( buf , name , srct )   case Symbol : return encodeSymbol ( buf , name , srct )   case JavascriptScope : return encodeJavascriptScope ( buf , path , name , srct )   case Int32 : return encodeInt32 ( buf , name , srct )   case Timestamp : return encodeTimestamp ( buf , name , srct )   case Int64 : return encodeInt64 ( buf , name , srct )   case MinKey : return encodeMinKey ( buf , name )   case MaxKey : return encodeMaxKey ( buf , name )   case bool : return encodeBool ( buf , name , Bool ( srct ) )   case int8 : return encodeInt32 ( buf , name , Int32 ( srct ) )   case int16 : return encodeInt32 ( buf , name , Int32 ( srct ) )   case int32 : return encodeInt32 ( buf , name , Int32 ( srct ) )   case int : return encodeInt64 ( buf , name , Int64 ( srct ) )   case int64 : return encodeInt64 ( buf , name , Int64 ( srct ) )   case float64 : return encodeFloat ( buf , name , Float ( srct ) )   case string : return encodeString ( buf , name , String ( srct ) )   case time . Time : return encodeUTCDateTime ( buf , name , UTCDateTime ( srct . UnixNano ( ) / 1000 / 1000 ) )   case [ ] byte : return encodeBinary ( buf , name , srct )   default : // Fall back to reflect. switch rvsrc . Kind ( ) { case reflect . Bool : return encodeBool ( buf , name , Bool ( rvsrc . Bool ( ) ) )   case reflect . Int8 , reflect . Int16 , reflect . Int32 : return encodeInt32 ( buf , name , Int32 ( rvsrc . Int ( ) ) )   case reflect . Int , reflect . Int64 : return encodeInt64 ( buf , name , Int64 ( rvsrc . Int ( ) ) )   case reflect . Float64 : return encodeFloat ( buf , name , Float ( rvsrc . Float ( ) ) )   case reflect . Slice : a := make ( Array , rvsrc . Len ( ) )   for i := 0 ; i < rvsrc . Len ( ) ; i ++ { a [ i ] = rvsrc . Index ( i ) . Interface ( )   }   return encodeArray ( buf , path , name , a )   case reflect . String : return encodeString ( buf , name , String ( rvsrc . String ( ) ) )   }   }   return fmt . Errorf ( " \n " , path , src )   }

0<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/state/machine_upgradeseries.go#L200-L241<CODESPLIT>CompleteUpgradeSeries<CODESPLIT>StartUpgradeSeriesUnitCompletion notifies units that an upgrade - series workflow is ready for its completion phase .<CODESPLIT>func ( m * Machine ) CompleteUpgradeSeries ( ) error { buildTxn := func ( attempt int ) ( [ ] txn . Op , error ) { if attempt > 0 { if err := m . Refresh ( ) ; err != nil { return nil , errors . Trace ( err )   }   }   if err := m . isStillAlive ( ) ; err != nil { return nil , errors . Trace ( err )   }   readyForCompletion , err := m . isReadyForCompletion ( )   if err != nil { return nil , errors . Trace ( err )   }   if ! readyForCompletion { return nil , fmt . Errorf ( " " , m . Id ( ) )   }   timestamp := bson . Now ( )   message := newUpgradeSeriesMessage ( m . Tag ( ) . String ( ) , " " , timestamp )   return completeUpgradeSeriesTxnOps ( m . doc . Id , timestamp , message ) , nil   }   err := m . st . db ( ) . Run ( buildTxn )   if err != nil { err = onAbort ( err , ErrDead )   return err   }   return errors . Trace ( m . setUpgradeSeriesInstanceStatus ( model . UpgradeSeriesCompleteStarted ) )   }

1<CODESPLIT>https://github.com/ccding/go-stun/blob/be486d185f3dfcb2dbf8429332da50a0da7f95a6/stun/utils.go#L24-L27<CODESPLIT>padding<CODESPLIT>Padding the length of the byte slice to multiple of 4 .<CODESPLIT>func padding ( bytes [ ] byte ) [ ] byte { length := uint16 ( len ( bytes ) )   return append ( bytes , make ( [ ] byte , align ( length ) - length ) ... )   }

1<CODESPLIT>https://github.com/ory/hydra/blob/67c246c177446daab64be00ba82b3aea1a546570/driver/registry_memory.go#L33-L36<CODESPLIT>WithOAuth2Provider<CODESPLIT>WithOAuth2Provider forces an oauth2 provider which is only used for testing .<CODESPLIT>func ( m * RegistryMemory ) WithOAuth2Provider ( f fosite . OAuth2Provider ) * RegistryMemory { m . RegistryBase . fop = f   return m   }

0<CODESPLIT>https://github.com/luci/luci-go/blob/f6cef429871eee3be7c6903af88d3ee884eaf683/machine-db/client/cli/switches.go#L28-L39<CODESPLIT>prependSigningContext<CODESPLIT>printSwitches prints switch data to stdout in tab - separated columns .<CODESPLIT>func prependSigningContext ( blob [ ] byte , ctx string ) [ ] byte { if ctx == " " { return blob   }   b := make ( [ ] byte , len ( blob ) + len ( ctx ) + 1 )   copy ( b , ctx )   copy ( b [ len ( ctx ) + 1 : ] , blob )   return b   }

1<CODESPLIT>https://github.com/gorgonia/cu/blob/89152d7e441439045736bc7640ff607ec371c26c/batchedPatterns.go#L37-L60<CODESPLIT>LaunchAndSync<CODESPLIT>LaunchAndSync launches the kernel and synchronizes the context<CODESPLIT>func ( fn Function ) LaunchAndSync ( gridDimX , gridDimY , gridDimZ , blockDimX , blockDimY , blockDimZ , sharedMemBytes int , stream Stream , kernelParams [ ] unsafe . Pointer ) error { argv := C . malloc ( C . size_t ( len ( kernelParams ) * pointerSize ) )   argp := C . malloc ( C . size_t ( len ( kernelParams ) * pointerSize ) )   defer C . free ( argv )   defer C . free ( argp )   for i := range kernelParams { * ( ( * unsafe . Pointer ) ( offset ( argp , i ) ) ) = offset ( argv , i ) // argp[i] = &argv[i]   * ( ( * uint64 ) ( offset ( argv , i ) ) ) = * ( ( * uint64 ) ( kernelParams [ i ] ) ) // argv[i] = *kernelParams[i]   }    err := result ( C . cuLaunchAndSync ( fn . fn , C . uint ( gridDimX ) , C . uint ( gridDimY ) , C . uint ( gridDimZ ) , C . uint ( blockDimX ) , C . uint ( blockDimY ) , C . uint ( blockDimZ ) , C . uint ( sharedMemBytes ) , stream . c ( ) , ( * unsafe . Pointer ) ( argp ) , ( * unsafe . Pointer ) ( nil ) ) )   return err   }

1<CODESPLIT>https://github.com/containernetworking/cni/blob/f726df9103d27044c93c99e30f6fb04048606444/pkg/invoke/args.go#L74-L82<CODESPLIT>stringify<CODESPLIT>taken from rkt / networking / net_plugin . go<CODESPLIT>func stringify ( pluginArgs [ ] [ 2 ] string ) string { entries := make ( [ ] string , len ( pluginArgs ) )    for i , kv := range pluginArgs { entries [ i ] = strings . Join ( kv [ : ] , " " )   }    return strings . Join ( entries , " " )   }

1<CODESPLIT>https://github.com/hashicorp/terraform/blob/133d3d79714077d8009e35759ac7dad18522e6b6/terraform/resource_address.go#L190-L230<CODESPLIT>parseResourceAddressInternal<CODESPLIT>parseResourceAddressInternal parses the somewhat bespoke resource identifier used in states and diffs such as instance . name . 0 .<CODESPLIT>func parseResourceAddressInternal ( s string ) ( * ResourceAddress , error ) { // Split based on ".". Every resource address should have at least two // elements (type and name). parts := strings . Split ( s , " " )   if len ( parts ) < 2 || len ( parts ) > 4 { return nil , fmt . Errorf ( " " , s )   }    // Data resource if we have at least 3 parts and the first one is data mode := config . ManagedResourceMode   if len ( parts ) > 2 && parts [ 0 ] == " " { mode = config . DataResourceMode   parts = parts [ 1 : ]   }    // If we're not a data resource and we have more than 3, then it is an error if len ( parts ) > 3 && mode != config . DataResourceMode { return nil , fmt . Errorf ( " " , s )   }    // Build the parts of the resource address that are guaranteed to exist addr := & ResourceAddress { Type : parts [ 0 ] , Name : parts [ 1 ] , Index : - 1 , InstanceType : TypePrimary , Mode : mode , }    // If we have more parts, then we have an index. Parse that. if len ( parts ) > 2 { idx , err := strconv . ParseInt ( parts [ 2 ] , 0 , 0 )   if err != nil { return nil , fmt . Errorf ( " " , s , err )   }    addr . Index = int ( idx )   }    return addr , nil   }

1<CODESPLIT>https://github.com/minio/mc/blob/f0f156aca82e451c80b05d5be8eb01a04fee29dd/cmd/session-v8.go#L270-L295<CODESPLIT>isModified<CODESPLIT>IsModified - returns if in memory session header has changed from its on disk value .<CODESPLIT>func ( s * sessionV8 ) isModified ( sessionFile string ) ( bool , * probe . Error ) { qs , e := quick . NewConfig ( s . Header , nil )   if e != nil { return false , probe . NewError ( e ) . Trace ( s . SessionID )   }    var currentHeader = & sessionV8Header { }   currentQS , e := quick . LoadConfig ( sessionFile , nil , currentHeader )   if e != nil { // If session does not exist for the first, return modified to // be true. if os . IsNotExist ( e ) { return true , nil   }   // For all other errors return. return false , probe . NewError ( e ) . Trace ( s . SessionID )   }    changedFields , e := qs . DeepDiff ( currentQS )   if e != nil { return false , probe . NewError ( e ) . Trace ( s . SessionID )   }    // Returns true if there are changed entries. return len ( changedFields ) > 0 , nil   }

0<CODESPLIT>https://github.com/boltdb/bolt/blob/fd01fc79c553a8e99d512a07e8e0c63d4a3ccfc5/bolt_windows.go#L51-L86<CODESPLIT>funlock<CODESPLIT>flock acquires an advisory lock on a file descriptor .<CODESPLIT>func funlock ( db * DB ) error { err := unlockFileEx ( syscall . Handle ( db . lockfile . Fd ( ) ) , 0 , 1 , 0 , & syscall . Overlapped { } )   db . lockfile . Close ( )   os . Remove ( db . path + lockExt )   return err   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/polly/api.go#L42-L57<CODESPLIT>SetVideoContentSourceUrl<CODESPLIT>DeleteLexiconRequest generates a aws / request . Request representing the client s request for the DeleteLexicon operation . The output return value will be populated with the request s response once the request completes successfully . Use Send method on the returned Request to send the API call to the service . the output return value is not valid until after Send returns without error . See DeleteLexicon for more information on using the DeleteLexicon API call and error handling . This method is useful when you want to inject custom logic or configuration into the SDK s request lifecycle . Such as custom headers or retry logic . // Example sending a request using the DeleteLexiconRequest method . req resp : = client . DeleteLexiconRequest ( params ) err : = req . Send () if err == nil { // resp is now filled fmt . Println ( resp ) } See also https : // docs . aws . amazon . com / goto / WebAPI / polly - 2016 - 06 - 10 / DeleteLexicon<CODESPLIT>func ( s * PutPlaybackConfigurationOutput ) SetVideoContentSourceUrl ( v string ) * PutPlaybackConfigurationOutput { s . VideoContentSourceUrl = & v   return s   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/neptune/api.go#L16200-L16203<CODESPLIT>SetDBCluster<CODESPLIT>SetDBCluster sets the DBCluster field s value .<CODESPLIT>func ( s * RestoreDBClusterToPointInTimeOutput ) SetDBCluster ( v * DBCluster ) * RestoreDBClusterToPointInTimeOutput { s . DBCluster = v   return s   }

0<CODESPLIT>https://github.com/gin-gonic/gin/blob/202f8fc58af47ab5c8e834662ee7fc46deacc37d/ginS/gins.go#L92-L94<CODESPLIT>OPTIONS<CODESPLIT>HEAD is a shortcut for router . Handle ( HEAD path handle )<CODESPLIT>func OPTIONS ( relativePath string , handlers ... gin . HandlerFunc ) gin . IRoutes { return engine ( ) . OPTIONS ( relativePath , handlers ... )   }

0<CODESPLIT>https://github.com/goadesign/goa/blob/90bd33edff1a4f17fab06d1f9e14e659075d1328/design/validation.go#L56-L63<CODESPLIT>New<CODESPLIT>DifferentWildcards returns the list of wildcards in other that have a different name from the wildcard in target at the same position .<CODESPLIT>func ( a * adapter ) New ( data ... interface { } ) goa . LogAdapter { return & adapter { Logger : a . Logger . New ( data ... ) }   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/batch/api.go#L3863-L3866<CODESPLIT>SetJobId<CODESPLIT>SetJobId sets the JobId field s value .<CODESPLIT>func ( s * JobDetail ) SetJobId ( v string ) * JobDetail { s . JobId = & v   return s   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/kinesisanalytics/api.go#L3990-L3993<CODESPLIT>SetRoleARN<CODESPLIT>SetResourceARN sets the ResourceARN field s value .<CODESPLIT>func ( s * InputLambdaProcessor ) SetRoleARN ( v string ) * InputLambdaProcessor { s . RoleARN = & v   return s   }

0<CODESPLIT>https://github.com/pingcap/tidb/blob/b6218d415cf77bca6910057a7b391a379c287e59/server/http_handler.go#L1387-L1430<CODESPLIT>ServeHTTP<CODESPLIT>ServeHTTP handles request of all ddl servers info .<CODESPLIT>func ( h serverInfoHandler ) ServeHTTP ( w http . ResponseWriter , req * http . Request ) { do , err := session . GetDomain ( h . Store . ( kv . Storage ) )   if err != nil { writeError ( w , errors . New ( " " ) )   log . Error ( err )   return   }   info := serverInfo { }   info . ServerInfo = do . InfoSyncer ( ) . GetServerInfo ( )   info . IsOwner = do . DDL ( ) . OwnerManager ( ) . IsOwner ( )   writeData ( w , info )   }

1<CODESPLIT>https://github.com/biogo/store/blob/884f370e325d9036057c7cf5167ca8a05fba575a/interval/int_interval.go#L403-L408<CODESPLIT>Min<CODESPLIT>Return the left - most interval stored in the tree .<CODESPLIT>func ( t * IntTree ) Min ( ) IntInterface { if t . Root == nil { return nil   }   return t . Root . min ( ) . Elem   }

0<CODESPLIT>https://github.com/RichardKnop/machinery/blob/07418869e268a380aea5b9aefbb0b9f5bb715a12/v1/backends/mongo/mongodb.go#L318-L339<CODESPLIT>dial<CODESPLIT>createMongoIndexes ensures all indexes are in place<CODESPLIT>func ( b * Backend ) dial ( ) ( * mongo . Client , error ) { if b . GetConfig ( ) . MongoDB != nil && b . GetConfig ( ) . MongoDB . Client != nil { return b . GetConfig ( ) . MongoDB . Client , nil   }    uri := b . GetConfig ( ) . ResultBackend   if strings . HasPrefix ( uri , " " ) == false && strings . HasPrefix ( uri , " " ) == false { uri = fmt . Sprintf ( " " , uri )   }    client , err := mongo . NewClient ( options . Client ( ) . ApplyURI ( uri ) )   if err != nil { return nil , err   }    ctx , cancel := context . WithTimeout ( context . Background ( ) , 10 * time . Second )   defer cancel ( )    if err := client . Connect ( ctx ) ; err != nil { return nil , err   }    return client , nil   }

1<CODESPLIT>https://github.com/keybase/client/blob/b352622cd8cc94798cfacbcb56ada203c18e519e/go/client/cmd_list_followers.go#L91-L96<CODESPLIT>GetUsage<CODESPLIT>GetUsage says what this command needs to operate .<CODESPLIT>func ( c * CmdListTrackers ) GetUsage ( ) libkb . Usage { return libkb . Usage { Config : true , API : true , }   }

0<CODESPLIT>https://github.com/lightningnetwork/lnd/blob/1acd38e48c168b86c291524eb56b8fcdf04a910c/ticker/ticker.go#L102-L106<CODESPLIT>Pause<CODESPLIT>Resume starts underlying time . Ticker and causes the ticker to begin delivering scheduled events . NOTE : Part of the Ticker interface .<CODESPLIT>func ( t * T ) Pause ( ) { if t . ticker != nil { t . ticker . Stop ( )   t . ticker = nil   }   }

1<CODESPLIT>https://github.com/luci/luci-go/blob/f6cef429871eee3be7c6903af88d3ee884eaf683/luci_notify/notify/commits.go#L68-L74<CODESPLIT>NewCheckout<CODESPLIT>NewCheckout creates a new Checkout populated with the repositories and revision found in the GitilesCommits object .<CODESPLIT>func NewCheckout ( commits notifypb . GitilesCommits ) Checkout { results := make ( Checkout , len ( commits . GetCommits ( ) ) )   for _ , gitilesCommit := range commits . GetCommits ( ) { results [ protoutil . GitilesRepoURL ( gitilesCommit ) ] = gitilesCommit . Id   }   return results   }

0<CODESPLIT>https://github.com/aporeto-inc/trireme-lib/blob/009258cf9b4f3f70f71994d9fadebe564f7e0437/controller/internal/enforcer/secretsproxy/transformer.go#L31-L65<CODESPLIT>Transform<CODESPLIT>NewGenericSecretsDriver creates a new Kubernetes Secrets Driver . It always uses the incluster config to automatically derive all the necessary values .<CODESPLIT>func ( k * GenericSecretsDriver ) Transform ( r * http . Request ) error { r . Host = k . targetURL . Host   r . URL = k . targetURL   r . Header . Add ( " " , " " + k . token )    return nil   }

0<CODESPLIT>https://github.com/mattbaird/gochimp/blob/a267553896d1cbd0ccfc259ad5442e62bdc3d30d/mandrill_rejects.go#L43-L60<CODESPLIT>WebhooksList<CODESPLIT>can error with one of the following : Invalid_Reject Invalid_Key ValidationError GeneralError<CODESPLIT>func ( a * MandrillAPI ) WebhooksList ( ) ( response [ ] Webhook , err error ) { var params map [ string ] interface { } = make ( map [ string ] interface { } )   err = parseMandrillJson ( a , webhooks_list_endpoint , params , & response )   return   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/devicefarm/api.go#L10502-L10505<CODESPLIT>SetExcludeAppPackagesFromCleanup<CODESPLIT>SetExcludeAppPackagesFromCleanup sets the ExcludeAppPackagesFromCleanup field s value .<CODESPLIT>func ( s * InstanceProfile ) SetExcludeAppPackagesFromCleanup ( v [ ] * string ) * InstanceProfile { s . ExcludeAppPackagesFromCleanup = v   return s   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/mediaconvert/api.go#L9492-L9495<CODESPLIT>SetImageInserter<CODESPLIT>SetInputClippings sets the InputClippings field s value .<CODESPLIT>func ( s * Input ) SetImageInserter ( v * ImageInserter ) * Input { s . ImageInserter = v   return s   }

1<CODESPLIT>https://github.com/voxelbrain/goptions/blob/58cddc247ea2f1b0d682decc39f2aec8c6ff0d00/flagset.go#L114-L169<CODESPLIT>Parse<CODESPLIT>Parse takes the command line arguments and sets the corresponding values in the FlagSet s struct .<CODESPLIT>func ( fs * FlagSet ) Parse ( args [ ] string ) ( err error ) { // Parse global flags for len ( args ) > 0 { if ! ( ( isLong ( args [ 0 ] ) && fs . hasLongFlag ( args [ 0 ] [ 2 : ] ) ) || ( isShort ( args [ 0 ] ) && fs . hasShortFlag ( args [ 0 ] [ 1 : 2 ] ) ) ) { break   }   f := fs . FlagByName ( args [ 0 ] )   args , err = f . Parse ( args )   if err != nil { return   }   if f == fs . helpFlag && f . WasSpecified { return ErrHelpRequest   }   }    // Process verb if len ( args ) > 0 { if verb , ok := fs . Verbs [ args [ 0 ] ] ; ok { fs . verbFlag . value . Set ( reflect . ValueOf ( Verbs ( args [ 0 ] ) ) )   err := verb . Parse ( args [ 1 : ] )   if err != nil { return err   }   args = args [ 0 : 0 ]   }   }    // Process remainder if len ( args ) > 0 { if fs . remainderFlag == nil { return fmt . Errorf ( " " , args )   }   remainder := reflect . MakeSlice ( fs . remainderFlag . value . Type ( ) , len ( args ) , len ( args ) )   reflect . Copy ( remainder , reflect . ValueOf ( args ) )   fs . remainderFlag . value . Set ( remainder )   }    // Check for unset, obligatory, single Flags for _ , f := range fs . Flags { if f . Obligatory && ! f . WasSpecified && len ( f . MutexGroups ) == 0 { return fmt . Errorf ( " " , f . Name ( ) )   }   }    // Check for multiple set Flags in one mutex group // Check also for unset, obligatory mutex groups mgs := fs . MutexGroups ( )   for _ , mg := range mgs { if ! mg . IsValid ( ) { return fmt . Errorf ( " " , strings . Join ( mg . Names ( ) , " " ) )   }   }   return nil   }

0<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/provider/openstack/provider.go#L1948-L1955<CODESPLIT>TagInstance<CODESPLIT>Subnets is specified on environs . Networking .<CODESPLIT>func ( e * Environ ) TagInstance ( ctx context . ProviderCallContext , id instance . Id , tags map [ string ] string ) error { if err := e . nova ( ) . SetServerMetadata ( string ( id ) , tags ) ; err != nil { common . HandleCredentialError ( IsAuthorisationFailure , err , ctx )   return errors . Annotate ( err , " " )   }   return nil   }

1<CODESPLIT>https://github.com/gohugoio/hugo/blob/f94a388ad319eaa6b2d9b32658c1257e9ca8ce4c/commands/hugo.go#L86-L117<CODESPLIT>Execute<CODESPLIT>Execute adds all child commands to the root command HugoCmd and sets flags appropriately . The args are usually filled with os . Args [ 1 : ] .<CODESPLIT>func Execute ( args [ ] string ) Response { hugoCmd := newCommandsBuilder ( ) . addAll ( ) . build ( )   cmd := hugoCmd . getCommand ( )   cmd . SetArgs ( args )    c , err := cmd . ExecuteC ( )    var resp Response    if c == cmd && hugoCmd . c != nil { // Root command executed resp . Result = hugoCmd . c . hugo   }    if err == nil { errCount := int ( loggers . GlobalErrorCounter . Count ( ) )   if errCount > 0 { err = fmt . Errorf ( " " , errCount )   } else if resp . Result != nil { errCount = resp . Result . NumLogErrors ( )   if errCount > 0 { err = fmt . Errorf ( " " , errCount )   }   }    }    resp . Err = err   resp . Cmd = c    return resp   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/apigateway/api.go#L21643-L21646<CODESPLIT>SetResourceMethods<CODESPLIT>SetResourceMethods sets the ResourceMethods field s value .<CODESPLIT>func ( s * Resource ) SetResourceMethods ( v map [ string ] * Method ) * Resource { s . ResourceMethods = v   return s   }

0<CODESPLIT>https://github.com/pilosa/pilosa/blob/67d53f6b48a43f7fe090f48e35518ca8d024747c/http/client.go#L671-L701<CODESPLIT>ImportRoaring<CODESPLIT>ExportCSV bulk exports data for a single shard from a host to CSV format .<CODESPLIT>func ( c * InternalClient ) ImportRoaring ( ctx context . Context , uri * pilosa . URI , index , field string , shard uint64 , remote bool , req * pilosa . ImportRoaringRequest ) error { span , ctx := tracing . StartSpanFromContext ( ctx , " " )   defer span . Finish ( )    if index == " " { return pilosa . ErrIndexRequired   } else if field == " " { return pilosa . ErrFieldRequired   }   if uri == nil { uri = c . defaultURI   }    vals := url . Values { }   vals . Set ( " " , strconv . FormatBool ( remote ) )   url := fmt . Sprintf ( " " , uri , index , field , shard , vals . Encode ( ) )    // Marshal data to protobuf. data , err := c . serializer . Marshal ( req )   if err != nil { return errors . Wrap ( err , " " )   }    // Generate HTTP request. httpReq , err := http . NewRequest ( " " , url , bytes . NewBuffer ( data ) )   if err != nil { return errors . Wrap ( err , " " )   }   httpReq . Header . Set ( " " , " " )   httpReq . Header . Set ( " " , " " )   httpReq . Header . Set ( " " , " " + pilosa . Version )    // Execute request against the host. resp , err := c . executeRequest ( httpReq . WithContext ( ctx ) )   if err != nil { return err   }   defer resp . Body . Close ( )    dec := json . NewDecoder ( resp . Body )   rbody := & pilosa . ImportResponse { }   err = dec . Decode ( rbody )   // Decode can return EOF when no error occurred. helpful! if err != nil && err != io . EOF { return errors . Wrap ( err , " " )   }   if rbody . Err != " " { return errors . Wrap ( errors . New ( rbody . Err ) , " " )   }   return nil   }

1<CODESPLIT>https://github.com/fcavani/rand/blob/0ee465c339f9524d8eee7f5a163a561a37ff2fee/rand.go#L178-L181<CODESPLIT>StringR<CODESPLIT>StringR is like String but uses / dev / random . Where l is the number of characters .<CODESPLIT>func StringR ( l int ) ( string , error ) { s , err := String ( l , " " )   return s , e . Forward ( err )   }

0<CODESPLIT>https://github.com/cuigh/auxo/blob/35f08384a278c4f5c01bf96896e5964611e4a05d/net/web/server.go#L136-L138<CODESPLIT>Any<CODESPLIT>Trace registers a route that matches TRACE method .<CODESPLIT>func ( s * Server ) Any ( path string , handler HandlerFunc , opts ... HandlerOption ) { s . Match ( methods [ : ] , path , handler , opts ... )   }

1<CODESPLIT>https://github.com/google/go-github/blob/1fef44b9b427e6c43f92b2f20918e496c275393f/github/github-accessors.go#L5272-L5277<CODESPLIT>GetAction<CODESPLIT>GetAction returns the Action field if it s non - nil zero value otherwise .<CODESPLIT>func ( m * MetaEvent ) GetAction ( ) string { if m == nil || m . Action == nil { return " "   }   return * m . Action   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/cognitosync/api.go#L1060-L1065<CODESPLIT>ListRecords<CODESPLIT>ListRecordsWithContext is the same as ListRecords with the addition of the ability to pass a context and additional request options . See ListRecords for details on how to use this API operation . The context must be non - nil and will be used for request cancellation . If the context is nil a panic will occur . In the future the SDK may create sub - contexts for http . Requests . See https : // golang . org / pkg / context / for more information on using Contexts .<CODESPLIT>func ( c * CognitoSync ) ListRecords ( input * ListRecordsInput ) ( * ListRecordsOutput , error ) { req , out := c . ListRecordsRequest ( input )   return out , req . Send ( )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/iot/api.go#L35414-L35417<CODESPLIT>SetRoleArn<CODESPLIT>SetAuditNotificationTargetConfigurations sets the AuditNotificationTargetConfigurations field s value .<CODESPLIT>func ( s * UpdateAccountAuditConfigurationInput ) SetRoleArn ( v string ) * UpdateAccountAuditConfigurationInput { s . RoleArn = & v   return s   }

1<CODESPLIT>https://github.com/luci/luci-go/blob/f6cef429871eee3be7c6903af88d3ee884eaf683/buildbucket/deprecated/v1.go#L255-L261<CODESPLIT>BucketNameToV2<CODESPLIT>BucketNameToV2 converts a v1 Bucket name to the v2 constituent parts . An error is returned if the bucketname does not match the expected format . The difference between the bucket name is that v2 uses short names for example : v1 : luci . chromium . try v2 : try luci is dropped chromium is recorded as the project try is the name . If the bucket does not conform to this convention or if it is not a luci bucket then this return and empty string for both project and bucket .<CODESPLIT>func BucketNameToV2 ( v1Bucket string ) ( project string , bucket string ) { p := strings . SplitN ( v1Bucket , " " , 3 )   if len ( p ) != 3 || p [ 0 ] != " " { return " " , " "   }   return p [ 1 ] , p [ 2 ]   }

0<CODESPLIT>https://github.com/kubernetes-retired/heapster/blob/e1e83412787b60d8a70088f09a2cb12339b305c3/metrics/sinks/hawkular/client.go#L50-L52<CODESPLIT>pushToCache<CODESPLIT>cache inserts the item to the cache<CODESPLIT>func ( h * hawkularSink ) pushToCache ( key string , hash uint64 ) { h . regLock . Lock ( )   h . expReg [ key ] = & expiringItem { hash : hash , ttl : h . runId , }   h . regLock . Unlock ( )   }

0<CODESPLIT>https://github.com/google/netstack/blob/70ebca9c30730cf3887cdef3b85bb96ed7a97593/tcpip/transport/udp/udp_packet_list.go#L100-L111<CODESPLIT>InsertBefore<CODESPLIT>InsertAfter inserts e after b .<CODESPLIT>func ( l * udpPacketList ) InsertBefore ( a , e * udpPacket ) { b := udpPacketElementMapper { } . linkerFor ( a ) . Prev ( )   udpPacketElementMapper { } . linkerFor ( e ) . SetNext ( a )   udpPacketElementMapper { } . linkerFor ( e ) . SetPrev ( b )   udpPacketElementMapper { } . linkerFor ( a ) . SetPrev ( e )    if b != nil { udpPacketElementMapper { } . linkerFor ( b ) . SetNext ( e )   } else { l . head = e   }   }

1<CODESPLIT>https://github.com/Jumpscale/go-raml/blob/f151e1e143c47282b294fe70c5e56f113988ed10/raml/method.go#L363-L404<CODESPLIT>inherit<CODESPLIT>inherit inherits bodies properties from a parent bodies parent object could be from trait or response type<CODESPLIT>func ( b * Bodies ) inherit ( parent Bodies , dicts map [ string ] interface { } , rtName string , apiDef * APIDefinition ) { b . Schema = substituteParams ( b . Schema , parent . Schema , dicts )   b . Description = substituteParams ( b . Description , parent . Description , dicts )   b . Example = substituteParams ( b . Example , parent . Example , dicts )    b . Type = mergeTypeName ( substituteParams ( b . Type , parent . Type , dicts ) , rtName , apiDef )    // request body if parent . ApplicationJSON != nil { if b . ApplicationJSON == nil { // allocate if needed b . ApplicationJSON = & BodiesProperty { Properties : map [ string ] interface { } { } }   } else if b . ApplicationJSON . Properties == nil { b . ApplicationJSON . Properties = map [ string ] interface { } { }   }    b . ApplicationJSON . Type = substituteParams ( b . ApplicationJSON . TypeString ( ) , parent . ApplicationJSON . TypeString ( ) , dicts )   // check if type name is in library if typeStr , ok := b . ApplicationJSON . Type . ( string ) ; ok { b . ApplicationJSON . Type = mergeTypeName ( typeStr , rtName , apiDef )   }    for k , p := range parent . ApplicationJSON . Properties { if _ , ok := b . ApplicationJSON . Properties [ k ] ; ! ok { // handle optional properties as described in // https://github.com/raml-org/raml-spec/blob/raml-10/versions/raml-10/raml-10.md#optional-properties switch { case strings . HasSuffix ( k , `\?` ) : // if ended with `\?` we make it optional property k = k [ : len ( k ) - 2 ] + " "   case strings . HasSuffix ( k , " " ) : // if only ended with `?`, we can ignore it continue   }   k = substituteParams ( k , k , dicts )   prop := toProperty ( k , p )   inheritedType := substituteParams ( prop . TypeString ( ) , prop . TypeString ( ) , dicts )   b . ApplicationJSON . Properties [ k ] = mergeTypeName ( inheritedType , rtName , apiDef )   }   }   }    // TODO : formimeytype }

0<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/staging/src/k8s.io/client-go/kubernetes/typed/admissionregistration/v1beta1/fake/fake_mutatingwebhookconfiguration.go#L113-L120<CODESPLIT>generateEnvList<CODESPLIT>Patch applies the patch and returns the patched mutatingWebhookConfiguration .<CODESPLIT>func generateEnvList ( envs [ ] * runtimeapi . KeyValue ) ( result [ ] string ) { for _ , env := range envs { result = append ( result , fmt . Sprintf ( " " , env . Key , env . Value ) )   }   return   }

1<CODESPLIT>https://github.com/FDio/govpp/blob/f614a0af720702c8db959b6641b4faea5f98c339/extras/libmemif/adapter.go#L544-L646<CODESPLIT>CreateInterface<CODESPLIT>CreateInterface creates a new memif interface with the given configuration . The same callbacks can be used with multiple memifs . The first callback input argument ( * Memif ) can be used to tell which memif the callback was triggered for . The method is thread - safe .<CODESPLIT>func CreateInterface ( config * MemifConfig , callbacks * MemifCallbacks ) ( memif * Memif , err error ) { context . lock . Lock ( )   defer context . lock . Unlock ( )    if ! context . initialized { return nil , ErrNotInit   }    log . WithField ( " " , config . IfName ) . Debug ( " " )    log2RingSize := config . Log2RingSize   if log2RingSize == 0 { log2RingSize = 10   }    bufferSize := config . BufferSize   if bufferSize <= 0 { bufferSize = 2048   }    // Create memif-wrapper for Go-libmemif. memif = & Memif { MemifMeta : config . MemifMeta , callbacks : & MemifCallbacks { } , ifIndex : context . nextMemifIndex , ringSize : 1 << log2RingSize , bufferSize : int ( bufferSize ) , }    // Initialize memif callbacks. if callbacks != nil { memif . callbacks . OnConnect = callbacks . OnConnect   memif . callbacks . OnDisconnect = callbacks . OnDisconnect   }    // Initialize memif-global interrupt channel. memif . intCh = make ( chan uint8 , 1 << 6 )    // Initialize event file descriptor for stopping Rx/Tx queue polling. memif . stopQPollFd = int ( C . eventfd ( 0 , C . EFD_NONBLOCK ) )   if memif . stopQPollFd < 0 { return nil , ErrSyscall   }    // Initialize memif input arguments. args := & C . govpp_memif_conn_args_t { }   // - socket file name if config . SocketFilename != " " { args . socket_filename = C . CString ( config . SocketFilename )   defer C . free ( unsafe . Pointer ( args . socket_filename ) )   }   // - interface ID args . interface_id = C . uint32_t ( config . ConnID )   // - interface name if config . IfName != " " { args . interface_name = C . CString ( config . IfName )   defer C . free ( unsafe . Pointer ( args . interface_name ) )   }   // - mode switch config . Mode { case IfModeEthernet : args . mode = C . MEMIF_INTERFACE_MODE_ETHERNET   case IfModeIP : args . mode = C . MEMIF_INTERFACE_MODE_IP   case IfModePuntInject : args . mode = C . MEMIF_INTERFACE_MODE_PUNT_INJECT   default : args . mode = C . MEMIF_INTERFACE_MODE_ETHERNET   }   // - secret if config . Secret != " " { args . secret = C . CString ( config . Secret )   defer C . free ( unsafe . Pointer ( args . secret ) )   }   // - master/slave flag + number of Rx/Tx queues if config . IsMaster { args . num_s2m_rings = C . uint8_t ( config . NumRxQueues )   args . num_m2s_rings = C . uint8_t ( config . NumTxQueues )   args . is_master = C . uint8_t ( 1 )   } else { args . num_s2m_rings = C . uint8_t ( config . NumTxQueues )   args . num_m2s_rings = C . uint8_t ( config . NumRxQueues )   args . is_master = C . uint8_t ( 0 )   }   // - buffer size args . buffer_size = C . uint16_t ( config . BufferSize )   // - log_2(ring size) args . log2_ring_size = C . uint8_t ( config . Log2RingSize )    // Create memif in C-libmemif. errCode := C . govpp_memif_create ( & memif . cHandle , args , unsafe . Pointer ( uintptr ( memif . ifIndex ) ) )   err = getMemifError ( int ( errCode ) )   if err != nil { return nil , err   }    // Register the new memif. context . memifs [ memif . ifIndex ] = memif   context . nextMemifIndex ++   log . WithField ( " " , config . IfName ) . Debug ( " " )    return memif , nil   }

1<CODESPLIT>https://github.com/pingcap/tidb/blob/b6218d415cf77bca6910057a7b391a379c287e59/expression/builtin_info.go#L230-L237<CODESPLIT>evalString<CODESPLIT>evalString evals a builtinUserSig . See https : // dev . mysql . com / doc / refman / 5 . 7 / en / information - functions . html#function_user<CODESPLIT>func ( b * builtinUserSig ) evalString ( row chunk . Row ) ( string , bool , error ) { data := b . ctx . GetSessionVars ( )   if data == nil || data . User == nil { return " " , true , errors . Errorf ( " " )   }    return data . User . String ( ) , false , nil   }

1<CODESPLIT>https://github.com/google/netstack/blob/70ebca9c30730cf3887cdef3b85bb96ed7a97593/tcpip/transport/tcp/accept.go#L177-L182<CODESPLIT>createCookie<CODESPLIT>createCookie creates a SYN cookie for the given id and incoming sequence number .<CODESPLIT>func ( l * listenContext ) createCookie ( id stack . TransportEndpointID , seq seqnum . Value , data uint32 ) seqnum . Value { ts := timeStamp ( )   v := l . cookieHash ( id , 0 , 0 ) + uint32 ( seq ) + ( ts << tsOffset )   v += ( l . cookieHash ( id , ts , 1 ) + data ) & hashMask   return seqnum . Value ( v )   }

0<CODESPLIT>https://github.com/google/netstack/blob/70ebca9c30730cf3887cdef3b85bb96ed7a97593/tcpip/header/udp.go#L88-L90<CODESPLIT>SetChecksum<CODESPLIT>SetDestinationPort sets the destination port field of the udp header .<CODESPLIT>func ( b UDP ) SetChecksum ( checksum uint16 ) { binary . BigEndian . PutUint16 ( b [ udpChecksum : ] , checksum )   }

1<CODESPLIT>https://github.com/cri-o/cri-o/blob/0eac7be02d0a9d12b8b4bd1f2f0919c386ed61f5/oci/container.go#L79-L106<CODESPLIT>NewContainer<CODESPLIT>NewContainer creates a container object .<CODESPLIT>func NewContainer ( id string , name string , bundlePath string , logPath string , netns string , labels map [ string ] string , crioAnnotations map [ string ] string , annotations map [ string ] string , image string , imageName string , imageRef string , metadata * pb . ContainerMetadata , sandbox string , terminal bool , stdin bool , stdinOnce bool , privileged bool , runtimeHandler string , dir string , created time . Time , stopSignal string ) ( * Container , error ) { state := & ContainerState { }   state . Created = created   c := & Container { id : id , name : name , bundlePath : bundlePath , logPath : logPath , labels : labels , sandbox : sandbox , netns : netns , terminal : terminal , stdin : stdin , stdinOnce : stdinOnce , privileged : privileged , runtimeHandler : runtimeHandler , metadata : metadata , annotations : annotations , crioAnnotations : crioAnnotations , image : image , imageName : imageName , imageRef : imageRef , dir : dir , state : state , stopSignal : stopSignal , }   return c , nil   }

0<CODESPLIT>https://github.com/name5566/leaf/blob/1364c176dfbdff8df210496098265c2962fe922d/network/protobuf/protobuf.go#L93-L99<CODESPLIT>SetHandler<CODESPLIT>It s dangerous to call the method on routing or marshaling ( unmarshaling )<CODESPLIT>func ( p * Processor ) SetHandler ( msg proto . Message , msgHandler MsgHandler ) { msgType := reflect . TypeOf ( msg )   id , ok := p . msgID [ msgType ]   if ! ok { log . Fatal ( " " , msgType )   }    p . msgInfo [ id ] . msgHandler = msgHandler   }

0<CODESPLIT>https://github.com/swaggo/swag/blob/2a7b9f41f0361c4bf8145a5369b01b189aaa7245/operation.go#L658-L684<CODESPLIT>ParseEmptyResponseOnly<CODESPLIT>createParameter returns swagger spec . Parameter for gived paramType description paramName schemaType required<CODESPLIT>func ( operation * Operation ) ParseEmptyResponseOnly ( commentLine string ) error { response := spec . Response { }    code , err := strconv . Atoi ( commentLine )   if err != nil { return fmt . Errorf ( " \" \" " , commentLine )   }   if operation . Responses == nil { operation . Responses = & spec . Responses { ResponsesProps : spec . ResponsesProps { StatusCodeResponses : make ( map [ int ] spec . Response ) , } , }   }    operation . Responses . StatusCodeResponses [ code ] = response    return nil   }

1<CODESPLIT>https://github.com/thecodeteam/libstorage/blob/b4ebd75f857ac3077ee779bd240e92cd93de04cd/api/server/server.go#L345-L357<CODESPLIT>Close<CODESPLIT>Close closes all servers . This function can be used when a calling program traps UNIX signals or when it exits gracefully .<CODESPLIT>func Close ( ) <- chan error { errs := make ( chan error )   go func ( ) { for _ , server := range servers { if err := server . Close ( ) ; err != nil { errs <- err   }   }   close ( errs )   log . Info ( " " )   } ( )   return errs   }

1<CODESPLIT>https://github.com/creack/goselect/blob/c98c4e62c41618cf78d3ff759af0d4dbaa677748/fdset.go#L13-L15<CODESPLIT>Set<CODESPLIT>Set adds the fd to the set<CODESPLIT>func ( fds * FDSet ) Set ( fd uintptr ) { fds . Bits [ fd / NFDBITS ] |= ( 1 << ( fd % NFDBITS ) )   }

1<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/cmd/juju/subnet/create.go#L144-L184<CODESPLIT>Run<CODESPLIT>Run implements Command . Run .<CODESPLIT>func ( c * CreateCommand ) Run ( ctx * cmd . Context ) error { return c . RunWithAPI ( ctx , func ( api SubnetAPI , ctx * cmd . Context ) error { if ! c . Zones . IsEmpty ( ) { // Fetch all zones to validate the given zones. zones , err := api . AllZones ( )   if err != nil { return errors . Annotate ( err , " " )   }    // Find which of the given CIDRs match existing ones. validZones := set . NewStrings ( )   for _ , zone := range zones { validZones . Add ( zone )   }   diff := c . Zones . Difference ( validZones )    if ! diff . IsEmpty ( ) { // Some given zones are missing. zones := strings . Join ( diff . SortedValues ( ) , " " )   return errors . Errorf ( " " , zones )   }   }    // Create the new subnet. err := api . CreateSubnet ( c . CIDR , c . Space , c . Zones . SortedValues ( ) , c . IsPublic )   if err != nil { return errors . Annotatef ( err , " " , c . CIDR . Id ( ) )   }    zones := strings . Join ( c . Zones . SortedValues ( ) , " " )   accessType := " "   if c . IsPublic { accessType = " "   }   ctx . Infof ( " " , accessType , c . CIDR . Id ( ) , c . Space . Id ( ) , zones , )   return nil   } )   }

0<CODESPLIT>https://github.com/kubernetes-incubator/external-storage/blob/fbfedbf60da4e5ee25a3151bfe8504f3e3281319/snapshot/pkg/apis/crd/v1/zz_generated.deepcopy.go#L137-L144<CODESPLIT>DeepCopyObject<CODESPLIT>DeepCopy is an autogenerated deepcopy function copying the receiver creating a new VolumeSnapshotCondition .<CODESPLIT>func ( in * VolumeSnapshot ) DeepCopyObject ( ) runtime . Object { if c := in . DeepCopy ( ) ; c != nil { return c   } else { return nil   }   }

0<CODESPLIT>https://github.com/cloudfoundry/bosh-init/blob/25ef2dbc1de0e6bb7c49f3075eaa8d1999764de6/release/pkg/sort.go#L9-L39<CODESPLIT>Create<CODESPLIT>Topologically sorts an array of packages<CODESPLIT>func ( f blobstoreFactory ) Create ( blobstoreURL string , httpClient * http . Client ) ( Blobstore , error ) { logger := boshlog . NewLogger ( boshlog . LevelNone )    blobstoreConfig , err := f . parseBlobstoreURL ( blobstoreURL )   if err != nil { return nil , bosherr . WrapError ( err , " " )   }    davClient := boshdavcli . NewClient ( boshdavcliconf . Config { Endpoint : fmt . Sprintf ( " " , blobstoreConfig . Endpoint ) , User : blobstoreConfig . Username , Password : blobstoreConfig . Password , } , httpClient , logger )    return NewBlobstore ( davClient , f . uuidGenerator , f . fs , f . logger ) , nil   }

0<CODESPLIT>https://github.com/peter-edge/openflights-go/blob/57f47382fa8160af6c37944830d46fcaaa6bdf00/code_store.go#L37-L39<CODESPLIT>GetAirportByCode<CODESPLIT>GetAirlineByCode returns the Airline for the given ICAO / IATA / FAA code or error if it does not exist .<CODESPLIT>func ( c * CodeStore ) GetAirportByCode ( code string ) ( * Airport , error ) { return getAirportByKey ( c . CodeToAirport , code )   }

0<CODESPLIT>https://github.com/hashicorp/terraform/blob/133d3d79714077d8009e35759ac7dad18522e6b6/communicator/shared/shared.go#L9-L17<CODESPLIT>metaEncode<CODESPLIT>IpFormat formats the IP correctly so we don t provide IPv6 address in an IPv4 format during node communication . We return the ip parameter as is if it s an IPv4 address or a hostname .<CODESPLIT>func ( t * ResourceTimeout ) metaEncode ( ids interface { } ) error { m := make ( map [ string ] interface { } )    if t . Create != nil { m [ TimeoutCreate ] = t . Create . Nanoseconds ( )   }   if t . Read != nil { m [ TimeoutRead ] = t . Read . Nanoseconds ( )   }   if t . Update != nil { m [ TimeoutUpdate ] = t . Update . Nanoseconds ( )   }   if t . Delete != nil { m [ TimeoutDelete ] = t . Delete . Nanoseconds ( )   }   if t . Default != nil { m [ TimeoutDefault ] = t . Default . Nanoseconds ( )   // for any key above that is nil, if default is specified, we need to // populate it with the default for _ , k := range timeoutKeys ( ) { if _ , ok := m [ k ] ; ! ok { m [ k ] = t . Default . Nanoseconds ( )   }   }   }    // only add the Timeout to the Meta if we have values if len ( m ) > 0 { switch instance := ids . ( type ) { case * terraform . InstanceDiff : if instance . Meta == nil { instance . Meta = make ( map [ string ] interface { } )   }   instance . Meta [ TimeoutKey ] = m   case * terraform . InstanceState : if instance . Meta == nil { instance . Meta = make ( map [ string ] interface { } )   }   instance . Meta [ TimeoutKey ] = m   default : return fmt . Errorf ( " " )   }   }    return nil   }

0<CODESPLIT>https://github.com/lightninglabs/neutrino/blob/a655679fe131a5d1b4417872cc834fc3862ac70e/headerfs/store.go#L356-L361<CODESPLIT>WriteHeaders<CODESPLIT>toIndexEntry converts the BlockHeader into a matching headerEntry . This method is used when a header is to be written to disk .<CODESPLIT>func ( h * blockHeaderStore ) WriteHeaders ( hdrs ... BlockHeader ) error { // Lock store for write. h . mtx . Lock ( )   defer h . mtx . Unlock ( )    // First, we'll grab a buffer from the write buffer pool so we an // reduce our total number of allocations, and also write the headers // in a single swoop. headerBuf := headerBufPool . Get ( ) . ( * bytes . Buffer )   headerBuf . Reset ( )   defer headerBufPool . Put ( headerBuf )    // Next, we'll write out all the passed headers in series into the // buffer we just extracted from the pool. for _ , header := range hdrs { if err := header . Serialize ( headerBuf ) ; err != nil { return err   }   }    // With all the headers written to the buffer, we'll now write out the // entire batch in a single write call. if err := h . appendRaw ( headerBuf . Bytes ( ) ) ; err != nil { return err   }    // Once those are written, we'll then collate all the headers into // headerEntry instances so we can write them all into the index in a // single atomic batch. headerLocs := make ( [ ] headerEntry , len ( hdrs ) )   for i , header := range hdrs { headerLocs [ i ] = header . toIndexEntry ( )   }    return h . addHeaders ( headerLocs )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/ecs/api.go#L14246-L14249<CODESPLIT>SetStatus<CODESPLIT>SetTaskDefinitionArn sets the TaskDefinitionArn field s value .<CODESPLIT>func ( s * TaskDefinition ) SetStatus ( v string ) * TaskDefinition { s . Status = & v   return s   }

0<CODESPLIT>https://github.com/graph-gophers/dataloader/blob/1232fe340ae7c1ca82f7b43eb35dd7ced94aa085/trace.go#L51-L60<CODESPLIT>TraceLoadMany<CODESPLIT>TraceBatch will trace a call to dataloader . LoadMany with Open Tracing<CODESPLIT>func ( OpenTracingTracer ) TraceLoadMany ( ctx context . Context , keys Keys ) ( context . Context , TraceLoadManyFinishFunc ) { span , spanCtx := opentracing . StartSpanFromContext ( ctx , " " )    span . SetTag ( " " , keys . Keys ( ) )    return spanCtx , func ( thunk ThunkMany ) { // TODO: is there anything we should do with the results? span . Finish ( )   }   }

0<CODESPLIT>https://github.com/hybridgroup/gobot/blob/58db149a40a113aec7d6068fb9418b7e05de1802/platforms/mavlink/common/mavlink.go#L131-L141<CODESPLIT>crcAccumulate<CODESPLIT>Decode accepts a packed byte array and populates the fields of the MAVLinkPacket<CODESPLIT>func crcAccumulate ( data uint8 , crcAccum uint16 ) uint16 { /*Accumulate one byte of data into the CRC*/ var tmp uint8    tmp = data ^ ( uint8 ) ( crcAccum & 0xff )   tmp ^= ( tmp << 4 )   crcAccum = ( uint16 ( crcAccum ) >> 8 ) ^ ( uint16 ( tmp ) << 8 ) ^ ( uint16 ( tmp ) << 3 ) ^ ( uint16 ( tmp ) >> 4 )   return crcAccum   }

0<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/provider/oci/environ.go#L738-L753<CODESPLIT>MaintainInstance<CODESPLIT>AllInstances implements environs . InstanceBroker .<CODESPLIT>func ( e * Environ ) MaintainInstance ( ctx envcontext . ProviderCallContext , args environs . StartInstanceParams ) error { return nil   }

0<CODESPLIT>https://github.com/rs/zerolog/blob/acf3980132bfcdc48638724e6e3d9e5749b85999/internal/cbor/time.go#L67-L72<CODESPLIT>AppendDurations<CODESPLIT>AppendDuration encodes and adds a duration to the dst byte array . useInt field indicates whether to store the duration as seconds ( integer ) or as seconds + nanoseconds ( float ) .<CODESPLIT>func ( e Encoder ) AppendDurations ( dst [ ] byte , vals [ ] time . Duration , unit time . Duration , useInt bool ) [ ] byte { major := majorTypeArray   l := len ( vals )   if l == 0 { return e . AppendArrayEnd ( e . AppendArrayStart ( dst ) )   }   if l <= additionalMax { lb := byte ( l )   dst = append ( dst , byte ( major | lb ) )   } else { dst = appendCborTypePrefix ( dst , major , uint64 ( l ) )   }   for _ , d := range vals { dst = e . AppendDuration ( dst , d , unit , useInt )   }   return dst   }

1<CODESPLIT>https://github.com/lightningnetwork/lnd/blob/1acd38e48c168b86c291524eb56b8fcdf04a910c/htlcswitch/circuit_map.go#L431-L480<CODESPLIT>TrimOpenCircuits<CODESPLIT>TrimOpenCircuits removes a channel s keystones above the short chan id s highest committed htlc index . This has the effect of returning those circuits to a half - open state . Since opening of circuits is done in advance of actually committing the Add htlcs into a commitment txn this allows circuits to be opened preemptively since we can roll them back after any failures .<CODESPLIT>func ( cm * circuitMap ) TrimOpenCircuits ( chanID lnwire . ShortChannelID , start uint64 ) error { log . Infof ( " " , chanID , start )    var trimmedOutKeys [ ] CircuitKey    // Scan forward from the last unacked htlc id, stopping as soon as we // don't find any more. Outgoing htlc id's must be assigned in order, // so there should never be disjoint segments of keystones to trim. cm . mtx . Lock ( )   for i := start ; ; i ++ { outKey := CircuitKey { ChanID : chanID , HtlcID : i , }    circuit , ok := cm . opened [ outKey ]   if ! ok { break   }    circuit . Outgoing = nil   delete ( cm . opened , outKey )   trimmedOutKeys = append ( trimmedOutKeys , outKey )   cm . removeCircuitFromHashIndex ( circuit )   }   cm . mtx . Unlock ( )    if len ( trimmedOutKeys ) == 0 { return nil   }    return cm . cfg . DB . Update ( func ( tx * bbolt . Tx ) error { keystoneBkt := tx . Bucket ( circuitKeystoneKey )   if keystoneBkt == nil { return ErrCorruptedCircuitMap   }    for _ , outKey := range trimmedOutKeys { err := keystoneBkt . Delete ( outKey . Bytes ( ) )   if err != nil { return err   }   }    return nil   } )   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/cloudsearch/api.go#L4933-L4936<CODESPLIT>SetLatLonOptions<CODESPLIT>SetLatLonOptions sets the LatLonOptions field s value .<CODESPLIT>func ( s * IndexField ) SetLatLonOptions ( v * LatLonOptions ) * IndexField { s . LatLonOptions = v   return s   }

1<CODESPLIT>https://github.com/BitBalloon/bitballoon-go/blob/abebaaa9b9d4868df3611810cac78a13c1aa096c/deploys.go#L101-L106<CODESPLIT>Get<CODESPLIT>Get a specific deploy .<CODESPLIT>func ( d * DeploysService ) Get ( id string ) ( * Deploy , * Response , error ) { deploy := & Deploy { Id : id , client : d . client }   resp , err := deploy . Reload ( )    return deploy , resp , err   }

0<CODESPLIT>https://github.com/morikuni/aec/blob/39771216ff4c63d11f5e604076f9c45e8be1067b/ansi.go#L46-L51<CODESPLIT>With<CODESPLIT>Apply wraps given string in ANSIs .<CODESPLIT>func ( builder * Builder ) With ( a ... ANSI ) * Builder { return NewBuilder ( builder . ANSI . With ( a ... ) )   }

1<CODESPLIT>https://github.com/scgolang/sc/blob/2b87756659e2b72d97cec43b6896ed01c0365097/rotate2.go#L31-L38<CODESPLIT>Rate<CODESPLIT>Rate creates a new ugen at a specific rate . If rate is an unsupported value this method will cause a runtime panic . If X or Y is nil this method will panic . TODO : we have to be able to access individual outputs of a ugen to be able to implement the Rotate2 example from the SuperCollider help files .<CODESPLIT>func ( r Rotate2 ) Rate ( rate int8 ) Input { CheckRate ( rate )   if r . X == nil || r . Y == nil { panic ( " " )   }   ( & r ) . defaults ( )   return NewInput ( " " , rate , 0 , 1 )   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/neptune/api.go#L11564-L11567<CODESPLIT>SetMarker<CODESPLIT>SetMarker sets the Marker field s value .<CODESPLIT>func ( s * DescribeDBParametersInput ) SetMarker ( v string ) * DescribeDBParametersInput { s . Marker = & v   return s   }

1<CODESPLIT>https://github.com/lucas-clemente/quic-go/blob/c135b4f1e34c621c24563def836af2c04af90ae6/server.go#L135-L137<CODESPLIT>Listen<CODESPLIT>Listen listens for QUIC connections on a given net . PacketConn . A single PacketConn only be used for a single call to Listen . The PacketConn can be used for simultaneous calls to Dial . QUIC connection IDs are used for demultiplexing the different connections . The tls . Config must not be nil and must contain a certificate configuration . The quic . Config may be nil in that case the default values will be used .<CODESPLIT>func Listen ( conn net . PacketConn , tlsConf * tls . Config , config * Config ) ( Listener , error ) { return listen ( conn , tlsConf , config )   }

0<CODESPLIT>https://github.com/openshift/origin/blob/00a7323a2f454c2ca26ab58e1f487dc81e30e19c/pkg/oc/cli/kubectlwrappers/wrappers.go#L514-L523<CODESPLIT>NewCmdAutoscale<CODESPLIT>NewCmdRun is a wrapper for the Kubernetes cli run command<CODESPLIT>func NewCmdAutoscale ( fullName string , f kcmdutil . Factory , streams genericclioptions . IOStreams ) * cobra . Command { cmd := autoscale . NewCmdAutoscale ( f , streams )   cmd . Short = " "   cmd . Long = autoScaleLong   cmd . Example = fmt . Sprintf ( autoScaleExample , fullName )   cmd . ValidArgs = append ( cmd . ValidArgs , " " )   return cmd   }

0<CODESPLIT>https://github.com/ory/hydra/blob/67c246c177446daab64be00ba82b3aea1a546570/client/handler.go#L186-L212<CODESPLIT>Update<CODESPLIT>swagger : route GET / clients admin listOAuth2Clients List OAuth 2 . 0 Clients This endpoint lists all clients in the database and never returns client secrets . OAuth 2 . 0 clients are used to perform OAuth 2 . 0 and OpenID Connect flows . Usually OAuth 2 . 0 clients are generated for applications which want to consume your OAuth 2 . 0 or OpenID Connect capabilities . To manage ORY Hydra you will need an OAuth 2 . 0 Client as well . Make sure that this endpoint is well protected and only callable by first - party components . The Link header is also included in successful responses which contains one or more links for pagination formatted like so : <https : // hydra - url / admin / clients?limit = { limit } &offset = { offset } > ; rel = { page } where page is one of the following applicable pages : first next last and previous . Multiple links can be included in this header and will be separated by a comma . Consumes : - application / json Produces : - application / json Schemes : http https Responses : 200 : oAuth2ClientList 500 : genericError<CODESPLIT>func ( h * Handler ) Update ( w http . ResponseWriter , r * http . Request , ps httprouter . Params ) { var c Client    if err := json . NewDecoder ( r . Body ) . Decode ( & c ) ; err != nil { h . r . Writer ( ) . WriteError ( w , r , errors . WithStack ( err ) )   return   }    var secret string   if len ( c . Secret ) > 0 { secret = c . Secret   }    c . ClientID = ps . ByName ( " " )   if err := h . r . ClientValidator ( ) . Validate ( & c ) ; err != nil { h . r . Writer ( ) . WriteError ( w , r , err )   return   }    c . UpdatedAt = time . Now ( ) . UTC ( ) . Round ( time . Second )   if err := h . r . ClientManager ( ) . UpdateClient ( r . Context ( ) , & c ) ; err != nil { h . r . Writer ( ) . WriteError ( w , r , err )   return   }    c . Secret = secret   h . r . Writer ( ) . Write ( w , r , & c )   }

0<CODESPLIT>https://github.com/moby/moby/blob/e516af6e5636023e85335ed8d9d0d824349dd6ff/pkg/plugins/plugins.go#L256-L266<CODESPLIT>runHandlers<CODESPLIT>Get returns the plugin given the specified name and requested implementation .<CODESPLIT>func ( p * Plugin ) runHandlers ( ) { if ! p . activated ( ) { return   }    handlers . RLock ( )   if ! p . handlersRun { for _ , iface := range p . Manifest . Implements { hdlrs , handled := handlers . extpointHandlers [ iface ]   if ! handled { continue   }   for _ , handler := range hdlrs { handler ( p . name , p . client )   }   }   p . handlersRun = true   }   handlers . RUnlock ( )    }

1<CODESPLIT>https://github.com/go4org/go4/blob/94abd6928b1da39b1d757b60c93fb2419c409fa1/sort/zfuncversion.go#L65-L69<CODESPLIT>swapRange_func<CODESPLIT>Auto - generated variant of sort . go : swapRange<CODESPLIT>func swapRange_func ( data lessSwap , a , b , n int ) { for i := 0 ; i < n ; i ++ { data . Swap ( a + i , b + i )   }   }

0<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/staging/src/k8s.io/apiserver/pkg/endpoints/filters/authentication.go#L53-L83<CODESPLIT>RESTClient<CODESPLIT>WithAuthentication creates an http handler that tries to authenticate the given request as a user and then stores any such user found onto the provided context for the request . If authentication fails or returns an error the failed handler is used . On success Authorization header is removed from the request and handler is invoked to serve the request .<CODESPLIT>func ( c * AuthorizationV1Client ) RESTClient ( ) rest . Interface { if c == nil { return nil   }   return c . restClient   }

0<CODESPLIT>https://github.com/ory/hydra/blob/67c246c177446daab64be00ba82b3aea1a546570/metrics/prometheus/middleware.go#L25-L27<CODESPLIT>Validate<CODESPLIT>Main middleware method to collect metrics for Prometheus . Example : start : = time . Now () next ( rw r ) Request counter metric pmm . prometheusMetrics . Counter . WithLabelValues ( r . URL . Path ) . Inc () Response time metric pmm . prometheusMetrics . ResponseTime . WithLabelValues ( r . URL . Path ) . Observe ( time . Since ( start ) . Seconds () )<CODESPLIT>func ( m * Client ) Validate ( formats strfmt . Registry ) error { var res [ ] error    if err := m . validateCreatedAt ( formats ) ; err != nil { res = append ( res , err )   }    if err := m . validateGrantTypes ( formats ) ; err != nil { res = append ( res , err )   }    if err := m . validateResponseTypes ( formats ) ; err != nil { res = append ( res , err )   }    if err := m . validateScope ( formats ) ; err != nil { res = append ( res , err )   }    if err := m . validateUpdatedAt ( formats ) ; err != nil { res = append ( res , err )   }    if err := m . validateJwks ( formats ) ; err != nil { res = append ( res , err )   }    if len ( res ) > 0 { return errors . CompositeValidationError ( res ... )   }   return nil   }

1<CODESPLIT>https://github.com/luci/luci-go/blob/f6cef429871eee3be7c6903af88d3ee884eaf683/server/auth/client.go#L647-L680<CODESPLIT>asProjectHeaders<CODESPLIT>asProjectHeaders returns a map of authentication headers to add to outbound RPC requests done in AsProject mode . This will be called by the transport layer on each request .<CODESPLIT>func asProjectHeaders ( c context . Context , uri string , opts * rpcOptions ) ( * oauth2 . Token , map [ string ] string , error ) { internal , err := isInternalURI ( c , uri )   if err != nil { return nil , nil , err   }    // For calls within a single LUCI deployment use the service's own OAuth2 // token and 'X-Luci-Project' header to convey the project identity to the // peer. if internal { tok , _ , err := asSelfHeaders ( c , uri , opts )   return tok , map [ string ] string { XLUCIProjectHeader : opts . project } , err   }    // For calls to external (non-LUCI) services get an OAuth2 token of a project // scoped service account. mintTokenCall := MintProjectToken   if opts . rpcMocks != nil && opts . rpcMocks . MintProjectToken != nil { mintTokenCall = opts . rpcMocks . MintProjectToken   }   mintParams := ProjectTokenParams { MinTTL : 2 * time . Minute , LuciProject : opts . project , OAuthScopes : opts . scopes , }    tok , err := mintTokenCall ( c , mintParams )   // TODO(fmatenaar): This is only during migration and needs to be removed eventually. if tok == nil && err == nil { logging . Infof ( c , " " , opts . project )   return asSelfHeaders ( c , uri , opts )   }   return tok , nil , err   }

1<CODESPLIT>https://github.com/chrislusf/gleam/blob/a7aa467b545f5e5e452aaf818299a5f6e6b23760/util/row_read_write.go#L41-L50<CODESPLIT>EncodeKeys<CODESPLIT>EncodeKeys encode keys to a blob for comparing or sorting<CODESPLIT>func EncodeKeys ( anyObject ... interface { } ) ( [ ] byte , error ) { var buf bytes . Buffer   en := msgp . NewWriter ( & buf )   for _ , obj := range anyObject { if err := en . WriteIntf ( obj ) ; err != nil { return nil , fmt . Errorf ( " " , err )   }   }   return buf . Bytes ( ) , nil   }

1<CODESPLIT>https://github.com/rkt/rkt/blob/0c8765619cae3391a9ffa12c8dbd12ba7a475eb8/common/common.go#L391-L404<CODESPLIT>SystemdVersion<CODESPLIT>SystemdVersion parses and returns the version of a given systemd binary<CODESPLIT>func SystemdVersion ( systemdBinaryPath string ) ( int , error ) { versionBytes , err := exec . Command ( systemdBinaryPath , " " ) . CombinedOutput ( )   if err != nil { return - 1 , errwrap . Wrap ( fmt . Errorf ( " " , systemdBinaryPath ) , err )   }   versionStr := strings . SplitN ( string ( versionBytes ) , " \n " , 2 ) [ 0 ]   var version int   n , err := fmt . Sscanf ( versionStr , " " , & version )   if err != nil || n != 1 { return - 1 , fmt . Errorf ( " " , versionStr )   }    return version , nil   }

0<CODESPLIT>https://github.com/google/go-github/blob/1fef44b9b427e6c43f92b2f20918e496c275393f/github/github-accessors.go#L6608-L6613<CODESPLIT>GetBody<CODESPLIT>GetColumnsURL returns the ColumnsURL field if it s non - nil zero value otherwise .<CODESPLIT>func ( p * Project ) GetBody ( ) string { if p == nil || p . Body == nil { return " "   }   return * p . Body   }

0<CODESPLIT>https://github.com/luci/luci-go/blob/f6cef429871eee3be7c6903af88d3ee884eaf683/tokenserver/appengine/impl/certconfig/rpc_fetch_crl.go#L50-L105<CODESPLIT>mergeBuildIntoAnnotation<CODESPLIT>FetchCRL makes the server fetch a CRL for some CA .<CODESPLIT>func mergeBuildIntoAnnotation ( c context . Context , step * miloProto . Step , build * buildbot . Build ) error { allProps := stringset . New ( len ( step . Property ) + len ( build . Properties ) )   for _ , prop := range step . Property { allProps . Add ( prop . Name )   }   for _ , prop := range build . Properties { // Annotation protobuf overrides BuildBot properties. if allProps . Has ( prop . Name ) { continue   }   allProps . Add ( prop . Name )    step . Property = append ( step . Property , & miloProto . Step_Property { Name : prop . Name , Value : fmt . Sprintf ( " " , prop . Value ) , } )   }    return nil   }

0<CODESPLIT>https://github.com/influxdata/influxdb/blob/16d0bbb0cd468fd51f412021a76ae5c4b450dea8/chronograf/server/url_prefixer.go#L58-L68<CODESPLIT>ServeHTTP<CODESPLIT>Header () copies the Header map from the underlying ResponseWriter to prevent modifications to it by callers<CODESPLIT>func ( up * URLPrefixer ) ServeHTTP ( rw http . ResponseWriter , r * http . Request ) { // extract the flusher for flushing chunks flusher , ok := rw . ( http . Flusher )    if ! ok { up . Logger . Info ( ErrNotFlusher )   up . Next . ServeHTTP ( rw , r )   return   }    isSVG , _ := regexp . Match ( " " , [ ] byte ( r . URL . String ( ) ) )   if isSVG { up . Next . ServeHTTP ( rw , r )   return   }    // chunked transfer because we're modifying the response on the fly, so we // won't know the final content-length rw . Header ( ) . Set ( " " , " " )   rw . Header ( ) . Set ( " " , " " )    writtenCount := 0 // number of bytes written to rw   nextRead , nextWrite := io . Pipe ( )   go func ( ) { defer nextWrite . Close ( )   up . Next . ServeHTTP ( & wrapResponseWriter { ResponseWriter : rw , Substitute : nextWrite } , r )   } ( )    // setup a buffer which is the max length of our target attrs b := make ( [ ] byte , up . maxlen ( up . Attrs ... ) )   io . ReadFull ( nextRead , b ) // prime the buffer with the start of the input   buf := bytes . NewBuffer ( b )    // Read next handler's response byte by byte src := bufio . NewScanner ( nextRead )   src . Split ( bufio . ScanBytes )   for { window := buf . Bytes ( )    // advance a byte if window is not a src attr if matchlen , match := up . match ( window , up . Attrs ... ) ; matchlen == 0 { if src . Scan ( ) { // shift the next byte into buf rw . Write ( buf . Next ( 1 ) )   writtenCount ++   buf . Write ( src . Bytes ( ) )    if writtenCount >= ChunkSize { flusher . Flush ( )   writtenCount = 0   }   } else { if err := src . Err ( ) ; err != nil { up . Logger . WithField ( " " , " " ) . Error ( " " , err )   }   rw . Write ( window )   flusher . Flush ( )   break   }   continue   } else { buf . Next ( matchlen ) // advance to the relative URL   for i := 0 ; i < matchlen ; i ++ { src . Scan ( )   buf . Write ( src . Bytes ( ) )   }   rw . Write ( match ) // add the src attr to the output   io . WriteString ( rw , up . Prefix ) // write the prefix   }   }   }

0<CODESPLIT>https://github.com/grokify/gotilla/blob/a89420864b4d1cc22c57bcc025cc960a91372b37/net/httputilmore/httputil.go#L128-L148<CODESPLIT>NewResponseRateLimitInfo<CODESPLIT>MergeHeader merges two http . Header adding the values of the second to the first .<CODESPLIT>func NewResponseRateLimitInfo ( resp * http . Response , useXrlHyphen bool ) RateLimitInfo { rlstat := RateLimitInfo { StatusCode : resp . StatusCode , RetryAfter : strconvutil . AtoiWithDefault ( resp . Header . Get ( " " ) , 0 ) }    if useXrlHyphen { rlstat . XRateLimitLimit = strconvutil . AtoiWithDefault ( resp . Header . Get ( " " ) , 0 )   rlstat . XRateLimitRemaining = strconvutil . AtoiWithDefault ( resp . Header . Get ( " " ) , 0 )   rlstat . XRateLimitReset = strconvutil . AtoiWithDefault ( resp . Header . Get ( " " ) , 0 )   rlstat . XRateLimitWindow = strconvutil . AtoiWithDefault ( resp . Header . Get ( " " ) , 0 )   } else { rlstat . XRateLimitLimit = strconvutil . AtoiWithDefault ( resp . Header . Get ( " " ) , 0 )   rlstat . XRateLimitRemaining = strconvutil . AtoiWithDefault ( resp . Header . Get ( " " ) , 0 )   rlstat . XRateLimitReset = strconvutil . AtoiWithDefault ( resp . Header . Get ( " " ) , 0 )   rlstat . XRateLimitWindow = strconvutil . AtoiWithDefault ( resp . Header . Get ( " " ) , 0 )   }   return rlstat   }

0<CODESPLIT>https://github.com/shiyanhui/dht/blob/1b3b78ecf279a28409577382c3ae95df5703cf50/container.go#L168-L173<CODESPLIT>Clear<CODESPLIT>Remove removes e from the slist .<CODESPLIT>func ( slist * syncedList ) Clear ( ) { slist . Lock ( )   defer slist . Unlock ( )    slist . queue . Init ( )   }

0<CODESPLIT>https://github.com/intelsdi-x/snap/blob/e3a6c8e39994b3980df0c7b069d5ede810622952/control/plugin/cpolicy/bool.go#L66-L78<CODESPLIT>GobEncode<CODESPLIT>MarshalJSON marshals a BoolRule into JSON<CODESPLIT>func ( b * BoolRule ) GobEncode ( ) ( [ ] byte , error ) { w := new ( bytes . Buffer )   encoder := gob . NewEncoder ( w )   if err := encoder . Encode ( b . key ) ; err != nil { return nil , err   }   if err := encoder . Encode ( b . required ) ; err != nil { return nil , err   }   if b . default_ == nil { encoder . Encode ( false )   } else { encoder . Encode ( true )   if err := encoder . Encode ( & b . default_ ) ; err != nil { return nil , err   }   }   return w . Bytes ( ) , nil   }

0<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/state/watcher.go#L1685-L1687<CODESPLIT>WatchForModelConfigChanges<CODESPLIT>WatchInstanceData returns a watcher for observing changes to a model .<CODESPLIT>func ( model * Model ) WatchForModelConfigChanges ( ) NotifyWatcher { return newEntityWatcher ( model . st , settingsC , model . st . docID ( modelGlobalKey ) )   }

1<CODESPLIT>https://github.com/gopasspw/gopass/blob/fe4e21d62182f0f2e4ef9a0ca8168d849dc52bd4/pkg/backend/rcs/noop/backend.go#L71-L73<CODESPLIT>RemoveRemote<CODESPLIT>RemoveRemote does nothing<CODESPLIT>func ( g * Noop ) RemoveRemote ( ctx context . Context , remote string ) error { return nil   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/s3/api.go#L3497-L3500<CODESPLIT>GetObjectTaggingRequest<CODESPLIT>GetObjectTagging API operation for Amazon Simple Storage Service . Returns the tag - set of an object . Returns awserr . Error for service API and SDK errors . Use runtime type assertions with awserr . Error s Code and Message methods to get detailed information about the error . See the AWS API reference guide for Amazon Simple Storage Service s API operation GetObjectTagging for usage and error information . See also https : // docs . aws . amazon . com / goto / WebAPI / s3 - 2006 - 03 - 01 / GetObjectTagging<CODESPLIT>func ( c * S3 ) GetObjectTaggingRequest ( input * GetObjectTaggingInput ) ( req * request . Request , output * GetObjectTaggingOutput ) { op := & request . Operation { Name : opGetObjectTagging , HTTPMethod : " " , HTTPPath : " " , }    if input == nil { input = & GetObjectTaggingInput { }   }    output = & GetObjectTaggingOutput { }   req = c . newRequest ( op , input , output )   return   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/pinpoint/api.go#L7225-L7228<CODESPLIT>SetClientId<CODESPLIT>SetClientSecret sets the ClientSecret field s value .<CODESPLIT>func ( s * ADMChannelRequest ) SetClientId ( v string ) * ADMChannelRequest { s . ClientId = & v   return s   }

0<CODESPLIT>https://github.com/arteev/fmttab/blob/d2261507f683d72b730a8cc8936ace1fa956ac4a/columns/columns.go#L139-L144<CODESPLIT>GetWidth<CODESPLIT>GetMaskFormat returns a pattern string for formatting text in table column alignment<CODESPLIT>func ( c * Column ) GetWidth ( ) int { if c . Width < c . MaxLen { return c . MaxLen   }   return c . Width    }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/kms/api.go#L3813-L3816<CODESPLIT>ListKeysWithContext<CODESPLIT>ListKeys API operation for AWS Key Management Service . Gets a list of all customer master keys ( CMKs ) in the caller s AWS account and region . Returns awserr . Error for service API and SDK errors . Use runtime type assertions with awserr . Error s Code and Message methods to get detailed information about the error . See the AWS API reference guide for AWS Key Management Service s API operation ListKeys for usage and error information . Returned Error Codes : * ErrCodeDependencyTimeoutException DependencyTimeoutException The system timed out while trying to fulfill the request . The request can be retried . * ErrCodeInternalException KMSInternalException The request was rejected because an internal exception occurred . The request can be retried . * ErrCodeInvalidMarkerException InvalidMarkerException The request was rejected because the marker that specifies where pagination should next begin is not valid . See also https : // docs . aws . amazon . com / goto / WebAPI / kms - 2014 - 11 - 01 / ListKeys<CODESPLIT>func ( c * KMS ) ListKeysWithContext ( ctx aws . Context , input * ListKeysInput , opts ... request . Option ) ( * ListKeysOutput , error ) { req , out := c . ListKeysRequest ( input )   req . SetContext ( ctx )   req . ApplyOptions ( opts ... )   return out , req . Send ( )   }

0<CODESPLIT>https://github.com/aclements/go-gg/blob/abd1f791f5ee99465ee7cffe771436379d6cee5a/ggstat/agg.go#L207-L216<CODESPLIT>AggMax<CODESPLIT>AggQuantile returns an aggregate function that computes a quantile of each of cols . quantile has a range of [ 0 1 ] . The resulting columns will be named <prefix > <col > and will have the same type as <col > .<CODESPLIT>func AggMax ( cols ... string ) Aggregator { max := func ( xs [ ] float64 ) float64 { _ , x := stats . Bounds ( xs )   return x   }   return aggFn ( max , " " , cols ... )   }

0<CODESPLIT>https://github.com/hashicorp/vault/blob/7e96d5c2b53ee9e22439f3bc0cb366d7e92f949b/sdk/physical/physical_view.go#L40-L59<CODESPLIT>List<CODESPLIT>Get the key of the prefixed view<CODESPLIT>func ( v * View ) List ( ctx context . Context , prefix string ) ( [ ] string , error ) { if err := v . sanityCheck ( prefix ) ; err != nil { return nil , err   }   return v . backend . List ( ctx , v . expandKey ( prefix ) )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/pinpoint/api.go#L2483-L2497<CODESPLIT>GetApnsVoipSandboxChannelWithContext<CODESPLIT>GetAppRequest generates a aws / request . Request representing the client s request for the GetApp operation . The output return value will be populated with the request s response once the request completes successfully . Use Send method on the returned Request to send the API call to the service . the output return value is not valid until after Send returns without error . See GetApp for more information on using the GetApp API call and error handling . This method is useful when you want to inject custom logic or configuration into the SDK s request lifecycle . Such as custom headers or retry logic . // Example sending a request using the GetAppRequest method . req resp : = client . GetAppRequest ( params ) err : = req . Send () if err == nil { // resp is now filled fmt . Println ( resp ) } See also https : // docs . aws . amazon . com / goto / WebAPI / pinpoint - 2016 - 12 - 01 / GetApp<CODESPLIT>func ( c * Pinpoint ) GetApnsVoipSandboxChannelWithContext ( ctx aws . Context , input * GetApnsVoipSandboxChannelInput , opts ... request . Option ) ( * GetApnsVoipSandboxChannelOutput , error ) { req , out := c . GetApnsVoipSandboxChannelRequest ( input )   req . SetContext ( ctx )   req . ApplyOptions ( opts ... )   return out , req . Send ( )   }

1<CODESPLIT>https://github.com/leonelquinteros/gotext/blob/6431cb3aeab2ec99af31c6a0cee11ae4e8c9b05f/gotext.go#L173-L175<CODESPLIT>GetD<CODESPLIT>GetD returns the corresponding Translation in the given domain for a given string . Supports optional parameters ( vars ... interface {} ) to be inserted on the formatted string using the fmt . Printf syntax .<CODESPLIT>func GetD ( dom , str string , vars ... interface { } ) string { return GetND ( dom , str , str , 1 , vars ... )   }

0<CODESPLIT>https://github.com/algolia/algoliasearch-client-go/blob/dc059c0414d8c06e2b2bb47412b2130799bfcc9f/algolia/search/index_objects.go#L211-L217<CODESPLIT>Batch<CODESPLIT>DeleteBy removes all the records that match the given query parameters . Not all query parameters are supported please refer to the official documentation for an exhaustive list : https : // www . algolia . com / doc / api - reference / api - methods / delete - by / #method - param - filterparameters<CODESPLIT>func ( i * Index ) Batch ( operations [ ] BatchOperation , opts ... interface { } ) ( res BatchRes , err error ) { body := batchReq { Requests : operations }   path := i . path ( " " )   err = i . transport . Request ( & res , http . MethodPost , path , body , call . Write , opts ... )   res . wait = i . WaitTask   return   }

0<CODESPLIT>https://github.com/go-openapi/runtime/blob/a790424692bbda30f61bc3b21754972de1803b91/middleware/untyped/api.go#L115-L120<CODESPLIT>RegisterProducer<CODESPLIT>RegisterConsumer registers a consumer for a media type .<CODESPLIT>func ( d * API ) RegisterProducer ( mediaType string , handler runtime . Producer ) { if d . producers == nil { d . producers = make ( map [ string ] runtime . Producer , 10 )   }   d . producers [ strings . ToLower ( mediaType ) ] = handler   }

0<CODESPLIT>https://github.com/luci/luci-go/blob/f6cef429871eee3be7c6903af88d3ee884eaf683/common/api/swarming/swarming/v1/swarming-gen.go#L4169-L4172<CODESPLIT>Context<CODESPLIT>IfNoneMatch sets the optional parameter which makes the operation fail if the object s ETag matches the given value . This is useful for getting updates only after the object has changed since the last request . Use googleapi . IsNotModified to check whether the response error from Do is the result of In - None - Match .<CODESPLIT>func ( c * TaskRequestCall ) Context ( ctx context . Context ) * TaskRequestCall { c . ctx_ = ctx   return c   }

1<CODESPLIT>https://github.com/brocaar/lorawan/blob/5bca41b178e93c384fb6442f55a2d692da890830/mac_commands.go#L799-L807<CODESPLIT>UnmarshalBinary<CODESPLIT>UnmarshalBinary decodes the object from bytes .<CODESPLIT>func ( p * DLChannelAnsPayload ) UnmarshalBinary ( data [ ] byte ) error { if len ( data ) != 1 { return errors . New ( " " )   }    p . ChannelFrequencyOK = data [ 0 ] & 1 > 0   p . UplinkFrequencyExists = data [ 0 ] & ( 1 << 1 ) > 0   return nil   }

0<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/pkg/controller/ttlafterfinished/ttlafterfinished_controller.go#L72-L98<CODESPLIT>Patch<CODESPLIT>New creates an instance of Controller<CODESPLIT>func ( c * FakeComponentStatuses ) Patch ( name string , pt types . PatchType , data [ ] byte , subresources ... string ) ( result * corev1 . ComponentStatus , err error ) { obj , err := c . Fake . Invokes ( testing . NewRootPatchSubresourceAction ( componentstatusesResource , name , pt , data , subresources ... ) , & corev1 . ComponentStatus { } )   if obj == nil { return nil , err   }   return obj . ( * corev1 . ComponentStatus ) , err   }

1<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/pkg/volume/util/device_util_linux.go#L33-L51<CODESPLIT>FindMultipathDeviceForDevice<CODESPLIT>FindMultipathDeviceForDevice given a device name like / dev / sdx find the devicemapper parent<CODESPLIT>func ( handler * deviceHandler ) FindMultipathDeviceForDevice ( device string ) string { io := handler . getIo   disk , err := findDeviceForPath ( device , io )   if err != nil { return " "   }   sysPath := " "   if dirs , err := io . ReadDir ( sysPath ) ; err == nil { for _ , f := range dirs { name := f . Name ( )   if strings . HasPrefix ( name , " " ) { if _ , err1 := io . Lstat ( sysPath + name + " " + disk ) ; err1 == nil { return " " + name   }   }   }   }   return " "   }

1<CODESPLIT>https://github.com/kubernetes/kops/blob/06b81aeae67d8ad440828a31247c74a46bccf04d/upup/pkg/fi/cloudup/openstacktasks/volume_fitask.go#L33-L46<CODESPLIT>UnmarshalJSON<CODESPLIT>UnmarshalJSON implements conversion to JSON supporting an alternate specification of the object as a string<CODESPLIT>func ( o * Volume ) UnmarshalJSON ( data [ ] byte ) error { var jsonName string   if err := json . Unmarshal ( data , & jsonName ) ; err == nil { o . Name = & jsonName   return nil   }    var r realVolume   if err := json . Unmarshal ( data , & r ) ; err != nil { return err   }   * o = Volume ( r )   return nil   }

1<CODESPLIT>https://github.com/casbin/casbin/blob/9814ac94c19c922c0afd5c2f34255e0d543ef372/rbac_api_with_domains.go#L18-L21<CODESPLIT>GetUsersForRoleInDomain<CODESPLIT>GetUsersForRoleInDomain gets the users that has a role inside a domain . Add by Gordon<CODESPLIT>func ( e * Enforcer ) GetUsersForRoleInDomain ( name string , domain string ) [ ] string { res , _ := e . model [ " " ] [ " " ] . RM . GetUsers ( name , domain )   return res   }

1<CODESPLIT>https://github.com/hashicorp/nomad/blob/01c267b92b476a61fbdef49ba3c6b62a84509043/nomad/deploymentwatcher/deployment_watcher.go#L784-L796<CODESPLIT>getAllocsCh<CODESPLIT>getAllocsCh retrieves the allocations that are part of the deployment blocking at the given index .<CODESPLIT>func ( w * deploymentWatcher ) getAllocsCh ( index uint64 ) <- chan * allocUpdates { out := make ( chan * allocUpdates , 1 )   go func ( ) { allocs , index , err := w . getAllocs ( index )   out <- & allocUpdates { allocs : allocs , index : index , err : err , }   } ( )    return out   }

1<CODESPLIT>https://github.com/scgolang/sc/blob/2b87756659e2b72d97cec43b6896ed01c0365097/c.go#L325-L330<CODESPLIT>Mul<CODESPLIT>Mul multiplies the constant by another input .<CODESPLIT>func ( c C ) Mul ( val Input ) Input { if v , ok := val . ( C ) ; ok { return C ( float32 ( v ) * float32 ( c ) )   }   return val . Mul ( c )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/elasticache/api.go#L12963-L12966<CODESPLIT>SetEngine<CODESPLIT>SetCacheSubnetGroupName sets the CacheSubnetGroupName field s value .<CODESPLIT>func ( s * Snapshot ) SetEngine ( v string ) * Snapshot { s . Engine = & v   return s   }

1<CODESPLIT>https://github.com/docker/swarmkit/blob/59163bf75df38489d4a10392265d27156dc473c5/manager/encryption/encryption.go#L82-L97<CODESPLIT>Decrypt<CODESPLIT>Decrypt tries to decrypt using any decrypters that match the given algorithm .<CODESPLIT>func ( m MultiDecrypter ) Decrypt ( r api . MaybeEncryptedRecord ) ( [ ] byte , error ) { decrypters , ok := m . decrypters [ r . Algorithm ]   if ! ok { return nil , fmt . Errorf ( " " , api . MaybeEncryptedRecord_Algorithm_name [ int32 ( r . Algorithm ) ] )   }   var rerr error   for _ , d := range decrypters { result , err := d . Decrypt ( r )   if err == nil { return result , nil   }   rerr = err   }   return nil , rerr   }

1<CODESPLIT>https://github.com/go-playground/locales/blob/630ebbb602847eba93e75ae38bbc7bb7abcf1ff3/ak/ak.go#L43-L65<CODESPLIT>New<CODESPLIT>New returns a new instance of translator for the ak locale<CODESPLIT>func New ( ) locales . Translator { return & ak { locale : " " , pluralsCardinal : [ ] locales . PluralRule { 2 , 6 } , pluralsOrdinal : nil , pluralsRange : [ ] locales . PluralRule { 6 } , decimal : " " , group : " " , timeSeparator : " " , currencies : [ ] string { " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , " " , "   " I   " M   " N   " N   " Q   " R   " T   " W   " W   " Y   " K   " N   " R   " R   " T   " U   " D   " E   " L   " L   " L   " N   " Q   " R   " S   " S   " T   " M   " O   " P   " E   " G   " H   " M   " P   " R   " R   " R   " W   " Y   " Z   " A   " B   " K   " R   " S   " T   " T   " U   " U   " U   " V   " V   " Y   " A   " A   " C   " D   " D   " G   " G   " K   " K   " L   " M   " N   " O   " R   " T   " T   " U   " V   " V   " W   " X   " X   " X   " Y   " Z   " Z   " Z   " A   " G   " I   " I   " L   " O   " P   " Z   " M   " A   " E   " E   " E   " G   " H   " K   " L   " L   " T   " Y   " A   " H   " O   " O   " S   " U   " U   " W   " A   " B   " C   " D   " D   " D   " E   " G   " H   " I   " K   " L   " O   " R   " R   " S   " T   " T   " U   " V   " Y   " Z   " H   " J   " J   " M   " M   " N   " O   " P   " R   " R   " T   " W   " Z   " A   " A   " G   " G   " S   " S   " S   " Y   " Y   " Y   " Z   " E   " E   " N   " N   " U   " S   " A   " A   " A   " B   " B   " B   " B   " C   " D   " E   " F   " F   " O   " P   " P   " P   " R   " S   " T   " U   " X   " D   " E   " U   " U   " U   " U   " A   " A   " M   " M   " R   " R   " W   " W   " W ,   monthsAbbreviated : [ ] string { " " , " ,   K   " - " E O " E K " O A " A K " D Ɔ F - " - A , O "   " }     monthsWide : [ ] string { " " , " " K a E b w ɔ b r s o   d e A o - i s a d b ɔ , i m " u o ,       daysAbbreviated : [ ] string { " " , " " , " " , " " , " " , " " , " " } , daysNarrow : [ ] string { " " , " " , " " , " " , " " , " " , " " } , daysWide : [ ] string { " " , " " , " " , " " , " " , " " , " " } , periodsAbbreviated : [ ] string { " " , " " } , periodsWide : [ ] string { " " , " " } , erasAbbreviated : [ ] string { " " , " " } , erasNarrow : [ ] string { " " , " " } , erasWide : [ ] string { " " , " " } , timezones : map [ string ] string { " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " " : " " , " ∅ "   N Z T A C T A C T H N M H N M M D " D T , G T : G T , A R T " W R " A S A W T P S " S T , Z S " N Z T G F " F T , K S " A K T H E U H E U E A " A T , S T : S T , I B : I B , K D " A K T H E G H E G M E " E Z , N T : N T , N N M   " N   " E " H P " A T D T , C T : C T , K T : K T , S T : S T , E P " H E M C L T C L T H N U H N U C S " S T , A S " W A T A C T A C T M E Z M E Z W A T W A T O E " E Z , M T : M T , Y T : Y T , A T : A T , E Z : E Z , S T : S T , E O " H E G H A " A T , R T : R T }       }   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/pinpoint/api.go#L1355-L1369<CODESPLIT>DeleteEndpointRequest<CODESPLIT>DeleteEndpointRequest generates a aws / request . Request representing the client s request for the DeleteEndpoint operation . The output return value will be populated with the request s response once the request completes successfully . Use Send method on the returned Request to send the API call to the service . the output return value is not valid until after Send returns without error . See DeleteEndpoint for more information on using the DeleteEndpoint API call and error handling . This method is useful when you want to inject custom logic or configuration into the SDK s request lifecycle . Such as custom headers or retry logic . // Example sending a request using the DeleteEndpointRequest method . req resp : = client . DeleteEndpointRequest ( params ) err : = req . Send () if err == nil { // resp is now filled fmt . Println ( resp ) } See also https : // docs . aws . amazon . com / goto / WebAPI / pinpoint - 2016 - 12 - 01 / DeleteEndpoint<CODESPLIT>func ( c * Pinpoint ) DeleteEndpointRequest ( input * DeleteEndpointInput ) ( req * request . Request , output * DeleteEndpointOutput ) { op := & request . Operation { Name : opDeleteEndpoint , HTTPMethod : " " , HTTPPath : " " , }    if input == nil { input = & DeleteEndpointInput { }   }    output = & DeleteEndpointOutput { }   req = c . newRequest ( op , input , output )   return   }

1<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/pkg/apis/core/v1/zz_generated.conversion.go#L2250-L2252<CODESPLIT>Convert_core_AzureFilePersistentVolumeSource_To_v1_AzureFilePersistentVolumeSource<CODESPLIT>Convert_core_AzureFilePersistentVolumeSource_To_v1_AzureFilePersistentVolumeSource is an autogenerated conversion function .<CODESPLIT>func Convert_core_AzureFilePersistentVolumeSource_To_v1_AzureFilePersistentVolumeSource ( in * core . AzureFilePersistentVolumeSource , out * v1 . AzureFilePersistentVolumeSource , s conversion . Scope ) error { return autoConvert_core_AzureFilePersistentVolumeSource_To_v1_AzureFilePersistentVolumeSource ( in , out , s )   }

0<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/cmd/juju/controller/unregister.go#L62-L65<CODESPLIT>Init<CODESPLIT>SetFlags implements Command . SetFlags .<CODESPLIT>func ( c * unregisterCommand ) Init ( args [ ] string ) error { if len ( args ) < 1 { return errors . New ( " " )   }   c . controllerName , args = args [ 0 ] , args [ 1 : ]    if err := jujuclient . ValidateControllerName ( c . controllerName ) ; err != nil { return err   }    if err := cmd . CheckEmpty ( args ) ; err != nil { return err   }   return nil   }

1<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/pkg/apis/core/validation/validation.go#L3930-L3934<CODESPLIT>ValidateReplicationControllerUpdate<CODESPLIT>ValidateReplicationControllerUpdate tests if required fields in the replication controller are set .<CODESPLIT>func ValidateReplicationControllerUpdate ( controller , oldController * core . ReplicationController ) field . ErrorList { allErrs := ValidateObjectMetaUpdate ( & controller . ObjectMeta , & oldController . ObjectMeta , field . NewPath ( " " ) )   allErrs = append ( allErrs , ValidateReplicationControllerSpec ( & controller . Spec , field . NewPath ( " " ) ) ... )   return allErrs   }

1<CODESPLIT>https://github.com/atsaki/golang-cloudstack-library/blob/81da56f938156dd18edfce7a3ff15c0f77b47bfb/AccountApi.go#L129-L135<CODESPLIT>LockAccount<CODESPLIT>Locks an account<CODESPLIT>func ( c * Client ) LockAccount ( p * LockAccountParameter ) ( * Account , error ) { obj , err := c . Request ( " " , convertParamToMap ( p ) )   if err != nil { return nil , err   }   return obj . ( * Account ) , err   }

0<CODESPLIT>https://github.com/docker/libnetwork/blob/9ff9b57c344df5cd47443ad9e65702ec85c5aeb0/bitseq/sequence.go#L227-L233<CODESPLIT>SetAny<CODESPLIT>Set atomically sets the corresponding bit in the sequence<CODESPLIT>func ( h * Handle ) SetAny ( serial bool ) ( uint64 , error ) { if h . Unselected ( ) == 0 { return invalidPos , ErrNoBitAvailable   }   return h . set ( 0 , 0 , h . bits - 1 , true , false , serial )   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/backup/api.go#L7925-L7928<CODESPLIT>SetNextToken<CODESPLIT>SetNextToken sets the NextToken field s value .<CODESPLIT>func ( s * ListBackupSelectionsOutput ) SetNextToken ( v string ) * ListBackupSelectionsOutput { s . NextToken = & v   return s   }

0<CODESPLIT>https://github.com/dmotylev/appconfig/blob/66072ec203f6059651aec8270de797de69d6ef50/appconfig.go#L38-L47<CODESPLIT>FromFile<CODESPLIT>Load populates given struct from ordered list of sources . First positive lookup will be used as a value for the field .<CODESPLIT>func FromFile ( s string ) Source { f , err := os . Open ( s )   if err != nil { return FromMap ( nil )   }   defer f . Close ( )   return FromReader ( f )   }

0<CODESPLIT>https://github.com/matryer/filedb/blob/3641db67a8c989375ff081fe797ca170a2c54bb5/db.go#L164-L209<CODESPLIT>ForEach<CODESPLIT>SelectEach calls fn for each item in the collection replacing the data if include is true . c . SelectEach ( func ( i int data [] byte ) { include : = true stop : = false return include data stop } ) If include is false the record will be omitted . If stop is true processing will cease after the current record has been processed .<CODESPLIT>func ( c * C ) ForEach ( fn func ( int , [ ] byte ) bool ) error { c . m . Lock ( )   defer c . m . Unlock ( )   f , err := c . file ( )   if err != nil { return err   }   f . Seek ( 0 , os . SEEK_SET )   s := bufio . NewScanner ( f )   i := 0   for s . Scan ( ) { if fn ( i , s . Bytes ( ) ) { break   }   i ++   }   if s . Err ( ) != nil { return s . Err ( )   }   return nil   }

0<CODESPLIT>https://github.com/syncthing/syncthing/blob/5fa846775689fdacf523414160fcc7d3a70eeaa1/lib/db/lowlevel.go#L181-L186<CODESPLIT>analyticsFor<CODESPLIT>checkFlush flushes and resets the batch if its size exceeds dbFlushBatch .<CODESPLIT>func analyticsFor ( ss [ ] string , cutoff int ) [ ] analytic { m := make ( map [ string ] int )   t := 0   for _ , s := range ss { m [ s ] ++   t ++   }    l := make ( [ ] analytic , 0 , len ( m ) )   for k , c := range m { l = append ( l , analytic { Key : k , Count : c , Percentage : 100 * float64 ( c ) / float64 ( t ) , } )   }    sort . Sort ( analyticList ( l ) )    if cutoff > 0 && len ( l ) > cutoff { c := 0   for _ , i := range l [ cutoff : ] { c += i . Count   }   l = append ( l [ : cutoff ] , analytic { Key : " " , Count : c , Percentage : 100 * float64 ( c ) / float64 ( t ) , } )   }    return l   }

0<CODESPLIT>https://github.com/bennyscetbun/jsongo/blob/9624bef8c57b18467d7957fa19cd6c7392ec62eb/jsongo.go#L137-L150<CODESPLIT>Array<CODESPLIT>Map Turn this JSONNode to a TypeMap and / or Create a new element for key if necessary and return it<CODESPLIT>func ( that * JSONNode ) Array ( size int ) * [ ] JSONNode { if that . t == TypeUndefined { that . t = TypeArray   } else if that . t != TypeArray { panic ( ErrorMultipleType )   }   if size < 0 { panic ( ErrorArrayNegativeValue )   }   var min int   if size < len ( that . a ) { min = size   } else { min = len ( that . a )   }   newa := make ( [ ] JSONNode , size )   for i := 0 ; i < min ; i ++ { newa [ i ] = that . a [ i ]   }   that . a = newa   return & ( that . a )   }

0<CODESPLIT>https://github.com/tendermint/tendermint/blob/4253e67c07c69be6d7f7263ab03944ce30a9fc90/node/node.go#L763-L780<CODESPLIT>Listeners<CODESPLIT>startPrometheusServer starts a Prometheus HTTP server listening for metrics collectors on addr .<CODESPLIT>func ( n * Node ) Listeners ( ) [ ] string { return [ ] string { fmt . Sprintf ( " " , n . config . P2P . ExternalAddress ) , }   }

1<CODESPLIT>https://github.com/scylladb/gocqlx/blob/3a6a3da0c7b34883b12cb1730c936b2ebd3d04a5/qb/cmp.go#L295-L301<CODESPLIT>ContainsKeyNamed<CODESPLIT>ContainsKeyNamed produces column CONTAINS KEY ? with a custom parameter name .<CODESPLIT>func ContainsKeyNamed ( column , name string ) Cmp { return Cmp { op : cntKey , column : column , value : param ( name ) , }   }

1<CODESPLIT>https://github.com/hybridgroup/gobot/blob/58db149a40a113aec7d6068fb9418b7e05de1802/platforms/beaglebone/beaglebone_adaptor.go#L180-L203<CODESPLIT>DigitalPin<CODESPLIT>DigitalPin retrieves digital pin value by name<CODESPLIT>func ( b * Adaptor ) DigitalPin ( pin string , dir string ) ( sysfsPin sysfs . DigitalPinner , err error ) { b . mutex . Lock ( )   defer b . mutex . Unlock ( )    i , err := b . translatePin ( pin )   if err != nil { return   }   if b . digitalPins [ i ] == nil { b . digitalPins [ i ] = sysfs . NewDigitalPin ( i )   if err = muxPin ( pin , " " ) ; err != nil { return   }    err := b . digitalPins [ i ] . Export ( )   if err != nil { return nil , err   }   }   if err = b . digitalPins [ i ] . Direction ( dir ) ; err != nil { return   }   return b . digitalPins [ i ] , nil   }

1<CODESPLIT>https://github.com/rkt/rkt/blob/0c8765619cae3391a9ffa12c8dbd12ba7a475eb8/stage1/init/init.go#L162-L192<CODESPLIT>machinedRegister<CODESPLIT>machinedRegister checks if nspawn should register the pod to machined<CODESPLIT>func machinedRegister ( ) bool { // machined has a D-Bus interface following versioning guidelines, see: // http://www.freedesktop.org/wiki/Software/systemd/machined/ // Therefore we can just check if the D-Bus method we need exists and we // don't need to check the signature. var found int    conn , err := dbus . SystemBus ( )   if err != nil { return false   }   node , err := introspect . Call ( conn . Object ( " " , " " ) )   if err != nil { return false   }   for _ , iface := range node . Interfaces { if iface . Name != " " { continue   }   // machined v215 supports methods "RegisterMachine" and "CreateMachine" called by nspawn v215. // machined v216+ (since commit 5aa4bb) additionally supports methods "CreateMachineWithNetwork" // and "RegisterMachineWithNetwork", called by nspawn v216+. for _ , method := range iface . Methods { if method . Name == " " || method . Name == " " { found ++   }   }   break   }   return found == 2   }

1<CODESPLIT>https://github.com/agl/ed25519/blob/5312a61534124124185d41f09206b9fef1d88403/extra25519/extra25519.go#L310-L340<CODESPLIT>RepresentativeToPublicKey<CODESPLIT>RepresentativeToPublicKey converts a uniform representative value for a curve25519 public key as produced by ScalarBaseMult to a curve25519 public key .<CODESPLIT>func RepresentativeToPublicKey ( publicKey , representative * [ 32 ] byte ) { var rr2 , v , e edwards25519 . FieldElement   edwards25519 . FeFromBytes ( & rr2 , representative )    edwards25519 . FeSquare2 ( & rr2 , & rr2 )   rr2 [ 0 ] ++   edwards25519 . FeInvert ( & rr2 , & rr2 )   edwards25519 . FeMul ( & v , & edwards25519 . A , & rr2 )   edwards25519 . FeNeg ( & v , & v )    var v2 , v3 edwards25519 . FieldElement   edwards25519 . FeSquare ( & v2 , & v )   edwards25519 . FeMul ( & v3 , & v , & v2 )   edwards25519 . FeAdd ( & e , & v3 , & v )   edwards25519 . FeMul ( & v2 , & v2 , & edwards25519 . A )   edwards25519 . FeAdd ( & e , & v2 , & e )   chi ( & e , & e )   var eBytes [ 32 ] byte   edwards25519 . FeToBytes ( & eBytes , & e )   // eBytes[1] is either 0 (for e = 1) or 0xff (for e = -1) eIsMinus1 := int32 ( eBytes [ 1 ] ) & 1   var negV edwards25519 . FieldElement   edwards25519 . FeNeg ( & negV , & v )   edwards25519 . FeCMove ( & v , & negV , eIsMinus1 )    edwards25519 . FeZero ( & v2 )   edwards25519 . FeCMove ( & v2 , & edwards25519 . A , eIsMinus1 )   edwards25519 . FeSub ( & v , & v , & v2 )    edwards25519 . FeToBytes ( publicKey , & v )   }

0<CODESPLIT>https://github.com/ory/hydra/blob/67c246c177446daab64be00ba82b3aea1a546570/sdk/go/hydra/client/public/well_known_responses.go#L25-L45<CODESPLIT>MarshalBinary<CODESPLIT>ReadResponse reads a server response into the received o .<CODESPLIT>func ( m * SwaggerJwkUpdateSetKey ) MarshalBinary ( ) ( [ ] byte , error ) { if m == nil { return nil , nil   }   return swag . WriteJSON ( m )   }

1<CODESPLIT>https://github.com/gsblue/raygunclient/blob/adf02788b453a7775ef58305b79ed6f1637d8d90/internal/request.go#L58-L66<CODESPLIT>NewPostRequest<CODESPLIT>NewPostRequest creates a post request frome the arguments provided<CODESPLIT>func NewPostRequest ( err error , req * httpdata . HTTPRequest , customData interface { } , u string , tags [ ] string , version string , id string ) * PostRequest { return & PostRequest { OccuredOn : time . Now ( ) . UTC ( ) . Format ( " " ) , Details : newErrorDetails ( err , req , customData , u , tags , version , id ) , }   }

1<CODESPLIT>https://github.com/go-playground/locales/blob/630ebbb602847eba93e75ae38bbc7bb7abcf1ff3/ak/ak.go#L110-L112<CODESPLIT>MonthAbbreviated<CODESPLIT>MonthAbbreviated returns the locales abbreviated month given the month provided<CODESPLIT>func ( ak * ak ) MonthAbbreviated ( month time . Month ) string { return ak . monthsAbbreviated [ month ]   }

0<CODESPLIT>https://github.com/vbatts/tar-split/blob/620714a4c508c880ac1bdda9c8370a2b19af1a55/archive/tar/reader.go#L61-L63<CODESPLIT>RawBytes<CODESPLIT>NewReader creates a new Reader reading from r .<CODESPLIT>func ( tr * Reader ) RawBytes ( ) [ ] byte { if ! tr . RawAccounting { return nil   }   if tr . rawBytes == nil { tr . rawBytes = bytes . NewBuffer ( nil )   }   defer tr . rawBytes . Reset ( ) // if we've read them, then flush them.    return tr . rawBytes . Bytes ( )    }

1<CODESPLIT>https://github.com/goreleaser/goreleaser/blob/76fa5909a2dbf261ec188188db66a294786188c8/internal/linux/arch.go#L9-L22<CODESPLIT>Arch<CODESPLIT>Arch converts a goarch to a linux - compatible arch list of all linux arches : go tool dist list | grep linux<CODESPLIT>func Arch ( key string ) string { var arch = strings . TrimPrefix ( key , " " )   switch arch { case " " : return " "   case " " : return " "   case " " : // GOARCH + GOARM return " "   case " " : // GOARCH + GOARM return " "   }   return arch   }

0<CODESPLIT>https://github.com/paleg/libadclient/blob/cafe3d0b06a4062d9054e9511472eee165b7991f/adclient_wrapper.go#L553-L575<CODESPLIT>Regex<CODESPLIT>/ * map < string map < string std :: vector<string > > > search ( string OU int scope string filter const std :: vector <string > &attributes ) ;<CODESPLIT>func ( v * VerbalExpression ) Regex ( ) * regexp . Regexp { if ! v . compiled { v . regexp = regexp . MustCompile ( strings . Join ( [ ] string { strings . Join ( v . parts , " " ) , `(?` + v . getFlags ( ) + `)` , v . prefixes , v . expression , v . suffixes } , " " ) )   v . compiled = true   }   return v . regexp   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/mediaconvert/api.go#L13173-L13176<CODESPLIT>SetDurationInMs<CODESPLIT>SetVideoDetails sets the VideoDetails field s value .<CODESPLIT>func ( s * OutputDetail ) SetDurationInMs ( v int64 ) * OutputDetail { s . DurationInMs = & v   return s   }

0<CODESPLIT>https://github.com/mjibson/go-dsp/blob/11479a337f1259210b7c8f93f7bf2b0cc87b066e/dsputils/matrix.go#L156-L164<CODESPLIT>Value<CODESPLIT>Dim returns the array of any given index of the Matrix . Exactly one value in dims must be - 1 . This is the array dimension returned . For example using the Matrix documented in MakeMatrix : m . Dim ( [] int { 1 0 - 1 } ) = [] complex128 { 3 4 5 6 } m . Dim ( [] int { 0 - 1 2 } ) = [] complex128 { 3 7 1 } m . Dim ( [] int { - 1 1 3 } ) = [] complex128 { 8 0 }<CODESPLIT>func ( s * Matrix ) Value ( dims [ ] int ) complex128 { return s . list [ s . offset ( dims ) ]   }

1<CODESPLIT>https://github.com/gravitational/teleport/blob/d5243dbe8d36bba44bf640c08f1c49185ed2c8a4/lib/backend/memory/item.go#L37-L46<CODESPLIT>Less<CODESPLIT>Less is used for Btree operations returns true if item is less than the other one<CODESPLIT>func ( i * btreeItem ) Less ( iother btree . Item ) bool { switch other := iother . ( type ) { case * btreeItem : return bytes . Compare ( i . Key , other . Key ) < 0   case * prefixItem : return ! iother . Less ( i )   default : return false   }   }

0<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/staging/src/k8s.io/legacy-cloud-providers/azure/azure_loadbalancer.go#L1334-L1386<CODESPLIT>safeDeletePublicIP<CODESPLIT>This reconciles the PublicIP resources similar to how the LB is reconciled .<CODESPLIT>func ( az * Cloud ) safeDeletePublicIP ( service * v1 . Service , pipResourceGroup string , pip * network . PublicIPAddress , lb * network . LoadBalancer ) error { // Remove references if pip.IPConfiguration is not nil. if pip . PublicIPAddressPropertiesFormat != nil && pip . PublicIPAddressPropertiesFormat . IPConfiguration != nil && lb != nil && lb . LoadBalancerPropertiesFormat != nil && lb . LoadBalancerPropertiesFormat . FrontendIPConfigurations != nil { referencedLBRules := [ ] network . SubResource { }   frontendIPConfigUpdated := false   loadBalancerRuleUpdated := false    // Check whether there are still frontend IP configurations referring to it. ipConfigurationID := to . String ( pip . PublicIPAddressPropertiesFormat . IPConfiguration . ID )   if ipConfigurationID != " " { lbFrontendIPConfigs := * lb . LoadBalancerPropertiesFormat . FrontendIPConfigurations   for i := len ( lbFrontendIPConfigs ) - 1 ; i >= 0 ; i -- { config := lbFrontendIPConfigs [ i ]   if strings . EqualFold ( ipConfigurationID , to . String ( config . ID ) ) { if config . FrontendIPConfigurationPropertiesFormat != nil && config . FrontendIPConfigurationPropertiesFormat . LoadBalancingRules != nil { referencedLBRules = * config . FrontendIPConfigurationPropertiesFormat . LoadBalancingRules   }    frontendIPConfigUpdated = true   lbFrontendIPConfigs = append ( lbFrontendIPConfigs [ : i ] , lbFrontendIPConfigs [ i + 1 : ] ... )   break   }   }    if frontendIPConfigUpdated { lb . LoadBalancerPropertiesFormat . FrontendIPConfigurations = & lbFrontendIPConfigs   }   }    // Check whether there are still load balancer rules referring to it. if len ( referencedLBRules ) > 0 { referencedLBRuleIDs := sets . NewString ( )   for _ , refer := range referencedLBRules { referencedLBRuleIDs . Insert ( to . String ( refer . ID ) )   }    if lb . LoadBalancerPropertiesFormat . LoadBalancingRules != nil { lbRules := * lb . LoadBalancerPropertiesFormat . LoadBalancingRules   for i := len ( lbRules ) - 1 ; i >= 0 ; i -- { ruleID := to . String ( lbRules [ i ] . ID )   if ruleID != " " && referencedLBRuleIDs . Has ( ruleID ) { loadBalancerRuleUpdated = true   lbRules = append ( lbRules [ : i ] , lbRules [ i + 1 : ] ... )   }   }    if loadBalancerRuleUpdated { lb . LoadBalancerPropertiesFormat . LoadBalancingRules = & lbRules   }   }   }    // Update load balancer when frontendIPConfigUpdated or loadBalancerRuleUpdated. if frontendIPConfigUpdated || loadBalancerRuleUpdated { err := az . CreateOrUpdateLB ( service , * lb )   if err != nil { klog . Errorf ( " " , getServiceName ( service ) , err )   return err   }   }   }    pipName := to . String ( pip . Name )   klog . V ( 10 ) . Infof ( " " , pipResourceGroup , pipName )   err := az . DeletePublicIP ( service , pipResourceGroup , pipName )   if err != nil { if err = ignoreStatusNotFoundFromError ( err ) ; err != nil { return err   }   }   klog . V ( 10 ) . Infof ( " " , pipResourceGroup , pipName )    return nil   }

0<CODESPLIT>https://github.com/contiv/netplugin/blob/965773066d2b8ebed3514979949061a03d46fd20/netmaster/master/netmaster.go#L328-L330<CODESPLIT>DeleteGlobal<CODESPLIT>DeleteTenant deletes a tenant from the state store based on its ConfigTenant .<CODESPLIT>func DeleteGlobal ( stateDriver core . StateDriver ) error { masterGc := & mastercfg . GlobConfig { }   masterGc . StateDriver = stateDriver   err := masterGc . Read ( " " )   if err == nil { err = masterGc . Clear ( )   if err != nil { return err   }   }    // Setup global state gCfg := & gstate . Cfg { }   gCfg . StateDriver = stateDriver   err = gCfg . Read ( " " )   if err == nil { err = gCfg . DeleteResources ( " " )   if err != nil { return err   }   err = gCfg . DeleteResources ( " " )   if err != nil { return err   }    err = gCfg . Clear ( )   if err != nil { return err   }   }    // Delete old state gOper := & gstate . Oper { }   gOper . StateDriver = stateDriver   err = gOper . Read ( " " )   if err == nil { err = gOper . Clear ( )   if err != nil { return err   }   }    return nil   }

1<CODESPLIT>https://github.com/hashicorp/nomad/blob/01c267b92b476a61fbdef49ba3c6b62a84509043/client/vaultclient/vaultclient.go#L719-L726<CODESPLIT>Pop<CODESPLIT>Part of heap . Interface<CODESPLIT>func ( h * vaultDataHeapImp ) Pop ( ) interface { } { old := * h   n := len ( old )   entry := old [ n - 1 ]   entry . index = - 1 // for safety   * h = old [ 0 : n - 1 ]   return entry   }

0<CODESPLIT>https://github.com/luci/luci-go/blob/f6cef429871eee3be7c6903af88d3ee884eaf683/buildbucket/cli/log.go#L287-L336<CODESPLIT>printLogs<CODESPLIT>Next returns the next log entry . Returns io . EOF if there is no next log entry .<CODESPLIT>func ( r * logRun ) printLogs ( ctx context . Context , logs [ ] * pb . Step_Log ) error { if len ( logs ) == 0 { return nil   }    // Parse Log URLs. addrs := make ( [ ] * types . StreamAddr , len ( logs ) )   for i , l := range logs { var err error   addrs [ i ] , err = types . ParseURL ( l . Url )   if err != nil { return fmt . Errorf ( " " , l . Name , l . Url )   }    if addrs [ 0 ] . Host != addrs [ i ] . Host { // unrealistic return fmt . Errorf ( " " )   }   }    // Create a client. client := coordinator . NewClient ( & prpc . Client { C : r . httpClient , Host : addrs [ 0 ] . Host , } )    // Fetch descriptors and create fetchers. fetchers := make ( [ ] * fetcher . Fetcher , len ( addrs ) )   m := logMultiplexer { Chans : make ( [ ] logChan , len ( addrs ) ) }   err := parallel . FanOutIn ( func ( work chan <- func ( ) error ) { for i , addr := range addrs { i := i   stream := client . Stream ( addr . Project , addr . Path )   fetchers [ i ] = stream . Fetcher ( ctx , nil )   work <- func ( ) error { s , err := stream . State ( ctx )   if err != nil { return err   }   if s . Desc . StreamType != logpb . StreamType_TEXT { return fmt . Errorf ( " " , logs [ i ] . Name )   }   m . Chans [ i ] . start , err = ptypes . Timestamp ( s . Desc . Timestamp )   return err   }   }   } )   if err != nil { return err   }    // Start fetching. for i := range m . Chans { i := i   c := make ( chan logAndErr , 256 )   m . Chans [ i ] . c = c   go func ( ) { defer close ( c )   for { log , err := fetchers [ i ] . NextLogEntry ( )   c <- logAndErr { log , err }   if err != nil { break   }   }   } ( )   }    stdout , stderr := newStdioPrinters ( r . noColor )   for { chanIndex , entry , err := m . Next ( )   out := stdout   switch { case err == io . EOF : return nil   case err != nil : return err   case logs [ chanIndex ] . Name == " " : out = stderr   }    for _ , line := range entry . GetText ( ) . GetLines ( ) { out . f ( " " , line . Value , line . Delimiter )   }   if out . Err != nil { return out . Err   }   }   }

1<CODESPLIT>https://github.com/tendermint/tendermint/blob/4253e67c07c69be6d7f7263ab03944ce30a9fc90/types/genesis.go#L104-L116<CODESPLIT>GenesisDocFromJSON<CODESPLIT>------------------------------------------------------------ Make genesis state from file GenesisDocFromJSON unmarshalls JSON data into a GenesisDoc .<CODESPLIT>func GenesisDocFromJSON ( jsonBlob [ ] byte ) ( * GenesisDoc , error ) { genDoc := GenesisDoc { }   err := cdc . UnmarshalJSON ( jsonBlob , & genDoc )   if err != nil { return nil , err   }    if err := genDoc . ValidateAndComplete ( ) ; err != nil { return nil , err   }    return & genDoc , err   }

1<CODESPLIT>https://github.com/envoyproxy/go-control-plane/blob/9ffbaf293221f9fef735838632a9109d00aa2f4c/envoy/config/filter/http/buffer/v2/buffer.pb.go#L158-L163<CODESPLIT>XXX_OneofFuncs<CODESPLIT>XXX_OneofFuncs is for the internal use of the proto package .<CODESPLIT>func ( * BufferPerRoute ) XXX_OneofFuncs ( ) ( func ( msg proto . Message , b * proto . Buffer ) error , func ( msg proto . Message , tag , wire int , b * proto . Buffer ) ( bool , error ) , func ( msg proto . Message ) ( n int ) , [ ] interface { } ) { return _BufferPerRoute_OneofMarshaler , _BufferPerRoute_OneofUnmarshaler , _BufferPerRoute_OneofSizer , [ ] interface { } { ( * BufferPerRoute_Disabled ) ( nil ) , ( * BufferPerRoute_Buffer ) ( nil ) , }   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/backup/api.go#L3397-L3402<CODESPLIT>ListRecoveryPointsByResourceWithContext<CODESPLIT>ListRecoveryPointsByResourceWithContext is the same as ListRecoveryPointsByResource with the addition of the ability to pass a context and additional request options . See ListRecoveryPointsByResource for details on how to use this API operation . The context must be non - nil and will be used for request cancellation . If the context is nil a panic will occur . In the future the SDK may create sub - contexts for http . Requests . See https : // golang . org / pkg / context / for more information on using Contexts .<CODESPLIT>func ( c * Backup ) ListRecoveryPointsByResourceWithContext ( ctx aws . Context , input * ListRecoveryPointsByResourceInput , opts ... request . Option ) ( * ListRecoveryPointsByResourceOutput , error ) { req , out := c . ListRecoveryPointsByResourceRequest ( input )   req . SetContext ( ctx )   req . ApplyOptions ( opts ... )   return out , req . Send ( )   }

1<CODESPLIT>https://github.com/codegangsta/inject/blob/33e0aa1cb7c019ccc3fbe049a8262a6403d30504/inject.go#L153-L156<CODESPLIT>Set<CODESPLIT>Maps the given reflect . Type to the given reflect . Value and returns the Typemapper the mapping has been registered in .<CODESPLIT>func ( i * injector ) Set ( typ reflect . Type , val reflect . Value ) TypeMapper { i . values [ typ ] = val   return i   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/ssm/api.go#L34679-L34682<CODESPLIT>SetServiceRoleArn<CODESPLIT>SetPriority sets the Priority field s value .<CODESPLIT>func ( s * UpdateMaintenanceWindowTaskOutput ) SetServiceRoleArn ( v string ) * UpdateMaintenanceWindowTaskOutput { s . ServiceRoleArn = & v   return s   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/cloudfront/api.go#L5736-L5739<CODESPLIT>SetWhitelistedNames<CODESPLIT>SetForward sets the Forward field s value .<CODESPLIT>func ( s * CookiePreference ) SetWhitelistedNames ( v * CookieNames ) * CookiePreference { s . WhitelistedNames = v   return s   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/rds/api.go#L6510-L6515<CODESPLIT>DescribeGlobalClustersPages<CODESPLIT>DescribeGlobalClustersWithContext is the same as DescribeGlobalClusters with the addition of the ability to pass a context and additional request options . See DescribeGlobalClusters for details on how to use this API operation . The context must be non - nil and will be used for request cancellation . If the context is nil a panic will occur . In the future the SDK may create sub - contexts for http . Requests . See https : // golang . org / pkg / context / for more information on using Contexts .<CODESPLIT>func ( c * RDS ) DescribeGlobalClustersPages ( input * DescribeGlobalClustersInput , fn func ( * DescribeGlobalClustersOutput , bool ) bool ) error { return c . DescribeGlobalClustersPagesWithContext ( aws . BackgroundContext ( ) , input , fn )   }

1<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/pkg/util/config/config.go#L126-L130<CODESPLIT>Add<CODESPLIT>Add registers listener to receive updates of changes .<CODESPLIT>func ( b * Broadcaster ) Add ( listener Listener ) { b . listenerLock . Lock ( )   defer b . listenerLock . Unlock ( )   b . listeners = append ( b . listeners , listener )   }

0<CODESPLIT>https://github.com/keybase/client/blob/b352622cd8cc94798cfacbcb56ada203c18e519e/go/engine/unlock.go#L17-L21<CODESPLIT>DiscardAndCloseBody<CODESPLIT>NewUnlock creates a Unlock engine .<CODESPLIT>func DiscardAndCloseBody ( resp * http . Response ) error { if resp == nil { return fmt . Errorf ( " " )   }   return discardAndClose ( resp . Body )   }

0<CODESPLIT>https://github.com/uber/ringpop-go/blob/6475220d53092c8264fc6ce9416a351c960fe9fc/swim/heal_partition.go#L149-L156<CODESPLIT>mergePartitions<CODESPLIT>pingableHosts returns the address of those changes that are pingable .<CODESPLIT>func mergePartitions ( node * Node , target string , MB [ ] Change ) error { node . healer . logger . WithField ( " " , target ) . Info ( " " )    // Add membership of B to this node, so that the membership // information of B will be disseminated through A. node . memberlist . Update ( MB )    // Send membership of A to the target node, so that the membership // information of partition A will be disseminated through B. MA := node . disseminator . MembershipAsChanges ( )   _ , err := sendPingWithChanges ( node , target , MA , time . Second )   return err   }

0<CODESPLIT>https://github.com/containerd/containerd/blob/a17c8095716415cebb1157a27db5fccace56b0fc/leases/lease.go#L67-L76<CODESPLIT>WithNoNewKeyring<CODESPLIT>WithExpiration sets an expiration on the lease<CODESPLIT>func WithNoNewKeyring ( ctx context . Context , c * Client , ti * TaskInfo ) error { if CheckRuntime ( ti . Runtime ( ) , " " ) { if ti . Options == nil { ti . Options = & options . Options { }   }   opts , ok := ti . Options . ( * options . Options )   if ! ok { return errors . New ( " " )   }   opts . NoNewKeyring = true   } else { if ti . Options == nil { ti . Options = & runctypes . CreateOptions { }   }   opts , ok := ti . Options . ( * runctypes . CreateOptions )   if ! ok { return errors . New ( " " )   }   opts . NoNewKeyring = true   }   return nil   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/workdocs/api.go#L6696-L6699<CODESPLIT>SetLimit<CODESPLIT>SetLimit sets the Limit field s value .<CODESPLIT>func ( s * DescribeFolderContentsInput ) SetLimit ( v int64 ) * DescribeFolderContentsInput { s . Limit = & v   return s   }

0<CODESPLIT>https://github.com/brutella/hc/blob/e301c8e55cb063ac61007bd632f9bda2d700557e/ip_transport.go#L68-L137<CODESPLIT>isPaired<CODESPLIT>NewIPTransport creates a transport to provide accessories over IP . The IP transports stores the crypto keys inside a database which is by default inside a folder at the current working directory . The folder is named exactly as the accessory name . The transports can contain more than one accessory . If this is the case the first accessory acts as the HomeKit bridge . * Important : * Changing the name of the accessory or letting multiple transports store the data inside the same database lead to unexpected behavior – don t do that . The transport is secured with an 8 - digit pin which must be entered by an iOS client to successfully pair with the accessory . If the provided transport config does not specify any pin 00102003 is used .<CODESPLIT>func ( t * ipTransport ) isPaired ( ) bool { // If more than one entity is stored in the database, we are paired with a device. // The transport itself is a device and is stored in the database, therefore // we have to check for more than one entity. if es , err := t . database . Entities ( ) ; err == nil && len ( es ) > 1 { return true   }    return false   }

0<CODESPLIT>https://github.com/olivere/elastic/blob/0534a7b1bf47b1ccf57e905491a641709f8a623d/indices_flush_synced.go#L61-L64<CODESPLIT>AllowNoIndices<CODESPLIT>ExpandWildcards specifies whether to expand wildcard expression to concrete indices that are open closed or both ..<CODESPLIT>func ( s * IndicesSyncedFlushService ) AllowNoIndices ( allowNoIndices bool ) * IndicesSyncedFlushService { s . allowNoIndices = & allowNoIndices   return s   }

0<CODESPLIT>https://github.com/go-acme/lego/blob/29c63545ce6fffd8289c55c39d81c4fde993533d/providers/dns/vegadns/vegadns.go#L93-L113<CODESPLIT>NewJWS<CODESPLIT>CleanUp removes the TXT record matching the specified parameters<CODESPLIT>func NewJWS ( privateKey crypto . PrivateKey , kid string , nonceManager * nonces . Manager ) * JWS { return & JWS { privKey : privateKey , nonces : nonceManager , kid : kid , }   }

1<CODESPLIT>https://github.com/intelsdi-x/snap-plugin-utilities/blob/2a2aa9b0e9175b89c902d7183564e9a12f3467ac/source/simple.go#L43-L52<CODESPLIT>Run<CODESPLIT>Run executes source command and gathers its output in internal structure . It returns nil in case of success and returns error if command execution failed .<CODESPLIT>func ( ss * simpleSource ) Run ( ) error { out , err := exec . Command ( ss . command , ss . args ... ) . Output ( )   if err != nil { return err   }    ss . rawData = out   return nil   }

1<CODESPLIT>https://github.com/tendermint/tendermint/blob/4253e67c07c69be6d7f7263ab03944ce30a9fc90/libs/pubsub/pubsub.go#L252-L256<CODESPLIT>NumClientSubscriptions<CODESPLIT>NumClientSubscriptions returns the number of subscriptions the client has .<CODESPLIT>func ( s * Server ) NumClientSubscriptions ( clientID string ) int { s . mtx . RLock ( )   defer s . mtx . RUnlock ( )   return len ( s . subscriptions [ clientID ] )   }

0<CODESPLIT>https://github.com/sercand/kuberesolver/blob/93f6fd85e473ae1b5f538428345c038d26572fa8/util.go#L30-L35<CODESPLIT>NewInClusterK8sClient<CODESPLIT>HandleCrash simply catches a crash and logs an error . Meant to be called via defer .<CODESPLIT>func NewInClusterK8sClient ( ) ( K8sClient , error ) { host , port := os . Getenv ( " " ) , os . Getenv ( " " )   if len ( host ) == 0 || len ( port ) == 0 { return nil , fmt . Errorf ( " " )   }   token , err := ioutil . ReadFile ( serviceAccountToken )   if err != nil { return nil , err   }   ca , err := ioutil . ReadFile ( serviceAccountCACert )   if err != nil { return nil , err   }   certPool := x509 . NewCertPool ( )   certPool . AppendCertsFromPEM ( ca )   transport := & http . Transport { TLSClientConfig : & tls . Config { MinVersion : tls . VersionTLS10 , RootCAs : certPool , } }   httpClient := & http . Client { Transport : transport , Timeout : time . Nanosecond * 0 }    return & k8sClient { host : " " + net . JoinHostPort ( host , port ) , token : string ( token ) , httpClient : httpClient , } , nil   }

1<CODESPLIT>https://github.com/go-ini/ini/blob/3be5ad479f69d4e08d7fe25edf79bf3346bd658e/file.go#L390-L396<CODESPLIT>WriteToIndent<CODESPLIT>WriteToIndent writes content into io . Writer with given indention . If PrettyFormat has been set to be true it will align = sign with spaces under each section .<CODESPLIT>func ( f * File ) WriteToIndent ( w io . Writer , indent string ) ( int64 , error ) { buf , err := f . writeToBuffer ( indent )   if err != nil { return 0 , err   }   return buf . WriteTo ( w )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/cloudwatchevents/api.go#L2891-L2894<CODESPLIT>SetRules<CODESPLIT>SetNextToken sets the NextToken field s value .<CODESPLIT>func ( s * ListRulesOutput ) SetRules ( v [ ] * Rule ) * ListRulesOutput { s . Rules = v   return s   }

1<CODESPLIT>https://github.com/koding/kite/blob/baa1a54919e3035417f7571dd46005e91afe8abe/kontrolclient.go#L53-L102<CODESPLIT>SetupKontrolClient<CODESPLIT>SetupKontrolClient setups and prepares a the kontrol instance . It connects to kontrol and reconnects again if there is any disconnections . This method is called internally whenever a kontrol client specific action is taking . However if you wish to connect earlier you may call this method .<CODESPLIT>func ( k * Kite ) SetupKontrolClient ( ) error { if k . kontrol . Client != nil { return nil // already prepared   }    if k . Config . KontrolURL == " " { return errors . New ( " " )   }    client := k . NewClient ( k . Config . KontrolURL )   client . Kite = protocol . Kite { Name : " " } // for logging purposes   client . Auth = & Auth { Type : " " , Key : k . KiteKey ( ) , }    k . kontrol . Lock ( )   k . kontrol . Client = client   k . kontrol . Unlock ( )    k . kontrol . OnConnect ( func ( ) { k . Log . Info ( " " )   k . Log . Debug ( " " , client . session . ID ( ) )    // try to re-register on connect k . kontrol . Lock ( )   if k . kontrol . lastRegisteredURL != nil { select { case k . kontrol . registerChan <- k . kontrol . lastRegisteredURL : default : }   }   k . kontrol . Unlock ( )    // signal all other methods that are listening on this channel, that we // are connected to kontrol. k . kontrol . onceConnected . Do ( func ( ) { close ( k . kontrol . readyConnected ) } )   } )    k . kontrol . OnDisconnect ( func ( ) { k . Log . Warning ( " " )   } )    // non blocking, is going to reconnect if the connection goes down. if _ , err := k . kontrol . DialForever ( ) ; err != nil { return err   }    return nil   }

0<CODESPLIT>https://github.com/z7zmey/php-parser/blob/394f8821001f38fe5b4c4aaffd4fa20e50927a3f/node/expr/n_static_call.go#L20-L27<CODESPLIT>Walk<CODESPLIT>NewStaticCall node constructor<CODESPLIT>func ( n * ClosureUse ) Walk ( v walker . Visitor ) { if v . EnterNode ( n ) == false { return   }    if n . Uses != nil { v . EnterChildList ( " " , n )   for _ , nn := range n . Uses { if nn != nil { nn . Walk ( v )   }   }   v . LeaveChildList ( " " , n )   }    v . LeaveNode ( n )   }

0<CODESPLIT>https://github.com/scgolang/sc/blob/2b87756659e2b72d97cec43b6896ed01c0365097/sinosc.go#L22-L26<CODESPLIT>Rate<CODESPLIT>Rate creates a new ugen at a specific rate . If rate is an unsupported value this method will cause a runtime panic .<CODESPLIT>func ( t TRand ) Rate ( rate int8 ) Input { CheckRate ( rate )   ( & t ) . defaults ( )   return NewInput ( " " , rate , 0 , 1 , t . Lo , t . Hi , t . Trig )   }

1<CODESPLIT>https://github.com/jsimnz/goplugin/blob/4abda20728804eb4dd833196790aee1c112c7c9d/goplugin.go#L250-L258<CODESPLIT>getType<CODESPLIT>Grab the type of plugin from the export _PluginType function<CODESPLIT>func ( p plugin ) getType ( ) Type { var typeFn func ( ) uint16   fnName := " "   p . lib . Sym ( fnName , & typeFn )   if typeFn == nil { panic ( " " )   }   return Type ( typeFn ( ) )   }

0<CODESPLIT>https://github.com/ipfs/go-datastore/blob/aa9190c18f1576be98e974359fd08c64ca0b5a94/basic_ds.go#L107-L109<CODESPLIT>GetSize<CODESPLIT>Has implements Datastore . Has<CODESPLIT>func ( d * NullDatastore ) GetSize ( key Key ) ( size int , err error ) { return - 1 , ErrNotFound   }

1<CODESPLIT>https://github.com/ethereum/go-ethereum/blob/b6c0234e0b5c9d459d1ed784c910f6348890d56b/les/peer.go#L320-L323<CODESPLIT>ReplyTxStatus<CODESPLIT>ReplyTxStatus creates a reply with a batch of transaction status records corresponding to the ones requested .<CODESPLIT>func ( p * peer ) ReplyTxStatus ( reqID uint64 , stats [ ] txStatus ) * reply { data , _ := rlp . EncodeToBytes ( stats )   return & reply { p . rw , TxStatusMsg , reqID , data }   }

0<CODESPLIT>https://github.com/kardianos/govendor/blob/d0fd0db8a43d4b87c2ce416f60ae78407f3f3c62/context/modify.go#L676-L754<CODESPLIT>ResolveAutoVendorFileOrigin<CODESPLIT>Alter runs any requested package alterations .<CODESPLIT>func ( ctx * Context ) ResolveAutoVendorFileOrigin ( cc [ ] * Conflict ) [ ] * Conflict { for _ , c := range cc { if c . Resolved { continue   }   vp := ctx . VendorFilePackagePath ( c . Canonical )   if vp == nil { continue   }   // If this was just added, we still can't rely on it. // We still need to ask user. if vp . Add { continue   }   lookFor := vp . Path   if len ( vp . Origin ) != 0 { lookFor = vp . Origin   }   for i , op := range c . Operation { if op . State != OpReady { continue   }    if op . Pkg . Local == lookFor { c . OpIndex = i   c . Resolved = true   break   }   }   }   return cc   }

1<CODESPLIT>https://github.com/syncthing/syncthing/blob/5fa846775689fdacf523414160fcc7d3a70eeaa1/cmd/stdiscosrv/database.go#L337-L354<CODESPLIT>expire<CODESPLIT>expire returns the list of addresses after removing expired entries . Expiration happen in place so the slice given as the parameter is destroyed . Internal order is not preserved .<CODESPLIT>func expire ( addrs [ ] DatabaseAddress , now int64 ) [ ] DatabaseAddress { i := 0   for i < len ( addrs ) { if addrs [ i ] . Expires < now { // This item is expired. Replace it with the last in the list // (noop if we are at the last item). addrs [ i ] = addrs [ len ( addrs ) - 1 ]   // Wipe the last item of the list to release references to // strings and stuff. addrs [ len ( addrs ) - 1 ] = DatabaseAddress { }   // Shorten the slice. addrs = addrs [ : len ( addrs ) - 1 ]   continue   }   i ++   }   return addrs   }

0<CODESPLIT>https://github.com/sacloud/libsacloud/blob/41c392dee98a83260abbe0fcd5c13beb7c75d103/api/dns.go#L97-L99<CODESPLIT>Create<CODESPLIT>New 新規作成用パラメーター作成<CODESPLIT>func ( api * DNSAPI ) Create ( value * sacloud . DNS ) ( * sacloud . DNS , error ) { return api . request ( func ( res * dnsResponse ) error { return api . create ( api . createRequest ( value ) , res )   } )   }

0<CODESPLIT>https://github.com/hyperhq/hyperd/blob/8a7e67dc33bbccdfc92b5e2a908bbdb1c5d9b956/utils/utils.go#L72-L82<CODESPLIT>NewRouter<CODESPLIT>FormatMountLabel returns a string to be used by the mount command . The format of this string will be used to alter the labeling of the mountpoint . The string returned is suitable to be used as the options field of the mount command . If you need to have additional mount point options you can pass them in as the first parameter . Second parameter is the label that you wish to apply to all content in the mount point .<CODESPLIT>func NewRouter ( b Backend ) router . Router { r := & podRouter { backend : b , }    r . routes = [ ] router . Route { // GET local . NewGetRoute ( " " , r . getPodInfo ) , local . NewGetRoute ( " " , r . getPodStats ) , local . NewGetRoute ( " " , r . getPortMappings ) , local . NewGetRoute ( " " , r . getList ) , // POST local . NewPostRoute ( " " , r . postPodCreate ) , local . NewPostRoute ( " " , r . postPodLabels ) , local . NewPostRoute ( " " , r . postPodStart ) , local . NewPostRoute ( " " , r . postPodStop ) , local . NewPostRoute ( " " , r . postPodKill ) , local . NewPostRoute ( " " , r . postPodPause ) , local . NewPostRoute ( " " , r . postPodUnpause ) , // PUT local . NewPutRoute ( " " , r . putPortMappings ) , // DELETE local . NewDeleteRoute ( " " , r . deletePod ) , }    return r   }

0<CODESPLIT>https://github.com/beamly/go-gocd/blob/683f1a09c81e7911e899ef194fc4dc3392505636/gocd/genericactions.go#L60-L71<CODESPLIT>unmarshallMaterialAttributesPlugin<CODESPLIT>Returns a message from the DELETE action on the provided HTTP resource .<CODESPLIT>func unmarshallMaterialAttributesPlugin ( mapp * MaterialAttributesPlugin , i map [ string ] interface { } ) { for key , value := range i { if value == nil { continue   }   switch key { case " " : mapp . Ref = value . ( string )   case " " : mapp . Destination = value . ( string )   case " " : mapp . Filter = unmarshallMaterialFilter ( value . ( map [ string ] interface { } ) )   case " " : mapp . InvertFilter = value . ( bool )   }   }   }

0<CODESPLIT>https://github.com/kubernetes/kops/blob/06b81aeae67d8ad440828a31247c74a46bccf04d/upup/pkg/fi/cloudup/awstasks/externalloadbalancerattachment_fitask.go#L33-L46<CODESPLIT>findEtcdStatus<CODESPLIT>UnmarshalJSON implements conversion to JSON supporting an alternate specification of the object as a string<CODESPLIT>func findEtcdStatus ( c * openstackCloud , cluster * kops . Cluster ) ( [ ] kops . EtcdClusterStatus , error ) { statusMap := make ( map [ string ] * kops . EtcdClusterStatus )   glog . V ( 2 ) . Infof ( " " )   opt := cinderv2 . ListOpts { Metadata : c . tags , }   volumes , err := c . ListVolumes ( opt )   if err != nil { return nil , fmt . Errorf ( " " , err )   }    for _ , volume := range volumes { volumeID := volume . ID    etcdClusterName := " "   var etcdClusterSpec * etcd . EtcdClusterSpec    master := false   for k , v := range volume . Metadata { if strings . HasPrefix ( k , TagNameEtcdClusterPrefix ) { etcdClusterName := strings . TrimPrefix ( k , TagNameEtcdClusterPrefix )   etcdClusterSpec , err = etcd . ParseEtcdClusterSpec ( etcdClusterName , v )   if err != nil { return nil , fmt . Errorf ( " " , v , volumeID , err )   }   } else if k == TagNameRolePrefix + TagRoleMaster { master = true   }   }   if etcdClusterSpec == nil || ! master { continue   }    etcdClusterName = etcdClusterSpec . ClusterKey   status := statusMap [ etcdClusterName ]   if status == nil { status = & kops . EtcdClusterStatus { Name : etcdClusterName , }   statusMap [ etcdClusterName ] = status   }    memberName := etcdClusterSpec . NodeName   status . Members = append ( status . Members , & kops . EtcdMemberStatus { Name : memberName , VolumeId : volume . ID , } )   }   var status [ ] kops . EtcdClusterStatus   for _ , v := range statusMap { status = append ( status , * v )   }   return status , nil   }

0<CODESPLIT>https://github.com/golang/geo/blob/476085157cff9aaeef4d4f124649436542d4114a/s1/interval.go#L106-L116<CODESPLIT>Center<CODESPLIT>Length returns the length of the interval . The length of an empty interval is negative .<CODESPLIT>func ( i Interval ) Center ( ) float64 { c := 0.5 * ( i . Lo + i . Hi )   if ! i . IsInverted ( ) { return c   }   if c <= 0 { return c + math . Pi   }   return c - math . Pi   }

0<CODESPLIT>https://github.com/clbanning/x2j/blob/5e605d46809c441eb0e565867b63f7d80c9140c2/x2j.go#L286-L317<CODESPLIT>recast<CODESPLIT>( * Node ) treeToMap - convert a tree of nodes into a map [ string ] interface {} . ( Parses to map that is structurally the same as from json . Unmarshal () . ) Note : root is not instantiated ; call with : m [ n . key ] = n . treeToMap ( recast ) .<CODESPLIT>func recast ( s string , r bool ) interface { } { if r { // handle numeric strings ahead of boolean if f , err := strconv . ParseFloat ( s , 64 ) ; err == nil { return interface { } ( f )   }   // ParseBool treats "1"==true & "0"==false if b , err := strconv . ParseBool ( s ) ; err == nil { return interface { } ( b )   }   }   return interface { } ( s )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/ssm/api.go#L25289-L25292<CODESPLIT>Validate<CODESPLIT>SetAssociationId sets the AssociationId field s value .<CODESPLIT>func ( s * ListAssociationVersionsInput ) Validate ( ) error { invalidParams := request . ErrInvalidParams { Context : " " }   if s . AssociationId == nil { invalidParams . Add ( request . NewErrParamRequired ( " " ) )   }   if s . MaxResults != nil && * s . MaxResults < 1 { invalidParams . Add ( request . NewErrParamMinValue ( " " , 1 ) )   }    if invalidParams . Len ( ) > 0 { return invalidParams   }   return nil   }

1<CODESPLIT>https://github.com/google/go-genproto/blob/54afdca5d873f7b529e2ce3def1a99df16feda90/googleapis/ads/googleads/v0/services/google_ads_service.pb.go#L1133-L1150<CODESPLIT>XXX_OneofFuncs<CODESPLIT>XXX_OneofFuncs is for the internal use of the proto package .<CODESPLIT>func ( * MutateOperation ) XXX_OneofFuncs ( ) ( func ( msg proto . Message , b * proto . Buffer ) error , func ( msg proto . Message , tag , wire int , b * proto . Buffer ) ( bool , error ) , func ( msg proto . Message ) ( n int ) , [ ] interface { } ) { return _MutateOperation_OneofMarshaler , _MutateOperation_OneofUnmarshaler , _MutateOperation_OneofSizer , [ ] interface { } { ( * MutateOperation_AdGroupAdOperation ) ( nil ) , ( * MutateOperation_AdGroupBidModifierOperation ) ( nil ) , ( * MutateOperation_AdGroupCriterionOperation ) ( nil ) , ( * MutateOperation_AdGroupOperation ) ( nil ) , ( * MutateOperation_BiddingStrategyOperation ) ( nil ) , ( * MutateOperation_CampaignBidModifierOperation ) ( nil ) , ( * MutateOperation_CampaignBudgetOperation ) ( nil ) , ( * MutateOperation_CampaignOperation ) ( nil ) , ( * MutateOperation_CampaignSharedSetOperation ) ( nil ) , ( * MutateOperation_ConversionActionOperation ) ( nil ) , ( * MutateOperation_CampaignCriterionOperation ) ( nil ) , ( * MutateOperation_SharedCriterionOperation ) ( nil ) , ( * MutateOperation_SharedSetOperation ) ( nil ) , ( * MutateOperation_UserListOperation ) ( nil ) , }   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/sagemaker/api.go#L6488-L6493<CODESPLIT>StopTrainingJob<CODESPLIT>StopTrainingJobWithContext is the same as StopTrainingJob with the addition of the ability to pass a context and additional request options . See StopTrainingJob for details on how to use this API operation . The context must be non - nil and will be used for request cancellation . If the context is nil a panic will occur . In the future the SDK may create sub - contexts for http . Requests . See https : // golang . org / pkg / context / for more information on using Contexts .<CODESPLIT>func ( c * SageMaker ) StopTrainingJob ( input * StopTrainingJobInput ) ( * StopTrainingJobOutput , error ) { req , out := c . StopTrainingJobRequest ( input )   return out , req . Send ( )   }

0<CODESPLIT>https://github.com/crewjam/go-cloudformation/blob/38e5b663797c837aa76bea2dd4be52f3563be652/schema.go#L11414-L11428<CODESPLIT>UnmarshalJSON<CODESPLIT>UnmarshalJSON sets the object from the provided JSON representation<CODESPLIT>func ( l * IoTTopicRuleRepublishActionList ) UnmarshalJSON ( buf [ ] byte ) error { // Cloudformation allows a single object when a list of objects is expected item := IoTTopicRuleRepublishAction { }   if err := json . Unmarshal ( buf , & item ) ; err == nil { * l = IoTTopicRuleRepublishActionList { item }   return nil   }   list := [ ] IoTTopicRuleRepublishAction { }   err := json . Unmarshal ( buf , & list )   if err == nil { * l = IoTTopicRuleRepublishActionList ( list )   return nil   }   return err   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/codepipeline/api.go#L3897-L3919<CODESPLIT>SetExternalExecutionUrl<CODESPLIT>Validate inspects the fields of the type to determine if they are valid .<CODESPLIT>func ( s * ActionExecutionResult ) SetExternalExecutionUrl ( v string ) * ActionExecutionResult { s . ExternalExecutionUrl = & v   return s   }

1<CODESPLIT>https://github.com/btcsuite/btcd/blob/96897255fd17525dd12426345d279533780bc4e1/rpcclient/extensions.go#L471-L473<CODESPLIT>Version<CODESPLIT>Version returns information about the server s JSON - RPC API versions . NOTE : This is a btcsuite extension ported from github . com / decred / dcrrpcclient .<CODESPLIT>func ( c * Client ) Version ( ) ( map [ string ] btcjson . VersionResult , error ) { return c . VersionAsync ( ) . Receive ( )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/cloudwatchlogs/api.go#L6253-L6256<CODESPLIT>SetMessage<CODESPLIT>SetLogStreamName sets the LogStreamName field s value .<CODESPLIT>func ( s * FilteredLogEvent ) SetMessage ( v string ) * FilteredLogEvent { s . Message = & v   return s   }

1<CODESPLIT>https://github.com/kaneshin/pigeon/blob/7719cd94cfb447e3e60c4e8b5b7501f9f36e4018/credentials/credentials.go#L56-L60<CODESPLIT>Get<CODESPLIT>Get returns the credentials value or error if the credentials Value failed to be retrieved .<CODESPLIT>func ( c * Credentials ) Get ( ) ( Value , error ) { c . m . Lock ( )   defer c . m . Unlock ( )   return c . provider . Retrieve ( )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/ram/api.go#L3211-L3214<CODESPLIT>SetId<CODESPLIT>SetLastUpdatedTime sets the LastUpdatedTime field s value .<CODESPLIT>func ( s * Principal ) SetId ( v string ) * Principal { s . Id = & v   return s   }

0<CODESPLIT>https://github.com/algolia/algoliasearch-client-go/blob/dc059c0414d8c06e2b2bb47412b2130799bfcc9f/algolia/internal/opt/get_ranking_info.go#L11-L18<CODESPLIT>ExplainEqual<CODESPLIT>ExtractGetRankingInfo returns the first found GetRankingInfoOption from the given variadic arguments or nil otherwise .<CODESPLIT>func ExplainEqual ( o1 , o2 * ExplainOption ) bool { if o1 != nil { return o1 . Equal ( o2 )   }   if o2 != nil { return o2 . Equal ( o1 )   }   return true   }

0<CODESPLIT>https://github.com/nuveo/log/blob/44d02db6bdf8b1482f48e36274ad087a15a86c07/log.go#L90-L94<CODESPLIT>Shuffle<CODESPLIT>AddAdapter allows to add an adapter and parameters<CODESPLIT>func ( s * Shuffler ) Shuffle ( data Interface ) { n := data . Len ( )   for i := n - 1 ; i >= 0 ; i -- { j := ( * rand . Rand ) ( s ) . Intn ( i + 1 )   data . Swap ( i , j )   }   }

0<CODESPLIT>https://github.com/hyperledger/fabric/blob/49f496925df1e66198d7ec794849536c9f8b104b/gossip/comm/mock/mock_comm.go#L172-L176<CODESPLIT>Handshake<CODESPLIT>Accept returns a dedicated read - only channel for messages sent by other nodes that match a certain predicate . Each message from the channel can be used to send a reply back to the sender<CODESPLIT>func ( mock * commMock ) Handshake ( peer * comm . RemotePeer ) ( api . PeerIdentityType , error ) { return nil , nil   }

1<CODESPLIT>https://github.com/ethereum/go-ethereum/blob/b6c0234e0b5c9d459d1ed784c910f6348890d56b/common/types.go#L324-L330<CODESPLIT>NewMixedcaseAddressFromString<CODESPLIT>NewMixedcaseAddressFromString is mainly meant for unit - testing<CODESPLIT>func NewMixedcaseAddressFromString ( hexaddr string ) ( * MixedcaseAddress , error ) { if ! IsHexAddress ( hexaddr ) { return nil , fmt . Errorf ( " " )   }   a := FromHex ( hexaddr )   return & MixedcaseAddress { addr : BytesToAddress ( a ) , original : hexaddr } , nil   }

0<CODESPLIT>https://github.com/gorilla/http/blob/732371cf4733ce912492655d1c0d18af235771f2/client/writer.go#L85-L92<CODESPLIT>StartBody<CODESPLIT>WriteBody writes the contents of r to the wire .<CODESPLIT>func ( w * writer ) StartBody ( ) error { if _ , err := w . Write ( [ ] byte ( " \r \n " ) ) ; err != nil { return err   }   err := w . Writer . ( * bufio . Writer ) . Flush ( )   w . Writer , w . tmp = w . tmp , nil   w . phase = body   return err   }

1<CODESPLIT>https://github.com/vmware/govmomi/blob/fc3f0e9d2275df0e497a80917807a7c72d3c35bc/vapi/library/library_item.go#L62-L82<CODESPLIT>CreateLibraryItem<CODESPLIT>CreateLibraryItem creates a new library item<CODESPLIT>func ( c * Manager ) CreateLibraryItem ( ctx context . Context , item Item ) ( string , error ) { type createItemSpec struct { Name string `json:"name"`   Description string `json:"description"`   LibraryID string `json:"library_id,omitempty"`   Type string `json:"type"`   }   spec := struct { Item createItemSpec `json:"create_spec"`   } { Item : createItemSpec { Name : item . Name , Description : item . Description , LibraryID : item . LibraryID , Type : item . Type , } , }   url := internal . URL ( c , internal . LibraryItemPath )   var res string   return res , c . Do ( ctx , url . Request ( http . MethodPost , spec ) , & res )   }

1<CODESPLIT>https://github.com/gordonklaus/portaudio/blob/00e7307ccd93051979a933c6fd5ead641eba5686/portaudio.go#L960-L966<CODESPLIT>AvailableToRead<CODESPLIT>AvailableToRead returns the number of frames that can be read from the stream without waiting .<CODESPLIT>func ( s * Stream ) AvailableToRead ( ) ( int , error ) { n := C . Pa_GetStreamReadAvailable ( s . paStream )   if n < 0 { return 0 , newError ( C . PaError ( n ) )   }   return int ( n ) , nil   }

1<CODESPLIT>https://github.com/gopasspw/gopass/blob/fe4e21d62182f0f2e4ef9a0ca8168d849dc52bd4/pkg/out/context.go#L14-L16<CODESPLIT>WithPrefix<CODESPLIT>WithPrefix returns a context with the given prefix set<CODESPLIT>func WithPrefix ( ctx context . Context , prefix string ) context . Context { return context . WithValue ( ctx , ctxKeyPrefix , prefix )   }

0<CODESPLIT>https://github.com/apcera/libretto/blob/3178799fbb1e39c74b02e3ecf46330b3ef0ed486/virtualmachine/exoscale/util.go#L135-L171<CODESPLIT>fillZoneID<CODESPLIT>fillSecurityGroupsID fills the security group identifiers based on name . If a security group already has the ID it will remain unchanged . If any of the security groups is not founds error is returned .<CODESPLIT>func ( vm * VM ) fillZoneID ( ) error { params := url . Values { }   params . Set ( " " , strings . ToLower ( string ( vm . Zone . Name ) ) )    client := vm . getExoClient ( )   resp , err := client . Request ( " " , params )   if err != nil { return fmt . Errorf ( " " , vm . ServiceOffering . Name , err )   }    zones := & egoscale . ListZonesResponse { }   if err := json . Unmarshal ( resp , zones ) ; err != nil { return fmt . Errorf ( " " , err )   }    for _ , zone := range zones . Zones { if zone . Name == vm . Zone . Name { vm . Zone . ID = zone . Id   return nil   }   }    return fmt . Errorf ( " " , vm . Zone . Name )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/mediaconvert/api.go#L10859-L10862<CODESPLIT>SetOrder<CODESPLIT>SetQueue sets the Queue field s value .<CODESPLIT>func ( s * ListJobsInput ) SetOrder ( v string ) * ListJobsInput { s . Order = & v   return s   }

0<CODESPLIT>https://github.com/vitessio/vitess/blob/d568817542a413611801aa17a1c213aa95592182/go/vt/vttablet/tabletserver/replication_watcher.go#L151-L191<CODESPLIT>EventToken<CODESPLIT>ComputeExtras returns the requested ResultExtras based on the supplied options .<CODESPLIT>func ( rpw * ReplicationWatcher ) EventToken ( ) * querypb . EventToken { rpw . mu . Lock ( )   defer rpw . mu . Unlock ( )   return rpw . eventToken   }

1<CODESPLIT>https://github.com/iris-contrib/formBinder/blob/fbd5963f41e18ae1f1423ba046235094b0721ea1/binder.go#L198-L272<CODESPLIT>begin<CODESPLIT>begin analyzes the current path to walk through it<CODESPLIT>func ( dec * Decoder ) begin ( ) ( err error ) { inBracket := false   valBracket := " "   bracketClosed := false   lastPos := 0   tmp := dec . field    // parse path for i , char := range tmp { if char == '[' && inBracket == false { // found an opening bracket bracketClosed = false   inBracket = true   dec . field = tmp [ lastPos : i ]   lastPos = i + 1   /* 				if err = dec.walk(); err != nil { 					return 				} 			*/ continue   } else if inBracket { // it is inside of bracket, so get its value if char == ']' { /* 					nextChar := tmp[i+1:] 					if nextChar != "" { 						t := nextChar[:1] 						if t != "[" && t != "." { 							valBracket += string(char) 							continue 						} 					} 				*/ // found an closing bracket, so it will be recently close, so put as true the bracketClosed // and put as false inBracket and pass the value of bracket to dec.key inBracket = false   bracketClosed = true   dec . bracket = valBracket   lastPos = i + 1   if err = dec . walk ( ) ; err != nil { return   }   valBracket = " "   } else { // still inside the bracket, so follow getting its value valBracket += string ( char )   }   continue   } else if ! inBracket { // not found any bracket, so try found a field if char == '.' { // found a field, we need to know if the field is next of a closing bracket, // for example: [0].Field if bracketClosed { bracketClosed = false   lastPos = i + 1   continue   }   // found a field, but is not next of a closing bracket, for example: Field1.Field2 dec . field = tmp [ lastPos : i ]   //dec.field = tmp[:i] lastPos = i + 1   if err = dec . walk ( ) ; err != nil { return   }   }   continue   }   }   // last field of path dec . field = tmp [ lastPos : ]    return dec . end ( )   }

1<CODESPLIT>https://github.com/rs/zerolog/blob/acf3980132bfcdc48638724e6e3d9e5749b85999/event.go#L616-L622<CODESPLIT>Dur<CODESPLIT>Dur adds the field key with duration d stored as zerolog . DurationFieldUnit . If zerolog . DurationFieldInteger is true durations are rendered as integer instead of float .<CODESPLIT>func ( e * Event ) Dur ( key string , d time . Duration ) * Event { if e == nil { return e   }   e . buf = enc . AppendDuration ( enc . AppendKey ( e . buf , key ) , d , DurationFieldUnit , DurationFieldInteger )   return e   }

1<CODESPLIT>https://github.com/lucas-clemente/quic-go/blob/c135b4f1e34c621c24563def836af2c04af90ae6/internal/ackhandler/received_packet_history.go#L29-L76<CODESPLIT>ReceivedPacket<CODESPLIT>ReceivedPacket registers a packet with PacketNumber p and updates the ranges<CODESPLIT>func ( h * receivedPacketHistory ) ReceivedPacket ( p protocol . PacketNumber ) error { if h . ranges . Len ( ) >= protocol . MaxTrackedReceivedAckRanges { return errTooManyOutstandingReceivedAckRanges   }    if h . ranges . Len ( ) == 0 { h . ranges . PushBack ( utils . PacketInterval { Start : p , End : p } )   return nil   }    for el := h . ranges . Back ( ) ; el != nil ; el = el . Prev ( ) { // p already included in an existing range. Nothing to do here if p >= el . Value . Start && p <= el . Value . End { return nil   }    var rangeExtended bool   if el . Value . End == p - 1 { // extend a range at the end rangeExtended = true   el . Value . End = p   } else if el . Value . Start == p + 1 { // extend a range at the beginning rangeExtended = true   el . Value . Start = p   }    // if a range was extended (either at the beginning or at the end, maybe it is possible to merge two ranges into one) if rangeExtended { prev := el . Prev ( )   if prev != nil && prev . Value . End + 1 == el . Value . Start { // merge two ranges prev . Value . End = el . Value . End   h . ranges . Remove ( el )   return nil   }   return nil // if the two ranges were not merge, we're done here   }    // create a new range at the end if p > el . Value . End { h . ranges . InsertAfter ( utils . PacketInterval { Start : p , End : p } , el )   return nil   }   }    // create a new range at the beginning h . ranges . InsertBefore ( utils . PacketInterval { Start : p , End : p } , h . ranges . Front ( ) )    return nil   }

1<CODESPLIT>https://github.com/moby/buildkit/blob/89851c6c69bca875dd64b5e9d5d6ec60ff437d74/frontend/dockerfile/instructions/bflag.go#L112-L118<CODESPLIT>IsTrue<CODESPLIT>IsTrue checks if a bool flag is true<CODESPLIT>func ( fl * Flag ) IsTrue ( ) bool { if fl . flagType != boolType { // Should never get here panic ( fmt . Errorf ( " " , fl . name ) )   }   return fl . Value == " "   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/dynamodb/expression/condition.go#L937-L939<CODESPLIT>Between<CODESPLIT>Between returns a ConditionBuilder representing the result of the BETWEEN function in DynamoDB Condition Expressions . The resulting ConditionBuilder can be used as a part of other Condition Expressions or as an argument to the WithCondition () method for the Builder struct . Example : // condition represents the condition where the value of the item // attribute Rating is between values 5 and 10 condition : = expression . Name ( Rating ) . Between ( expression . Value ( 5 ) expression . Value ( 10 )) // Used in another Condition Expression anotherCondition : = expression . Not ( condition ) // Used to make an Builder builder : = expression . NewBuilder () . WithCondition ( condition ) Expression Equivalent : expression . Name ( Rating ) . Between ( expression . Value ( 5 ) expression . Value ( 10 )) // Let : five and : ten be ExpressionAttributeValues representing the value // 5 and the value 10 Rating BETWEEN : five AND : ten<CODESPLIT>func ( nb NameBuilder ) Between ( lower , upper OperandBuilder ) ConditionBuilder { return Between ( nb , lower , upper )   }

0<CODESPLIT>https://github.com/kataras/iris/blob/6aafc0b9d5e97d0c52e325d8c4b4d23d61eb3f9d/context/context.go#L1777-L1779<CODESPLIT>URLParamTrim<CODESPLIT>URLParamTrim returns the escaped url query parameter from a request .<CODESPLIT>func ( ctx * context ) URLParamTrim ( name string ) string { return strings . TrimSpace ( ctx . URLParam ( name ) )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/chime/api.go#L5632-L5635<CODESPLIT>SetPhoneNumberIds<CODESPLIT>SetPhoneNumberErrors sets the PhoneNumberErrors field s value .<CODESPLIT>func ( s * BatchDeletePhoneNumberInput ) SetPhoneNumberIds ( v [ ] * string ) * BatchDeletePhoneNumberInput { s . PhoneNumberIds = v   return s   }

1<CODESPLIT>https://github.com/technoweenie/go-contentaddressable/blob/044933381f7e61b6bdf14395e429d00093c2c725/file.go#L39-L68<CODESPLIT>NewWithSuffix<CODESPLIT>NewWithSuffix initializes a content addressable file for writing . It opens both the given filename and a temp filename in exclusive mode . The * File OID is taken from the base name of the given filename .<CODESPLIT>func NewWithSuffix ( filename , suffix string ) ( * File , error ) { oid := filepath . Base ( filename )   dir := filepath . Dir ( filename )   if err := os . MkdirAll ( dir , 0755 ) ; err != nil { return nil , err   }    tempFilename := filename + suffix   tempFile , err := os . OpenFile ( tempFilename , os . O_WRONLY | os . O_CREATE | os . O_EXCL , 0644 )   if err != nil { return nil , err   }    file , err := os . OpenFile ( filename , os . O_WRONLY | os . O_CREATE | os . O_EXCL , 0644 )   if err != nil { cleanupFile ( tempFile )   return nil , err   }    caw := & File { Oid : oid , filename : filename , tempFilename : tempFilename , file : file , tempFile : tempFile , hasher : sha256 . New ( ) , }    return caw , nil   }

0<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/staging/src/k8s.io/apiserver/pkg/authentication/group/group_adder.go#L35-L37<CODESPLIT>NewNodeInformer<CODESPLIT>NewGroupAdder wraps a request authenticator and adds the specified groups to the returned user when authentication succeeds<CODESPLIT>func NewNodeInformer ( client kubernetes . Interface , resyncPeriod time . Duration , indexers cache . Indexers ) cache . SharedIndexInformer { return NewFilteredNodeInformer ( client , resyncPeriod , indexers , nil )   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/emr/api.go#L5751-L5754<CODESPLIT>SetState<CODESPLIT>SetState sets the State field s value .<CODESPLIT>func ( s * InstanceFleetStatus ) SetState ( v string ) * InstanceFleetStatus { s . State = & v   return s   }

0<CODESPLIT>https://github.com/go-playground/locales/blob/630ebbb602847eba93e75ae38bbc7bb7abcf1ff3/pt_MO/pt_MO.go#L135-L137<CODESPLIT>WeekdayAbbreviated<CODESPLIT>MonthAbbreviated returns the locales abbreviated month given the month provided<CODESPLIT>func ( is * is_IS ) WeekdayAbbreviated ( weekday time . Weekday ) string { return is . daysAbbreviated [ weekday ]   }

1<CODESPLIT>https://github.com/cilium/cilium/blob/6ecfff82c2314dd9d847645361b57e2646eed64b/pkg/k8s/client/clientset/versioned/typed/cilium.io/v2/fake/fake_ciliumendpoint.go#L114-L119<CODESPLIT>Delete<CODESPLIT>Delete takes name of the ciliumEndpoint and deletes it . Returns an error if one occurs .<CODESPLIT>func ( c * FakeCiliumEndpoints ) Delete ( name string , options * v1 . DeleteOptions ) error { _ , err := c . Fake . Invokes ( testing . NewDeleteAction ( ciliumendpointsResource , c . ns , name ) , & v2 . CiliumEndpoint { } )    return err   }

0<CODESPLIT>https://github.com/moonrhythm/session/blob/d2c990e98d2125bc454b7903d1f9299e1be6c84d/session.go#L138-L141<CODESPLIT>Pop<CODESPLIT>PopString pops string from session<CODESPLIT>func ( s * Session ) Pop ( key string ) interface { } { if s . data == nil { return nil   }    r , ok := s . data [ key ]   if ok { s . changed = true   delete ( s . data , key )   }   return r   }

0<CODESPLIT>https://github.com/libvirt/libvirt-go/blob/6716ded296d94320213e1b57b67c2c7d255c6f00/domain.go#L4234-L4271<CODESPLIT>GetEmulatorPinInfo<CODESPLIT>See also https : // libvirt . org / html / libvirt - libvirt - domain . html#virDomainGetIOThreadInfo<CODESPLIT>func ( d * Domain ) GetEmulatorPinInfo ( flags DomainModificationImpact ) ( [ ] bool , error ) { var cnodeinfo C . virNodeInfo   var err C . virError   ret := C . virNodeGetInfoWrapper ( C . virDomainGetConnect ( d . ptr ) , & cnodeinfo , & err )   if ret == - 1 { return [ ] bool { } , makeError ( & err )   }    ncpus := cnodeinfo . nodes * cnodeinfo . sockets * cnodeinfo . cores * cnodeinfo . threads   maplen := int ( ( ncpus + 7 ) / 8 )   ccpumaps := make ( [ ] C . uchar , maplen )   ret = C . virDomainGetEmulatorPinInfoWrapper ( d . ptr , & ccpumaps [ 0 ] , C . int ( maplen ) , C . uint ( flags ) , & err )   if ret == - 1 { return [ ] bool { } , makeError ( & err )   }    cpumaps := make ( [ ] bool , ncpus )   for i := 0 ; i < int ( ncpus ) ; i ++ { byte := i / 8   bit := i % 8   cpumaps [ i ] = ( ccpumaps [ byte ] & ( 1 << uint ( bit ) ) ) != 0   }    return cpumaps , nil   }

1<CODESPLIT>https://github.com/moby/moby/blob/e516af6e5636023e85335ed8d9d0d824349dd6ff/pkg/system/filesys_windows.go#L25-L27<CODESPLIT>MkdirAllWithACL<CODESPLIT>MkdirAllWithACL is a wrapper for MkdirAll that creates a directory with an appropriate SDDL defined ACL .<CODESPLIT>func MkdirAllWithACL ( path string , perm os . FileMode , sddl string ) error { return mkdirall ( path , true , sddl )   }

1<CODESPLIT>https://github.com/hashicorp/go-sockaddr/blob/c7188e74f6acae5a989bdc959aa779f8b9f42faf/ipv6addr.go#L413-L419<CODESPLIT>ListenPacketArgs<CODESPLIT>ListenPacketArgs returns the arguments required to be passed to net . ListenUDP () . If the Mask of ipv6 is not a / 128 ListenPacketArgs () will fail . See Host () to create an IPv6Addr with its mask set to / 128 .<CODESPLIT>func ( ipv6 IPv6Addr ) ListenPacketArgs ( ) ( network , listenArgs string ) { ipv6Mask := big . Int ( * ipv6 . Mask )   if ipv6Mask . Cmp ( ipv6HostMask ) != 0 { return " " , " "   }   return " " , fmt . Sprintf ( " " , ipv6 . NetIP ( ) . String ( ) , ipv6 . Port )   }

1<CODESPLIT>https://github.com/argoproj/argo-cd/blob/5c353a12f2c67d8ab0d5d9aa619c9059c5261640/server/server.go#L292-L350<CODESPLIT>watchSettings<CODESPLIT>watchSettings watches the configmap and secret for any setting updates that would warrant a restart of the API server .<CODESPLIT>func ( a * ArgoCDServer ) watchSettings ( ctx context . Context ) { updateCh := make ( chan * settings_util . ArgoCDSettings , 1 )   a . settingsMgr . Subscribe ( updateCh )    prevURL := a . settings . URL   prevOIDCConfig := a . settings . OIDCConfigRAW   prevDexCfgBytes , err := dex . GenerateDexConfigYAML ( a . settings )   errors . CheckError ( err )   prevGitHubSecret := a . settings . WebhookGitHubSecret   prevGitLabSecret := a . settings . WebhookGitLabSecret   prevBitBucketUUID := a . settings . WebhookBitbucketUUID   var prevCert , prevCertKey string   if a . settings . Certificate != nil { prevCert , prevCertKey = tlsutil . EncodeX509KeyPairString ( * a . settings . Certificate )   }    for { newSettings := <- updateCh   a . settings = newSettings   newDexCfgBytes , err := dex . GenerateDexConfigYAML ( a . settings )   errors . CheckError ( err )   if string ( newDexCfgBytes ) != string ( prevDexCfgBytes ) { log . Infof ( " " )   break   }   if prevOIDCConfig != a . settings . OIDCConfigRAW { log . Infof ( " " )   break   }   if prevURL != a . settings . URL { log . Infof ( " " )   break   }   if prevGitHubSecret != a . settings . WebhookGitHubSecret { log . Infof ( " " )   break   }   if prevGitLabSecret != a . settings . WebhookGitLabSecret { log . Infof ( " " )   break   }   if prevBitBucketUUID != a . settings . WebhookBitbucketUUID { log . Infof ( " " )   break   }   var newCert , newCertKey string   if a . settings . Certificate != nil { newCert , newCertKey = tlsutil . EncodeX509KeyPairString ( * a . settings . Certificate )   }   if newCert != prevCert || newCertKey != prevCertKey { log . Infof ( " " )   break   }   }   log . Info ( " " )   a . Shutdown ( )   a . settingsMgr . Unsubscribe ( updateCh )   close ( updateCh )   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/ssm/api.go#L27114-L27117<CODESPLIT>SetEnabled<CODESPLIT>SetEnabled sets the Enabled field s value .<CODESPLIT>func ( s * MaintenanceWindowIdentity ) SetEnabled ( v bool ) * MaintenanceWindowIdentity { s . Enabled = & v   return s   }

0<CODESPLIT>https://github.com/ethereum/go-ethereum/blob/b6c0234e0b5c9d459d1ed784c910f6348890d56b/core/blockchain_insert.go#L94-L102<CODESPLIT>report<CODESPLIT>newInsertIterator creates a new iterator based on the given blocks which are assumed to be a contiguous chain .<CODESPLIT>func ( st * insertStats ) report ( chain [ ] * types . Block , index int , dirty common . StorageSize ) { // Fetch the timings for the batch var ( now = mclock . Now ( )   elapsed = time . Duration ( now ) - time . Duration ( st . startTime )   )   // If we're at the last block of the batch or report period reached, log if index == len ( chain ) - 1 || elapsed >= statsReportLimit { // Count the number of transactions in this segment var txs int   for _ , block := range chain [ st . lastIndex : index + 1 ] { txs += len ( block . Transactions ( ) )   }   end := chain [ index ]    // Assemble the log context and send it to the logger context := [ ] interface { } { " " , st . processed , " " , txs , " " , float64 ( st . usedGas ) / 1000000 , " " , common . PrettyDuration ( elapsed ) , " " , float64 ( st . usedGas ) * 1000 / float64 ( elapsed ) , " " , end . Number ( ) , " " , end . Hash ( ) , }   if timestamp := time . Unix ( int64 ( end . Time ( ) ) , 0 ) ; time . Since ( timestamp ) > time . Minute { context = append ( context , [ ] interface { } { " " , common . PrettyAge ( timestamp ) } ... )   }   context = append ( context , [ ] interface { } { " " , dirty } ... )    if st . queued > 0 { context = append ( context , [ ] interface { } { " " , st . queued } ... )   }   if st . ignored > 0 { context = append ( context , [ ] interface { } { " " , st . ignored } ... )   }   log . Info ( " " , context ... )    // Bump the stats reported to the next section * st = insertStats { startTime : now , lastIndex : index + 1 }   }   }

1<CODESPLIT>https://github.com/openshift/source-to-image/blob/2ba8a349386aff03c26729096b0225a691355fe9/pkg/util/labels.go#L13-L23<CODESPLIT>GenerateOutputImageLabels<CODESPLIT>GenerateOutputImageLabels generate the labels based on the s2i Config and source repository informations .<CODESPLIT>func GenerateOutputImageLabels ( info * git . SourceInfo , config * api . Config ) map [ string ] string { labels := map [ string ] string { }   namespace := constants . DefaultNamespace   if len ( config . LabelNamespace ) > 0 { namespace = config . LabelNamespace   }    labels = GenerateLabelsFromConfig ( labels , config , namespace )   labels = GenerateLabelsFromSourceInfo ( labels , info , namespace )   return labels   }

0<CODESPLIT>https://github.com/kataras/iris/blob/6aafc0b9d5e97d0c52e325d8c4b4d23d61eb3f9d/context/context.go#L1170-L1177<CODESPLIT>HandlerIndex<CODESPLIT>Proceed is an alternative way to check if a particular handler has been executed and called the ctx . Next function inside it . This is useful only when you run a handler inside another handler . It justs checks for before index and the after index . A usecase example is when you want to execute a middleware inside controller s BeginRequest that calls the ctx . Next inside it . The Controller looks the whole flow ( BeginRequest method handler EndRequest ) as one handler so ctx . Next will not be reflected to the method handler if called from the BeginRequest . Although BeginRequest should NOT be used to call other handlers the BeginRequest has been introduced to be able to set common data to all method handlers before their execution . Controllers can accept middleware ( s ) from the MVC s Application s Router as normally . That said let s see an example of ctx . Proceed : var authMiddleware = basicauth . New ( basicauth . Config { Users : map [ string ] string { admin : password } } ) func ( c * UsersController ) BeginRequest ( ctx iris . Context ) { if !ctx . Proceed ( authMiddleware ) { ctx . StopExecution () } } This Get () will be executed in the same handler as BeginRequest internally controller checks for ctx . StopExecution . So it will not be fired if BeginRequest called the StopExecution . func ( c * UsersController ) Get () [] models . User { return c . Service . GetAll () } Alternative way is !ctx . IsStopped () if middleware make use of the ctx . StopExecution () on failure .<CODESPLIT>func ( ctx * context ) HandlerIndex ( n int ) ( currentIndex int ) { if n < 0 || n > len ( ctx . handlers ) - 1 { return ctx . currentHandlerIndex   }    ctx . currentHandlerIndex = n   return n   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/devicefarm/api.go#L3841-L3846<CODESPLIT>ListOfferingPromotionsWithContext<CODESPLIT>ListOfferingPromotionsWithContext is the same as ListOfferingPromotions with the addition of the ability to pass a context and additional request options . See ListOfferingPromotions for details on how to use this API operation . The context must be non - nil and will be used for request cancellation . If the context is nil a panic will occur . In the future the SDK may create sub - contexts for http . Requests . See https : // golang . org / pkg / context / for more information on using Contexts .<CODESPLIT>func ( c * DeviceFarm ) ListOfferingPromotionsWithContext ( ctx aws . Context , input * ListOfferingPromotionsInput , opts ... request . Option ) ( * ListOfferingPromotionsOutput , error ) { req , out := c . ListOfferingPromotionsRequest ( input )   req . SetContext ( ctx )   req . ApplyOptions ( opts ... )   return out , req . Send ( )   }

1<CODESPLIT>https://github.com/BurntSushi/xgbutil/blob/f7c97cef3b4e6c88280a5a7091c3314e815ca243/xgraphics/image.go#L121-L123<CODESPLIT>WritePng<CODESPLIT>WritePng encodes the image to w as a png .<CODESPLIT>func ( im * Image ) WritePng ( w io . Writer ) error { return png . Encode ( w , im )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/guardduty/api.go#L6813-L6816<CODESPLIT>SetInstanceId<CODESPLIT>SetImageId sets the ImageId field s value .<CODESPLIT>func ( s * InstanceDetails ) SetInstanceId ( v string ) * InstanceDetails { s . InstanceId = & v   return s   }

0<CODESPLIT>https://github.com/ethereum/go-ethereum/blob/b6c0234e0b5c9d459d1ed784c910f6348890d56b/rlp/raw.go#L62-L71<CODESPLIT>SplitString<CODESPLIT>SplitList splits b into the content of a list and any remaining bytes after the list .<CODESPLIT>func SplitString ( b [ ] byte ) ( content , rest [ ] byte , err error ) { k , content , rest , err := Split ( b )   if err != nil { return nil , b , err   }   if k == List { return nil , b , ErrExpectedString   }   return content , rest , nil   }

0<CODESPLIT>https://github.com/Microsoft/hcsshim/blob/5a7443890943600c562e1f2390ab3fef8c56a45f/hcn/hcnloadbalancer.go#L288-L306<CODESPLIT>AddLoadBalancer<CODESPLIT>RemoveEndpoint removes an endpoint from a LoadBalancer<CODESPLIT>func AddLoadBalancer ( endpoints [ ] HostComputeEndpoint , flags LoadBalancerFlags , portMappingFlags LoadBalancerPortMappingFlags , sourceVIP string , frontendVIPs [ ] string , protocol uint16 , internalPort uint16 , externalPort uint16 ) ( * HostComputeLoadBalancer , error ) { logrus . Debugf ( " " , endpoints , flags , portMappingFlags , sourceVIP , frontendVIPs , protocol , internalPort , externalPort )    loadBalancer := & HostComputeLoadBalancer { SourceVIP : sourceVIP , PortMappings : [ ] LoadBalancerPortMapping { { Protocol : uint32 ( protocol ) , InternalPort : internalPort , ExternalPort : externalPort , Flags : portMappingFlags , } , } , FrontendVIPs : frontendVIPs , SchemaVersion : SchemaVersion { Major : 2 , Minor : 0 , } , Flags : flags , }    for _ , endpoint := range endpoints { loadBalancer . HostComputeEndpoints = append ( loadBalancer . HostComputeEndpoints , endpoint . Id )   }    return loadBalancer . Create ( )   }

1<CODESPLIT>https://github.com/nlopes/slack/blob/65ea2b979a7ffe628676bdb6b924e2498d66c1bf/history.go#L28-L36<CODESPLIT>NewHistoryParameters<CODESPLIT>NewHistoryParameters provides an instance of HistoryParameters with all the sane default values set<CODESPLIT>func NewHistoryParameters ( ) HistoryParameters { return HistoryParameters { Latest : DEFAULT_HISTORY_LATEST , Oldest : DEFAULT_HISTORY_OLDEST , Count : DEFAULT_HISTORY_COUNT , Inclusive : DEFAULT_HISTORY_INCLUSIVE , Unreads : DEFAULT_HISTORY_UNREADS , }   }

0<CODESPLIT>https://github.com/shiyanhui/dht/blob/1b3b78ecf279a28409577382c3ae95df5703cf50/peerwire.go#L95-L100<CODESPLIT>sendExtHandshake<CODESPLIT>onHandshake handles the handshake response .<CODESPLIT>func sendExtHandshake ( conn * net . TCPConn ) error { data := append ( [ ] byte { EXTENDED , HANDSHAKE } , Encode ( map [ string ] interface { } { " " : map [ string ] interface { } { " " : 1 } , } ) ... , )    return sendMessage ( conn , data )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/codedeploy/api.go#L7786-L7789<CODESPLIT>SetRunningCount<CODESPLIT>SetStatus sets the Status field s value .<CODESPLIT>func ( s * ECSTaskSet ) SetRunningCount ( v int64 ) * ECSTaskSet { s . RunningCount = & v   return s   }

1<CODESPLIT>https://github.com/osrg/gobgp/blob/cc267fad9e6410705420af220d73d25d288e8a58/pkg/packet/bgp/bgp.go#L3922-L3927<CODESPLIT>DecodeFromBytes<CODESPLIT>draft - ietf - idr - flow - spec - v6 - 06 <type ( 1 octet ) prefix length ( 1 octet ) prefix offset ( 1 octet ) prefix ><CODESPLIT>func ( p * flowSpecPrefix6 ) DecodeFromBytes ( data [ ] byte , options ... * MarshallingOption ) error { p . typ = BGPFlowSpecType ( data [ 0 ] )   p . Offset = data [ 2 ]   prefix := append ( [ ] byte { data [ 1 ] } , data [ 3 : ] ... )   return p . Prefix . DecodeFromBytes ( prefix , options ... )   }

0<CODESPLIT>https://github.com/perkeep/perkeep/blob/e28bbbd1588d64df8ab7a82393afd39d64c061f7/pkg/schema/lookup.go#L106-L113<CODESPLIT>populateMap<CODESPLIT>lookupMu is held<CODESPLIT>func populateMap ( m map [ int ] string , nameMap map [ string ] intBool , file string ) { f , err := os . Open ( file )   if err != nil { return   }   defer f . Close ( )   bufr := bufio . NewReader ( f )   for { line , err := bufr . ReadString ( '\n' )   if err != nil { return   }   parts := strings . SplitN ( line , " " , 4 )   if len ( parts ) >= 3 { idstr := parts [ 2 ]   id , err := strconv . Atoi ( idstr )   if err == nil { m [ id ] = parts [ 0 ]   if nameMap != nil { nameMap [ parts [ 0 ] ] = intBool { id , true }   }   }   }   }   }

1<CODESPLIT>https://github.com/deis/deis/blob/1d9e59fbdbfc9d7767f77c2e0097e335b0fcd410/publisher/server/publisher.go#L262-L270<CODESPLIT>max<CODESPLIT>max returns the maximum value in n<CODESPLIT>func max ( n [ ] int ) int { val := 0   for _ , i := range n { if i > val { val = i   }   }   return val   }

1<CODESPLIT>https://github.com/xo/xo/blob/1a94fa516029cb306cce6d379d086e4d5b5bb232/examples/pgcatalog/pgcatalog/pgcatalog.xo.go#L11263-L11278<CODESPLIT>GinConsistentJsonb<CODESPLIT>GinConsistentJsonb calls the stored procedure pg_catalog . gin_consistent_jsonb ( internal smallint anyarray integer internal internal internal internal ) boolean on db .<CODESPLIT>func GinConsistentJsonb ( db XODB , v0 pgtypes . Internal , v1 int16 , v2 pgtypes . Anyarray , v3 int , v4 pgtypes . Internal , v5 pgtypes . Internal , v6 pgtypes . Internal , v7 pgtypes . Internal ) ( bool , error ) { var err error    // sql query const sqlstr = `SELECT pg_catalog.gin_consistent_jsonb($1, $2, $3, $4, $5, $6, $7, $8)`    // run query var ret bool   XOLog ( sqlstr , v0 , v1 , v2 , v3 , v4 , v5 , v6 , v7 )   err = db . QueryRow ( sqlstr , v0 , v1 , v2 , v3 , v4 , v5 , v6 , v7 ) . Scan ( & ret )   if err != nil { return false , err   }    return ret , nil   }

0<CODESPLIT>https://github.com/nak3/kubernetes-manifest-scanner/blob/d5cc57db0face3457961c9d05398ffa0271b4ccb/Godeps/_workspace/src/k8s.io/kubernetes/pkg/api/validation/validation.go#L1400-L1404<CODESPLIT>ValidateServiceUpdate<CODESPLIT>ValidateReplicationController tests if required fields in the replication controller are set .<CODESPLIT>func ValidateServiceUpdate ( service , oldService * api . Service ) validation . ErrorList { allErrs := validation . ErrorList { }   allErrs = append ( allErrs , ValidateObjectMetaUpdate ( & service . ObjectMeta , & oldService . ObjectMeta , validation . NewFieldPath ( " " ) ) ... )    if api . IsServiceIPSet ( oldService ) { allErrs = append ( allErrs , ValidateImmutableField ( service . Spec . ClusterIP , oldService . Spec . ClusterIP , validation . NewFieldPath ( " " , " " ) ) ... )   }    allErrs = append ( allErrs , ValidateService ( service ) ... )   return allErrs   }

1<CODESPLIT>https://github.com/libvirt/libvirt-go/blob/6716ded296d94320213e1b57b67c2c7d255c6f00/domain.go#L1448-L1455<CODESPLIT>Suspend<CODESPLIT>See also https : // libvirt . org / html / libvirt - libvirt - domain . html#virDomainSuspend<CODESPLIT>func ( d * Domain ) Suspend ( ) error { var err C . virError   result := C . virDomainSuspendWrapper ( d . ptr , & err )   if result == - 1 { return makeError ( & err )   }   return nil   }

0<CODESPLIT>https://github.com/qor/seo/blob/d01525bb20e1d11b2cf38cd647f13bb6b7be6e85/seo_setting.go#L153-L156<CODESPLIT>Scan<CODESPLIT>Value get value from struct and save into database<CODESPLIT>func ( setting * Setting ) Scan ( value interface { } ) error { if bytes , ok := value . ( [ ] byte ) ; ok { json . Unmarshal ( bytes , setting )   } else if str , ok := value . ( string ) ; ok { json . Unmarshal ( [ ] byte ( str ) , setting )   } else if strs , ok := value . ( [ ] string ) ; ok { for _ , str := range strs { json . Unmarshal ( [ ] byte ( str ) , setting )   }   }   return nil   }

1<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/state/unit.go#L1358-L1365<CODESPLIT>StatusHistory<CODESPLIT>StatusHistory returns a slice of at most <size > StatusInfo items or items as old as <date > or items newer than now - <delta > time representing past statuses for this unit .<CODESPLIT>func ( u * Unit ) StatusHistory ( filter status . StatusHistoryFilter ) ( [ ] status . StatusInfo , error ) { args := & statusHistoryArgs { db : u . st . db ( ) , globalKey : u . globalKey ( ) , filter : filter , }   return statusHistory ( args )   }

1<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/pkg/apis/authorization/zz_generated.deepcopy.go#L258-L265<CODESPLIT>DeepCopy<CODESPLIT>DeepCopy is an autogenerated deepcopy function copying the receiver creating a new SelfSubjectRulesReviewSpec .<CODESPLIT>func ( in * SelfSubjectRulesReviewSpec ) DeepCopy ( ) * SelfSubjectRulesReviewSpec { if in == nil { return nil   }   out := new ( SelfSubjectRulesReviewSpec )   in . DeepCopyInto ( out )   return out   }

0<CODESPLIT>https://github.com/pjebs/jsonerror/blob/7cbf8512c7fb42f74edafc0d340acee765facc62/jsonerror.go#L103-L108<CODESPLIT>addError<CODESPLIT>AddError appends an error to the error collection . It is safe to use from multiple concurrent goroutines .<CODESPLIT>func ( ec * ErrorCollection ) addError ( err error ) { if ec . DuplicatationOptions != AllowDuplicates { //Don't append if err is a duplicate for i , containedErr := range ec . Errors { var je1 * JE   var je2 * JE    s , ok := err . ( JE )   if ok { je1 = & s   } else { s , ok := err . ( * JE )   if ok { je1 = s   }   }    _ , ok = containedErr . ( JE )   if ok { t := ( ec . Errors [ i ] ) . ( JE )   je2 = & t   } else { _ , ok := containedErr . ( * JE )   if ok { je2 = ( ec . Errors [ i ] ) . ( * JE )   }   }    if je1 != nil && je2 != nil { //Don't use Reflection since both are JE structs if ( * je1 ) . Code == ( * je2 ) . Code && ( * je1 ) . Domain == ( * je2 ) . Domain && ( * je1 ) . error == ( * je2 ) . error && ( * je1 ) . message == ( * je2 ) . message { if ec . DuplicatationOptions == RejectDuplicates { if ( * je1 ) . time . Equal ( ( * je2 ) . time ) { //Both JE structs are 100% identical including timestamp return   }   } else { //We don't care about timestamps return   }   }   } else { //Use Reflection if reflect . DeepEqual ( containedErr , err ) { return   }   }   }   }   ec . Errors = append ( ec . Errors , err )   }

1<CODESPLIT>https://github.com/ethereum/go-ethereum/blob/b6c0234e0b5c9d459d1ed784c910f6348890d56b/core/rawdb/accessors_metadata.go#L30-L42<CODESPLIT>ReadDatabaseVersion<CODESPLIT>ReadDatabaseVersion retrieves the version number of the database .<CODESPLIT>func ReadDatabaseVersion ( db ethdb . Reader ) * uint64 { var version uint64    enc , _ := db . Get ( databaseVerisionKey )   if len ( enc ) == 0 { return nil   }   if err := rlp . DecodeBytes ( enc , & version ) ; err != nil { return nil   }    return & version   }

0<CODESPLIT>https://github.com/cayleygraph/cayley/blob/5318a818e947b20ef36a274f643e577f036bca7c/graph/iterator/value_comparison.go#L95-L131<CODESPLIT>TagResults<CODESPLIT>Here s the non - boilerplate part of the ValueComparison iterator . Given a value and our operator determine whether or not we meet the requirement .<CODESPLIT>func ( it * Comparison ) TagResults ( dst map [ string ] graph . Value ) { it . tags . TagResult ( dst , it . Result ( ) )    it . subIt . TagResults ( dst )   }

1<CODESPLIT>https://github.com/mafredri/cdp/blob/a3cd6cc58c0b7537b9614e7fa5da84bdd3c18514/protocol/dom/domain.go#L497-L508<CODESPLIT>GetFileInfo<CODESPLIT>GetFileInfo invokes the DOM method . Returns file information for the given File wrapper .<CODESPLIT>func ( d * domainClient ) GetFileInfo ( ctx context . Context , args * GetFileInfoArgs ) ( reply * GetFileInfoReply , err error ) { reply = new ( GetFileInfoReply )   if args != nil { err = rpcc . Invoke ( ctx , " " , args , reply , d . conn )   } else { err = rpcc . Invoke ( ctx , " " , nil , reply , d . conn )   }   if err != nil { err = & internal . OpError { Domain : " " , Op : " " , Err : err }   }   return   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/cognitoidentityprovider/api.go#L1657-L1660<CODESPLIT>AdminListDevicesWithContext<CODESPLIT>AdminListDevices API operation for Amazon Cognito Identity Provider . Lists devices as an administrator . Requires developer credentials . Returns awserr . Error for service API and SDK errors . Use runtime type assertions with awserr . Error s Code and Message methods to get detailed information about the error . See the AWS API reference guide for Amazon Cognito Identity Provider s API operation AdminListDevices for usage and error information . Returned Error Codes : * ErrCodeInvalidParameterException InvalidParameterException This exception is thrown when the Amazon Cognito service encounters an invalid parameter . * ErrCodeResourceNotFoundException ResourceNotFoundException This exception is thrown when the Amazon Cognito service cannot find the requested resource . * ErrCodeInvalidUserPoolConfigurationException InvalidUserPoolConfigurationException This exception is thrown when the user pool configuration is invalid . * ErrCodeTooManyRequestsException TooManyRequestsException This exception is thrown when the user has made too many requests for a given operation . * ErrCodeInternalErrorException InternalErrorException This exception is thrown when Amazon Cognito encounters an internal error . * ErrCodeNotAuthorizedException NotAuthorizedException This exception is thrown when a user is not authorized . See also https : // docs . aws . amazon . com / goto / WebAPI / cognito - idp - 2016 - 04 - 18 / AdminListDevices<CODESPLIT>func ( c * CognitoIdentityProvider ) AdminListDevicesWithContext ( ctx aws . Context , input * AdminListDevicesInput , opts ... request . Option ) ( * AdminListDevicesOutput , error ) { req , out := c . AdminListDevicesRequest ( input )   req . SetContext ( ctx )   req . ApplyOptions ( opts ... )   return out , req . Send ( )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/lightsail/api.go#L3232-L3246<CODESPLIT>DeleteKeyPairWithContext<CODESPLIT>DeleteKnownHostKeysRequest generates a aws / request . Request representing the client s request for the DeleteKnownHostKeys operation . The output return value will be populated with the request s response once the request completes successfully . Use Send method on the returned Request to send the API call to the service . the output return value is not valid until after Send returns without error . See DeleteKnownHostKeys for more information on using the DeleteKnownHostKeys API call and error handling . This method is useful when you want to inject custom logic or configuration into the SDK s request lifecycle . Such as custom headers or retry logic . // Example sending a request using the DeleteKnownHostKeysRequest method . req resp : = client . DeleteKnownHostKeysRequest ( params ) err : = req . Send () if err == nil { // resp is now filled fmt . Println ( resp ) } See also https : // docs . aws . amazon . com / goto / WebAPI / lightsail - 2016 - 11 - 28 / DeleteKnownHostKeys<CODESPLIT>func ( c * Lightsail ) DeleteKeyPairWithContext ( ctx aws . Context , input * DeleteKeyPairInput , opts ... request . Option ) ( * DeleteKeyPairOutput , error ) { req , out := c . DeleteKeyPairRequest ( input )   req . SetContext ( ctx )   req . ApplyOptions ( opts ... )   return out , req . Send ( )   }

1<CODESPLIT>https://github.com/nlopes/slack/blob/65ea2b979a7ffe628676bdb6b924e2498d66c1bf/messages.go#L141-L153<CODESPLIT>NewOutgoingMessage<CODESPLIT>NewOutgoingMessage prepares an OutgoingMessage that the user can use to send a message . Use this function to properly set the messageID .<CODESPLIT>func ( rtm * RTM ) NewOutgoingMessage ( text string , channelID string , options ... RTMsgOption ) * OutgoingMessage { id := rtm . idGen . Next ( )   msg := OutgoingMessage { ID : id , Type : " " , Channel : channelID , Text : text , }   for _ , option := range options { option ( & msg )   }   return & msg   }

1<CODESPLIT>https://github.com/genuinetools/reg/blob/d959057b30da67d5f162790f9d5b5160686901fd/registry/layer.go#L16-L30<CODESPLIT>DownloadLayer<CODESPLIT>DownloadLayer downloads a specific layer by digest for a repository .<CODESPLIT>func ( r * Registry ) DownloadLayer ( ctx context . Context , repository string , digest digest . Digest ) ( io . ReadCloser , error ) { url := r . url ( " " , repository , digest )   r . Logf ( " " , url , repository , digest )    req , err := http . NewRequest ( " " , url , nil )   if err != nil { return nil , err   }   resp , err := r . Client . Do ( req . WithContext ( ctx ) )   if err != nil { return nil , err   }    return resp . Body , nil   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/managedblockchain/api.go#L4733-L4736<CODESPLIT>SetName<CODESPLIT>SetName sets the Name field s value .<CODESPLIT>func ( s * NetworkSummary ) SetName ( v string ) * NetworkSummary { s . Name = & v   return s   }

0<CODESPLIT>https://github.com/google/pprof/blob/8358a9778bd1e48718ffcb96eb11ee061385bf62/internal/driver/fetch.go#L42-L123<CODESPLIT>chunkedGrab<CODESPLIT>fetchProfiles fetches and symbolizes the profiles specified by s . It will merge all the profiles it is able to retrieve even if there are some failures . It will return an error if it is unable to fetch any profiles .<CODESPLIT>func chunkedGrab ( sources [ ] profileSource , fetch plugin . Fetcher , obj plugin . ObjTool , ui plugin . UI , tr http . RoundTripper ) ( * profile . Profile , plugin . MappingSources , bool , int , error ) { const chunkSize = 64    var p * profile . Profile   var msrc plugin . MappingSources   var save bool   var count int    for start := 0 ; start < len ( sources ) ; start += chunkSize { end := start + chunkSize   if end > len ( sources ) { end = len ( sources )   }   chunkP , chunkMsrc , chunkSave , chunkCount , chunkErr := concurrentGrab ( sources [ start : end ] , fetch , obj , ui , tr )   switch { case chunkErr != nil : return nil , nil , false , 0 , chunkErr   case chunkP == nil : continue   case p == nil : p , msrc , save , count = chunkP , chunkMsrc , chunkSave , chunkCount   default : p , msrc , chunkErr = combineProfiles ( [ ] * profile . Profile { p , chunkP } , [ ] plugin . MappingSources { msrc , chunkMsrc } )   if chunkErr != nil { return nil , nil , false , 0 , chunkErr   }   if chunkSave { save = true   }   count += chunkCount   }   }    return p , msrc , save , count , nil   }

1<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/pkg/registry/certificates/certificates/strategy.go#L83-L89<CODESPLIT>PrepareForUpdate<CODESPLIT>PrepareForUpdate clears fields that are not allowed to be set by end users on update . Certificate requests are immutable after creation except via subresources .<CODESPLIT>func ( csrStrategy ) PrepareForUpdate ( ctx context . Context , obj , old runtime . Object ) { newCSR := obj . ( * certificates . CertificateSigningRequest )   oldCSR := old . ( * certificates . CertificateSigningRequest )    newCSR . Spec = oldCSR . Spec   newCSR . Status = oldCSR . Status   }

0<CODESPLIT>https://github.com/flynn/flynn/blob/b4b05fce92da5fbc53b272362d87b994b88a3869/pkg/tlsconfig/tlsconfig.go#L9-L35<CODESPLIT>RemoteAddr<CODESPLIT>SecureCiphers updates a * tls . Config with a secure ciphersuite configuration . If c is nil a new config will be provided .<CODESPLIT>func ( p * conn ) RemoteAddr ( ) net . Addr { p . initOnce . Do ( func ( ) { p . checkPrefix ( ) } )   if p . srcAddr != nil { return p . srcAddr   }   return p . Conn . RemoteAddr ( )   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/sagemaker/api.go#L11629-L11632<CODESPLIT>SetSpecifiedImage<CODESPLIT>SetSpecifiedImage sets the SpecifiedImage field s value .<CODESPLIT>func ( s * DeployedImage ) SetSpecifiedImage ( v string ) * DeployedImage { s . SpecifiedImage = & v   return s   }

0<CODESPLIT>https://github.com/performancecopilot/speed/blob/22ca883d94397b1f6c7a2ab155d9972af6b26813/metrics.go#L205-L212<CODESPLIT>TimeScale<CODESPLIT>https : // docs . rs / hornet / 0 . 1 . 0 / src / hornet / client / metric / mod . rs . html#398<CODESPLIT>func ( m * metricUnit ) TimeScale ( ) TimeUnit { d := m . TimeDim ( )   if d == 0 { panic ( " " )   }    return TimeUnit ( 1 << 24 | ( uint32 ( ( m . repr >> 12 ) & 0xF ) ) << 12 )   }

0<CODESPLIT>https://github.com/jaytaylor/html2text/blob/01ec452cbe43774f989516272881441cae40c16b/html2text.go#L44-L63<CODESPLIT>FromHTMLNode<CODESPLIT>NewPrettyTablesOptions creates PrettyTablesOptions with default settings<CODESPLIT>func FromHTMLNode ( doc * html . Node , o ... Options ) ( string , error ) { var options Options   if len ( o ) > 0 { options = o [ 0 ]   }    ctx := textifyTraverseContext { buf : bytes . Buffer { } , options : options , }   if err := ctx . traverse ( doc ) ; err != nil { return " " , err   }    text := strings . TrimSpace ( newlineRe . ReplaceAllString ( strings . Replace ( ctx . buf . String ( ) , " \n " , " \n " , - 1 ) , " \n \n " ) , )   return text , nil   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/polly/api.go#L1059-L1062<CODESPLIT>SetLanguageCode<CODESPLIT>SetNextToken sets the NextToken field s value .<CODESPLIT>func ( s * DescribeVoicesInput ) SetLanguageCode ( v string ) * DescribeVoicesInput { s . LanguageCode = & v   return s   }

0<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/cloud/clouds.go#L540-L545<CODESPLIT>yamlTags<CODESPLIT>RegisterStructTags ensures the yaml tags for the given structs are able to be used when parsing cloud metadata .<CODESPLIT>func yamlTags ( t reflect . Type ) map [ string ] int { if t . Kind ( ) != reflect . Struct { panic ( errors . Errorf ( " " , t ) )   }   tags := make ( map [ string ] int )   for i := 0 ; i < t . NumField ( ) ; i ++ { f := t . Field ( i )   if f . Type != reflect . TypeOf ( " " ) { continue   }   if tag := f . Tag . Get ( " " ) ; tag != " " { if i := strings . Index ( tag , " " ) ; i >= 0 { tag = tag [ 0 : i ]   }   if tag == " " { continue   }   if tag != " " { f . Name = tag   }   }   tags [ f . Name ] = i   }   return tags   }

0<CODESPLIT>https://github.com/memcachier/mc/blob/5d1620e2c6d86be00ea70065e3c1301ee1cb1894/client.go#L400-L423<CODESPLIT>Quit<CODESPLIT>Version gets the version of the memcached server connected to .<CODESPLIT>func ( c * Client ) Quit ( ) { // Variants: Quit [Q] // Request : MUST NOT key, value, extras // Response: MUST NOT key, value, extras m := & msg { header : header { Op : opQuit , } , }    for _ , s := range c . servers { s . quit ( m )   }   }

1<CODESPLIT>https://github.com/opencontainers/runc/blob/dae70e8efea4199c8ac3d8c80eb23e1f75e60ebf/tty.go#L35-L65<CODESPLIT>setupProcessPipes<CODESPLIT>setup pipes for the process so that advanced features like c / r are able to easily checkpoint and restore the process s IO without depending on a host specific path or device<CODESPLIT>func setupProcessPipes ( p * libcontainer . Process , rootuid , rootgid int ) ( * tty , error ) { i , err := p . InitializeIO ( rootuid , rootgid )   if err != nil { return nil , err   }   t := & tty { closers : [ ] io . Closer { i . Stdin , i . Stdout , i . Stderr , } , }   // add the process's io to the post start closers if they support close for _ , cc := range [ ] interface { } { p . Stdin , p . Stdout , p . Stderr , } { if c , ok := cc . ( io . Closer ) ; ok { t . postStart = append ( t . postStart , c )   }   }   go func ( ) { io . Copy ( i . Stdin , os . Stdin )   i . Stdin . Close ( )   } ( )   t . wg . Add ( 2 )   go t . copyIO ( os . Stdout , i . Stdout )   go t . copyIO ( os . Stderr , i . Stderr )   return t , nil   }

0<CODESPLIT>https://github.com/TF2Stadium/Helen/blob/57cfa15831ac8913bfc448d22128b7a766be5fc2/models/lobby/lobby.go#L1040-L1055<CODESPLIT>New<CODESPLIT>Substitute sets the needs_sub column of the given slot to true and broadcasts the new substitute list<CODESPLIT>func New ( ctx context . Context , limit Limit , burst int , options ... interface { } , ) ( limiter * BucketRateLimiter ) { ctx , cancel := context . WithCancel ( ctx )   cleanTimeout := time . Minute   tickerInterval := time . Minute    for _ , option := range options { switch opt := option . ( type ) { case OptionCleanTimeout : cleanTimeout = time . Duration ( opt )   case OptionCleanTicker : tickerInterval = time . Duration ( opt )   }   }    egCleaner , _ := errgroup . WithContext ( ctx )   limiter = & BucketRateLimiter { ctx : ctx , cancel : cancel , limit : limit , burst : burst , cleanTimeout : cleanTimeout , tickerInterval : tickerInterval , buckets : map [ string ] * limiterWrap { } , egCleaner : egCleaner , mutex : sync . Mutex { } , }   egCleaner . Go ( limiter . cleanerLoop )   return   }

0<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/staging/src/k8s.io/apimachinery/pkg/runtime/serializer/json/json.go#L352-L355<CODESPLIT>Write<CODESPLIT>NewFrameReader implements stream framing for this serializer<CODESPLIT>func ( w yamlFrameWriter ) Write ( data [ ] byte ) ( n int , err error ) { if _ , err := w . w . Write ( [ ] byte ( " \n " ) ) ; err != nil { return 0 , err   }   return w . w . Write ( data )   }

1<CODESPLIT>https://github.com/dropbox/dropbox-sdk-go-unofficial/blob/af4558f5e44cef90c2d963e50e76e7dfa46d0c48/dropbox/team/types.go#L969-L975<CODESPLIT>NewGroupMembersAddArg<CODESPLIT>NewGroupMembersAddArg returns a new GroupMembersAddArg instance<CODESPLIT>func NewGroupMembersAddArg ( Group * GroupSelector , Members [ ] * MemberAccess ) * GroupMembersAddArg { s := new ( GroupMembersAddArg )   s . Group = Group   s . Members = Members   s . ReturnMembers = true   return s   }

0<CODESPLIT>https://github.com/namsral/flag/blob/67f268f20922975c067ed799e4be6bacf152208c/flag.go#L748-L750<CODESPLIT>Duration<CODESPLIT>DurationVar defines a time . Duration flag with specified name default value and usage string . The argument p points to a time . Duration variable in which to store the value of the flag . The flag accepts a value acceptable to time . ParseDuration .<CODESPLIT>func ( f * FlagSet ) Duration ( name string , value time . Duration , usage string ) * time . Duration { p := new ( time . Duration )   f . DurationVar ( p , name , value , usage )   return p   }

1<CODESPLIT>https://github.com/weppos/publicsuffix-go/blob/7c1d5dc5cdc2b05f1ea58e40ed9bdee01d9d0e4d/publicsuffix/publicsuffix.go#L94-L98<CODESPLIT>NewListFromString<CODESPLIT>NewListFromString parses a string that represents a Public Suffix source and returns a List initialized with the rules in the source .<CODESPLIT>func NewListFromString ( src string , options * ParserOption ) ( * List , error ) { l := NewList ( )   _ , err := l . LoadString ( src , options )   return l , err   }

1<CODESPLIT>https://github.com/dropbox/dropbox-sdk-go-unofficial/blob/af4558f5e44cef90c2d963e50e76e7dfa46d0c48/dropbox/team_log/types.go#L11115-L11119<CODESPLIT>NewGroupRemoveExternalIdType<CODESPLIT>NewGroupRemoveExternalIdType returns a new GroupRemoveExternalIdType instance<CODESPLIT>func NewGroupRemoveExternalIdType ( Description string ) * GroupRemoveExternalIdType { s := new ( GroupRemoveExternalIdType )   s . Description = Description   return s   }

0<CODESPLIT>https://github.com/sourcegraph/go-langserver/blob/33d2968a49e1131825a0accdd64bdf9901cf144c/langserver/internal/godef/go/parser/parser.go#L2200-L2205<CODESPLIT>litToString<CODESPLIT>newScope creates a new scope only if we re using scopes .<CODESPLIT>func litToString ( lit * ast . BasicLit ) ( v string ) { if lit . Kind != token . STRING { panic ( " " )   }   if lit . Value [ 0 ] == '`' { return string ( lit . Value [ 1 : len ( lit . Value ) - 1 ] )   }   v , _ = strconv . Unquote ( string ( lit . Value ) )   return   }

1<CODESPLIT>https://github.com/thetruetrade/gotrade/blob/08b7c41e93d91276f0a4014dfdd20a23fd63db31/indicators/adxr.go#L141-L145<CODESPLIT>NewDefaultAdxrForStreamWithSrcLen<CODESPLIT>NewDefaultAdxrForStreamWithSrcLen creates an Average Directional Index Rating ( Adxr ) for offline usage with a source data stream<CODESPLIT>func NewDefaultAdxrForStreamWithSrcLen ( sourceLength uint , priceStream gotrade . DOHLCVStreamSubscriber ) ( indicator * Adxr , err error ) { ind , err := NewDefaultAdxrWithSrcLen ( sourceLength )   priceStream . AddTickSubscription ( ind )   return ind , err   }

0<CODESPLIT>https://github.com/ulule/limiter/blob/d1a9972e76c234debd9f4cf39c847ea174f0faa4/limiter.go#L53-L55<CODESPLIT>New<CODESPLIT>Peek returns the limit for given identifier without modification on current values .<CODESPLIT>func New ( store Store , rate Rate , options ... Option ) * Limiter { opt := Options { IPv4Mask : DefaultIPv4Mask , IPv6Mask : DefaultIPv6Mask , TrustForwardHeader : false , }   for _ , o := range options { o ( & opt )   }   return & Limiter { Store : store , Rate : rate , Options : opt , }   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/swf/api.go#L6216-L6276<CODESPLIT>Validate<CODESPLIT>Validate inspects the fields of the type to determine if they are valid .<CODESPLIT>func ( s * Decision ) Validate ( ) error { invalidParams := request . ErrInvalidParams { Context : " " }   if s . DecisionType == nil { invalidParams . Add ( request . NewErrParamRequired ( " " ) )   }   if s . CancelTimerDecisionAttributes != nil { if err := s . CancelTimerDecisionAttributes . Validate ( ) ; err != nil { invalidParams . AddNested ( " " , err . ( request . ErrInvalidParams ) )   }   }   if s . ContinueAsNewWorkflowExecutionDecisionAttributes != nil { if err := s . ContinueAsNewWorkflowExecutionDecisionAttributes . Validate ( ) ; err != nil { invalidParams . AddNested ( " " , err . ( request . ErrInvalidParams ) )   }   }   if s . RecordMarkerDecisionAttributes != nil { if err := s . RecordMarkerDecisionAttributes . Validate ( ) ; err != nil { invalidParams . AddNested ( " " , err . ( request . ErrInvalidParams ) )   }   }   if s . RequestCancelActivityTaskDecisionAttributes != nil { if err := s . RequestCancelActivityTaskDecisionAttributes . Validate ( ) ; err != nil { invalidParams . AddNested ( " " , err . ( request . ErrInvalidParams ) )   }   }   if s . RequestCancelExternalWorkflowExecutionDecisionAttributes != nil { if err := s . RequestCancelExternalWorkflowExecutionDecisionAttributes . Validate ( ) ; err != nil { invalidParams . AddNested ( " " , err . ( request . ErrInvalidParams ) )   }   }   if s . ScheduleActivityTaskDecisionAttributes != nil { if err := s . ScheduleActivityTaskDecisionAttributes . Validate ( ) ; err != nil { invalidParams . AddNested ( " " , err . ( request . ErrInvalidParams ) )   }   }   if s . ScheduleLambdaFunctionDecisionAttributes != nil { if err := s . ScheduleLambdaFunctionDecisionAttributes . Validate ( ) ; err != nil { invalidParams . AddNested ( " " , err . ( request . ErrInvalidParams ) )   }   }   if s . SignalExternalWorkflowExecutionDecisionAttributes != nil { if err := s . SignalExternalWorkflowExecutionDecisionAttributes . Validate ( ) ; err != nil { invalidParams . AddNested ( " " , err . ( request . ErrInvalidParams ) )   }   }   if s . StartChildWorkflowExecutionDecisionAttributes != nil { if err := s . StartChildWorkflowExecutionDecisionAttributes . Validate ( ) ; err != nil { invalidParams . AddNested ( " " , err . ( request . ErrInvalidParams ) )   }   }   if s . StartTimerDecisionAttributes != nil { if err := s . StartTimerDecisionAttributes . Validate ( ) ; err != nil { invalidParams . AddNested ( " " , err . ( request . ErrInvalidParams ) )   }   }    if invalidParams . Len ( ) > 0 { return invalidParams   }   return nil   }

0<CODESPLIT>https://github.com/go-playground/locales/blob/630ebbb602847eba93e75ae38bbc7bb7abcf1ff3/be_BY/be_BY.go#L225-L227<CODESPLIT>WeekdayNarrow<CODESPLIT>WeekdayShort returns the locales short weekday given the weekday provided<CODESPLIT>func ( be * be_BY ) WeekdayNarrow ( weekday time . Weekday ) string { return be . daysNarrow [ weekday ]   }

0<CODESPLIT>https://github.com/hyperledger/fabric/blob/49f496925df1e66198d7ec794849536c9f8b104b/core/chaincode/shim/chaincode.go#L702-L708<CODESPLIT>CreateCompositeKey<CODESPLIT>GetHistoryForKey documentation can be found in interfaces . go<CODESPLIT>func ( stub * ChaincodeStub ) CreateCompositeKey ( objectType string , attributes [ ] string ) ( string , error ) { return createCompositeKey ( objectType , attributes )   }

0<CODESPLIT>https://github.com/ceph/go-ceph/blob/e32f9f0f2e941422937c0a6c4f0a61b8f0c82995/rbd/rbd.go#L727-L730<CODESPLIT>GetParentInfo<CODESPLIT>int rbd_discard ( rbd_image_t image uint64_t ofs uint64_t len ) ;<CODESPLIT>func ( image * Image ) GetParentInfo ( p_pool , p_name , p_snapname [ ] byte ) error { ret := C . rbd_get_parent_info ( image . image , ( * C . char ) ( unsafe . Pointer ( & p_pool [ 0 ] ) ) , ( C . size_t ) ( len ( p_pool ) ) , ( * C . char ) ( unsafe . Pointer ( & p_name [ 0 ] ) ) , ( C . size_t ) ( len ( p_name ) ) , ( * C . char ) ( unsafe . Pointer ( & p_snapname [ 0 ] ) ) , ( C . size_t ) ( len ( p_snapname ) ) )   if ret == 0 { return nil   } else { return RBDError ( ret )   }   }

1<CODESPLIT>https://github.com/helm/helm/blob/f0218d00f09d4bfb9dc1d5a642a371953fa0c781/pkg/storage/driver/secrets.go#L50-L55<CODESPLIT>NewSecrets<CODESPLIT>NewSecrets initializes a new Secrets wrapping an implementation of the kubernetes SecretsInterface .<CODESPLIT>func NewSecrets ( impl corev1 . SecretInterface ) * Secrets { return & Secrets { impl : impl , Log : func ( _ string , _ ... interface { } ) { } , }   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/migrationhub/api.go#L3066-L3069<CODESPLIT>SetProgressUpdateStream<CODESPLIT>SetProgressUpdateStream sets the ProgressUpdateStream field s value .<CODESPLIT>func ( s * MigrationTask ) SetProgressUpdateStream ( v string ) * MigrationTask { s . ProgressUpdateStream = & v   return s   }

0<CODESPLIT>https://github.com/currantlabs/ble/blob/c1d21c164cf83d3360fd5abd73a3405cb588c06c/darwin/device.go#L215-L217<CODESPLIT>Scan<CODESPLIT>stopAdvertising stops advertising .<CODESPLIT>func ( d * Device ) Scan ( ctx context . Context , allowDup bool , h ble . AdvHandler ) error { d . advHandler = h   if err := d . sendCmd ( d . cm , 29 , xpc . Dict { // "kCBMsgArgUUIDs": uuidSlice(ss), " " : xpc . Dict { " " : map [ bool ] int { true : 1 , false : 0 } [ allowDup ] , } , } ) ; err != nil { return err   }   <- ctx . Done ( )   if err := d . stopScanning ( ) ; err != nil { return errors . Wrap ( ctx . Err ( ) , err . Error ( ) )   }   return ctx . Err ( )   }

1<CODESPLIT>https://github.com/hyperledger/fabric-sdk-go/blob/48bb0d199e2cee03ad3af0a413bdfc064fc69bfe/pkg/msp/caclient.go#L351-L357<CODESPLIT>GetCAInfo<CODESPLIT>GetCAInfo returns generic CA information<CODESPLIT>func ( c * CAClientImpl ) GetCAInfo ( ) ( * api . GetCAInfoResponse , error ) { if c . adapter == nil { return nil , fmt . Errorf ( " " , c . orgName )   }    return c . adapter . GetCAInfo ( c . caName )   }

0<CODESPLIT>https://github.com/go-acme/lego/blob/29c63545ce6fffd8289c55c39d81c4fde993533d/providers/dns/namecheap/namecheap.go#L165-L201<CODESPLIT>Present<CODESPLIT>CleanUp removes a TXT record used for a previous DNS challenge .<CODESPLIT>func ( d * DNSProvider ) Present ( domain , token , keyAuth string ) error { tlds , err := d . getTLDs ( )   if err != nil { return fmt . Errorf ( " " , err )   }    ch , err := newChallenge ( domain , keyAuth , tlds )   if err != nil { return fmt . Errorf ( " " , err )   }    records , err := d . getHosts ( ch . sld , ch . tld )   if err != nil { return fmt . Errorf ( " " , err )   }    record := Record { Name : ch . key , Type : " " , Address : ch . keyValue , MXPref : " " , TTL : strconv . Itoa ( d . config . TTL ) , }    records = append ( records , record )    if d . config . Debug { for _ , h := range records { log . Printf ( " " , h . Type , h . Name , h . TTL , h . Address )   }   }    err = d . setHosts ( ch . sld , ch . tld , records )   if err != nil { return fmt . Errorf ( " " , err )   }   return nil   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/redshift/api.go#L399-L404<CODESPLIT>BatchDeleteClusterSnapshots<CODESPLIT>BatchDeleteClusterSnapshotsWithContext is the same as BatchDeleteClusterSnapshots with the addition of the ability to pass a context and additional request options . See BatchDeleteClusterSnapshots for details on how to use this API operation . The context must be non - nil and will be used for request cancellation . If the context is nil a panic will occur . In the future the SDK may create sub - contexts for http . Requests . See https : // golang . org / pkg / context / for more information on using Contexts .<CODESPLIT>func ( c * Redshift ) BatchDeleteClusterSnapshots ( input * BatchDeleteClusterSnapshotsInput ) ( * BatchDeleteClusterSnapshotsOutput , error ) { req , out := c . BatchDeleteClusterSnapshotsRequest ( input )   return out , req . Send ( )   }

1<CODESPLIT>https://github.com/btcsuite/btcd/blob/96897255fd17525dd12426345d279533780bc4e1/txscript/engine.go#L363-L369<CODESPLIT>DisasmPC<CODESPLIT>DisasmPC returns the string for the disassembly of the opcode that will be next to execute when Step () is called .<CODESPLIT>func ( vm * Engine ) DisasmPC ( ) ( string , error ) { scriptIdx , scriptOff , err := vm . curPC ( )   if err != nil { return " " , err   }   return vm . disasm ( scriptIdx , scriptOff ) , nil   }

0<CODESPLIT>https://github.com/golang-plus/uuid/blob/abc8f6f4d9f8ee48848030dba1eb233bc8b4c4fe/internal/layout.go#L37-L50<CODESPLIT>NewWithOptions<CODESPLIT>GetLayout returns layout of uuid .<CODESPLIT>func NewWithOptions ( enc zap . Encoder , opts ... zap . Option ) gournal . Appender { return & appender { zap . New ( enc , opts ... ) }   }

1<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/pkg/kubelet/types/pod_update.go#L106-L113<CODESPLIT>GetPodSource<CODESPLIT>GetPodSource returns the source of the pod based on the annotation .<CODESPLIT>func GetPodSource ( pod * v1 . Pod ) ( string , error ) { if pod . Annotations != nil { if source , ok := pod . Annotations [ ConfigSourceAnnotationKey ] ; ok { return source , nil   }   }   return " " , fmt . Errorf ( " " , pod . UID )   }

0<CODESPLIT>https://github.com/rsc/rsc/blob/fc62025902295658a9c7e89418e095fd598b2682/ext2/fs.go#L487-L504<CODESPLIT>ReadDir<CODESPLIT>Lookup looks up the name in the directory f returning the corresponding child file .<CODESPLIT>func ( f * File ) ReadDir ( ) ( [ ] Dir , error ) { var dirs [ ] Dir   err := f . walkDir ( func ( name [ ] byte , ino uint32 ) bool { dirs = append ( dirs , Dir { string ( name ) , ino } )   return true   } )   return dirs , err   }

1<CODESPLIT>https://github.com/cayleygraph/cayley/blob/5318a818e947b20ef36a274f643e577f036bca7c/graph/iterator/hasa.go#L209-L224<CODESPLIT>Next<CODESPLIT>Next advances the iterator . This is simpler than Contains . We have a subiterator we can get a value from and we can take that resultant quad pull our direction out of it and return that .<CODESPLIT>func ( it * HasA ) Next ( ctx context . Context ) bool { graph . NextLogIn ( it )   it . runstats . Next += 1   if it . resultIt != nil { it . resultIt . Close ( )   }    if ! it . primaryIt . Next ( ctx ) { it . err = it . primaryIt . Err ( )   return graph . NextLogOut ( it , false )   }   tID := it . primaryIt . Result ( )   val := it . qs . QuadDirection ( tID , it . dir )   it . result = val   return graph . NextLogOut ( it , true )   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/greengrass/api.go#L12995-L12998<CODESPLIT>SetCreationTimestamp<CODESPLIT>SetArn sets the Arn field s value .<CODESPLIT>func ( s * GetResourceDefinitionOutput ) SetCreationTimestamp ( v string ) * GetResourceDefinitionOutput { s . CreationTimestamp = & v   return s   }

1<CODESPLIT>https://github.com/gsblue/raygunclient/blob/adf02788b453a7775ef58305b79ed6f1637d8d90/errorEntry.go#L48-L51<CODESPLIT>SetTags<CODESPLIT>SetTags is a chainable option - setting method to add tags to this entry .<CODESPLIT>func ( e * ErrorEntry ) SetTags ( tags [ ] string ) * ErrorEntry { e . Tags = tags   return e   }

0<CODESPLIT>https://github.com/dinever/golf/blob/11abebbbb289ef6f35e518db394eaca39cee8732/context.go#L112-L120<CODESPLIT>Header<CODESPLIT>Query method retrieves the form data return empty string if not found .<CODESPLIT>func ( ctx * Context ) Header ( key string ) string { return ctx . Request . Header . Get ( key )   }

0<CODESPLIT>https://github.com/go-sql-driver/mysql/blob/d0a548181995c293eb09c61ef80099ba1cdbe8f5/auth.go#L93-L98<CODESPLIT>NextByte<CODESPLIT>Pseudo random number generator<CODESPLIT>func ( r * myRnd ) NextByte ( ) byte { r . seed1 = ( r . seed1 * 3 + r . seed2 ) % myRndMaxVal   r . seed2 = ( r . seed1 + r . seed2 + 33 ) % myRndMaxVal    return byte ( uint64 ( r . seed1 ) * 31 / myRndMaxVal )   }

0<CODESPLIT>https://github.com/araddon/gou/blob/c797efecbb6162ea2d4200cdf779c8b73da7233c/log.go#L152-L157<CODESPLIT>LogLevelSet<CODESPLIT>you can set a logger and log level . this is for errors and assumes you are logging to Stderr ( seperate from stdout above ) allowing you to seperate debug&info logging from errors gou . SetLogger ( log . New ( os . Stderr log . LstdFlags ) debug ) loglevls : debug info warn error fatal<CODESPLIT>func LogLevelSet ( levelWord string ) { if lvl , ok := LogLevelWords [ levelWord ] ; ok { LogLevel = lvl   }   }

0<CODESPLIT>https://github.com/docker/distribution/blob/3226863cbcba6dbc2f6c83a37b28126c934af3f8/registry/storage/driver/swift/swift.go#L520-L603<CODESPLIT>URLFor<CODESPLIT>Delete recursively deletes all objects stored at path and its subpaths .<CODESPLIT>func ( d * driver ) URLFor ( ctx context . Context , path string , options map [ string ] interface { } ) ( string , error ) { if d . SecretKey == " " { return " " , storagedriver . ErrUnsupportedMethod { }   }    methodString := " "   method , ok := options [ " " ]   if ok { if methodString , ok = method . ( string ) ; ! ok { return " " , storagedriver . ErrUnsupportedMethod { }   }   }    if methodString == " " { // A "HEAD" request on a temporary URL is allowed if the // signature was generated with "GET", "POST" or "PUT" methodString = " "   }    supported := false   for _ , method := range d . TempURLMethods { if method == methodString { supported = true   break   }   }    if ! supported { return " " , storagedriver . ErrUnsupportedMethod { }   }    expiresTime := time . Now ( ) . Add ( 20 * time . Minute )   expires , ok := options [ " " ]   if ok { et , ok := expires . ( time . Time )   if ok { expiresTime = et   }   }    tempURL := d . Conn . ObjectTempUrl ( d . Container , d . swiftPath ( path ) , d . SecretKey , methodString , expiresTime )    if d . AccessKey != " " { // On HP Cloud, the signature must be in the form of tenant_id:access_key:signature url , _ := url . Parse ( tempURL )   query := url . Query ( )   query . Set ( " " , fmt . Sprintf ( " " , d . Conn . TenantId , d . AccessKey , query . Get ( " " ) ) )   url . RawQuery = query . Encode ( )   tempURL = url . String ( )   }    return tempURL , nil   }

1<CODESPLIT>https://github.com/pingcap/tidb/blob/b6218d415cf77bca6910057a7b391a379c287e59/sessionctx/variable/session.go#L529-L546<CODESPLIT>GetExecuteArgumentsInfo<CODESPLIT>GetExecuteArgumentsInfo gets the argument list as a string of execute statement .<CODESPLIT>func ( s * SessionVars ) GetExecuteArgumentsInfo ( ) string { if len ( s . PreparedParams ) == 0 { return " "   }   args := make ( [ ] string , 0 , len ( s . PreparedParams ) )   for _ , v := range s . PreparedParams { if v . IsNull ( ) { args = append ( args , " " )   } else { str , err := v . ToString ( )   if err != nil { terror . Log ( err )   }   args = append ( args , str )   }   }   return fmt . Sprintf ( " " , strings . Join ( args , " " ) )   }

0<CODESPLIT>https://github.com/42wim/matterbridge/blob/1b2feb19e506bc24580d5d61422d0de68349c24e/bridge/helper/helper.go#L142-L155<CODESPLIT>ClipMessage<CODESPLIT>HandleDownloadData adds the data for a remote file into a Matterbridge gateway message .<CODESPLIT>func ClipMessage ( text string , length int ) string { const clippingMessage = " "   if len ( text ) > length { text = text [ : length - len ( clippingMessage ) ]   if r , size := utf8 . DecodeLastRuneInString ( text ) ; r == utf8 . RuneError { text = text [ : len ( text ) - size ]   }   text += clippingMessage   }   return text   }

0<CODESPLIT>https://github.com/kubernetes-incubator/external-storage/blob/fbfedbf60da4e5ee25a3151bfe8504f3e3281319/iscsi/targetd/provisioner/iscsi-provisioner.go#L312-L348<CODESPLIT>Delete<CODESPLIT>getFirstAvailableLun gets first available Lun .<CODESPLIT>func ( p * iscsiProvisioner ) Delete ( volume * v1 . PersistentVolume ) error { //vol from the annotation log . Debugln ( " " , volume . GetName ( ) )   for _ , initiator := range strings . Split ( volume . Annotations [ " " ] , " " ) { log . Debugln ( " " , volume . Annotations [ " " ] , volume . Annotations [ " " ] , initiator )   err := p . exportDestroy ( volume . Annotations [ " " ] , volume . Annotations [ " " ] , initiator )   if err != nil { log . Warnln ( err )   return err   }   log . Debugln ( " " , volume . Annotations [ " " ] , volume . Annotations [ " " ] , initiator )   }   log . Debugln ( " " , volume . Annotations [ " " ] , volume . Annotations [ " " ] )   err := p . volDestroy ( volume . Annotations [ " " ] , volume . Annotations [ " " ] )   if err != nil { log . Warnln ( err )   return err   }   log . Debugln ( " " , volume . Annotations [ " " ] , volume . Annotations [ " " ] )   log . Debugln ( " " , volume . GetName ( ) )   return nil   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/iot/api.go#L36251-L36254<CODESPLIT>SetRoleAlias<CODESPLIT>SetRoleAlias sets the RoleAlias field s value .<CODESPLIT>func ( s * UpdateRoleAliasOutput ) SetRoleAlias ( v string ) * UpdateRoleAliasOutput { s . RoleAlias = & v   return s   }

0<CODESPLIT>https://github.com/revel/revel/blob/a3d7a7c23ca885cc5036d3641ede49ce4a14ee2e/logger/handlers.go#L29-L33<CODESPLIT>Log<CODESPLIT>Filters out records which do not match the level Uses the log15 . FilterHandler to perform this task<CODESPLIT>func ( h LevelFilterHandler ) Log ( r * Record ) error { if r . Level == h . Level { return h . h . Log ( r )   }   return nil   }

0<CODESPLIT>https://github.com/open-policy-agent/opa/blob/589105aff580587c1b27b87df7123105af3e212a/repl/repl.go#L741-L758<CODESPLIT>cmdProfile<CODESPLIT>loadInput returns the input defined in the REPL . The REPL loads the input from the data . repl . input document .<CODESPLIT>func ( r * REPL ) cmdProfile ( ) error { if r . profiler { r . profiler = false   } else { r . profiler = true   }   return nil   }

0<CODESPLIT>https://github.com/currantlabs/ble/blob/c1d21c164cf83d3360fd5abd73a3405cb588c06c/linux/hci/adv.go#L96-L98<CODESPLIT>Connectable<CODESPLIT>RSSI returns RSSI signal strength .<CODESPLIT>func ( a * Advertisement ) Connectable ( ) bool { return a . EventType ( ) == evtTypAdvDirectInd || a . EventType ( ) == evtTypAdvInd   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/worklink/api.go#L1385-L1388<CODESPLIT>ListDevicesRequest<CODESPLIT>ListDevices API operation for Amazon WorkLink . Retrieves a list of devices registered with the specified fleet . Returns awserr . Error for service API and SDK errors . Use runtime type assertions with awserr . Error s Code and Message methods to get detailed information about the error . See the AWS API reference guide for Amazon WorkLink s API operation ListDevices for usage and error information . Returned Error Codes : * ErrCodeUnauthorizedException UnauthorizedException You are not authorized to perform this action . * ErrCodeInternalServerErrorException InternalServerErrorException The service is temporarily unavailable . * ErrCodeInvalidRequestException InvalidRequestException The request is not valid . * ErrCodeResourceNotFoundException ResourceNotFoundException The requested resource was not found . * ErrCodeTooManyRequestsException TooManyRequestsException The number of requests exceeds the limit . See also https : // docs . aws . amazon . com / goto / WebAPI / worklink - 2018 - 09 - 25 / ListDevices<CODESPLIT>func ( c * WorkLink ) ListDevicesRequest ( input * ListDevicesInput ) ( req * request . Request , output * ListDevicesOutput ) { op := & request . Operation { Name : opListDevices , HTTPMethod : " " , HTTPPath : " " , Paginator : & request . Paginator { InputTokens : [ ] string { " " } , OutputTokens : [ ] string { " " } , LimitToken : " " , TruncationToken : " " , } , }    if input == nil { input = & ListDevicesInput { }   }    output = & ListDevicesOutput { }   req = c . newRequest ( op , input , output )   return   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/opsworks/api.go#L5096-L5099<CODESPLIT>SetTimeBasedAutoScalingWithContext<CODESPLIT>SetTimeBasedAutoScaling API operation for AWS OpsWorks . Specify the time - based auto scaling configuration for a specified instance . For more information see Managing Load with Time - based and Load - based Instances ( http : // docs . aws . amazon . com / opsworks / latest / userguide / workinginstances - autoscaling . html ) . Required Permissions : To use this action an IAM user must have a Manage permissions level for the stack or an attached policy that explicitly grants permissions . For more information on user permissions see Managing User Permissions ( http : // docs . aws . amazon . com / opsworks / latest / userguide / opsworks - security - users . html ) . Returns awserr . Error for service API and SDK errors . Use runtime type assertions with awserr . Error s Code and Message methods to get detailed information about the error . See the AWS API reference guide for AWS OpsWorks s API operation SetTimeBasedAutoScaling for usage and error information . Returned Error Codes : * ErrCodeValidationException ValidationException Indicates that a request was not valid . * ErrCodeResourceNotFoundException ResourceNotFoundException Indicates that a resource was not found . See also https : // docs . aws . amazon . com / goto / WebAPI / opsworks - 2013 - 02 - 18 / SetTimeBasedAutoScaling<CODESPLIT>func ( c * OpsWorks ) SetTimeBasedAutoScalingWithContext ( ctx aws . Context , input * SetTimeBasedAutoScalingInput , opts ... request . Option ) ( * SetTimeBasedAutoScalingOutput , error ) { req , out := c . SetTimeBasedAutoScalingRequest ( input )   req . SetContext ( ctx )   req . ApplyOptions ( opts ... )   return out , req . Send ( )   }

0<CODESPLIT>https://github.com/olivere/elastic/blob/0534a7b1bf47b1ccf57e905491a641709f8a623d/suggester_phrase.go#L187-L309<CODESPLIT>NewPhraseSuggester<CODESPLIT>Source generates the source for the phrase suggester .<CODESPLIT>func NewPhraseSuggester ( name string ) * PhraseSuggester { return & PhraseSuggester { name : name , collateParams : make ( map [ string ] interface { } ) , }   }

0<CODESPLIT>https://github.com/insmo/util/blob/66cff790471534c35d62c9c87051b07270d23042/handler/handler.go#L206-L228<CODESPLIT>NewCORSHandler<CODESPLIT>Tries to load a session from the auth backend for the given authentication<CODESPLIT>func NewCORSHandler ( domains ... string ) func ( h http . Handler ) http . Handler { return func ( h http . Handler ) http . Handler { return http . HandlerFunc ( func ( w http . ResponseWriter , r * http . Request ) { // TODO: compare origin header to a list of accepted domains // instead of sending all OK domains. for _ , domain := range domains { w . Header ( ) . Add ( " " , domain )   }   h . ServeHTTP ( w , r )   } )   }   }

0<CODESPLIT>https://github.com/google/pprof/blob/8358a9778bd1e48718ffcb96eb11ee061385bf62/internal/graph/graph.go#L110-L112<CODESPLIT>AddToEdgeDiv<CODESPLIT>AddToEdge increases the weight of an edge between two nodes . If there isn t such an edge one is created .<CODESPLIT>func ( n * Node ) AddToEdgeDiv ( to * Node , dv , v int64 , residual , inline bool ) { if n . Out [ to ] != to . In [ n ] { panic ( fmt . Errorf ( " " , * n , * to ) )   }    if e := n . Out [ to ] ; e != nil { e . WeightDiv += dv   e . Weight += v   if residual { e . Residual = true   }   if ! inline { e . Inline = false   }   return   }    info := & Edge { Src : n , Dest : to , WeightDiv : dv , Weight : v , Residual : residual , Inline : inline }   n . Out [ to ] = info   to . In [ n ] = info   }

1<CODESPLIT>https://github.com/cilium/cilium/blob/6ecfff82c2314dd9d847645361b57e2646eed64b/pkg/monitor/datapath_drop.go#L45-L49<CODESPLIT>DumpInfo<CODESPLIT>DumpInfo prints a summary of the drop messages .<CODESPLIT>func ( n * DropNotify ) DumpInfo ( data [ ] byte ) { fmt . Printf ( " \n " , api . DropReason ( n . SubType ) , n . Hash , n . DstID , n . SrcLabel , n . DstLabel , GetConnectionSummary ( data [ DropNotifyLen : ] ) )   }

0<CODESPLIT>https://github.com/go-delve/delve/blob/71a7fe04d9a7f7292146988f0e737aea47543dd0/service/debugger/debugger.go#L809-L837<CODESPLIT>Registers<CODESPLIT>PackageVariables returns a list of package variables for the thread optionally regexp filtered using regexp described in filter .<CODESPLIT>func ( d * Debugger ) Registers ( threadID int , floatingPoint bool ) ( api . Registers , error ) { d . processMutex . Lock ( )   defer d . processMutex . Unlock ( )    thread , found := d . target . FindThread ( threadID )   if ! found { return nil , fmt . Errorf ( " " , threadID )   }   regs , err := thread . Registers ( floatingPoint )   if err != nil { return nil , err   }   return api . ConvertRegisters ( regs . Slice ( floatingPoint ) ) , err   }

1<CODESPLIT>https://github.com/docker/libnetwork/blob/9ff9b57c344df5cd47443ad9e65702ec85c5aeb0/cmd/dnet/dnet.go#L72-L83<CODESPLIT>parseOrchestrationConfig<CODESPLIT>ParseConfig parses the libnetwork configuration file<CODESPLIT>func ( d * dnetConnection ) parseOrchestrationConfig ( tomlCfgFile string ) error { dummy := & dnetConnection { }    if _ , err := toml . DecodeFile ( tomlCfgFile , dummy ) ; err != nil { return err   }    if dummy . Orchestration != nil { d . Orchestration = dummy . Orchestration   }   return nil   }

1<CODESPLIT>https://github.com/ttacon/builder/blob/c099f663e1c235176c175644792c5eb282017ad7/insertablebuffer.go#L287-L298<CODESPLIT>ReadByte<CODESPLIT>ReadByte reads and returns the next byte from the buffer . If no byte is available it returns error io . EOF .<CODESPLIT>func ( b * Builder ) ReadByte ( ) ( c byte , err error ) { b . lastRead = opInvalid   if b . off >= len ( b . buf ) { // Buffer is empty, reset to recover space. b . Truncate ( 0 )   return 0 , io . EOF   }   c = b . buf [ b . off ]   b . off ++   b . lastRead = opRead   return c , nil   }

0<CODESPLIT>https://github.com/quorumsco/elastic/blob/390777a4eecc46a095e47bb5d86c1cb000300420/delete_mapping.go#L36-L42<CODESPLIT>Set<CODESPLIT>NewDeleteMappingService creates a new DeleteMappingService .<CODESPLIT>func ( m * MyID ) Set ( key int , value string ) { m . Lock ( )   m . logCache [ key ] = value   m . Unlock ( )   }

1<CODESPLIT>https://github.com/webx-top/echo/blob/e5bb0278c4184f8d0cf242950195de00085f1f4c/middleware/method_override.go#L76-L80<CODESPLIT>MethodFromForm<CODESPLIT>MethodFromForm is a MethodOverrideGetter that gets overridden method from the form parameter .<CODESPLIT>func MethodFromForm ( param string ) MethodOverrideGetter { return func ( c echo . Context ) string { return c . Form ( param )   }   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/opsworks/api.go#L12763-L12766<CODESPLIT>SetBooting<CODESPLIT>SetBooting sets the Booting field s value .<CODESPLIT>func ( s * InstancesCount ) SetBooting ( v int64 ) * InstancesCount { s . Booting = & v   return s   }

1<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/pkg/registry/apps/statefulset/strategy.go#L145-L148<CODESPLIT>ValidateUpdate<CODESPLIT>ValidateUpdate is the default update validation for an end user updating status<CODESPLIT>func ( statefulSetStatusStrategy ) ValidateUpdate ( ctx context . Context , obj , old runtime . Object ) field . ErrorList { // TODO: Validate status updates. return validation . ValidateStatefulSetStatusUpdate ( obj . ( * apps . StatefulSet ) , old . ( * apps . StatefulSet ) )   }

0<CODESPLIT>https://github.com/bitrise-io/goinp/blob/f451b19ba4d087d8272d411ad91af5f4218fd517/goinp/goinp.go#L100-L106<CODESPLIT>AskForIntFromReader<CODESPLIT>======================================= Int ======================================= AskForIntFromReaderWithDefault ...<CODESPLIT>func AskForIntFromReader ( messageToPrint string , inputReader io . Reader ) ( int64 , error ) { userInputStr , err := AskForStringFromReader ( messageToPrint , inputReader )   if err != nil { return 0 , err   }   return strconv . ParseInt ( userInputStr , 10 , 64 )   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/s3/api.go#L16409-L16412<CODESPLIT>SetVersions<CODESPLIT>SetVersions sets the Versions field s value .<CODESPLIT>func ( s * ListObjectVersionsOutput ) SetVersions ( v [ ] * ObjectVersion ) * ListObjectVersionsOutput { s . Versions = v   return s   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/opsworkscm/api.go#L3091-L3094<CODESPLIT>SetEngineAttribute<CODESPLIT>SetEngineAttribute sets the EngineAttribute field s value .<CODESPLIT>func ( s * ExportServerEngineAttributeOutput ) SetEngineAttribute ( v * EngineAttribute ) * ExportServerEngineAttributeOutput { s . EngineAttribute = v   return s   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/kinesisanalyticsv2/api.go#L445-L459<CODESPLIT>AddApplicationReferenceDataSourceRequest<CODESPLIT>AddApplicationReferenceDataSourceRequest generates a aws / request . Request representing the client s request for the AddApplicationReferenceDataSource operation . The output return value will be populated with the request s response once the request completes successfully . Use Send method on the returned Request to send the API call to the service . the output return value is not valid until after Send returns without error . See AddApplicationReferenceDataSource for more information on using the AddApplicationReferenceDataSource API call and error handling . This method is useful when you want to inject custom logic or configuration into the SDK s request lifecycle . Such as custom headers or retry logic . // Example sending a request using the AddApplicationReferenceDataSourceRequest method . req resp : = client . AddApplicationReferenceDataSourceRequest ( params ) err : = req . Send () if err == nil { // resp is now filled fmt . Println ( resp ) } See also https : // docs . aws . amazon . com / goto / WebAPI / kinesisanalyticsv2 - 2018 - 05 - 23 / AddApplicationReferenceDataSource<CODESPLIT>func ( c * KinesisAnalyticsV2 ) AddApplicationReferenceDataSourceRequest ( input * AddApplicationReferenceDataSourceInput ) ( req * request . Request , output * AddApplicationReferenceDataSourceOutput ) { op := & request . Operation { Name : opAddApplicationReferenceDataSource , HTTPMethod : " " , HTTPPath : " " , }    if input == nil { input = & AddApplicationReferenceDataSourceInput { }   }    output = & AddApplicationReferenceDataSourceOutput { }   req = c . newRequest ( op , input , output )   return   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/ecr/api.go#L4454-L4457<CODESPLIT>SetRepositoryName<CODESPLIT>SetRepositoryName sets the RepositoryName field s value .<CODESPLIT>func ( s * InitiateLayerUploadInput ) SetRepositoryName ( v string ) * InitiateLayerUploadInput { s . RepositoryName = & v   return s   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/databasemigrationservice/api.go#L678-L681<CODESPLIT>CreateReplicationTaskRequest<CODESPLIT>CreateReplicationTask API operation for AWS Database Migration Service . Creates a replication task using the specified parameters . Returns awserr . Error for service API and SDK errors . Use runtime type assertions with awserr . Error s Code and Message methods to get detailed information about the error . See the AWS API reference guide for AWS Database Migration Service s API operation CreateReplicationTask for usage and error information . Returned Error Codes : * ErrCodeAccessDeniedFault AccessDeniedFault AWS DMS was denied access to the endpoint . Check that the role is correctly configured . * ErrCodeInvalidResourceStateFault InvalidResourceStateFault The resource is in a state that prevents it from being used for database migration . * ErrCodeResourceAlreadyExistsFault ResourceAlreadyExistsFault The resource you are attempting to create already exists . * ErrCodeResourceNotFoundFault ResourceNotFoundFault The resource could not be found . * ErrCodeKMSKeyNotAccessibleFault KMSKeyNotAccessibleFault AWS DMS cannot access the KMS key . * ErrCodeResourceQuotaExceededFault ResourceQuotaExceededFault The quota for this resource quota has been exceeded . See also https : // docs . aws . amazon . com / goto / WebAPI / dms - 2016 - 01 - 01 / CreateReplicationTask<CODESPLIT>func ( c * DatabaseMigrationService ) CreateReplicationTaskRequest ( input * CreateReplicationTaskInput ) ( req * request . Request , output * CreateReplicationTaskOutput ) { op := & request . Operation { Name : opCreateReplicationTask , HTTPMethod : " " , HTTPPath : " " , }    if input == nil { input = & CreateReplicationTaskInput { }   }    output = & CreateReplicationTaskOutput { }   req = c . newRequest ( op , input , output )   return   }

0<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/pkg/kubelet/pod/pod_manager.go#L143-L154<CODESPLIT>updatePodsInternal<CODESPLIT>Set the internal pods based on the new pods .<CODESPLIT>func ( pm * basicManager ) updatePodsInternal ( pods ... * v1 . Pod ) { for _ , pod := range pods { if pm . secretManager != nil { if isPodInTerminatedState ( pod ) { // Pods that are in terminated state and no longer running can be // ignored as they no longer require access to secrets. // It is especially important in watch-based manager, to avoid // unnecessary watches for terminated pods waiting for GC. pm . secretManager . UnregisterPod ( pod )   } else { // TODO: Consider detecting only status update and in such case do // not register pod, as it doesn't really matter. pm . secretManager . RegisterPod ( pod )   }   }   if pm . configMapManager != nil { if isPodInTerminatedState ( pod ) { // Pods that are in terminated state and no longer running can be // ignored as they no longer require access to configmaps. // It is especially important in watch-based manager, to avoid // unnecessary watches for terminated pods waiting for GC. pm . configMapManager . UnregisterPod ( pod )   } else { // TODO: Consider detecting only status update and in such case do // not register pod, as it doesn't really matter. pm . configMapManager . RegisterPod ( pod )   }   }   podFullName := kubecontainer . GetPodFullName ( pod )   // This logic relies on a static pod and its mirror to have the same name. // It is safe to type convert here due to the IsMirrorPod guard. if IsMirrorPod ( pod ) { mirrorPodUID := kubetypes . MirrorPodUID ( pod . UID )   pm . mirrorPodByUID [ mirrorPodUID ] = pod   pm . mirrorPodByFullName [ podFullName ] = pod   if p , ok := pm . podByFullName [ podFullName ] ; ok { pm . translationByUID [ mirrorPodUID ] = kubetypes . ResolvedPodUID ( p . UID )   }   } else { resolvedPodUID := kubetypes . ResolvedPodUID ( pod . UID )   pm . podByUID [ resolvedPodUID ] = pod   pm . podByFullName [ podFullName ] = pod   if mirror , ok := pm . mirrorPodByFullName [ podFullName ] ; ok { pm . translationByUID [ kubetypes . MirrorPodUID ( mirror . UID ) ] = resolvedPodUID   }   }   }   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/directoryservice/api.go#L4849-L4852<CODESPLIT>SetSharedDirectory<CODESPLIT>SetSharedDirectory sets the SharedDirectory field s value .<CODESPLIT>func ( s * AcceptSharedDirectoryOutput ) SetSharedDirectory ( v * SharedDirectory ) * AcceptSharedDirectoryOutput { s . SharedDirectory = v   return s   }

1<CODESPLIT>https://github.com/libvirt/libvirt-go/blob/6716ded296d94320213e1b57b67c2c7d255c6f00/stream.go#L108-L119<CODESPLIT>Recv<CODESPLIT>See also https : // libvirt . org / html / libvirt - libvirt - stream . html#virStreamRecv<CODESPLIT>func ( v * Stream ) Recv ( p [ ] byte ) ( int , error ) { var err C . virError   n := C . virStreamRecvWrapper ( v . ptr , ( * C . char ) ( unsafe . Pointer ( & p [ 0 ] ) ) , C . size_t ( len ( p ) ) , & err )   if n < 0 { return 0 , makeError ( & err )   }   if n == 0 { return 0 , io . EOF   }    return int ( n ) , nil   }

0<CODESPLIT>https://github.com/signalfx/gateway/blob/60f8886d9dbf529d974d8f3c0b9e932d8a7570a0/protocol/carbon/conn_pool.go#L45-L50<CODESPLIT>Close<CODESPLIT>Return a connection to the pool . Do not return closed or invalid connections<CODESPLIT>func ( pool * connPool ) Close ( ) error { var errs [ ] error   for { c := pool . Get ( )   if c == nil { return errors . NewMultiErr ( errs )   }   // Fix the reusuedConnections stat being incremented by Get() atomic . AddInt64 ( & pool . stats . reusuedConnections , - 1 )   errs = append ( errs , c . Close ( ) )   }   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/rds/api.go#L25064-L25067<CODESPLIT>SetMarker<CODESPLIT>SetLogFileData sets the LogFileData field s value .<CODESPLIT>func ( s * DownloadDBLogFilePortionOutput ) SetMarker ( v string ) * DownloadDBLogFilePortionOutput { s . Marker = & v   return s   }

0<CODESPLIT>https://github.com/openshift/origin/blob/00a7323a2f454c2ca26ab58e1f487dc81e30e19c/pkg/oauth/generated/internalclientset/typed/oauth/internalversion/fake/fake_oauthaccesstoken.go#L35-L53<CODESPLIT>Watch<CODESPLIT>List takes label and field selectors and returns the list of OAuthAccessTokens that match those selectors .<CODESPLIT>func ( c * FakeOAuthAccessTokens ) Watch ( opts v1 . ListOptions ) ( watch . Interface , error ) { return c . Fake . InvokesWatch ( testing . NewRootWatchAction ( oauthaccesstokensResource , opts ) )   }

0<CODESPLIT>https://github.com/russross/meddler/blob/87a225081a7cb35c4f5f8d0977a79105e5287115/scan.go#L278-L284<CODESPLIT>PrimaryKey<CODESPLIT>Values returns a list of PreWrite processed values suitable for use in an INSERT or UPDATE query . If includePk is false the primary key field is omitted . The columns used are the same ones ( in the same order ) as returned by Columns .<CODESPLIT>func PrimaryKey ( src interface { } ) ( name string , pk int64 , err error ) { return Default . PrimaryKey ( src )   }

0<CODESPLIT>https://github.com/frostschutz/go-fibmap/blob/b32c231bfe6a911d413c4a240f560d92e31ef976/fibmap.go#L173-L177<CODESPLIT>Fiemap<CODESPLIT>call FIGETBSZ ioctl<CODESPLIT>func ( f FibmapFile ) Fiemap ( size uint32 ) ( [ ] Extent , syscall . Errno ) { extents := make ( [ ] Extent , size + 1 )   ptr := unsafe . Pointer ( uintptr ( unsafe . Pointer ( & extents [ 1 ] ) ) - FiemapSize )    t := ( * fiemap ) ( ptr )   t . Start = 0   t . Length = FIEMAP_MAX_OFFSET   t . Flags = FIEMAP_FLAG_SYNC   t . Extent_count = size    _ , _ , err := syscall . Syscall ( syscall . SYS_IOCTL , f . Fd ( ) , FS_IOC_FIEMAP , uintptr ( ptr ) )    return extents [ 1 : 1 + t . Mapped_extents ] , err   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/cognitoidentityprovider/api.go#L3020-L3025<CODESPLIT>AdminUserGlobalSignOut<CODESPLIT>AdminUserGlobalSignOutWithContext is the same as AdminUserGlobalSignOut with the addition of the ability to pass a context and additional request options . See AdminUserGlobalSignOut for details on how to use this API operation . The context must be non - nil and will be used for request cancellation . If the context is nil a panic will occur . In the future the SDK may create sub - contexts for http . Requests . See https : // golang . org / pkg / context / for more information on using Contexts .<CODESPLIT>func ( c * CognitoIdentityProvider ) AdminUserGlobalSignOut ( input * AdminUserGlobalSignOutInput ) ( * AdminUserGlobalSignOutOutput , error ) { req , out := c . AdminUserGlobalSignOutRequest ( input )   return out , req . Send ( )   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/aws/signer/v4/v4.go#L715-L723<CODESPLIT>removePresign<CODESPLIT>unsign removes signing flags for both signed and presigned requests .<CODESPLIT>func ( ctx * signingCtx ) removePresign ( ) { ctx . Query . Del ( " " )   ctx . Query . Del ( " " )   ctx . Query . Del ( " " )   ctx . Query . Del ( " " )   ctx . Query . Del ( " " )   ctx . Query . Del ( " " )   ctx . Query . Del ( " " )   }

1<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/api/annotations/client.go#L26-L32<CODESPLIT>Get<CODESPLIT>Get returns annotations that have been set on the given entities .<CODESPLIT>func ( c * Client ) Get ( tags [ ] string ) ( [ ] params . AnnotationsGetResult , error ) { annotations := params . AnnotationsGetResults { }   if err := c . facade . FacadeCall ( " " , entitiesFromTags ( tags ) , & annotations ) ; err != nil { return annotations . Results , errors . Trace ( err )   }   return annotations . Results , nil   }

0<CODESPLIT>https://github.com/hashicorp/vault/blob/7e96d5c2b53ee9e22439f3bc0cb366d7e92f949b/vault/token_store.go#L2074-L2597<CODESPLIT>handleCreate<CODESPLIT>handleCreateCommon handles the auth / token / create path for creation of new tokens<CODESPLIT>func ( ts * TokenStore ) handleCreate ( ctx context . Context , req * logical . Request , d * framework . FieldData ) ( * logical . Response , error ) { return ts . handleCreateCommon ( ctx , req , d , false , nil )   }

0<CODESPLIT>https://github.com/arangodb/go-driver/blob/b14f41496c3dc1253a16c06bbc405605934b214a/view_impl.go#L90-L104<CODESPLIT>ArangoSearchView<CODESPLIT>Remove removes the entire view . If the view does not exist a NotFoundError is returned .<CODESPLIT>func ( v * view ) ArangoSearchView ( ) ( ArangoSearchView , error ) { if v . viewType != ViewTypeArangoSearch { return nil , WithStack ( newArangoError ( http . StatusConflict , 0 , fmt . Sprintf ( " " , ViewTypeArangoSearch , v . viewType ) ) )   }   return & viewArangoSearch { view : * v } , nil   }

1<CODESPLIT>https://github.com/src-d/go-git/blob/e17ee112ca6cc7db0a732c0676b61511e84ec899/plumbing/protocol/packp/advrefs_decode.go#L156-L170<CODESPLIT>decodeSkipNoRefs<CODESPLIT>Skips SP capabilities^ {} NUL<CODESPLIT>func decodeSkipNoRefs ( p * advRefsDecoder ) decoderStateFn { if len ( p . line ) < len ( noHeadMark ) { p . error ( " " )   return nil   }    if ! bytes . HasPrefix ( p . line , noHeadMark ) { p . error ( " " )   return nil   }    p . line = p . line [ len ( noHeadMark ) : ]    return decodeCaps   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/sfn/api.go#L5450-L5453<CODESPLIT>SetRegion<CODESPLIT>SetRegion sets the Region field s value .<CODESPLIT>func ( s * TaskScheduledEventDetails ) SetRegion ( v string ) * TaskScheduledEventDetails { s . Region = & v   return s   }

1<CODESPLIT>https://github.com/hashicorp/terraform/blob/133d3d79714077d8009e35759ac7dad18522e6b6/terraform/node_local.go#L54-L59<CODESPLIT>EvalTree<CODESPLIT>GraphNodeEvalable<CODESPLIT>func ( n * NodeLocal ) EvalTree ( ) EvalNode { return & EvalLocal { Addr : n . Addr . LocalValue , Expr : n . Config . Expr , }   }

0<CODESPLIT>https://github.com/inverse-inc/packetfence/blob/f29912bde7974931d699aba60aa8fde1c5d9a826/go/caddy/caddy/caddyhttp/fastcgi/fastcgi.go#L41-L139<CODESPLIT>BackendError<CODESPLIT>ServeHTTP satisfies the httpserver . Handler interface .<CODESPLIT>func BackendError ( b ServiceBackend , zone string , rcode int , state request . Request , err error , opt Options ) ( int , error ) { m := new ( dns . Msg )   m . SetRcode ( state . Req , rcode )   m . Authoritative , m . RecursionAvailable , m . Compress = true , true , true   m . Ns , _ = SOA ( b , zone , state , opt )    state . SizeAndDo ( m )   state . W . WriteMsg ( m )   // Return success as the rcode to signal we have written to the client. return dns . RcodeSuccess , err   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/cloudwatchevents/api.go#L4387-L4390<CODESPLIT>SetBatchParameters<CODESPLIT>SetArn sets the Arn field s value .<CODESPLIT>func ( s * Target ) SetBatchParameters ( v * BatchParameters ) * Target { s . BatchParameters = v   return s   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/ses/api.go#L10027-L10030<CODESPLIT>SetHeadersInDeliveryNotificationsEnabled<CODESPLIT>SetHeadersInComplaintNotificationsEnabled sets the HeadersInComplaintNotificationsEnabled field s value .<CODESPLIT>func ( s * IdentityNotificationAttributes ) SetHeadersInDeliveryNotificationsEnabled ( v bool ) * IdentityNotificationAttributes { s . HeadersInDeliveryNotificationsEnabled = & v   return s   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/internal/ini/literal_tokens.go#L48-L102<CODESPLIT>NewErrParamFormat<CODESPLIT>isNumberValue will return whether not the leading characters in a byte slice is a number . A number is delimited by whitespace or the newline token . A number is defined to be in a binary octal decimal ( int | float ) hex format or in scientific notation .<CODESPLIT>func NewErrParamFormat ( field string , format , value string ) * ErrParamFormat { return & ErrParamFormat { errInvalidParam : errInvalidParam { code : ParamFormatErrCode , field : field , msg : fmt . Sprintf ( " " , format , value ) , } , format : format , }   }

1<CODESPLIT>https://github.com/maraino/go-mock/blob/4c74c434cd3a9e9a70ed1eeb56646a1d3fac372f/mock.go#L596-L602<CODESPLIT>Error<CODESPLIT>Error returns a specific return parameter as an error . If a result has not been set it returns nil .<CODESPLIT>func ( r * MockResult ) Error ( i int ) error { if r . Contains ( i ) && r . Result [ i ] != nil { return r . Result [ i ] . ( error )   } else { return nil   }   }

0<CODESPLIT>https://github.com/nats-io/go-nats/blob/36d30b0ba7aa260ae25b4f3d312b2a700106fd78/enc.go#L83-L87<CODESPLIT>Publish<CODESPLIT>EncoderForType will return the registered Encoder for the encType .<CODESPLIT>func ( c * EncodedConn ) Publish ( subject string , v interface { } ) error { b , err := c . Enc . Encode ( subject , v )   if err != nil { return err   }   return c . Conn . publish ( subject , _EMPTY_ , b )   }

0<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/staging/src/k8s.io/apiserver/pkg/storage/etcd3/store.go#L681-L683<CODESPLIT>growSlice<CODESPLIT>Watch implements storage . Interface . Watch .<CODESPLIT>func growSlice ( v reflect . Value , maxCapacity int , sizes ... int ) { cap := v . Cap ( )   max := cap   for _ , size := range sizes { if size > max { max = size   }   }   if len ( sizes ) == 0 || max > maxCapacity { max = maxCapacity   }   if max <= cap { return   }   if v . Len ( ) > 0 { extra := reflect . MakeSlice ( v . Type ( ) , 0 , max )   reflect . Copy ( extra , v )   v . Set ( extra )   } else { extra := reflect . MakeSlice ( v . Type ( ) , 0 , max )   v . Set ( extra )   }   }

1<CODESPLIT>https://github.com/nats-io/nats-streaming-server/blob/57c6c84265c0012a1efef365703c221329804d4c/util/sublist.go#L165-L200<CODESPLIT>Match<CODESPLIT>Match will match all entries to the literal subject . It will return a set of results .<CODESPLIT>func ( s * Sublist ) Match ( subject string ) [ ] interface { } { s . RLock ( )   rc , ok := s . cache [ subject ]   s . RUnlock ( )   if ok { return rc   }    tsa := [ 32 ] string { }   tokens := tsa [ : 0 ]   start := 0   for i := 0 ; i < len ( subject ) ; i ++ { if subject [ i ] == btsep { tokens = append ( tokens , subject [ start : i ] )   start = i + 1   }   }   tokens = append ( tokens , subject [ start : ] )   result := make ( [ ] interface { } , 0 , 4 )    s . Lock ( )   matchLevel ( s . root , tokens , & result )    // Add to our cache s . cache [ subject ] = result   // Bound the number of entries to sublistMaxCache if len ( s . cache ) > slCacheMax { for k := range s . cache { delete ( s . cache , k )   break   }   }   s . Unlock ( )    return result   }

0<CODESPLIT>https://github.com/layeh/gumble/blob/1ea1159c495624266a4adea43580748fd0fc9c57/gumble/channel.go#L93-L99<CODESPLIT>Find<CODESPLIT>SetMaxUsers will set the maximum number of users allowed in the channel .<CODESPLIT>func ( c * Channel ) Find ( names ... string ) * Channel { if len ( names ) == 0 { return c   }   for _ , child := range c . Children { if child . Name == names [ 0 ] { return child . Find ( names [ 1 : ] ... )   }   }   return nil   }

0<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/fms/api.go#L2235-L2238<CODESPLIT>SetNextToken<CODESPLIT>SetMaxResults sets the MaxResults field s value .<CODESPLIT>func ( s * ListComplianceStatusInput ) SetNextToken ( v string ) * ListComplianceStatusInput { s . NextToken = & v   return s   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/service/opsworks/api.go#L8511-L8514<CODESPLIT>SetAutoScalingType<CODESPLIT>SetAutoScalingType sets the AutoScalingType field s value .<CODESPLIT>func ( s * CreateInstanceInput ) SetAutoScalingType ( v string ) * CreateInstanceInput { s . AutoScalingType = & v   return s   }

1<CODESPLIT>https://github.com/influxdata/influxql/blob/1cbfca8e56b6eaa120f5b5161e4f0d5edcc9e513/ast.go#L4033-L4059<CODESPLIT>RewriteExpr<CODESPLIT>RewriteExpr recursively invokes the function to replace each expr . Nodes are traversed depth - first and rewritten from leaf to root .<CODESPLIT>func RewriteExpr ( expr Expr , fn func ( Expr ) Expr ) Expr { switch e := expr . ( type ) { case * BinaryExpr : e . LHS = RewriteExpr ( e . LHS , fn )   e . RHS = RewriteExpr ( e . RHS , fn )   if e . LHS != nil && e . RHS == nil { expr = e . LHS   } else if e . RHS != nil && e . LHS == nil { expr = e . RHS   } else if e . LHS == nil && e . RHS == nil { return nil   }    case * ParenExpr : e . Expr = RewriteExpr ( e . Expr , fn )   if e . Expr == nil { return nil   }    case * Call : for i , expr := range e . Args { e . Args [ i ] = RewriteExpr ( expr , fn )   }   }    return fn ( expr )   }

0<CODESPLIT>https://github.com/hashicorp/vault/blob/7e96d5c2b53ee9e22439f3bc0cb366d7e92f949b/sdk/plugin/plugin.go#L38-L70<CODESPLIT>Cleanup<CODESPLIT>NewBackend will return an instance of an RPC - based client implementation of the backend for external plugins or a concrete implementation of the backend if it is a builtin backend . The backend is returned as a logical . Backend interface . The isMetadataMode param determines whether the plugin should run in metadata mode .<CODESPLIT>func ( b * BackendPluginClient ) Cleanup ( ctx context . Context ) { b . Backend . Cleanup ( ctx )   b . client . Kill ( )   }

1<CODESPLIT>https://github.com/kubernetes/kubernetes/blob/6a8a3682919652ae668c389ed2f60efb770eed03/staging/src/k8s.io/apimachinery/pkg/runtime/scheme.go#L172-L182<CODESPLIT>AddKnownTypes<CODESPLIT>AddKnownTypes registers all types passed in types as being members of version version . All objects passed to types should be pointers to structs . The name that go reports for the struct becomes the kind field when encoding . Version may not be empty - use the APIVersionInternal constant if you have a type that does not have a formal version .<CODESPLIT>func ( s * Scheme ) AddKnownTypes ( gv schema . GroupVersion , types ... Object ) { s . addObservedVersion ( gv )   for _ , obj := range types { t := reflect . TypeOf ( obj )   if t . Kind ( ) != reflect . Ptr { panic ( " " )   }   t = t . Elem ( )   s . AddKnownTypeWithName ( gv . WithKind ( t . Name ( ) ) , obj )   }   }

1<CODESPLIT>https://github.com/fabric8-services/fabric8-wit/blob/54759c80c42ff2cf29b352e0f6c9330ce4ad7fce/migration/migration.go#L643-L674<CODESPLIT>PopulateCommonTypes<CODESPLIT>PopulateCommonTypes makes sure the database is populated with the correct types ( e . g . bug etc . )<CODESPLIT>func PopulateCommonTypes ( ctx context . Context , db * gorm . DB ) error { populateLocker . Lock ( )   defer populateLocker . Unlock ( )    // Create or update space templates templateFunctions := [ ] func ( ) ( * importer . ImportHelper , error ) { importer . BaseTemplate , importer . LegacyTemplate , importer . ScrumTemplate , importer . AgileTemplate , }   importRepo := importer . NewRepository ( db )   for idx , loadFunction := range templateFunctions { log . Debug ( ctx , nil , `importing space template #%d` , idx )   t , err := loadFunction ( )   if err != nil { return errs . Wrapf ( err , `failed to load space template #%d` , idx )   }   _ , err = importRepo . Import ( ctx , * t )   if err != nil { log . Error ( ctx , map [ string ] interface { } { " " : err , " " : t . Template . ID , " " : t . Template . Name , } , `failed to import space template #%d with name "%s" and ID %s` , idx , t . Template . Name , t . Template . ID )   return errs . Wrapf ( err , `failed to import space template #%d with name "%s" and ID %s` , idx , t . Template . Name , t . Template . ID )   }   log . Debug ( ctx , nil , `imported space template #%d "%s"` , idx , t . Template . Name )   }   workitem . ClearGlobalWorkItemTypeCache ( ) // Clear the WIT cache after updating existing WITs   return nil   }

1<CODESPLIT>https://github.com/gopasspw/gopass/blob/fe4e21d62182f0f2e4ef9a0ca8168d849dc52bd4/pkg/agent/client/context.go#L17-L23<CODESPLIT>GetClient<CODESPLIT>GetClient returns a client instance if set . May be nil .<CODESPLIT>func GetClient ( ctx context . Context ) * Client { c , ok := ctx . Value ( ctxKeyClient ) . ( * Client )   if ! ok { return nil   }   return c   }

0<CODESPLIT>https://github.com/clbanning/x2j/blob/5e605d46809c441eb0e565867b63f7d80c9140c2/xml.go#L17-L22<CODESPLIT>xmlToMapParser<CODESPLIT>xmlToMap - convert a XML doc into map [ string ] interface {} value<CODESPLIT>func xmlToMapParser ( skey string , a [ ] xml . Attr , p * xml . Decoder , r bool ) ( map [ string ] interface { } , error ) { // NOTE: all attributes and sub-elements parsed into 'na', 'na' is returned as value for 'skey' // Unless 'skey' is a simple element w/o attributes, in which case the xml.CharData value is the value. var n , na map [ string ] interface { }    // Allocate maps and load attributes, if any. if skey != " " { n = make ( map [ string ] interface { } ) // old n   na = make ( map [ string ] interface { } ) // old n.nodes   if len ( a ) > 0 { for _ , v := range a { na [ `-` + v . Name . Local ] = cast ( v . Value , r )   }   }   }   for { t , err := p . Token ( )   if err != nil { if err != io . EOF { return nil , errors . New ( " " + err . Error ( ) )   }   return nil , err   }   switch t . ( type ) { case xml . StartElement : tt := t . ( xml . StartElement )    // First call to xmlToMapParser() doesn't pass xml.StartElement - the map key. // So when the loop is first entered, the first token is the root tag along // with any attributes, which we process here. // // Subsequent calls to xmlToMapParser() will pass in tag+attributes for // processing before getting the next token which is the element value, // which is done above. if skey == " " { return xmlToMapParser ( tt . Name . Local , tt . Attr , p , r )   }    // If not initializing the map, parse the element. // len(nn) == 1, necessarily - it is just an 'n'. nn , err := xmlToMapParser ( tt . Name . Local , tt . Attr , p , r )   if err != nil { return nil , err   }    // The nn map[string]interface{} value is a na[nn_key] value. // We need to see if nn_key already exists - means we're parsing a list. // This may require converting na[nn_key] value into []interface{} type. // First, extract the key:val for the map - it's a singleton. var key string   var val interface { }   for key , val = range nn { break   }    // 'na' holding sub-elements of n. // See if 'key' already exists. // If 'key' exists, then this is a list, if not just add key:val to na. if v , ok := na [ key ] ; ok { var a [ ] interface { }   switch v . ( type ) { case [ ] interface { } : a = v . ( [ ] interface { } )   default : // anything else - note: v.(type) != nil a = [ ] interface { } { v }   }   a = append ( a , val )   na [ key ] = a   } else { na [ key ] = val // save it as a singleton   }   case xml . EndElement : // len(n) > 0 if this is a simple element w/o xml.Attrs - see xml.CharData case. if len ( n ) == 0 { // If len(na)==0 we have an empty element == ""; // it has no xml.Attr nor xml.CharData. // Note: in original node-tree parser, val defaulted to ""; // so we always had the default if len(node.nodes) == 0. if len ( na ) > 0 { n [ skey ] = na   } else { n [ skey ] = " " // empty element   }   }   return n , nil   case xml . CharData : // clean up possible noise tt := strings . Trim ( string ( t . ( xml . CharData ) ) , " \t \r \b \n " )   if len ( tt ) > 0 { if len ( na ) > 0 { na [ " " ] = cast ( tt , r )   } else if skey != " " { n [ skey ] = cast ( tt , r )   } else { // per Adrian (http://www.adrianlungu.com/) catch stray text // in decoder stream - // https://github.com/clbanning/mxj/pull/14#issuecomment-182816374 // NOTE: CharSetReader must be set to non-UTF-8 CharSet or you'll get // a p.Token() decoding error when the BOM is UTF-16 or UTF-32. continue   }   }   default : // noop }   }   }

1<CODESPLIT>https://github.com/juju/juju/blob/ba728eedb1e44937c7bdc59f374b06400d0c7133/apiserver/facades/agent/uniter/mocks/lxdprofile.go#L182-L184<CODESPLIT>WatchLXDProfileUpgradeNotifications<CODESPLIT>WatchLXDProfileUpgradeNotifications indicates an expected call of WatchLXDProfileUpgradeNotifications<CODESPLIT>func ( mr * MockLXDProfileUnitMockRecorder ) WatchLXDProfileUpgradeNotifications ( ) * gomock . Call { return mr . mock . ctrl . RecordCallWithMethodType ( mr . mock , " " , reflect . TypeOf ( ( * MockLXDProfileUnit ) ( nil ) . WatchLXDProfileUpgradeNotifications ) )   }

1<CODESPLIT>https://github.com/aclements/go-moremath/blob/b1aff36309c727972dd8b46fcc93f88763a62348/stats/stream.go#L77-L96<CODESPLIT>Combine<CODESPLIT>Combine updates s s statistics as if all samples added to o were added to s .<CODESPLIT>func ( s * StreamStats ) Combine ( o * StreamStats ) { count := s . Count + o . Count    // Compute combined online variance statistics delta := o . mean - s . mean   mean := s . mean + delta * float64 ( o . Count ) / float64 ( count )   vM2 := s . vM2 + o . vM2 + delta * delta * float64 ( s . Count ) * float64 ( o . Count ) / float64 ( count )    s . Count = count   s . Total += o . Total   if o . Min < s . Min { s . Min = o . Min   }   if o . Max > s . Max { s . Max = o . Max   }   s . mean = mean   s . meanOfSquares += ( o . meanOfSquares - s . meanOfSquares ) * float64 ( o . Count ) / float64 ( count )   s . vM2 = vM2   }

1<CODESPLIT>https://github.com/aws/aws-sdk-go/blob/6c4060605190fc6f00d63cd4e5572faa9f07345d/aws/signer/v4/v4.go#L208-L218<CODESPLIT>NewSigner<CODESPLIT>NewSigner returns a Signer pointer configured with the credentials and optional option values provided . If not options are provided the Signer will use its default configuration .<CODESPLIT>func NewSigner ( credentials * credentials . Credentials , options ... func ( * Signer ) ) * Signer { v4 := & Signer { Credentials : credentials , }    for _ , option := range options { option ( v4 )   }    return v4   }

1<CODESPLIT>https://github.com/src-d/go-git/blob/e17ee112ca6cc7db0a732c0676b61511e84ec899/utils/merkletrie/noder/path.go#L20-L30<CODESPLIT>String<CODESPLIT>String returns the full path of the final noder as a string using / as the separator .<CODESPLIT>func ( p Path ) String ( ) string { var buf bytes . Buffer   sep := " "   for _ , e := range p { _ , _ = buf . WriteString ( sep )   sep = " "   _ , _ = buf . WriteString ( e . Name ( ) )   }    return buf . String ( )   }

0<CODESPLIT>https://github.com/mailgun/mailgun-go/blob/df421608b66e7dd4c03112d5bb01525c51f344a2/events/events_easyjson.go#L1677-L1681<CODESPLIT>MarshalJSON<CODESPLIT>UnmarshalJSON supports json . Unmarshaler interface<CODESPLIT>func ( v ListUploaded ) MarshalJSON ( ) ( [ ] byte , error ) { w := jwriter . Writer { }   easyjson692db02bEncodeGithubComMailgunMailgunGoEvents8 ( & w , v )   return w . Buffer . BuildBytes ( ) , w . Error   }

0<CODESPLIT>https://github.com/ligato/cn-infra/blob/6552f4407e293b0986ec353eb0f01968cbecb928/db/keyval/filedb/filesystem/mock_filesystem.go#L87-L100<CODESPLIT>WriteFile<CODESPLIT>ReadFile mocks original method<CODESPLIT>func ( mock * Mock ) WriteFile ( file string , data [ ] byte ) error { items := mock . getReturnValues ( " " )   return items [ 0 ] . ( error )   }

1<CODESPLIT>https://github.com/cosiner/gohper/blob/700f92d01d8a55070e4db9cf57bc3d346d65c9e8/ds/region/region.go#L84-L95<CODESPLIT>Clip<CODESPLIT>Clip return the cliped against another region if r is inside r2 or r2 inside r return r else return r that remove intesect part<CODESPLIT>func ( r Region ) Clip ( r2 Region ) Region { var ret Region = r   if r2 . Cover ( r ) { return r   }   if r2 . Contains ( ret . From ) { ret . From = r2 . To   } else if r2 . Contains ( ret . To ) { ret . To = r2 . From   }   return ret   }

1<CODESPLIT>https://github.com/hashicorp/vault/blob/7e96d5c2b53ee9e22439f3bc0cb366d7e92f949b/command/base_helpers.go#L80-L96<CODESPLIT>columnOutput<CODESPLIT>columnOuput prints the list of items as a table with no headers .<CODESPLIT>func columnOutput ( list [ ] string , c * columnize . Config ) string { if len ( list ) == 0 { return " "   }    if c == nil { c = & columnize . Config { }   }   if c . Glue == " " { c . Glue = " "   }   if c . Empty == " " { c . Empty = " "   }    return columnize . Format ( list , c )   }

