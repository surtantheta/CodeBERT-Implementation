0<CODESPLIT>https://github.com/monospice/spicy-identifier-tools/blob/8659493c64d3023c38bf4f325bff86fbb53c085a/src/Tools/Formatter.php#L59-L70<CODESPLIT>Request.parse<CODESPLIT>Inherit Doc from Interfaces \ Formatter<CODESPLIT>public static function parse ( $ uri , $ serverVars = array ( ) , $ defaultController = 'Index' , $ defaultAction = 'index' ) { $ req = new self ( $ defaultController , $ defaultAction ) ; $ req -> origin = $ uri ; self :: parseRemoteHost ( $ req , $ serverVars ) ; self :: parseGetPostSessionCookie ( $ req ) ; // Save the request parameters for later usage and rewrite the uri $ savedRequestParams = array ( ) ; if ( strpos ( $ uri , '?' ) ) { parse_str ( substr ( $ uri , strpos ( $ uri , '?' ) + 1 ) , $ savedRequestParams ) ; $ uri = substr ( $ uri , 0 , strpos ( $ uri , '?' ) ) ; } self :: parseContextPrefix ( $ req , $ serverVars ) ; $ parts = self :: parseUri ( $ req , $ uri , $ defaultController , $ defaultAction ) ; // Walk over all parameters and put them into container $ numParts = count ( $ parts ) ; for ( $ i = 0 ; $ i < $ numParts ; $ i = $ i + 2 ) { $ paramName = trim ( $ parts [ $ i ] ) ; $ paramValue = isset ( $ parts [ $ i + 1 ] ) ? trim ( $ parts [ $ i + 1 ] ) : '' ; if ( $ paramName && $ paramValue ) { $ req -> params [ $ paramName ] = $ paramValue ; } } $ req -> params = array_merge ( $ req -> params , $ savedRequestParams ) ; self :: parseParameters ( $ req , $ serverVars ) ; // Et'voila return $ req ; }

1<CODESPLIT>https://github.com/amabnl/amadeus-ws-client/blob/a8b79e066d37348c37a19d1753656c428ac8441b/src/Amadeus/Client.php#L1147-L1154<CODESPLIT>Client.ticketCheckEligibility<CODESPLIT>Ticket_CheckEligibility<CODESPLIT>public function ticketCheckEligibility ( RequestOptions \ TicketCheckEligibilityOptions $ options , $ messageOptions = [ ] ) { $ msgName = 'Ticket_CheckEligibility' ; return $ this -> callMessage ( $ msgName , $ options , $ messageOptions ) ; }

0<CODESPLIT>https://github.com/harlangray/yii2-user/blob/058f49db631885e8f38d5dd2a2374a20389f5e7a/controllers/AdminController.php#L96-L114<CODESPLIT>AdminController.actionUpdate<CODESPLIT>Creates a new User model . If creation is successful the browser will be redirected to the index page .<CODESPLIT>public function actionUpdate ( $ id ) { $ user = $ this -> findModel ( $ id ) ; $ user -> scenario = 'update' ; $ profile = $ this -> finder -> findProfileById ( $ id ) ; $ r = \ Yii :: $ app -> request ; $ this -> performAjaxValidation ( [ $ user , $ profile ] ) ; if ( $ user -> load ( $ r -> post ( ) ) && $ profile -> load ( $ r -> post ( ) ) && $ user -> save ( ) && $ profile -> save ( ) ) { \ Yii :: $ app -> getSession ( ) -> setFlash ( 'success' , \ Yii :: t ( 'user' , 'User has been updated' ) ) ; return $ this -> refresh ( ) ; } return $ this -> render ( 'update' , [ 'user' => $ user , 'profile' => $ profile , 'module' => $ this -> module , ] ) ; }

0<CODESPLIT>https://github.com/fastly/fastly-magento2/blob/c428c3d32350265687c20dc1bbeab3e1aa8f0b4e/Model/Statistic.php#L354-L380<CODESPLIT>Statistic.generateCid<CODESPLIT>Get Default Site Location<CODESPLIT>public function generateCid ( ) { return sprintf ( '%04x%04x-%04x-%04x-%04x-%04x%04x%04x' , /* 32 bits for time_low */ mt_rand ( 0 , 0xffff ) , mt_rand ( 0 , 0xffff ) , /* 16 bits for time_mid */ mt_rand ( 0 , 0xffff ) , /* 16 bits for time_hi_and_version,                four most significant bits holds version number 4 */ mt_rand ( 0 , 0x0fff ) | 0x4000 , /* 16 bits, 8 bits for clk_seq_hi_res,                8 bits for clk_seq_low,                two most significant bits holds zero and one for variant DCE1.1 */ mt_rand ( 0 , 0x3fff ) | 0x8000 , // 48 bits for node mt_rand ( 0 , 0xffff ) , mt_rand ( 0 , 0xffff ) , mt_rand ( 0 , 0xffff ) ) ; }

1<CODESPLIT>https://github.com/grnhse/greenhouse-tools-php/blob/5744b0798a6743bbdfa1d52b32f978e6a685769b/src/Clients/GuzzleClient.php#L104-L126<CODESPLIT>GuzzleClient.formatPostParameters<CODESPLIT>Return a Guzzle post parameter array that can be entered in to the multipart argument of a post request . For details on this see the Guzzle documentation here : http : // docs . guzzlephp . org / en / latest / request - options . html#multipart<CODESPLIT>public function formatPostParameters ( Array $ postParameters = array ( ) ) { $ guzzleParams = array ( ) ; /**          * There are three possibile inputs for $postParameter values.  Strings, Curlfiles, and arrays.          * This look should process them in to something that Guzzle understands.          */ foreach ( $ postParameters as $ key => $ value ) { if ( $ value instanceof \ CURLFile ) { $ guzzleParams [ ] = array ( 'name' => $ key , 'contents' => fopen ( $ value -> getFilename ( ) , 'r' ) , 'filename' => $ value -> getPostFilename ( ) ) ; } else if ( is_array ( $ value ) ) { foreach ( $ value as $ val ) $ guzzleParams [ ] = array ( 'name' => $ key . '[]' , 'contents' => "$val" ) ; } else { $ guzzleParams [ ] = array ( 'name' => $ key , 'contents' => "$value" ) ; } } return $ guzzleParams ; }

1<CODESPLIT>https://github.com/PSESD/cascade-lib/blob/277baba117b3a992a70765ee71b21a4f7a5a03b0/lib/components/dataInterface/connectors/generic/DataSource.php#L534-L540<CODESPLIT>DataSource.createLocalDataItem<CODESPLIT>[[ @doctodo method_description : createLocalDataItem ]] .<CODESPLIT>public function createLocalDataItem ( $ model , $ config = [ ] ) { $ config [ 'isForeign' ] = false ; $ config [ 'localObject' ] = $ model ; return $ this -> createDataItem ( $ config ) ; }

0<CODESPLIT>https://github.com/yiisoft/yii2/blob/6d10d1f05df9c85ea0ca127bdc6bdc900bc9c6ba/framework/web/GroupUrlRule.php#L88-L117<CODESPLIT>GroupUrlRule.createUrl<CODESPLIT>{<CODESPLIT>public function createUrl ( $ manager , $ route , $ params ) { if ( $ this -> routePrefix === '' || strpos ( $ route , $ this -> routePrefix . '/' ) === 0 ) { return parent :: createUrl ( $ manager , $ route , $ params ) ; } $ this -> createStatus = UrlRule :: CREATE_STATUS_ROUTE_MISMATCH ; return false ; }

1<CODESPLIT>https://github.com/MetaModels/core/blob/45790196b52a8d242ad485743d6d2577f7db5b34/src/CoreBundle/EventListener/DcGeneral/MetaModel/PasteButtonListener.php#L203-L212<CODESPLIT>PasteButtonListener.hasVariants<CODESPLIT>Determines if this MetaModel instance is subject to variant handling .<CODESPLIT>private function hasVariants ( ) { $ metaModel = $ this -> factory -> getMetaModel ( $ this -> providerName ) ; if ( $ metaModel === null ) { throw new \ RuntimeException ( sprintf ( 'Could not find a MetaModels with the name %s' , $ this -> providerName ) ) ; } return $ metaModel -> hasVariants ( ) ; }

1<CODESPLIT>https://github.com/PhpGt/Dom/blob/866c6e039de185db3da81c25bb1758dbb2ebdd04/src/NodeList.php#L45-L56<CODESPLIT>NodeList.item<CODESPLIT>Gets the nth Element object in the internal DOMNodeList .<CODESPLIT>public function item ( $ index ) { $ count = 0 ; foreach ( $ this as $ element ) { if ( $ index === $ count ) { return $ element ; } $ count ++ ; } return null ; }

0<CODESPLIT>https://github.com/contao/contao/blob/fbc056e5b3dd2e645bfe7812cb997ece8ff6b578/core-bundle/src/Resources/contao/widgets/InputUnit.php#L114-L127<CODESPLIT>InputUnit.validator<CODESPLIT>Only check against the unit values ( see #7246 )<CODESPLIT>protected function validator ( $ varInput ) { foreach ( $ varInput as $ k => $ v ) { if ( $ k != 'unit' ) { $ varInput [ $ k ] = parent :: validator ( $ v ) ; } } return $ varInput ; }

1<CODESPLIT>https://github.com/php-http/react-adapter/blob/e3dc672bc5211fb20556bdacd526eecc26fb1620/src/ReactFactory.php#L73-L83<CODESPLIT>ReactFactory.buildHttpClient<CODESPLIT>Build a React Http Client .<CODESPLIT>public static function buildHttpClient ( LoopInterface $ loop , $ connector = null ) { if ( class_exists ( HttpClientFactory :: class ) ) { // if HttpClientFactory class exists, use old behavior for backwards compatibility return static :: buildHttpClient04 ( $ loop , $ connector ) ; } else { return static :: buildHttpClient05 ( $ loop , $ connector ) ; } }

0<CODESPLIT>https://github.com/mithun12000/adminUI/blob/95d062991d65025e0e91c4e9cb985dd6575a7c15/src/widget/DynamicField.php#L113-L179<CODESPLIT>PageHeader.initOptions<CODESPLIT>Registers the needed assets<CODESPLIT>protected function initOptions ( ) { if ( ! $ this -> type ) { $ this -> type = self :: TYPE_DEFAULT ; } $ this -> options = array_merge ( [ 'class' => 'page-header' , ] , $ this -> options ) ; }

0<CODESPLIT>https://github.com/joebubna/cora-framework/blob/08cae077d564fe596c2ed4a44bce93b8939b2f26/system/classes/Collection.php#L1078-L1085<CODESPLIT>Collection.getValue<CODESPLIT>Find the name / offset of a resource . If trying access resource off0 this should grab the first resource stored . Which means removing the off part and making the name of the resource sought simply the number 0 .<CODESPLIT>protected function getValue ( $ data , $ key = false ) { $ returnValue = $ data ; if ( $ key && is_object ( $ data ) ) { $ returnValue = $ data -> $ key ; } else if ( $ key && is_array ( $ data ) ) { $ returnValue = $ data [ $ key ] ; } return $ returnValue ; }

1<CODESPLIT>https://github.com/ongr-archive/ConnectionsBundle/blob/d368fc283cbb953aa08b8d211d8a745f093c84b7/DependencyInjection/Compiler/ModifierClassPass.php#L25-L32<CODESPLIT>ModifierClassPass.process<CODESPLIT>{<CODESPLIT>public function process ( ContainerBuilder $ container ) { if ( $ container -> hasParameter ( 'ongr_connections.import.modifier.class' ) ) { $ container -> getDefinition ( 'ongr_connections.import.modifier' ) -> setClass ( $ container -> getParameter ( 'ongr_connections.import.modifier.class' ) ) ; } }

1<CODESPLIT>https://github.com/thecodingmachine/yaco/blob/307d5a43956c0fbf6090652c15ffd50567e72175/src/ServiceProvider/ServiceProviderLoader.php#L208-L216<CODESPLIT>ServiceProviderLoader.getDecoratedServiceName<CODESPLIT>@param string $serviceName<CODESPLIT>private function getDecoratedServiceName ( string $ serviceName ) : string { $ counter = 1 ; while ( $ this -> compiler -> has ( $ serviceName . '_decorated_' . $ counter ) ) { ++ $ counter ; } return $ serviceName . '_decorated_' . $ counter ; }

1<CODESPLIT>https://github.com/fkubis/teamspeak-php-framework/blob/a1fa2cef078eb3f0803e107298928a0d7edeb4a1/TeamSpeak3/Viewer/Text.php#L53-L65<CODESPLIT>Text.fetchObject<CODESPLIT>Returns the code needed to display a node in a TeamSpeak 3 viewer .<CODESPLIT>public function fetchObject ( AbstractNode $ node , array $ siblings = array ( ) ) { $ this -> currObj = $ node ; $ this -> currSib = $ siblings ; $ args = array ( $ this -> getPrefix ( ) , $ this -> getCorpusIcon ( ) , $ this -> getCorpusName ( ) , ) ; return StringHelper :: factory ( $ this -> pattern ) -> arg ( $ args ) ; }

0<CODESPLIT>https://github.com/LitGroupArchive/sms.php/blob/9e19eb4f14a17601415e4c174adcb2bf2f67ca52/src/Gateway/CascadeGateway.php#L87-L93<CODESPLIT>CascadeGateway.sendMessage<CODESPLIT>@param array $gateways<CODESPLIT>public function sendMessage ( Message $ message ) { $ exceptions = [ ] ; /** @var string $gatewayName */ /** @var GatewayInterface $gateway*/ foreach ( $ this -> gateways as $ gatewayName => $ gateway ) { try { $ gateway -> sendMessage ( $ message ) ; return ; } catch ( GatewayException $ e ) { $ exceptions [ $ gatewayName ] = $ e ; $ this -> logger -> warning ( sprintf ( '(Cascade gateway: %s) %s' , $ gatewayName , $ e -> getMessage ( ) ) , [ 'exception' => $ e ] ) ; } } throw new CascadeGatewayException ( $ exceptions ) ; }

1<CODESPLIT>https://github.com/yiisoft/yii2/blob/6d10d1f05df9c85ea0ca127bdc6bdc900bc9c6ba/framework/console/controllers/AssetController.php#L217-L230<CODESPLIT>AssetController.loadConfiguration<CODESPLIT>Applies configuration from the given file to self instance .<CODESPLIT>protected function loadConfiguration ( $ configFile ) { $ this -> stdout ( "Loading configuration from '{$configFile}'...\n" ) ; $ config = require $ configFile ; foreach ( $ config as $ name => $ value ) { if ( property_exists ( $ this , $ name ) || $ this -> canSetProperty ( $ name ) ) { $ this -> $ name = $ value ; } else { throw new Exception ( "Unknown configuration option: $name" ) ; } } $ this -> getAssetManager ( ) ; // check if asset manager configuration is correct }

1<CODESPLIT>https://github.com/anklimsk/cakephp-spreadsheet/blob/599a61c3083e7419dba42ae5b3448c73d2ddcf52/Vendor/phpspreadsheet/phpoffice/phpspreadsheet/src/PhpSpreadsheet/Spreadsheet.php#L726-L735<CODESPLIT>Spreadsheet.setActiveSheetIndexByName<CODESPLIT>Set active sheet index by name .<CODESPLIT>public function setActiveSheetIndexByName ( $ pValue ) { if ( ( $ worksheet = $ this -> getSheetByName ( $ pValue ) ) instanceof Worksheet ) { $ this -> setActiveSheetIndex ( $ this -> getIndex ( $ worksheet ) ) ; return $ worksheet ; } throw new Exception ( 'Workbook does not contain sheet:' . $ pValue ) ; }

0<CODESPLIT>https://github.com/jlorente/yii2-locations/blob/f4cedafd02debf7ed837804c68323f40d3d05a04/src/widgets/LocationFormWidget.php#L196-L227<CODESPLIT>LocationFormWidget.address<CODESPLIT>Renders the city part .<CODESPLIT>protected function address ( ) { $ this -> parts [ '{address}' ] = $ this -> form -> field ( $ this -> model , 'address' ) -> textInput ( [ 'name' => $ this -> getSubmitModelName ( 'address' ) , 'id' => $ this -> fieldIds [ 'address' ] ] ) ; }

1<CODESPLIT>https://github.com/ApatisArchive/Transporter/blob/c6ba071fe8911e8eeaa370f8e66069f9ec76d4a2/src/AbstractTransport.php#L449-L472<CODESPLIT>AbstractTransport.withParams<CODESPLIT>With Params<CODESPLIT>public function withParams ( array $ params = [ ] , $ type = null ) { $ object = clone $ this ; if ( ! $ type && isset ( $ this -> configs [ $ this -> currentParamType ] ) ) { $ type = $ this -> currentParamType ; } if ( ! $ type && ( isset ( $ this -> configs [ self :: PARAM_FORM ] ) || isset ( $ this -> configs [ self :: PARAM_MULTIPART ] ) ) ) { $ type = isset ( $ object -> configs [ self :: PARAM_FORM ] ) ? self :: PARAM_FORM : ( isset ( $ object -> configs [ self :: PARAM_MULTIPART ] ) ? self :: PARAM_MULTIPART : $ type ) ; } $ type = $ type ? : self :: PARAM_FORM ; $ object -> setParamType ( $ type ) ; $ object -> configs [ $ type ] = $ params ; return $ object -> buildConfigClient ( ) ; }

1<CODESPLIT>https://github.com/hscstudio/yii2-export/blob/1fd85e2e3672a411109f51a32235f4280c650d26/libraries/tbs/plugins/tbs_plugin_opentbs.php#L2964-L3016<CODESPLIT>clsOpenTBS.MsExcel_ConvertToExplicit_Item<CODESPLIT>Add the attribute that gives the reference of the item . Return the number of inserted attributes .<CODESPLIT>function MsExcel_ConvertToExplicit_Item ( & $ Txt , $ Tag , $ Att , $ CellRow ) { $ tag_pc = strlen ( $ Tag ) + 1 ; $ rpl = '<' . $ Tag . ' ' . $ Att . '="' ; $ rpl_len = strlen ( $ rpl ) ; $ rpl_nbr = 0 ; $ p = 0 ; $ empty_first_pos = false ; $ empty_nbr = 0 ; $ item_num = 0 ; $ rpl_nbr = 0 ; while ( ( $ p = clsTinyButStrong :: f_Xml_FindTagStart ( $ Txt , $ Tag , true , $ p , true , true ) ) !== false ) { $ item_num ++ ; if ( $ empty_first_pos === false ) $ empty_first_pos = $ p ; $ p = $ p + $ tag_pc ; if ( substr ( $ Txt , $ p , 1 ) == '/' ) { // It's an empty item $ empty_nbr ++ ; } else { // The item is not empty => relace attribute and delete the previus empty item in the same time $ ref = ( $ CellRow === false ) ? $ item_num : $ this -> Misc_CellRef ( $ item_num , $ CellRow ) ; $ x = $ rpl . $ ref . '"' ; $ len = $ p - $ empty_first_pos ; $ Txt = substr_replace ( $ Txt , $ x , $ empty_first_pos , $ len ) ; $ rpl_nbr ++ ; // If it's a row => search for cells if ( $ CellRow === false ) { $ loc = new clsTbsXmlLoc ( $ Txt , $ Tag , $ p ) ; $ loc -> FindEndTag ( ) ; $ src = $ loc -> GetSrc ( ) ; $ nbr = $ this -> MsExcel_ConvertToExplicit_Item ( $ src , 'c' , 'r' , $ item_num ) ; if ( $ nbr > 0 ) { $ loc -> ReplaceSrc ( $ src ) ; } $ p = $ loc -> PosEnd ; } else { $ p = $ empty_first_pos + $ tag_pc ; } // Ini variables $ empty_nbr = 0 ; $ empty_first_pos = false ; } } return $ rpl_nbr ; }

0<CODESPLIT>https://github.com/andreas-weber/php-runner/blob/4ce18f7f90b8217ddc5670dc92bea244a14a01ce/src/Runner.php#L150-L219<CODESPLIT>Runner.logTask<CODESPLIT>Invokes the task execution .<CODESPLIT>protected function logTask ( TaskInterface $ task , $ level , $ message , array $ context = array ( ) ) { $ class = get_class ( $ task ) ; $ message = sprintf ( 'Task: %s. ' , $ class ) . $ message ; $ this -> log ( $ level , $ message , $ context ) ; }

1<CODESPLIT>https://github.com/anklimsk/cakephp-spreadsheet/blob/599a61c3083e7419dba42ae5b3448c73d2ddcf52/Vendor/phpspreadsheet/phpoffice/phpspreadsheet/src/PhpSpreadsheet/Reader/Xls/Style/Border.php#L34-L41<CODESPLIT>Border.lookup<CODESPLIT>Map border style OpenOffice documentation : 2 . 5 . 11 .<CODESPLIT>public static function lookup ( $ index ) { if ( isset ( self :: $ map [ $ index ] ) ) { return self :: $ map [ $ index ] ; } return StyleBorder :: BORDER_NONE ; }

0<CODESPLIT>https://github.com/contao/contao/blob/fbc056e5b3dd2e645bfe7812cb997ece8ff6b578/core-bundle/src/Resources/contao/library/Contao/StringUtil.php#L992-L1012<CODESPLIT>StringUtil.specialchars<CODESPLIT>Standardize a parameter ( strip special characters and convert spaces )<CODESPLIT>public static function specialchars ( $ strString , $ blnStripInsertTags = false , $ blnDoubleEncode = false ) { if ( $ blnStripInsertTags ) { $ strString = static :: stripInsertTags ( $ strString ) ; } // Use ENT_COMPAT here (see #4889) return htmlspecialchars ( $ strString , ENT_COMPAT , Config :: get ( 'characterSet' ) , $ blnDoubleEncode ) ; }

0<CODESPLIT>https://github.com/contao/contao/blob/fbc056e5b3dd2e645bfe7812cb997ece8ff6b578/comments-bundle/src/Resources/contao/dca/tl_comments.php#L502-L585<CODESPLIT>tl_comments.sendNotifications<CODESPLIT>List a particular record<CODESPLIT>public function sendNotifications ( $ varValue ) { if ( $ varValue ) { Contao \ Comments :: notifyCommentsSubscribers ( Contao \ CommentsModel :: findByPk ( Contao \ Input :: get ( 'id' ) ) ) ; } return $ varValue ; }

1<CODESPLIT>https://github.com/MetaModels/core/blob/45790196b52a8d242ad485743d6d2577f7db5b34/src/CoreBundle/Contao/Hooks/ModuleCallback.php#L53-L59<CODESPLIT>ModuleCallback.getTemplates<CODESPLIT>Fetch the template group for the current MetaModel content element .<CODESPLIT>public function getTemplates ( \ DC_Table $ objDC ) { /** @noinspection PhpUndefinedFieldInspection */ $ type = $ objDC -> activeRecord -> type ; return $ this -> getTemplateList ( 'mod_' . $ type ) ; }

1<CODESPLIT>https://github.com/contao/contao/blob/fbc056e5b3dd2e645bfe7812cb997ece8ff6b578/core-bundle/src/Asset/ContaoContext.php#L67-L82<CODESPLIT>ContaoContext.isSecure<CODESPLIT>{<CODESPLIT>public function isSecure ( ) : bool { $ page = $ this -> getPageModel ( ) ; if ( null !== $ page ) { return ( bool ) $ page -> loadDetails ( ) -> rootUseSSL ; } $ request = $ this -> requestStack -> getCurrentRequest ( ) ; if ( null === $ request ) { return false ; } return $ request -> isSecure ( ) ; }

1<CODESPLIT>https://github.com/one-bundle-app/one-bundle-app/blob/6ff7d131982831682b7d70408cd853201f70d39c/App/ConsoleMessage.php#L57-L74<CODESPLIT>ConsoleMessage.print<CODESPLIT>Print .<CODESPLIT>public function print ( ) { $ method = str_pad ( $ this -> method , 6 , ' ' ) ; $ color = '32' ; if ( $ this -> code >= 300 && $ this -> code < 400 ) { $ color = '33' ; } elseif ( $ this -> code >= 400 ) { $ color = '31' ; } echo "\033[01;{$color}m" . $ this -> code . "\033[0m" ; echo " $method $this->url " ; echo "(\e[00;37m" . $ this -> elapsedTime . ' ms | ' . ( ( int ) ( memory_get_usage ( ) / 1000000 ) ) . " MB\e[0m)" ; if ( $ this -> code >= 300 ) { echo " - \e[00;37m" . $ this -> messageInMessage ( $ this -> message ) . "\e[0m" ; } echo PHP_EOL ; }

1<CODESPLIT>https://github.com/amabnl/amadeus-ws-client/blob/a8b79e066d37348c37a19d1753656c428ac8441b/src/Amadeus/Client/Session/Handler/SoapHeader4.php#L405-L414<CODESPLIT>SoapHeader4.getActionFromWsdl<CODESPLIT>Get the SOAPAction for a given message from the WSDL contents .<CODESPLIT>protected function getActionFromWsdl ( $ wsdlFilePath , $ messageName ) { $ wsdlId = $ this -> getWsdlIdFor ( $ messageName ) ; return WsdlAnalyser :: exaluateXpathQueryOnWsdl ( $ wsdlId , $ wsdlFilePath , sprintf ( self :: XPATH_OPERATION_ACTION , $ messageName ) ) ; }

0<CODESPLIT>https://github.com/roquie/database/blob/a118eb8cfe681002bbe76e8c54ba57b8afaa800d/src/Migration/Repository/SqlMigrationRepository.php#L184-L212<CODESPLIT>SqlMigrationRepository.transaction<CODESPLIT>Determine if the migration repository exists .<CODESPLIT>public function transaction ( callable $ callback ) : void { $ this -> pdo -> beginTransaction ( ) ; $ callback ( $ this ) ; $ this -> pdo -> commit ( ) ; }

1<CODESPLIT>https://github.com/gpupo/search/blob/8df0b166d70c1126195fa1a1225eaa74b8361c88/src/Query/FiltersAbstract.php#L90-L105<CODESPLIT>FiltersAbstract.addStringRangeFilter<CODESPLIT>Adiciona um filtro a partir de string no formato 0 - 10 ( inicio - fim ) .<CODESPLIT>public function addStringRangeFilter ( $ key , $ string ) { $ array = explode ( '-' , trim ( $ string ) ) ; $ min = intval ( $ array [ 0 ] ) ; if ( empty ( $ min ) ) { $ min = 1 ; } $ max = intval ( $ array [ 1 ] ) ; if ( empty ( $ max ) ) { $ max = 9999 ; } return $ this -> addRangeFilter ( $ key , $ min , $ max ) ; }

1<CODESPLIT>https://github.com/yiisoft/yii2/blob/6d10d1f05df9c85ea0ca127bdc6bdc900bc9c6ba/framework/caching/ApcCache.php#L100-L103<CODESPLIT>ApcCache.setValue<CODESPLIT>Stores a value identified by a key in cache . This is the implementation of the method declared in the parent class .<CODESPLIT>protected function setValue ( $ key , $ value , $ duration ) { return $ this -> useApcu ? apcu_store ( $ key , $ value , $ duration ) : apc_store ( $ key , $ value , $ duration ) ; }

1<CODESPLIT>https://github.com/ptejada/uFlex/blob/78a51f3768292f0089ea8f5c5c285af525aa92f6/src/DB_Table.php#L168-L176<CODESPLIT>DB_Table.query<CODESPLIT>Query the table<CODESPLIT>public function query ( $ sql , $ arguments = false ) { if ( ! $ stmt = $ this -> getStatement ( $ sql , $ arguments ) ) { // Something went wrong executing the SQL statement return false ; } else { return $ stmt ; } }

0<CODESPLIT>https://github.com/dframe/dframe/blob/640191649fd51a625d775f3d1d4400b6e9854c23/src/Cron/Task.php#L40-L56<CODESPLIT>Task.inLock<CODESPLIT>@param $key @param int $ttl<CODESPLIT>protected function inLock ( $ key , $ callback , array $ bind = [ ] , $ ttl = 3600 ) { $ dir = APP_DIR . 'View/cache/logs/' ; $ file = $ key . '.txt' ; $ this -> checkDir ( $ dir ) ; $ dirLog = $ dir . $ file ; if ( ! is_callable ( $ callback ) ) { throw new \ InvalidArgumentException ; } $ fp = fopen ( $ dirLog , "w" ) ; if ( flock ( $ fp , LOCK_EX | LOCK_NB ) ) { // do an exclusive lock $ data = call_user_func_array ( $ callback , $ bind ) ; flock ( $ fp , LOCK_UN ) ; // release the lock $ this -> lockTime ( $ key , $ ttl ) ; } else { return [ 'return' => false ] ; } fwrite ( $ fp , date ( "d-m-Y H:i:s" ) ) ; fclose ( $ fp ) ; return [ 'return' => true , 'response' => $ data ] ; }

1<CODESPLIT>https://github.com/charlesportwoodii/rpq-server/blob/043c07399ec670ff376b4c38271c03256945eb16/examples/BatchEmailJob.php#L105-L126<CODESPLIT>BatchEmailJob.shutdown<CODESPLIT>Register a shutdown handler<CODESPLIT>protected function shutdown ( ) { // Indicate to our main loop that we should stop processing additonal messages $ this -> shutdown = true ; // Get a list of all the messages that have not yet been handled $ this -> args [ 'messages' ] = array_filter ( $ this -> messages , function ( $ message ) { if ( ! isset ( $ message [ 'sent' ] ) || $ message [ 'sent' ] === false ) { return $ message ; } } ) ; $ redis = new Redis ; $ client = new Client ( $ redis ) ; // Push the unfinished jobs back onto the priority queue with a priority of 100  // So they get processed as soon as possible. $ client -> push ( static :: class , $ this -> args , 1 , 100 ) ; // Indicate that we've handled SIGTERM, and are ready to shut down return true ; }

1<CODESPLIT>https://github.com/composer/composer/blob/5d615a16d175fcbdb67a536ef9d6fc4e8a1f6f2b/src/Composer/Repository/Vcs/HgDriver.php#L154-L171<CODESPLIT>HgDriver.getTags<CODESPLIT>{<CODESPLIT>public function getTags ( ) { if ( null === $ this -> tags ) { $ tags = array ( ) ; $ this -> process -> execute ( 'hg tags' , $ output , $ this -> repoDir ) ; foreach ( $ this -> process -> splitLines ( $ output ) as $ tag ) { if ( $ tag && preg_match ( '(^([^\s]+)\s+\d+:(.*)$)' , $ tag , $ match ) ) { $ tags [ $ match [ 1 ] ] = $ match [ 2 ] ; } } unset ( $ tags [ 'tip' ] ) ; $ this -> tags = $ tags ; } return $ this -> tags ; }

0<CODESPLIT>https://github.com/futuretek-solutions-ltd/ext-yii2-shared/blob/f27511036c73acdf50c129a80326a96a07c474ad/Tools.php#L1391-L1408<CODESPLIT>Tools.secondsToPrettyTime<CODESPLIT>Converts pretty time format ( 2w 1d 5h 30m ) to seconds<CODESPLIT>public static function secondsToPrettyTime ( $ seconds , $ dayLength = 28800 , $ weekLength = 144000 ) { $ minus = $ seconds < 0 ; $ seconds = ( int ) abs ( $ seconds ) ; if ( $ seconds === 0 ) { return '0s' ; } $ out = [ ] ; $ units = [ 'w' => $ weekLength , 'd' => $ dayLength , 'h' => 3600 , 'm' => 60 , 's' => 1 ] ; foreach ( $ units as $ sign => $ value ) { if ( $ seconds < $ value ) { continue ; } $ i = floor ( $ seconds / $ value ) ; $ out [ ] = $ i . $ sign ; $ seconds -= ( $ i * $ value ) ; } return ( $ minus ? '-' : '' ) . implode ( ' ' , $ out ) ; }

1<CODESPLIT>https://github.com/anklimsk/cakephp-spreadsheet/blob/599a61c3083e7419dba42ae5b3448c73d2ddcf52/Vendor/phpspreadsheet/phpoffice/phpspreadsheet/src/PhpSpreadsheet/Writer/Xls.php#L233-L390<CODESPLIT>Xls.buildWorksheetEschers<CODESPLIT>Build the Worksheet Escher objects .<CODESPLIT>private function buildWorksheetEschers ( ) { // 1-based index to BstoreContainer $ blipIndex = 0 ; $ lastReducedSpId = 0 ; $ lastSpId = 0 ; foreach ( $ this -> spreadsheet -> getAllsheets ( ) as $ sheet ) { // sheet index $ sheetIndex = $ sheet -> getParent ( ) -> getIndex ( $ sheet ) ; $ escher = null ; // check if there are any shapes for this sheet $ filterRange = $ sheet -> getAutoFilter ( ) -> getRange ( ) ; if ( count ( $ sheet -> getDrawingCollection ( ) ) == 0 && empty ( $ filterRange ) ) { continue ; } // create intermediate Escher object $ escher = new Escher ( ) ; // dgContainer $ dgContainer = new DgContainer ( ) ; // set the drawing index (we use sheet index + 1) $ dgId = $ sheet -> getParent ( ) -> getIndex ( $ sheet ) + 1 ; $ dgContainer -> setDgId ( $ dgId ) ; $ escher -> setDgContainer ( $ dgContainer ) ; // spgrContainer $ spgrContainer = new SpgrContainer ( ) ; $ dgContainer -> setSpgrContainer ( $ spgrContainer ) ; // add one shape which is the group shape $ spContainer = new SpContainer ( ) ; $ spContainer -> setSpgr ( true ) ; $ spContainer -> setSpType ( 0 ) ; $ spContainer -> setSpId ( ( $ sheet -> getParent ( ) -> getIndex ( $ sheet ) + 1 ) << 10 ) ; $ spgrContainer -> addChild ( $ spContainer ) ; // add the shapes $ countShapes [ $ sheetIndex ] = 0 ; // count number of shapes (minus group shape), in sheet foreach ( $ sheet -> getDrawingCollection ( ) as $ drawing ) { ++ $ blipIndex ; ++ $ countShapes [ $ sheetIndex ] ; // add the shape $ spContainer = new SpContainer ( ) ; // set the shape type $ spContainer -> setSpType ( 0x004B ) ; // set the shape flag $ spContainer -> setSpFlag ( 0x02 ) ; // set the shape index (we combine 1-based sheet index and $countShapes to create unique shape index) $ reducedSpId = $ countShapes [ $ sheetIndex ] ; $ spId = $ reducedSpId | ( $ sheet -> getParent ( ) -> getIndex ( $ sheet ) + 1 ) << 10 ; $ spContainer -> setSpId ( $ spId ) ; // keep track of last reducedSpId $ lastReducedSpId = $ reducedSpId ; // keep track of last spId $ lastSpId = $ spId ; // set the BLIP index $ spContainer -> setOPT ( 0x4104 , $ blipIndex ) ; // set coordinates and offsets, client anchor $ coordinates = $ drawing -> getCoordinates ( ) ; $ offsetX = $ drawing -> getOffsetX ( ) ; $ offsetY = $ drawing -> getOffsetY ( ) ; $ width = $ drawing -> getWidth ( ) ; $ height = $ drawing -> getHeight ( ) ; $ twoAnchor = \ PhpOffice \ PhpSpreadsheet \ Shared \ Xls :: oneAnchor2twoAnchor ( $ sheet , $ coordinates , $ offsetX , $ offsetY , $ width , $ height ) ; $ spContainer -> setStartCoordinates ( $ twoAnchor [ 'startCoordinates' ] ) ; $ spContainer -> setStartOffsetX ( $ twoAnchor [ 'startOffsetX' ] ) ; $ spContainer -> setStartOffsetY ( $ twoAnchor [ 'startOffsetY' ] ) ; $ spContainer -> setEndCoordinates ( $ twoAnchor [ 'endCoordinates' ] ) ; $ spContainer -> setEndOffsetX ( $ twoAnchor [ 'endOffsetX' ] ) ; $ spContainer -> setEndOffsetY ( $ twoAnchor [ 'endOffsetY' ] ) ; $ spgrContainer -> addChild ( $ spContainer ) ; } // AutoFilters if ( ! empty ( $ filterRange ) ) { $ rangeBounds = Coordinate :: rangeBoundaries ( $ filterRange ) ; $ iNumColStart = $ rangeBounds [ 0 ] [ 0 ] ; $ iNumColEnd = $ rangeBounds [ 1 ] [ 0 ] ; $ iInc = $ iNumColStart ; while ( $ iInc <= $ iNumColEnd ) { ++ $ countShapes [ $ sheetIndex ] ; // create an Drawing Object for the dropdown $ oDrawing = new BaseDrawing ( ) ; // get the coordinates of drawing $ cDrawing = Coordinate :: stringFromColumnIndex ( $ iInc ) . $ rangeBounds [ 0 ] [ 1 ] ; $ oDrawing -> setCoordinates ( $ cDrawing ) ; $ oDrawing -> setWorksheet ( $ sheet ) ; // add the shape $ spContainer = new SpContainer ( ) ; // set the shape type $ spContainer -> setSpType ( 0x00C9 ) ; // set the shape flag $ spContainer -> setSpFlag ( 0x01 ) ; // set the shape index (we combine 1-based sheet index and $countShapes to create unique shape index) $ reducedSpId = $ countShapes [ $ sheetIndex ] ; $ spId = $ reducedSpId | ( $ sheet -> getParent ( ) -> getIndex ( $ sheet ) + 1 ) << 10 ; $ spContainer -> setSpId ( $ spId ) ; // keep track of last reducedSpId $ lastReducedSpId = $ reducedSpId ; // keep track of last spId $ lastSpId = $ spId ; $ spContainer -> setOPT ( 0x007F , 0x01040104 ) ; // Protection -> fLockAgainstGrouping $ spContainer -> setOPT ( 0x00BF , 0x00080008 ) ; // Text -> fFitTextToShape $ spContainer -> setOPT ( 0x01BF , 0x00010000 ) ; // Fill Style -> fNoFillHitTest $ spContainer -> setOPT ( 0x01FF , 0x00080000 ) ; // Line Style -> fNoLineDrawDash $ spContainer -> setOPT ( 0x03BF , 0x000A0000 ) ; // Group Shape -> fPrint // set coordinates and offsets, client anchor $ endCoordinates = Coordinate :: stringFromColumnIndex ( $ iInc ) ; $ endCoordinates .= $ rangeBounds [ 0 ] [ 1 ] + 1 ; $ spContainer -> setStartCoordinates ( $ cDrawing ) ; $ spContainer -> setStartOffsetX ( 0 ) ; $ spContainer -> setStartOffsetY ( 0 ) ; $ spContainer -> setEndCoordinates ( $ endCoordinates ) ; $ spContainer -> setEndOffsetX ( 0 ) ; $ spContainer -> setEndOffsetY ( 0 ) ; $ spgrContainer -> addChild ( $ spContainer ) ; ++ $ iInc ; } } // identifier clusters, used for workbook Escher object $ this -> IDCLs [ $ dgId ] = $ lastReducedSpId ; // set last shape index $ dgContainer -> setLastSpId ( $ lastSpId ) ; // set the Escher object $ this -> writerWorksheets [ $ sheetIndex ] -> setEscher ( $ escher ) ; } }

1<CODESPLIT>https://github.com/neilime/zf2-twb-bundle/blob/0c712997a6b8e6cc0384b6f0f45746ef16cb269b/src/TwbBundle/View/Helper/TwbBundleGlyphicon.php#L36-L65<CODESPLIT>TwbBundleGlyphicon.render<CODESPLIT>Retrieve glyphicon markup<CODESPLIT>public function render ( $ sGlyphicon , array $ aGlyphiconAttributes = null ) { if ( ! is_scalar ( $ sGlyphicon ) ) { throw new InvalidArgumentException ( 'Glyphicon expects a scalar value, "' . gettype ( $ sGlyphicon ) . '" given' ) ; } if ( empty ( $ aGlyphiconAttributes ) ) { $ aGlyphiconAttributes = array ( 'class' => 'glyphicon' ) ; } else { if ( empty ( $ aGlyphiconAttributes [ 'class' ] ) ) { $ aGlyphiconAttributes [ 'class' ] = 'glyphicon' ; } elseif ( ! preg_match ( '/(\s|^)glyphicon(\s|$)/' , $ aGlyphiconAttributes [ 'class' ] ) ) { $ aGlyphiconAttributes [ 'class' ] .= ' glyphicon' ; } } if ( strpos ( 'glyphicon-' , $ sGlyphicon ) !== 0 ) { $ sGlyphicon = 'glyphicon-' . $ sGlyphicon ; } if ( ! preg_match ( '/(\s|^)' . preg_quote ( $ sGlyphicon , '/' ) . '(\s|$)/' , $ aGlyphiconAttributes [ 'class' ] ) ) { $ aGlyphiconAttributes [ 'class' ] .= ' ' . $ sGlyphicon ; } return sprintf ( static :: $ glyphiconFormat , $ this -> createAttributesString ( $ aGlyphiconAttributes ) ) ; }

1<CODESPLIT>https://github.com/swayok/PeskyCMF/blob/85c8754f1ae6ef13666db8d041fac00a53bc0f43/src/PeskyCMF/Db/Traits/CacheForDbSelects.php#L577-L586<CODESPLIT>CacheForDbSelects.selectOneAsDbRecordFromCache<CODESPLIT>Get 1 record from DB<CODESPLIT>public function selectOneAsDbRecordFromCache ( $ columns , array $ conditions , \ Closure $ configurator = null ) { if ( $ this -> cachingIsPossible ( ) ) { /** @var CmfDbTable|CacheForDbSelects $this */ if ( is_numeric ( $ conditions ) || is_int ( $ conditions ) ) { $ conditions = array ( static :: getPkColumnName ( ) => $ conditions ) ; } static :: addCacheOptionToConditionsAndOptions ( $ conditions , true ) ; } return $ this -> selectOneAsDbRecord ( $ columns , $ conditions , $ configurator ) ; }

0<CODESPLIT>https://github.com/eloquent/typhoon/blob/aa3dbea4dad496e1457ebd1059b256efd30d1735/src/Eloquent/Typhoon/Resolver/ParameterListClassNameResolver.php#L46-L57<CODESPLIT>ValidatorClassGenerator.classNameResolver<CODESPLIT>@param Parameter $parameter<CODESPLIT>protected function classNameResolver ( ClassDefinition $ classDefinition ) { $ this -> typeCheck -> classNameResolver ( func_get_args ( ) ) ; return new ParameterListClassNameResolver ( new ObjectTypeClassNameResolver ( $ classDefinition -> classNameResolver ( ) ) ) ; }

1<CODESPLIT>https://github.com/anklimsk/cakephp-spreadsheet/blob/599a61c3083e7419dba42ae5b3448c73d2ddcf52/Vendor/phpspreadsheet/phpoffice/phpspreadsheet/src/PhpSpreadsheet/Collection/Cells.php#L418-L444<CODESPLIT>Cells.get<CODESPLIT>Get cell at a specific coordinate .<CODESPLIT>public function get ( $ pCoord ) { if ( $ pCoord === $ this -> currentCoordinate ) { return $ this -> currentCell ; } $ this -> storeCurrentCell ( ) ; // Return null if requested entry doesn't exist in collection if ( ! $ this -> has ( $ pCoord ) ) { return null ; } // Check if the entry that has been requested actually exists $ cell = $ this -> cache -> get ( $ this -> cachePrefix . $ pCoord ) ; if ( $ cell === null ) { throw new PhpSpreadsheetException ( "Cell entry {$pCoord} no longer exists in cache. This probably means that the cache was cleared by someone else." ) ; } // Set current entry to the requested entry $ this -> currentCoordinate = $ pCoord ; $ this -> currentCell = $ cell ; // Re-attach this as the cell's parent $ this -> currentCell -> attach ( $ this ) ; // Return requested entry return $ this -> currentCell ; }

0<CODESPLIT>https://github.com/toorop/ovh-sdk-php/blob/eba8ae1439004d820ac6fdd0d60d9692206d784c/src/Ovh/Sms/SmsClient.php#L518-L534<CODESPLIT>smsClient.getSender<CODESPLIT>Purchase SMS credits<CODESPLIT>public function getSender ( $ domain , $ sender ) { if ( ! $ domain ) throw new BadMethodCallException ( 'Parameter $domain is missing.' ) ; if ( ! $ sender ) throw new BadMethodCallException ( 'Parameter $sender is missing.' ) ; $ sender = urlencode ( $ sender ) ; try { $ r = $ this -> get ( 'sms/' . $ domain . '/senders/' . $ sender ) -> send ( ) ; } catch ( \ Exception $ e ) { throw new SmsException ( $ e -> getMessage ( ) , $ e -> getCode ( ) , $ e ) ; } return $ r -> getBody ( true ) ; }

0<CODESPLIT>https://github.com/joshmoody/mock-data/blob/1b866476677c4ef588ac5d1fc6d9fb1f6cb8e310/src/Generator.php#L402-L415<CODESPLIT>Generator.getLastName<CODESPLIT>Returns a Full Name<CODESPLIT>public function getLastName ( $ max = 250 ) { return LastName :: where ( 'rank' , '<=' , $ max ) -> orderByRaw ( Database :: random ( ) ) -> first ( ) -> name ; }

0<CODESPLIT>https://github.com/WPTRT/WPThemeReview/blob/29200a2e6339264af3785d67a787e39a71b0f74b/WPThemeReview/Sniffs/PluginTerritory/AdminBarRemovalSniff.php#L132-L154<CODESPLIT>NoAutoGenerateSniff.process<CODESPLIT>Returns an array of tokens this test wants to listen for .<CODESPLIT>public function process ( File $ phpcsFile , $ stackPtr ) { $ tokens = $ phpcsFile -> getTokens ( ) ; $ token = $ tokens [ $ stackPtr ] ; $ content = trim ( strtolower ( $ token [ 'content' ] ) ) ; // No need to check an empty string. if ( '' === $ content ) { return ; } foreach ( $ this -> generated_themes as $ generated_theme ) { /* 			 * The check can have false positives like artisteers but chances of that happening 			 * in a valid theme is low. 			 */ if ( false === strpos ( $ content , $ generated_theme ) ) { continue ; } $ phpcsFile -> addError ( 'Auto generated themes are not allowed in the theme directory. Found: %s' , $ stackPtr , 'AutoGeneratedFound' , array ( $ generated_theme ) ) ; } }

1<CODESPLIT>https://github.com/yiisoft/yii2/blob/6d10d1f05df9c85ea0ca127bdc6bdc900bc9c6ba/framework/i18n/I18N.php#L87-L96<CODESPLIT>I18N.translate<CODESPLIT>Translates a message to the specified language .<CODESPLIT>public function translate ( $ category , $ message , $ params , $ language ) { $ messageSource = $ this -> getMessageSource ( $ category ) ; $ translation = $ messageSource -> translate ( $ category , $ message , $ language ) ; if ( $ translation === false ) { return $ this -> format ( $ message , $ params , $ messageSource -> sourceLanguage ) ; } return $ this -> format ( $ translation , $ params , $ language ) ; }

1<CODESPLIT>https://github.com/yiisoft/yii2/blob/6d10d1f05df9c85ea0ca127bdc6bdc900bc9c6ba/framework/helpers/BaseUrl.php#L428-L434<CODESPLIT>BaseUrl.current<CODESPLIT>Creates a URL by using the current route and the GET parameters .<CODESPLIT>public static function current ( array $ params = [ ] , $ scheme = false ) { $ currentParams = Yii :: $ app -> getRequest ( ) -> getQueryParams ( ) ; $ currentParams [ 0 ] = '/' . Yii :: $ app -> controller -> getRoute ( ) ; $ route = array_replace_recursive ( $ currentParams , $ params ) ; return static :: toRoute ( $ route , $ scheme ) ; }

0<CODESPLIT>https://github.com/sandermarechal/jejik-mt940/blob/517652e10bb2f42abab2827b96e3c5737ee2ced3/lib/Jejik/MT940/Parser/AbnAmro.php#L39-L54<CODESPLIT>Triodos.accountNumber<CODESPLIT>Get the contra account from a transaction<CODESPLIT>protected function accountNumber ( $ text ) { if ( $ account = $ this -> getLine ( '25' , $ text ) ) { return ltrim ( substr ( $ account , 12 ) , '0' ) ; } return null ; }

0<CODESPLIT>https://github.com/webonyx/graphql-php/blob/11d32d456848a554e7615c3e21d18fa0c10152d5/src/Utils/Utils.php#L569-L579<CODESPLIT>Utils.withErrorHandling<CODESPLIT>@param string [] $items<CODESPLIT>public static function withErrorHandling ( callable $ fn , array & $ errors ) { return static function ( ) use ( $ fn , & $ errors ) { // Catch custom errors (to report them in query results) set_error_handler ( static function ( $ severity , $ message , $ file , $ line ) use ( & $ errors ) { $ errors [ ] = new ErrorException ( $ message , 0 , $ severity , $ file , $ line ) ; } ) ; try { return $ fn ( ) ; } finally { restore_error_handler ( ) ; } } ; }

1<CODESPLIT>https://github.com/yiisoft/yii2/blob/6d10d1f05df9c85ea0ca127bdc6bdc900bc9c6ba/framework/console/controllers/MessageController.php#L498-L587<CODESPLIT>MessageController.extractMessagesFromTokens<CODESPLIT>Extracts messages from a parsed PHP tokens list .<CODESPLIT>protected function extractMessagesFromTokens ( array $ tokens , array $ translatorTokens , array $ ignoreCategories ) { $ messages = [ ] ; $ translatorTokensCount = count ( $ translatorTokens ) ; $ matchedTokensCount = 0 ; $ buffer = [ ] ; $ pendingParenthesisCount = 0 ; foreach ( $ tokens as $ tokenIndex => $ token ) { // finding out translator call if ( $ matchedTokensCount < $ translatorTokensCount ) { if ( $ this -> tokensEqual ( $ token , $ translatorTokens [ $ matchedTokensCount ] ) ) { $ matchedTokensCount ++ ; } else { $ matchedTokensCount = 0 ; } } elseif ( $ matchedTokensCount === $ translatorTokensCount ) { // translator found // end of function call if ( $ this -> tokensEqual ( ')' , $ token ) ) { $ pendingParenthesisCount -- ; if ( $ pendingParenthesisCount === 0 ) { // end of translator call or end of something that we can't extract if ( isset ( $ buffer [ 0 ] [ 0 ] , $ buffer [ 1 ] , $ buffer [ 2 ] [ 0 ] ) && $ buffer [ 0 ] [ 0 ] === T_CONSTANT_ENCAPSED_STRING && $ buffer [ 1 ] === ',' && $ buffer [ 2 ] [ 0 ] === T_CONSTANT_ENCAPSED_STRING ) { // is valid call we can extract $ category = stripcslashes ( $ buffer [ 0 ] [ 1 ] ) ; $ category = mb_substr ( $ category , 1 , - 1 ) ; if ( ! $ this -> isCategoryIgnored ( $ category , $ ignoreCategories ) ) { $ fullMessage = mb_substr ( $ buffer [ 2 ] [ 1 ] , 1 , - 1 ) ; $ i = 3 ; while ( $ i < count ( $ buffer ) - 1 && ! is_array ( $ buffer [ $ i ] ) && $ buffer [ $ i ] === '.' ) { $ fullMessage .= mb_substr ( $ buffer [ $ i + 1 ] [ 1 ] , 1 , - 1 ) ; $ i += 2 ; } $ message = stripcslashes ( $ fullMessage ) ; $ messages [ $ category ] [ ] = $ message ; } $ nestedTokens = array_slice ( $ buffer , 3 ) ; if ( count ( $ nestedTokens ) > $ translatorTokensCount ) { // search for possible nested translator calls $ messages = array_merge_recursive ( $ messages , $ this -> extractMessagesFromTokens ( $ nestedTokens , $ translatorTokens , $ ignoreCategories ) ) ; } } else { // invalid call or dynamic call we can't extract $ line = Console :: ansiFormat ( $ this -> getLine ( $ buffer ) , [ Console :: FG_CYAN ] ) ; $ skipping = Console :: ansiFormat ( 'Skipping line' , [ Console :: FG_YELLOW ] ) ; $ this -> stdout ( "$skipping $line. Make sure both category and message are static strings.\n" ) ; } // prepare for the next match $ matchedTokensCount = 0 ; $ pendingParenthesisCount = 0 ; $ buffer = [ ] ; } else { $ buffer [ ] = $ token ; } } elseif ( $ this -> tokensEqual ( '(' , $ token ) ) { // count beginning of function call, skipping translator beginning // If we are not yet inside the translator, make sure that it's beginning of the real translator. // See https://github.com/yiisoft/yii2/issues/16828 if ( $ pendingParenthesisCount === 0 ) { $ previousTokenIndex = $ tokenIndex - $ matchedTokensCount - 1 ; if ( is_array ( $ tokens [ $ previousTokenIndex ] ) ) { $ previousToken = $ tokens [ $ previousTokenIndex ] [ 0 ] ; if ( in_array ( $ previousToken , [ T_OBJECT_OPERATOR , T_PAAMAYIM_NEKUDOTAYIM ] , true ) ) { $ matchedTokensCount = 0 ; continue ; } } } if ( $ pendingParenthesisCount > 0 ) { $ buffer [ ] = $ token ; } $ pendingParenthesisCount ++ ; } elseif ( isset ( $ token [ 0 ] ) && ! in_array ( $ token [ 0 ] , [ T_WHITESPACE , T_COMMENT ] ) ) { // ignore comments and whitespaces $ buffer [ ] = $ token ; } } } return $ messages ; }

1<CODESPLIT>https://github.com/yiisoft/yii2/blob/6d10d1f05df9c85ea0ca127bdc6bdc900bc9c6ba/framework/db/Command.php#L1222-L1227<CODESPLIT>Command.refreshTableSchema<CODESPLIT>Refreshes table schema which was marked by [[ requireTableSchemaRefresh () ]] .<CODESPLIT>protected function refreshTableSchema ( ) { if ( $ this -> _refreshTableName !== null ) { $ this -> db -> getSchema ( ) -> refreshTableSchema ( $ this -> _refreshTableName ) ; } }

1<CODESPLIT>https://github.com/simpletest/simpletest/blob/713ffea002c8a99adae899e7c27ec201d760f1e3/frames.php#L139-L153<CODESPLIT>SimpleFrameset.setFrameFocus<CODESPLIT>Sets the focus by name . If already focused and the target frame also has frames then the nested frame will be focused .<CODESPLIT>public function setFrameFocus ( $ name ) { if ( is_integer ( $ this -> focus ) ) { if ( $ this -> frames [ $ this -> focus ] -> hasFrames ( ) ) { return $ this -> frames [ $ this -> focus ] -> setFrameFocus ( $ name ) ; } } if ( in_array ( $ name , array_keys ( $ this -> names ) ) ) { $ this -> focus = $ this -> names [ $ name ] ; return true ; } return false ; }

0<CODESPLIT>https://github.com/contao/contao/blob/fbc056e5b3dd2e645bfe7812cb997ece8ff6b578/core-bundle/src/Command/UserPasswordCommand.php#L74-L92<CODESPLIT>UserPasswordCommand.execute<CODESPLIT>{<CODESPLIT>protected function execute ( InputInterface $ input , OutputInterface $ output ) : int { if ( null === $ input -> getArgument ( 'username' ) || null === $ input -> getOption ( 'password' ) ) { return 1 ; } $ hash = $ this -> validateAndHashPassword ( $ input -> getOption ( 'password' ) ) ; $ affected = $ this -> connection -> update ( 'tl_user' , [ 'password' => $ hash ] , [ 'username' => $ input -> getArgument ( 'username' ) ] ) ; if ( 0 === $ affected ) { throw new InvalidArgumentException ( sprintf ( 'Invalid username: %s' , $ input -> getArgument ( 'username' ) ) ) ; } $ io = new SymfonyStyle ( $ input , $ output ) ; $ io -> success ( 'The password has been changed successfully.' ) ; return 0 ; }

1<CODESPLIT>https://github.com/kassacom/php-sdk/blob/a9f589cef348106903bcca146a212e6c36e679f0/src/Client.php#L419-L429<CODESPLIT>Client.getWalletInfo<CODESPLIT>@param string|WalletRequest $walletRequest<CODESPLIT>public function getWalletInfo ( $ walletRequest ) { if ( ! $ walletRequest instanceof WalletRequest ) { $ walletRequest = new WalletRequest ( $ walletRequest ) ; } ObjectRecursiveValidator :: validate ( $ walletRequest ) ; $ walletSerializer = new WalletSerializer ( $ walletRequest ) ; return $ this -> execute ( $ walletRequest -> getTransport ( $ walletSerializer ) , WalletResponse :: class ) ; }

1<CODESPLIT>https://github.com/StoreFactory/zoho-subscription-api/blob/120574dd4ae3d2a5db7a642d9974b1036c194bed/lib/Api/Plan.php#L141-L146<CODESPLIT>Plan.getPriceByPlanCode<CODESPLIT>get price by planCode<CODESPLIT>public function getPriceByPlanCode ( string $ planCode ) : float { $ plan = $ this -> getPlan ( $ planCode ) ; return ( array_key_exists ( 'recurring_price' , $ plan ) ) ? $ plan [ 'recurring_price' ] : 0 ; }

1<CODESPLIT>https://github.com/imcj/predis/blob/f51f0a0c5474ab3ca23e391bcede71eae08030f1/src/Connection/Replication/SentinelReplication.php#L583-L592<CODESPLIT>SentinelReplication.getConnectionByRole<CODESPLIT>Returns a connection by its role .<CODESPLIT>public function getConnectionByRole ( $ role ) { if ( $ role === 'master' ) { return $ this -> getMaster ( ) ; } elseif ( $ role === 'slave' ) { return $ this -> pickSlave ( ) ; } elseif ( $ role === 'sentinel' ) { return $ this -> getSentinelConnection ( ) ; } }

1<CODESPLIT>https://github.com/yiisoft/yii2/blob/6d10d1f05df9c85ea0ca127bdc6bdc900bc9c6ba/framework/captcha/CaptchaAction.php#L322-L353<CODESPLIT>CaptchaAction.renderImageByImagick<CODESPLIT>Renders the CAPTCHA image based on the code using ImageMagick library .<CODESPLIT>protected function renderImageByImagick ( $ code ) { $ backColor = $ this -> transparent ? new \ ImagickPixel ( 'transparent' ) : new \ ImagickPixel ( '#' . str_pad ( dechex ( $ this -> backColor ) , 6 , 0 , STR_PAD_LEFT ) ) ; $ foreColor = new \ ImagickPixel ( '#' . str_pad ( dechex ( $ this -> foreColor ) , 6 , 0 , STR_PAD_LEFT ) ) ; $ image = new \ Imagick ( ) ; $ image -> newImage ( $ this -> width , $ this -> height , $ backColor ) ; $ draw = new \ ImagickDraw ( ) ; $ draw -> setFont ( $ this -> fontFile ) ; $ draw -> setFontSize ( 30 ) ; $ fontMetrics = $ image -> queryFontMetrics ( $ draw , $ code ) ; $ length = strlen ( $ code ) ; $ w = ( int ) $ fontMetrics [ 'textWidth' ] - 8 + $ this -> offset * ( $ length - 1 ) ; $ h = ( int ) $ fontMetrics [ 'textHeight' ] - 8 ; $ scale = min ( ( $ this -> width - $ this -> padding * 2 ) / $ w , ( $ this -> height - $ this -> padding * 2 ) / $ h ) ; $ x = 10 ; $ y = round ( $ this -> height * 27 / 40 ) ; for ( $ i = 0 ; $ i < $ length ; ++ $ i ) { $ draw = new \ ImagickDraw ( ) ; $ draw -> setFont ( $ this -> fontFile ) ; $ draw -> setFontSize ( ( int ) ( mt_rand ( 26 , 32 ) * $ scale * 0.8 ) ) ; $ draw -> setFillColor ( $ foreColor ) ; $ image -> annotateImage ( $ draw , $ x , $ y , mt_rand ( - 10 , 10 ) , $ code [ $ i ] ) ; $ fontMetrics = $ image -> queryFontMetrics ( $ draw , $ code [ $ i ] ) ; $ x += ( int ) $ fontMetrics [ 'textWidth' ] + $ this -> offset ; } $ image -> setImageFormat ( 'png' ) ; return $ image -> getImageBlob ( ) ; }

0<CODESPLIT>https://github.com/FriendsOfPHP/PHP-CS-Fixer/blob/f83f64862b4f751bfa6169fc8631b1c76ce11989/src/Fixer/Basic/NonPrintableCharacterFixer.php#L64-L81<CODESPLIT>PhpdocTrimConsecutiveBlankLineSeparationFixer.reverseFindLastUsefulContent<CODESPLIT>{<CODESPLIT>private function reverseFindLastUsefulContent ( DocBlock $ doc , $ from ) { for ( $ index = $ from - 1 ; $ index >= 0 ; -- $ index ) { if ( $ doc -> getLine ( $ index ) -> containsUsefulContent ( ) ) { return $ index ; } } return null ; }

0<CODESPLIT>https://github.com/Danack/ArtaxServiceBuilder/blob/bf1228ceedb4e152e7b72358d1d56f2e2d80e6c7/src/ArtaxServiceBuilder/OperationGenerator.php#L464-L490<CODESPLIT>OperationGenerator.addCreateRequestMethod<CODESPLIT>Add methods to access each of the parameters in the operation .<CODESPLIT>function addCreateRequestMethod ( ) { $ body = '$request = new \Amp\Artax\Request();' . PHP_EOL ; $ url = $ this -> operationDefinition -> getURL ( ) ; $ body .= '$url = null;' . PHP_EOL ; $ body .= sprintf ( '$request->setMethod(\'%s\');' . PHP_EOL , $ this -> operationDefinition -> getHttpMethod ( ) ) ; $ body .= '' . PHP_EOL ; $ first = true ; $ hasQueryParams = false ; $ hasFormBody = false ; $ hasJsonBody = false ; $ hasURIVariables = false ; foreach ( $ this -> operationDefinition -> getParameters ( ) as $ operationParameter ) { if ( $ operationParameter -> getLocation ( ) === 'postField' || $ operationParameter -> getLocation ( ) === 'postFile' ) { $ hasFormBody = true ; } if ( $ operationParameter -> getLocation ( ) === 'json' ) { $ hasJsonBody = true ; } if ( $ operationParameter -> getLocation ( ) === 'uri' ) { $ hasURIVariables = true ; } if ( $ operationParameter -> getLocation ( ) === 'query' ) { $ hasQueryParams = true ; } if ( $ operationParameter -> getLocation ( ) === 'absoluteURL' ) { //$body .= '$url = ' //TODO - throw an error if both absoluteURL and uri variables are set } } if ( $ hasQueryParams ) { $ body .= '$queryParameters = [];' . PHP_EOL ; } $ apiParameters = $ this -> apiGenerator -> getAPIParameters ( ) ; foreach ( $ this -> operationDefinition -> getParameters ( ) as $ operationParameter ) { foreach ( $ apiParameters as $ apiParameter ) { if ( $ apiParameter === $ operationParameter -> getName ( ) ) { if ( $ first ) { $ body .= '//Add parameters that are defined at the API level, not the' . PHP_EOL ; $ body .= '//operation level' . PHP_EOL ; $ first = false ; } $ translatedParam = ucfirst ( $ this -> apiGenerator -> translateParameter ( $ operationParameter -> getName ( ) ) ) ; //TODO - this is wrong...they should be stored in just $params, then copied to query params //if they are actually sent in the query. $ body .= sprintf ( "\$queryParameters['%s'] = \$this->api->get%s();" . PHP_EOL , ucfirst ( $ apiParameter ) , $ translatedParam ) ; $ hasQueryParams = true ; } } } $ body .= '' . PHP_EOL ; if ( $ hasFormBody ) { $ body .= '$formBody = new \Artax\FormBody;' . PHP_EOL ; } if ( $ hasJsonBody == true ) { $ body .= '$jsonParams = [];' . PHP_EOL ; } //TODO - check for multiple body types, either here or better yet in //operation definition. i.e. cannot set json body and multi-part in same request foreach ( $ this -> operationDefinition -> getParameters ( ) as $ operationParameter ) { if ( $ operationParameter -> getIsOptional ( ) == true ) { $ body .= sprintf ( 'if (array_key_exists(\'%s\', $this->parameters) == true) {' . PHP_EOL , $ operationParameter -> getName ( ) ) ; $ indent = '    ' ; } else { $ indent = '' ; } $ body .= sprintf ( '$value = $this->getFilteredParameter(\'%s\');' . PHP_EOL , $ operationParameter -> getName ( ) ) ; $ closeSkipBlock = '' ; if ( $ operationParameter -> getSkipIfNull ( ) == true ) { $ body .= $ indent . 'if ($value != null) {' . PHP_EOL ; $ closeSkipBlock = $ indent . '}' . PHP_EOL ; $ indent .= '    ' ; } $ body .= $ this -> generateParameterSetBlock ( $ indent , $ operationParameter ) ; $ body .= $ closeSkipBlock ; if ( $ operationParameter -> getIsOptional ( ) == true ) { $ body .= '}' . PHP_EOL ; } } $ body .= PHP_EOL ; $ body .= '//Parameters are parsed and set, lets prepare the request' . PHP_EOL ; if ( $ hasFormBody == true ) { $ body .= '$request->setBody($formBody);' . PHP_EOL ; } if ( $ hasJsonBody == true ) { $ body .= 'if (count($jsonParams)) {' . PHP_EOL ; $ body .= '    $jsonBody = json_encode($jsonParams);' . PHP_EOL ; $ body .= '    $request->setHeader("Content-Type", "application/json");' . PHP_EOL ; $ body .= '    $request->setBody($jsonBody);' . PHP_EOL ; $ body .= '}' . PHP_EOL ; } //Nothing else has set the URL, use the one defined $ body .= 'if ($url == null) {' . PHP_EOL ; $ body .= sprintf ( '    $url = "%s";' . PHP_EOL , addslashes ( $ url ) ) ; $ body .= '}' . PHP_EOL ; if ( $ hasURIVariables ) { $ body .= '$uriTemplate = new \ArtaxServiceBuilder\Service\UriTemplate\UriTemplate();' . PHP_EOL ; $ body .= '$url = $uriTemplate->expand($url, $this->parameters);' . PHP_EOL ; } if ( $ hasQueryParams ) { $ body .= 'if (count($queryParameters)) {' . PHP_EOL ; $ body .= '    $url = $url.\'?\'.http_build_query($queryParameters, \'\', \'&\', PHP_QUERY_RFC3986);' . PHP_EOL ; $ body .= '}' . PHP_EOL ; } $ body .= '$request->setUri($url);' . PHP_EOL ; $ body .= '' . PHP_EOL ; $ body .= 'return $request;' . PHP_EOL ; $ tags [ ] = new GenericTag ( 'return' , '\Amp\Artax\Request' ) ; $ docBlock = new DocBlockGenerator ( 'Create an Amp\Artax\Request object from the operation.' , null , $ tags ) ; $ methodGenerator = new MethodGenerator ( 'createRequest' ) ; $ methodGenerator -> setDocBlock ( $ docBlock ) ; $ methodGenerator -> setBody ( $ body ) ; $ this -> classGenerator -> addMethodFromGenerator ( $ methodGenerator ) ; }

1<CODESPLIT>https://github.com/xqueue/maileon-php-api-client/blob/8ad17895f6a76b5cdcd62f0140ef1ace5b0c669d/src/XQueue/Maileon/API/TargetGroups/TargetGroup.php#L76-L92<CODESPLIT>TargetGroup.fromXML<CODESPLIT>Initializes this target group from an XML representation .<CODESPLIT>function fromXML ( $ xmlElement ) { $ this -> id = $ xmlElement -> id ; $ this -> name = $ xmlElement -> name ; $ this -> author = $ xmlElement -> author ; $ this -> state = $ xmlElement -> state ; $ this -> type = $ xmlElement -> type ; $ this -> contactFilterName = $ xmlElement -> contact_filter_name ; $ this -> contactFilterId = $ xmlElement -> contact_filter_id ; $ this -> evaluated = $ xmlElement -> evaluated ; $ this -> created = $ xmlElement -> created ; $ this -> updated = $ xmlElement -> updated ; $ this -> countActiveContacts = $ xmlElement -> count_active_contacts ; $ this -> countContacts = $ xmlElement -> count_contacts ; }

0<CODESPLIT>https://github.com/SDIS62/toolbox/blob/fd543d98bd0e571618aad73db81450b18f37e278/library/SDIS62/Model/Abstract.php#L117-L130<CODESPLIT>SDIS62_Model_Abstract.hydrateRecursive<CODESPLIT>Hydratation ( remplissage ) de l entité à partir d un tableau de données<CODESPLIT>private function hydrateRecursive ( array & $ array ) { if ( is_array ( $ array ) ) { foreach ( $ array as & $ item ) { if ( is_array ( $ item ) ) { $ this -> hydrateRecursive ( $ item ) ; if ( array_key_exists ( "classname" , $ item ) ) { $ object = new $ item [ "classname" ] ; $ object -> hydrate ( $ item ) ; $ item = $ object ; unset ( $ object ) ; } } } } }

0<CODESPLIT>https://github.com/anklimsk/cakephp-spreadsheet/blob/599a61c3083e7419dba42ae5b3448c73d2ddcf52/Vendor/phpspreadsheet/phpoffice/phpspreadsheet/src/PhpSpreadsheet/Calculation/TextData.php#L223-L247<CODESPLIT>TextData.FIXEDFORMAT<CODESPLIT>SEARCHINSENSITIVE .<CODESPLIT>public static function FIXEDFORMAT ( $ value , $ decimals = 2 , $ no_commas = false ) { $ value = Functions :: flattenSingleValue ( $ value ) ; $ decimals = Functions :: flattenSingleValue ( $ decimals ) ; $ no_commas = Functions :: flattenSingleValue ( $ no_commas ) ; // Validate parameters if ( ! is_numeric ( $ value ) || ! is_numeric ( $ decimals ) ) { return Functions :: NAN ( ) ; } $ decimals = floor ( $ decimals ) ; $ valueResult = round ( $ value , $ decimals ) ; if ( $ decimals < 0 ) { $ decimals = 0 ; } if ( ! $ no_commas ) { $ valueResult = number_format ( $ valueResult , $ decimals ) ; } return ( string ) $ valueResult ; }

1<CODESPLIT>https://github.com/ArgentCrusade/flysystem-selectel/blob/bc78691626e60296b045cf52777777db80efbd1c/src/SelectelAdapter.php#L81-L92<CODESPLIT>SelectelAdapter.read<CODESPLIT>{<CODESPLIT>public function read ( $ path ) { try { $ file = $ this -> getFile ( $ path ) ; } catch ( FileNotFoundException $ e ) { return false ; } $ contents = $ file -> read ( ) ; return compact ( 'contents' ) ; }

0<CODESPLIT>https://github.com/jolicode/JoliCi/blob/c042812c6ccf2c61c665bc0722bd8d25dada2715/src/Joli/JoliCi/BuildStrategy/JoliCiBuildStrategy.php#L82-L99<CODESPLIT>JoliCiBuildStrategy.supportProject<CODESPLIT>{<CODESPLIT>public function supportProject ( $ directory ) { return file_exists ( $ this -> getJoliCiStrategyDirectory ( $ directory ) ) && is_dir ( $ this -> getJoliCiStrategyDirectory ( $ directory ) ) ; }

1<CODESPLIT>https://github.com/yiisoft/yii2/blob/6d10d1f05df9c85ea0ca127bdc6bdc900bc9c6ba/framework/db/QueryBuilder.php#L1133-L1147<CODESPLIT>QueryBuilder.createView<CODESPLIT>Creates a SQL View .<CODESPLIT>public function createView ( $ viewName , $ subQuery ) { if ( $ subQuery instanceof Query ) { list ( $ rawQuery , $ params ) = $ this -> build ( $ subQuery ) ; array_walk ( $ params , function ( & $ param ) { $ param = $ this -> db -> quoteValue ( $ param ) ; } ) ; $ subQuery = strtr ( $ rawQuery , $ params ) ; } return 'CREATE VIEW ' . $ this -> db -> quoteTableName ( $ viewName ) . ' AS ' . $ subQuery ; }

1<CODESPLIT>https://github.com/TheDMSGroup/mautic-enhancer/blob/8eb7a4c70b50308e47ba61e5e43cc42747fe2248/Integration/TrustedFormIntegration.php#L49-L191<CODESPLIT>TrustedFormIntegration.doEnhancement<CODESPLIT>@param Lead $lead<CODESPLIT>public function doEnhancement ( Lead $ lead ) { $ persist = false ; if ( $ lead -> getFieldValue ( self :: CERT_URL_FIELD ) && ! $ lead -> getFieldValue ( 'trusted_form_created_at' ) ) { $ trustedFormClaim = $ lead -> getFieldValue ( self :: CERT_URL_FIELD ) ; $ parts = parse_url ( $ trustedFormClaim ) ; if ( 'https' !== $ parts [ 'scheme' ] || self :: CERT_REAL_HOST !== $ parts [ 'host' ] ) { $ this -> logger -> warning ( 'Not Processing Suspicious TrustedForm URL: ' . $ trustedFormClaim ) ; return false ; } $ parameters = $ this -> getFingers ( $ lead ) ; if ( $ lead -> getId ( ) ) { $ parameters [ 'reference' ] = '' . $ lead -> getId ( ) ; $ identifier = $ lead -> getId ( ) ; } else { $ identifier = $ lead -> getEmail ( ) ; } /** @var ArrayCollection|array $utmData */ $ utmData = $ lead -> getUtmTags ( ) ; // Get the UTM Tags as an array of entities. if ( $ utmData instanceof ArrayCollection ) { $ utmData = $ utmData -> toArray ( ) ; } if ( is_array ( $ utmData ) && ! empty ( $ utmData ) ) { // Get the last UTM Source. $ utmSources = [ ] ; /** @var UtmTag $utmTag */ foreach ( $ utmData as $ utmTag ) { if ( ! empty ( trim ( $ utmTag -> getUtmSource ( ) ) ) ) { $ utmSources [ $ utmTag -> getDateAdded ( ) -> getTimestamp ( ) ] = $ utmTag -> getUtmSource ( ) ; } } ksort ( $ utmSources ) ; $ parameters [ 'vendor' ] = array_pop ( $ utmSources ) ; } $ authKeys = $ this -> getKeys ( ) ; $ settings = [ 'authorize_session' => true , 'content_type' => 'application/json' , 'encode_parameters' => 'json' , 'headers' => [ 'Accept: application/json' ] , 'return_raw' => true , 'curl_options' => [ CURLOPT_USERPWD => "$authKeys[username]:$authKeys[password]" , CURLOPT_CONNECTTIMEOUT => 1 , CURLOPT_TIMEOUT => 10 , ] , ] ; for ( $ try = 0 ; $ try < 3 ; ++ $ try ) { $ response = $ this -> makeRequest ( $ trustedFormClaim , $ parameters , 'post' , $ settings ) ; if ( ! $ response || ! isset ( $ response -> body ) ) { $ this -> logger -> error ( 'TrustedForm: Failed to respond with lead ' . $ identifier . '. Body: ' . ( ! empty ( $ response -> body ) ? $ response -> body : 'null' ) ) ; } else { $ data = json_decode ( $ response -> body ) ; switch ( $ response -> code ) { case 200 : case 201 : // Set new value for xx_trusted_form_cert_url from $data->xx_trusted_form_cert_url if ( ! empty ( $ data -> { self :: CERT_URL_FIELD } ) && $ data -> { self :: CERT_URL_FIELD } !== $ lead -> getFieldValue ( self :: CERT_URL_FIELD ) ) { $ lead -> addUpdatedField ( self :: CERT_URL_FIELD , $ data -> { self :: CERT_URL_FIELD } ) ; $ persist = true ; } // Set new value for trusted_form_created_at from created_at if ( ! empty ( $ data -> created_at ) && $ data -> created_at !== $ lead -> getFieldValue ( 'trusted_form_created_at' ) ) { $ lead -> addUpdatedField ( 'trusted_form_created_at' , $ data -> created_at ) ; $ persist = true ; } // Set new value for trusted_form_expires_at from expires_at if ( ! empty ( $ data -> expires_at ) && $ data -> expires_at !== $ lead -> getFieldValue ( 'trusted_form_expires_at' ) ) { $ lead -> addUpdatedField ( 'trusted_form_expires_at' , $ data -> expires_at ) ; $ persist = true ; } // Set new value for trusted_form_share_url from share_url if ( ! empty ( $ data -> share_url ) && $ data -> share_url !== $ lead -> getFieldValue ( 'trusted_form_share_url' ) ) { $ lead -> addUpdatedField ( 'trusted_form_share_url' , $ data -> share_url ) ; $ persist = true ; } $ this -> logger -> info ( 'TrustedForm: Contact ' . $ identifier . ' ' . ( ! $ persist ? 'NOT ' : '' ) . 'updated. ' . ( ! empty ( $ data -> message ) ? $ data -> message : '' ) ) ; if ( ! empty ( $ data -> warnings ) ) { foreach ( $ data -> warnings as $ warning ) { $ this -> logger -> error ( 'TrustedForm warning with contact ' . $ identifier . ' ' . $ warning ) ; } } break 2 ; case 404 : $ this -> logger -> error ( 'TrustedForm: Invalid Certificate: ' . ( ! empty ( $ data -> message ) ? $ data -> message : '' ) ) ; break 2 ; case 401 : case 403 : $ this -> logger -> error ( 'TrustedForm: Authentication Failure: ' . ( ! empty ( $ data -> message ) ? $ data -> message : '' ) ) ; break 2 ; case 502 : case 503 : $ this -> logger -> error ( 'TrustedForm: Exceeded rate limit (try ' . ( $ try + 1 ) . '/3).' ) ; // 100ms delay before retrying. usleep ( 100000 ) ; break ; default : $ this -> logger -> error ( 'TrustedForm: Unrecognized response code: ' . ( ! empty ( $ data -> code ) ? $ data -> code : '' ) . ' ' . ( ! empty ( $ data -> message ) ? $ data -> message : '' ) ) ; break 2 ; } } } } return $ persist ; }

0<CODESPLIT>https://github.com/fastly/fastly-magento2/blob/c428c3d32350265687c20dc1bbeab3e1aa8f0b4e/Controller/Adminhtml/FastlyCdn/CustomSnippet/GetCustomSnippets.php#L99-L129<CODESPLIT>UpdateBlocking.prepareCountryCodes<CODESPLIT>Get custom snippets<CODESPLIT>private function prepareCountryCodes ( $ blockedCountries ) { $ result = '' ; $ countriesArray = [ ] ; $ countries = '' ; if ( $ blockedCountries != null ) { foreach ( $ blockedCountries as $ key => $ value ) { $ countriesArray [ ] = $ value [ 'value' ] ; } $ countries = implode ( ',' , $ countriesArray ) ; } $ this -> configWriter -> save ( Config :: XML_FASTLY_BLOCK_BY_COUNTRY , $ countries , 'default' , '0' ) ; if ( $ countries != '' ) { $ blockedCountriesPieces = explode ( "," , $ countries ) ; foreach ( $ blockedCountriesPieces as $ code ) { $ result .= ' client.geo.country_code == "' . $ code . '" ||' ; } } return $ result ; }

1<CODESPLIT>https://github.com/YiMAproject/yimaTheme/blob/2862e9f66495dfdb092838bf3d70dc8646e3db3d/src/yimaTheme/Resolvers/Aggregate.php#L87-L91<CODESPLIT>Aggregate.attach<CODESPLIT>Attach a name resolver strategy<CODESPLIT>public function attach ( ResolverInterface $ detector , $ priority = 1 ) { $ this -> queue -> insert ( $ detector , $ priority ) ; return $ this ; }

0<CODESPLIT>https://github.com/composer/composer/blob/5d615a16d175fcbdb67a536ef9d6fc4e8a1f6f2b/src/Composer/Repository/Vcs/GitHubDriver.php#L48-L66<CODESPLIT>ShowCommand.addTree<CODESPLIT>{<CODESPLIT>protected function addTree ( $ name , $ package , RepositoryInterface $ installedRepo , RepositoryInterface $ distantRepos , array $ packagesInTree ) { $ children = array ( ) ; list ( $ package , $ versions ) = $ this -> getPackage ( $ installedRepo , $ distantRepos , $ name , $ package -> getPrettyConstraint ( ) === 'self.version' ? $ package -> getConstraint ( ) : $ package -> getPrettyConstraint ( ) ) ; if ( is_object ( $ package ) ) { $ requires = $ package -> getRequires ( ) ; ksort ( $ requires ) ; foreach ( $ requires as $ requireName => $ require ) { $ currentTree = $ packagesInTree ; $ treeChildDesc = array ( 'name' => $ requireName , 'version' => $ require -> getPrettyConstraint ( ) , ) ; if ( ! in_array ( $ requireName , $ currentTree , true ) ) { $ currentTree [ ] = $ requireName ; $ deepChildren = $ this -> addTree ( $ requireName , $ require , $ installedRepo , $ distantRepos , $ currentTree ) ; if ( $ deepChildren ) { $ treeChildDesc [ 'requires' ] = $ deepChildren ; } } $ children [ ] = $ treeChildDesc ; } } return $ children ; }

1<CODESPLIT>https://github.com/yiisoft/yii2/blob/6d10d1f05df9c85ea0ca127bdc6bdc900bc9c6ba/framework/widgets/ActiveForm.php#L407-L426<CODESPLIT>ActiveForm.validate<CODESPLIT>Validates one or several models and returns an error message array indexed by the attribute IDs . This is a helper method that simplifies the way of writing AJAX validation code .<CODESPLIT>public static function validate ( $ model , $ attributes = null ) { $ result = [ ] ; if ( $ attributes instanceof Model ) { // validating multiple models $ models = func_get_args ( ) ; $ attributes = null ; } else { $ models = [ $ model ] ; } /* @var $model Model */ foreach ( $ models as $ model ) { $ model -> validate ( $ attributes ) ; foreach ( $ model -> getErrors ( ) as $ attribute => $ errors ) { $ result [ Html :: getInputId ( $ model , $ attribute ) ] = $ errors ; } } return $ result ; }

1<CODESPLIT>https://github.com/fkubis/teamspeak-php-framework/blob/a1fa2cef078eb3f0803e107298928a0d7edeb4a1/TeamSpeak3/Node/Server.php#L781-L790<CODESPLIT>Server.clientGetByName<CODESPLIT>Returns the Client object matching the given name .<CODESPLIT>public function clientGetByName ( $ name ) { foreach ( $ this -> clientList ( ) as $ client ) { if ( $ client [ "client_nickname" ] == $ name ) { return $ client ; } } throw new Ts3Exception ( "invalid clientID" , 0x200 ) ; }

0<CODESPLIT>https://github.com/imcj/predis/blob/f51f0a0c5474ab3ca23e391bcede71eae08030f1/src/Connection/Replication/MasterSlaveReplication.php#L163-L184<CODESPLIT>MasterSlaveReplication.remove<CODESPLIT>{<CODESPLIT>public function remove ( NodeConnectionInterface $ connection ) { if ( $ connection === $ this -> master ) { $ this -> master = null ; } elseif ( false !== $ id = array_search ( $ connection , $ this -> slaves , true ) ) { unset ( $ this -> slaves [ $ id ] ) ; } else { return false ; } unset ( $ this -> pool [ ( string ) $ connection ] ) ; if ( $ this -> aliases && $ alias = $ connection -> getParameters ( ) -> alias ) { unset ( $ this -> aliases [ $ alias ] ) ; } $ this -> reset ( ) ; return true ; }

0<CODESPLIT>https://github.com/fvsch/kirby-twig/blob/a5f78973720f18626d0e65e57be9199786b6f03f/lib/Twig/lib/Twig/Template.php#L480-L491<CODESPLIT>Twig_Template.getBlockNames<CODESPLIT>Returns a variable from the context .<CODESPLIT>public function getBlockNames ( array $ context = null , array $ blocks = array ( ) ) { if ( null === $ context ) { @ trigger_error ( 'The ' . __METHOD__ . ' method is internal and should never be called; calling it directly is deprecated since version 1.28 and won\'t be possible anymore in 2.0.' , E_USER_DEPRECATED ) ; return array_keys ( $ this -> blocks ) ; } $ names = array_merge ( array_keys ( $ blocks ) , array_keys ( $ this -> blocks ) ) ; if ( false !== $ parent = $ this -> getParent ( $ context ) ) { $ names = array_merge ( $ names , $ parent -> getBlockNames ( $ context ) ) ; } return array_unique ( $ names ) ; }

1<CODESPLIT>https://github.com/emaphp/eMacros/blob/70341625cad316e53d1187062f2dd3f0b479d6cb/src/eMacros/Scope.php#L31-L45<CODESPLIT>Scope.offsetGet<CODESPLIT>Obtains a symbol from table ( non - PHPdoc )<CODESPLIT>public function offsetGet ( $ symbol ) { $ sym = self :: symbol ( $ symbol ) ; //is symbol defined on this scope? if ( array_key_exists ( $ sym , $ this -> symbols ) ) return $ this -> symbols [ $ sym ] ; else { foreach ( $ this -> macros as $ regex => $ callback ) { if ( preg_match ( $ regex , $ sym , $ matches ) ) return $ this -> symbols [ $ sym ] = $ callback -> __invoke ( $ matches ) ; } } return ; }

1<CODESPLIT>https://github.com/Qafeen/Manager/blob/8a85be15a92110e7350a03723e59f9c25127dfad/src/Manage/ConfigFile.php#L54-L65<CODESPLIT>ConfigFile.make<CODESPLIT>Make config / manager . php file .<CODESPLIT>public function make ( ) { $ content = $ this -> getManagerStubContent ( ) ; $ content = str_replace ( '@providers' , $ this -> stringify ( 'providers' ) , $ content ) ; $ content = str_replace ( '@aliases' , $ this -> stringify ( 'aliases' ) , $ content ) ; $ this -> filesystem -> put ( $ this -> getManagerFilePath ( ) , $ content ) ; return true ; }

0<CODESPLIT>https://github.com/QBNK/qbank3api-phpwrapper/blob/208bce1888a31eb2c707cf83e362e3cefc01e408/Controller/ControllerAbstract.php#L238-L241<CODESPLIT>MediaUsage.jsonSerialize<CODESPLIT>Shorthand for sending a DELETE request to the API .<CODESPLIT>public function jsonSerialize ( ) { $ json = [ ] ; if ( null !== $ this -> mediaId ) { $ json [ 'mediaId' ] = $ this -> mediaId ; } if ( null !== $ this -> mediaUrl ) { $ json [ 'mediaUrl' ] = $ this -> mediaUrl ; } if ( null !== $ this -> pageUrl ) { $ json [ 'pageUrl' ] = $ this -> pageUrl ; } if ( null !== $ this -> context && ! empty ( $ this -> context ) ) { $ json [ 'context' ] = $ this -> context ; } if ( null !== $ this -> language ) { $ json [ 'language' ] = $ this -> language ; } return $ json ; }

1<CODESPLIT>https://github.com/Stinger-Soft/EntitySearchBundle/blob/0ea8fb04b0bc881a24678c7798a896b73723df26/Services/DoctrineListener.php#L97-L102<CODESPLIT>DoctrineListener.postPersist<CODESPLIT>Index the entity after it is persisted for the first time<CODESPLIT>public function postPersist ( LifecycleEventArgs $ args ) : void { if ( ! $ this -> enableIndexing ) { return ; } $ this -> updateEntity ( $ args -> getObject ( ) , $ args -> getObjectManager ( ) ) ; }

1<CODESPLIT>https://github.com/Label305/Auja-Laravel/blob/f3606d04beae4a33b02658e77834d93d5ca1372c/src/Label305/AujaLaravel/Routing/AujaRouter.php#L116-L118<CODESPLIT>AujaRouter.getCreateAssociationName<CODESPLIT>Returns the name of the route used for the url that corresponds to the creation of an associated model .<CODESPLIT>public function getCreateAssociationName ( $ modelName , $ otherModelName ) { return sprintf ( 'auja.%s.%s.create' , $ this -> toUrlName ( $ modelName ) , $ this -> toUrlName ( $ otherModelName ) ) ; }

1<CODESPLIT>https://github.com/mvccore/ext-debug-tracy-routing/blob/2ad489d8954a45a31dd8d2feb4bea0be91c7a56a/src/MvcCore/Ext/Debugs/Tracys/RoutingPanel.php#L488-L495<CODESPLIT>RoutingPanel.initViewPanelRequestedUrlData<CODESPLIT>Complete data about requested URL under routes table .<CODESPLIT>protected function initViewPanelRequestedUrlData ( ) { $ req = & $ this -> request ; $ this -> view -> requestedUrl = ( object ) [ 'method' => htmlSpecialChars ( $ req -> GetMethod ( ) , ENT_IGNORE , 'UTF-8' ) , 'baseUrl' => htmlSpecialChars ( $ req -> GetBaseUrl ( ) , ENT_IGNORE , 'UTF-8' ) , 'path' => htmlSpecialChars ( $ req -> GetRequestPath ( ) , ENT_IGNORE , 'UTF-8' ) , ] ; }

0<CODESPLIT>https://github.com/foreverphp/framework/blob/c5526353d38850737c01382cf21109d576ae5f96/src/ForeverPHP/Core/Setup.php#L78-L86<CODESPLIT>Setup.import<CODESPLIT>Carga un objeto desde las Apps .<CODESPLIT>public static function import ( $ name ) { $ importPath = FOREVERPHP_ROOT . DS . $ name . '.php' ; if ( file_exists ( $ importPath ) ) { include_once $ importPath ; } else { throw new SetupException ( "The object to import ($name) not exists." ) ; } }

0<CODESPLIT>https://github.com/hrevert/HtSettingsModule/blob/9098a8bc8f63682302c409fbf1457be24cd06b95/src/Options/NamespaceOptions.php#L140-L152<CODESPLIT>Surface.__Construct<CODESPLIT>{<CODESPLIT>public function __Construct ( $ opt = null ) { /*// 	handle object construction. 	//*/ $ opt = new Nether \ Object \ Mapped ( $ opt , [ 'Theme' => Option :: Get ( 'surface-theme' ) , 'ThemeRoot' => Option :: Get ( 'surface-theme-root' ) , 'Style' => Option :: Get ( 'surface-theme-style' ) , 'AutoCapture' => Option :: Get ( 'surface-auto-capture' ) , 'AutoStash' => Option :: Get ( 'surface-auto-stash' ) , 'AutoRender' => Option :: Get ( 'surface-auto-render' ) ] ) ; $ this -> Storage [ 'stdout' ] = '' ; // pull in default settings. $ this -> AutoRender = ( ( php_sapi_name ( ) === 'cli' ) ? ( false ) : ( $ opt -> AutoRender ) ) ; $ this -> Theme = $ opt -> Theme ; $ this -> ThemeRoot = $ opt -> ThemeRoot ; $ this -> Style = $ opt -> Style ; // if auto stashing is enabled. if ( is_string ( $ opt -> AutoStash ) && class_exists ( 'Nether\Stash' ) ) { if ( ! Stash :: Has ( $ opt -> AutoStash ) ) Stash :: Set ( $ opt -> AutoStash , $ this ) ; } // begin capture if autocapture is enabled and this is not the // command line interface. if ( $ opt -> AutoCapture && php_sapi_name ( ) !== 'cli' ) $ this -> Start ( ) ; return ; }

1<CODESPLIT>https://github.com/TheDMSGroup/mautic-enhancer/blob/8eb7a4c70b50308e47ba61e5e43cc42747fe2248/Integration/AbstractNeustarIntegration.php#L225-L261<CODESPLIT>AbstractNeustarIntegration.domDocumentArray<CODESPLIT>Convert a DOM Document into a nested array .<CODESPLIT>protected function domDocumentArray ( $ root ) { $ result = [ ] ; if ( $ root -> hasAttributes ( ) ) { foreach ( $ root -> attributes as $ attribute ) { $ result [ '@attributes' ] [ $ attribute -> name ] = $ attribute -> value ; } } if ( $ root -> hasChildNodes ( ) ) { if ( 1 == $ root -> childNodes -> length ) { $ child = $ root -> childNodes -> item ( 0 ) ; if ( in_array ( $ child -> nodeType , [ XML_TEXT_NODE , XML_CDATA_SECTION_NODE ] ) && ! empty ( $ child -> nodeValue ) ) { $ result [ '_value' ] = $ child -> nodeValue ; return 1 == count ( $ result ) ? $ result [ '_value' ] : $ result ; } } $ groups = [ ] ; foreach ( $ root -> childNodes as $ child ) { if ( ! isset ( $ result [ $ child -> nodeName ] ) ) { $ result [ $ child -> nodeName ] = $ this -> domDocumentArray ( $ child ) ; } else { if ( ! isset ( $ groups [ $ child -> nodeName ] ) ) { $ result [ $ child -> nodeName ] = [ $ result [ $ child -> nodeName ] ] ; $ groups [ $ child -> nodeName ] = 1 ; } $ result [ $ child -> nodeName ] [ ] = $ this -> domDocumentArray ( $ child ) ; } } } return $ result ; }

0<CODESPLIT>https://github.com/ptejada/uFlex/blob/78a51f3768292f0089ea8f5c5c285af525aa92f6/src/Hash.php#L48-L59<CODESPLIT>Hash.encode<CODESPLIT>Generate a password for a user<CODESPLIT>static protected function encode ( $ number ) { $ k = self :: $ encoder ; preg_match_all ( "/[1-9][0-9]|[0-9]/" , $ number , $ a ) ; $ n = '' ; $ o = count ( $ k ) ; foreach ( $ a [ 0 ] as $ i ) { if ( $ i < $ o ) { $ n .= $ k [ $ i ] ; } else { $ n .= '1' . $ k [ $ i - $ o ] ; } } return $ n ; }

1<CODESPLIT>https://github.com/noprom/think5-extend/blob/e2b443ad5e4604179dd04eeae4a0a8a187b5fa5c/src/thinkextend/oauth/driver/Taobao.php#L91-L106<CODESPLIT>Taobao.getOauthInfo<CODESPLIT>获取当前登录的用户信息<CODESPLIT>public function getOauthInfo ( ) { $ fields = 'user_id,nick,sex,buyer_credit,avatar,has_shop,vip_info' ; $ data = $ this -> call ( 'taobao.user.buyer.get' , "fields={$fields}" ) ; if ( ! empty ( $ data [ 'user_buyer_get_response' ] [ 'user' ] ) ) { $ user = $ data [ 'user_buyer_get_response' ] [ 'user' ] ; $ userInfo [ 'type' ] = 'TAOBAO' ; $ userInfo [ 'name' ] = $ user [ 'user_id' ] ; $ userInfo [ 'nick' ] = $ user [ 'nick' ] ; $ userInfo [ 'avatar' ] = $ user [ 'avatar' ] ; return $ userInfo ; } else { E ( "获取淘宝网用户信息失败：{$data['error_response']['msg']}");   } }

1<CODESPLIT>https://github.com/anklimsk/cakephp-spreadsheet/blob/599a61c3083e7419dba42ae5b3448c73d2ddcf52/Vendor/phpspreadsheet/phpoffice/phpspreadsheet/src/PhpSpreadsheet/Worksheet/ColumnCellIterator.php#L99-L109<CODESPLIT>ColumnCellIterator.seek<CODESPLIT>Set the row pointer to the selected row .<CODESPLIT>public function seek ( $ row = 1 ) { if ( ( $ row < $ this -> startRow ) || ( $ row > $ this -> endRow ) ) { throw new PhpSpreadsheetException ( "Row $row is out of range ({$this->startRow} - {$this->endRow})" ) ; } elseif ( $ this -> onlyExistingCells && ! ( $ this -> worksheet -> cellExistsByColumnAndRow ( $ this -> columnIndex , $ row ) ) ) { throw new PhpSpreadsheetException ( 'In "IterateOnlyExistingCells" mode and Cell does not exist' ) ; } $ this -> currentRow = $ row ; return $ this ; }

0<CODESPLIT>https://github.com/kassacom/php-sdk/blob/a9f589cef348106903bcca146a212e6c36e679f0/src/Client.php#L323-L334<CODESPLIT>Client.getSubscription<CODESPLIT>@param array|CreateRefundRequest $request<CODESPLIT>public function getSubscription ( $ subscriptionRequest ) { if ( is_array ( $ subscriptionRequest ) ) { $ subscriptionRequest = RequestCreator :: create ( GetSubscriptionRequest :: class , $ subscriptionRequest ) ; } else if ( ! ( $ subscriptionRequest instanceof GetSubscriptionRequest ) ) { $ subscriptionRequest = new GetSubscriptionRequest ( $ subscriptionRequest ) ; } ObjectRecursiveValidator :: validate ( $ subscriptionRequest ) ; $ serializer = new GetSubscriptionSerializer ( $ subscriptionRequest ) ; $ transport = new GetSubscriptionTransport ( $ serializer ) ; return $ this -> execute ( $ transport , GetSubscriptionResponse :: class ) ; }

0<CODESPLIT>https://github.com/open-orchestra/open-orchestra-model-bundle/blob/29f9037c8d82f9cef204b652fa800c4313cbd8ef/ModelBundle/Repository/BlockRepository.php#L32-L41<CODESPLIT>BlockRepository.findOneTransverseBlockByCode<CODESPLIT>@param string $component @param string $siteId @param string $language<CODESPLIT>public function findOneTransverseBlockByCode ( $ code , $ language , $ siteId ) { $ qa = $ this -> createAggregationQuery ( ) ; $ qa -> match ( array ( 'code' => $ code , 'language' => $ language , 'siteId' => $ siteId , 'transverse' => true ) ) ; return $ this -> singleHydrateAggregateQuery ( $ qa ) ; }

1<CODESPLIT>https://github.com/eloquent/typhoon/blob/aa3dbea4dad496e1457ebd1059b256efd30d1735/src/Eloquent/Typhoon/Generator/TyphaxASTGenerator.php#L269-L277<CODESPLIT>TyphaxASTGenerator.visitNullType<CODESPLIT>@param NullType $type<CODESPLIT>public function visitNullType ( NullType $ type ) { $ this -> typeCheck -> visitNullType ( func_get_args ( ) ) ; return new StrictEquals ( $ this -> valueExpression ( ) , new Literal ( null ) ) ; }

0<CODESPLIT>https://github.com/WPBP/CronPlus/blob/3f0e83967429f3f21a307177c028236ac598eaf5/cronplus.php#L113-L130<CODESPLIT>CronPlus.unschedule_specific_event<CODESPLIT>Remove all the cron on deactivation<CODESPLIT>public function unschedule_specific_event ( $ timestamp = '' ) { if ( empty ( $ timestamp ) ) { $ timestamp = wp_next_scheduled ( $ this -> args [ 'name' ] , $ this -> args [ 'args' ] ) ; } wp_unschedule_event ( $ timestamp , $ this -> args [ 'name' ] , $ this -> args [ 'args' ] ) ; }

0<CODESPLIT>https://github.com/ezsystems/ezplatform-solr-search-engine/blob/7defb36f774279bec6d30604c5e85320cf47ef31/lib/Gateway/HttpClient/Stream.php#L71-L93<CODESPLIT>Visibility.visit<CODESPLIT>Execute a HTTP request to the remote server .<CODESPLIT>public function visit ( Criterion $ criterion , CriterionVisitor $ subVisitor = null ) { return 'location_visible_b:' . ( $ criterion -> value [ 0 ] === Criterion \ Visibility :: VISIBLE ? 'true' : 'false' ) ; }

1<CODESPLIT>https://github.com/silverstripe/silverstripe-contentreview/blob/6bcf66c7d1ba5689c2ad0b834fc79384c037dbb1/src/Jobs/ContentReviewNotificationJob.php#L106-L123<CODESPLIT>ContentReviewNotificationJob.queueNextRun<CODESPLIT>Queue up the next job to run .<CODESPLIT>protected function queueNextRun ( ) { $ nextRun = new ContentReviewNotificationJob ( ) ; $ nextRunTime = mktime ( Config :: inst ( ) -> get ( __CLASS__ , 'next_run_hour' ) , Config :: inst ( ) -> get ( __CLASS__ , 'next_run_minute' ) , 0 , date ( "m" ) , date ( "d" ) + Config :: inst ( ) -> get ( __CLASS__ , 'next_run_in_days' ) , date ( "Y" ) ) ; singleton ( QueuedJobService :: class ) -> queueJob ( $ nextRun , date ( "Y-m-d H:i:s" , $ nextRunTime ) ) ; }

1<CODESPLIT>https://github.com/joebubna/cora-framework/blob/08cae077d564fe596c2ed4a44bce93b8939b2f26/system/classes/Model.php#L251-L260<CODESPLIT>Model.isPlaceholder<CODESPLIT>Sometimes a placeholder value of 1 will be loaded into models which indicate the data is available but must be fetched if needed . This method indicates whether or not a value of 1 means it s a placeholder .<CODESPLIT>public function isPlaceholder ( $ attributeName ) { // Ref this model's attributes in a shorter variable. $ def = $ this -> model_attributes [ $ attributeName ] ; if ( isset ( $ def [ 'models' ] ) || ( isset ( $ def [ 'model' ] ) && isset ( $ def [ 'usesRefTable' ] ) ) ) { return true ; } return false ; }

1<CODESPLIT>https://github.com/phossa/phossa-query/blob/8c453085afffd7d46d196302f46858fdcf046bbd/src/Phossa/Query/Clause/WhereTrait.php#L230-L234<CODESPLIT>WhereTrait.whereNull<CODESPLIT>{<CODESPLIT>public function whereNull ( $ col , $ and = true , $ not = false ) { return $ this -> where ( $ col , $ not ? 'IS NOT NULL' : 'IS NULL' , WhereInterface :: SHORT_FORM , $ and ) ; }

1<CODESPLIT>https://github.com/yiisoft/yii2/blob/6d10d1f05df9c85ea0ca127bdc6bdc900bc9c6ba/framework/web/DbSession.php#L237-L244<CODESPLIT>DbSession.gcSession<CODESPLIT>Session GC ( garbage collection ) handler .<CODESPLIT>public function gcSession ( $ maxLifetime ) { $ this -> db -> createCommand ( ) -> delete ( $ this -> sessionTable , '[[expire]]<:expire' , [ ':expire' => time ( ) ] ) -> execute ( ) ; return true ; }

1<CODESPLIT>https://github.com/koolkode/http-komponent/blob/04106b00c0106f4838b1bee138c0f58d6a5b1a25/src/Dispatcher.php#L179-L251<CODESPLIT>Dispatcher.terminate<CODESPLIT>{<CODESPLIT>public function terminate ( HttpRequest $ request , HttpResponse $ response ) { $ this -> dispatcher -> notify ( new SendResponseEvent ( $ request , self :: MASTER_REQUEST , $ response , $ this ) ) ; while ( ob_get_level ( ) > 1 ) { ob_end_flush ( ) ; } $ buffer = ob_get_level ( ) ? ob_get_clean ( ) : '' ; ini_set ( 'default_mimetype' , NULL ) ; ini_set ( 'default_charset' , NULL ) ; if ( $ response -> hasEntity ( ) && ! $ request -> isHead ( ) ) { if ( 'gzip' == strtolower ( $ response -> getHeader ( 'Content-Encoding' , '' ) ) ) { ini_set ( 'zlib.output_compression_level' , 1 ) ; ini_set ( 'zlib.output_compression' , 4096 ) ; } else { ob_start ( NULL , 4096 ) ; } } foreach ( $ response -> getHeaders ( ) as $ n => $ headers ) { switch ( $ n ) { case 'server' : case 'connection' : case 'content-length' : case 'content-encoding' : case 'transfer-encoding' : continue 2 ; } foreach ( $ headers as $ index => $ header ) { header ( sprintf ( '%s: %s' , $ header [ 0 ] , $ header [ 1 ] ) , $ index == 0 ) ; } } $ statusLine = sprintf ( '%s %u %s' , $ response -> getProtocol ( ) , $ response -> getStatus ( ) , $ response -> getReason ( ) ) ; header ( $ statusLine , true , $ response -> getStatus ( ) ) ; if ( $ response -> hasEntity ( ) && ! $ request -> isHead ( ) ) { $ stream = new UrlStream ( 'php://output' , 'wb' ) ; try { $ response -> getEntity ( ) -> send ( $ stream ) ; } finally { $ stream -> close ( ) ; } } if ( function_exists ( 'fastcgi_finish_request' ) ) { @ fastcgi_finish_request ( ) ; } $ event = new TerminateEvent ( $ request , self :: MASTER_REQUEST , $ response , $ this ) ; $ event -> bufferedContent = $ buffer ; $ this -> dispatcher -> notify ( $ event ) ; }

1<CODESPLIT>https://github.com/webonyx/graphql-php/blob/11d32d456848a554e7615c3e21d18fa0c10152d5/src/Language/Parser.php#L1677-L1697<CODESPLIT>Parser.parseEnumTypeExtension<CODESPLIT>@return EnumTypeExtensionNode<CODESPLIT>private function parseEnumTypeExtension ( ) { $ start = $ this -> lexer -> token ; $ this -> expectKeyword ( 'extend' ) ; $ this -> expectKeyword ( 'enum' ) ; $ name = $ this -> parseName ( ) ; $ directives = $ this -> parseDirectives ( true ) ; $ values = $ this -> parseEnumValuesDefinition ( ) ; if ( count ( $ directives ) === 0 && count ( $ values ) === 0 ) { throw $ this -> unexpected ( ) ; } return new EnumTypeExtensionNode ( [ 'name' => $ name , 'directives' => $ directives , 'values' => $ values , 'loc' => $ this -> loc ( $ start ) , ] ) ; }

1<CODESPLIT>https://github.com/yiisoft/yii2/blob/6d10d1f05df9c85ea0ca127bdc6bdc900bc9c6ba/framework/db/sqlite/Schema.php#L93-L105<CODESPLIT>Schema.loadTableSchema<CODESPLIT>{<CODESPLIT>protected function loadTableSchema ( $ name ) { $ table = new TableSchema ( ) ; $ table -> name = $ name ; $ table -> fullName = $ name ; if ( $ this -> findColumns ( $ table ) ) { $ this -> findConstraints ( $ table ) ; return $ table ; } return null ; }

0<CODESPLIT>https://github.com/MetaModels/core/blob/45790196b52a8d242ad485743d6d2577f7db5b34/src/FrontendIntegration/InsertTags.php#L263-L286<CODESPLIT>InsertTags.getItem<CODESPLIT>Get from MM X the item with the id Y and parse the attribute Z and return it .<CODESPLIT>protected function getItem ( $ metaModelIdOrName , $ mixDataId , $ intIdRenderSetting , $ strOutput = null ) { // Get the MetaModel. Return if we can not find one. $ objMetaModel = $ this -> loadMetaModel ( $ metaModelIdOrName ) ; if ( $ objMetaModel == null ) { return false ; } // Set output to default if not set. if ( empty ( $ strOutput ) ) { $ strOutput = 'html5' ; } $ objMetaModelList = new ItemList ( ) ; $ objMetaModelList -> setServiceContainer ( $ this -> getServiceContainer ( ) ) -> setMetaModel ( $ objMetaModel -> get ( 'id' ) , $ intIdRenderSetting ) -> overrideOutputFormat ( $ strOutput ) ; // Handle a set of ids. $ arrIds = StringUtil :: trimsplit ( ',' , $ mixDataId ) ; // Check each id if published. foreach ( $ arrIds as $ intKey => $ intId ) { if ( ! $ this -> isPublishedItem ( $ objMetaModel , $ intId ) ) { unset ( $ arrIds [ $ intKey ] ) ; } } // Render an empty insert tag rather than displaying a list with an empty. // result information. do not return false here because the insert tag itself is correct. if ( count ( $ arrIds ) < 1 ) { return '' ; } $ objMetaModelList -> addFilterRule ( new StaticIdList ( $ arrIds ) ) ; return $ objMetaModelList -> render ( false , $ this ) ; }

0<CODESPLIT>https://github.com/philippebeck/pjs/blob/b5972ad50136015c7690a781a2e8b846afb918da/src/Controller/ArticleController.php#L38-L66<CODESPLIT>ArticleController.ReadAction<CODESPLIT>******************* \ Creates a new article<CODESPLIT>public function ReadAction ( ) { // Gets the article id, then stores it $ id = $ _GET [ 'id' ] ; // Reads the article & his comments, then stores them $ article = ModelFactory :: get ( 'Article' ) -> read ( $ id ) ; $ comments = ModelFactory :: get ( 'Comment' ) -> list ( $ id , 'article_id' ) ; if ( ! empty ( $ comments ) ) { // Loops on each comment for ( $ i = 0 ; $ i < count ( $ comments ) ; $ i ++ ) { // Stores the comment user_id value $ userId = $ comments [ $ i ] [ 'user_id' ] ; // Reads the user table with $userId instead of the user id value, then stores the user results $ user = ModelFactory :: get ( 'User' ) -> read ( $ userId ) ; // Stores the first_name value & the image value with new keys $ comments [ $ i ] [ 'user' ] = $ user [ 'first_name' ] ; $ comments [ $ i ] [ 'image' ] = $ user [ 'image' ] ; } } // Returns the rendering of the view readArticle with the article & his comments return $ this -> render ( 'blog/readArticle.twig' , [ 'article' => $ article , 'comments' => $ comments ] ) ; }

