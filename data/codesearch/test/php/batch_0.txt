1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getProperty ( $ propertyName ) { $ ret = parent :: getProperty ( $ propertyName ) ; if ( $ ret ) return $ ret ; if ( $ propertyName == "Table" ) return $ this -> table ; if ( $ propertyName == "SearchRule" ) return $ this -> searchRule ; // get control object if propertyName is "Field[fldname]" $ pos1 = strpos ( $ propertyName , "[" ) ; $ pos2 = strpos ( $ propertyName , "]" ) ; if ( $ pos1 > 0 && $ pos2 > $ pos1 ) { $ propType = substr ( $ propertyName , 0 , $ pos1 ) ; $ fieldName = substr ( $ propertyName , $ pos1 + 1 , $ pos2 - $ pos1 - 1 ) ; if ( $ propType == "param" ) { // get parameter return $ this -> parameters -> get ( $ fieldName ) ; } return $ this -> getField ( $ fieldName ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Moovly/moovly-php-sdk/blob/adc642af29a95a0cdb634ca2d87b927a5bbd15fa/src/Service/MoovlyService.php#L409-L424<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getJobsByUser ( User $ user ) : array { try { $ response = $ this -> client -> getJobsByUser ( $ user -> getId ( ) ) ; } catch ( ClientException $ ce ) { $ response = $ ce -> getResponse ( ) ; throw ExceptionFactory :: create ( $ response , $ ce ) ; } $ jobs = array_map ( function ( array $ job ) { return JobFactory :: createFromAPIResponse ( $ job ) ; } , $ response ) ; return $ jobs ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/symlex/di-microkernel/blob/7a7ade1983fa29b0cea243ba8a8577cbced2cac0/src/Kernel.php#L116-L123<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getName ( ) : string { if ( null === $ this -> name ) { $ this -> setName ( ucfirst ( preg_replace ( '/[^a-zA-Z0-9_]+/' , '' , basename ( $ this -> getAppPath ( ) ) ) ) ) ; } return $ this -> name ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/xcorp1986/next-think/blob/de3a8fcab31a520d9284aa807ed16de30de31f0c/Think/Image/Driver/Gd.php#L45-L81<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function open ( $ imgname ) { //检测图像文件 if ( ! is_file ( $ imgname ) ) { throw new BaseException ( '不存在的图像文件');   } //获取图像信息 $ _info = getimagesize ( $ imgname ) ; //检测图像合法性 if ( false === $ _info || ( IMAGETYPE_GIF === $ _info [ 2 ] && empty ( $ _info [ 'bits' ] ) ) ) { throw new BaseException ( '非法图像文件');   } //设置图像信息 $ this -> info = [ 'width' => $ _info [ 0 ] , 'height' => $ _info [ 1 ] , 'type' => image_type_to_extension ( $ _info [ 2 ] , false ) , 'mime' => $ _info [ 'mime' ] , ] ; //销毁已存在的图像 empty ( $ this -> img ) || imagedestroy ( $ this -> img ) ; //打开图像 //@todo gif支持 if ( 'gif' == $ this -> info [ 'type' ] ) { $ class = 'Think\\Image\\Driver\\GIF' ; $ this -> gif = new $ class ( $ imgname ) ; $ this -> img = imagecreatefromstring ( $ this -> gif -> image ( ) ) ; } else { $ fun = "imagecreatefrom{$this->info['type']}" ; $ this -> img = $ fun ( $ imgname ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/trendwerk/editor-capabilities/blob/5f7d4d3ca3c256b2ec2342a7ff699058b1fa2e03/class-tp-editor-capabilities.php#L41-L73<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>function limit_lower_roles ( $ caps , $ cap , $ user_id , $ args ) { if ( 'promote_user' == $ cap ) { if ( ! isset ( $ args [ 0 ] ) ) $ caps [ ] = 'do_not_allow' ; if ( $ args [ 0 ] == $ user_id ) $ caps [ ] = 'do_not_allow' ; $ other = new WP_User ( absint ( $ args [ 0 ] ) ) ; if ( $ other -> has_cap ( 'administrator' ) && ! current_user_can ( 'administrator' ) ) $ caps [ ] = 'do_not_allow' ; } else if ( $ cap == 'delete_users' || $ cap == 'edit_user' ) { if ( ! isset ( $ _GET [ 'user' ] ) ) return $ caps ; $ other_id = absint ( $ _GET [ 'user' ] ) ; if ( ! $ other_id ) return $ caps ; if ( $ other_id == $ user_id ) return $ caps ; $ other = new WP_User ( $ other_id ) ; if ( $ other -> has_cap ( 'administrator' ) && ! current_user_can ( 'administrator' ) ) $ caps [ ] = 'do_not_allow' ; } return $ caps ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wj008t/php-beacon/blob/eeebfe8a26958dcf43bc6a5d693e946bc0ce4210/core/Mysql.php#L463-L482<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getMax ( string $ tbname , string $ field , $ where = null , $ args = null ) { $ sql = "select max(`{$field}`) from {$tbname}" ; if ( $ where !== null ) { $ where = trim ( $ where ) ; if ( $ args != null ) { $ args = is_array ( $ args ) ? $ args : [ $ args ] ; } if ( is_int ( $ where ) || is_numeric ( $ where ) ) { $ args = [ intval ( $ where ) ] ; $ where = 'id=?' ; } $ sql .= ' where ' . $ where ; } $ row = $ this -> getRow ( $ sql , $ args , PDO :: FETCH_NUM ) ; if ( $ row == null ) { return null ; } return $ row [ 0 ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/FACT-Finder/FACT-Finder-PHP-Library/blob/5c795b94117fa7ac40f5e80d4edc93999a76fc90/src/FACTFinder/Adapter/Tracking.php#L122-L164<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setupClickTracking ( $ id , $ query , $ pos , $ masterId = null , $ sid = null , $ cookieId = null , $ origPos = - 1 , $ page = 1 , $ simi = 100.0 , $ title = '' , $ pageSize = 12 , $ origPageSize = - 1 , $ userId = null , $ campaign = null , $ instoreAds = false ) { if ( strlen ( $ sid ) == 0 ) $ sid = session_id ( ) ; if ( $ origPos == - 1 ) $ origPos = $ pos ; if ( $ origPageSize == - 1 ) $ origPageSize = $ pageSize ; $ params = array ( 'id' => $ id , 'query' => $ query , 'pos' => $ pos , 'sid' => $ sid , 'origPos' => $ origPos , 'page' => $ page , 'simi' => $ simi , 'title' => $ title , 'event' => 'click' , 'pageSize' => $ pageSize , 'origPageSize' => $ origPageSize , ) ; if ( strlen ( $ userId ) > 0 ) $ params [ 'userId' ] = $ userId ; if ( strlen ( $ cookieId ) > 0 ) $ params [ 'cookieId' ] = $ cookieId ; if ( strlen ( $ masterId ) > 0 ) $ params [ 'masterId' ] = $ masterId ; if ( strlen ( $ campaign ) > 0 ) $ params [ 'campaign' ] = $ campaign ; if ( $ instoreAds ) $ params [ 'instoreAds' ] = 'true' ; $ this -> parameters -> clear ( ) ; $ this -> parameters -> setAll ( $ params ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/valkyrjaio/valkyrja/blob/3b4ad998d96c3ab08e36a11c76ce8d9d48759ffe/src/Valkyrja/ORM/Repositories/PDORepository.php#L144-L153<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function findBy ( array $ criteria , array $ orderBy = null , int $ limit = null , int $ offset = null , array $ columns = null , bool $ getRelations = null ) : array { return $ this -> select ( $ columns , $ criteria , $ orderBy , $ limit , $ offset , $ getRelations ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/consolibyte/quickbooks-php/blob/3df0d35e2fc04c1fe04c63dbdb3c11a501c305a1/QuickBooks/IPP/IntuitAnywhere.php#L134-L142<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function check ( $ app_username , $ app_tenant ) { if ( $ arr = $ this -> load ( $ app_username , $ app_tenant ) ) { return true ; } return false ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/juliangut/doctrine-base-repositories/blob/3eb661fa8f1296512c2cbb683de7995724509cb7/src/RepositoryTrait.php#L187-L198<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function getObjectFactory ( ) : callable { if ( $ this -> objectFactory === null ) { $ className = $ this -> getClassName ( ) ; $ this -> objectFactory = function ( ) use ( $ className ) { return new $ className ( ) ; } ; } return $ this -> objectFactory ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/stevebauman/maintenance/blob/3a205c7e809da015cbf978aeb7d11af54e65084a/app/Http/Presenters/Inventory/InventoryStockPresenter.php#L26-L59<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function table ( Inventory $ item ) { $ stocks = $ item -> stocks ( ) ; return $ this -> table -> of ( 'inventory.stocks' , function ( TableGrid $ table ) use ( $ item , $ stocks ) { $ table -> with ( $ stocks ) ; $ table -> attributes ( [ 'class' => 'table table-hover table-striped' , ] ) ; $ table -> column ( 'quantity' ) ; $ table -> column ( 'location' , function ( Column $ column ) use ( $ item ) { $ column -> value = function ( InventoryStock $ stock ) use ( $ item ) { $ name = $ stock -> location -> trail ; return link_to_route ( 'maintenance.inventory.stocks.show' , $ name , [ $ item -> getKey ( ) , $ stock -> getKey ( ) ] ) ; } ; } ) ; $ table -> column ( 'last_movement' , function ( Column $ column ) { $ column -> value = function ( InventoryStock $ stock ) { return $ stock -> last_movement ; } ; } ) ; $ table -> column ( 'last_movement_by' , function ( Column $ column ) { $ column -> value = function ( InventoryStock $ stock ) { return $ stock -> last_movement_by ; } ; } ) ; } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/jelix/inifile/blob/003f15245f074cc3a3b6023fae31861a090df832/lib/IniModifier.php#L193-L198<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setValues ( $ values , $ section = 0 ) { foreach ( $ values as $ name => $ val ) { $ this -> setValue ( $ name , $ val , $ section ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/icicleio/stream/blob/a5d80f39a99dfadf02a1e9fc7d11d3fc31c42865/src/MemoryStream.php#L185-L200<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function remove ( ) : string { if ( null !== $ this -> byte && false !== ( $ position = $ this -> buffer -> search ( $ this -> byte ) ) ) { if ( 0 === $ this -> length || $ position < $ this -> length ) { return $ this -> buffer -> shift ( $ position + 1 ) ; } return $ this -> buffer -> shift ( $ this -> length ) ; } if ( 0 === $ this -> length ) { return $ this -> buffer -> drain ( ) ; } return $ this -> buffer -> shift ( $ this -> length ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/JVMartin/angel-core/blob/96637ecf2fdaeda2337d8a2dbea0ab1a18198b11/public/js/kcfinder/lib/class_image_gd.php#L22-L32<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function resize ( $ width , $ height ) { if ( ! $ width ) $ width = 1 ; if ( ! $ height ) $ height = 1 ; return ( ( false !== ( $ img = new image_gd ( array ( $ width , $ height ) ) ) ) && $ img -> imageCopyResampled ( $ this ) && ( false !== ( $ this -> image = $ img -> image ) ) && ( false !== ( $ this -> width = $ img -> width ) ) && ( false !== ( $ this -> height = $ img -> height ) ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/intpro/quickstart/blob/6b7318650a10d6488ee220b4d5e697f3581eaeb0/src/Laravel/QueryAgent.php#L108-L119<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getBlock ( $ name , $ sorts , $ specs , $ params = [ ] ) { $ this -> setSorts ( $ sorts ) ; $ this -> setEqSpecs ( $ specs ) ; $ this -> setParams ( $ params ) ; $ fields_arr = $ this -> repository -> getBlock ( $ name ) ; $ block_item = new BlockItem ( $ fields_arr , 0 ) ; return $ block_item ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/RevisionTen/forms/blob/248fdd562a3d1744d05a4f955ac759fa24389ef7/Controller/FormController.php#L507-L530<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function formRemoveItem ( string $ formUuid , int $ onVersion , string $ itemUuid ) { /** @var \Symfony\Component\Security\Core\User\UserInterface $user */ $ user = $ this -> getUser ( ) ; $ success = false ; $ this -> commandBus -> dispatch ( new FormRemoveItemCommand ( $ user -> getId ( ) , Uuid :: uuid1 ( ) -> toString ( ) , $ formUuid , $ onVersion , [ 'uuid' => $ itemUuid , ] , function ( $ commandBus , $ event ) use ( & $ success ) { // Callback. $ success = true ; } ) ) ; if ( $ success ) { $ this -> addFlash ( 'success' , $ this -> translator -> trans ( 'Field deleted' ) ) ; return $ this -> redirectToForm ( $ formUuid ) ; } return $ this -> errorResponse ( $ formUuid ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wpsharks/core/blob/7a086f144d15ba2587c348744b75f811b9dd6625/src/includes/traits/Facades/App.php#L44-L55<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function appParent ( int $ levels = 1 ) { $ levels = max ( 1 , $ levels ) ; $ level_counter = 1 ; // Start from `1`. $ Parent = $ GLOBALS [ static :: class ] -> Parent ; while ( $ Parent && $ level_counter < $ levels ) { $ Parent = $ Parent -> Parent ?? null ; ++ $ level_counter ; // Counter. } return $ Parent ; // Possible `null`. }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Azure/azure-storage-php/blob/9e53aa6e447e2260a29d54b96fab9fe18b665afa/azure-storage-common/src/Common/Models/ServiceOptions.php#L139-L145<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setMiddlewares ( array $ middlewares ) { foreach ( $ middlewares as $ middleware ) { self :: validateIsMiddleware ( $ middleware ) ; } $ this -> middlewares = $ middlewares ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/I18n/Formatter.php#L340-L363<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function init ( ) { if ( $ this -> timeZone === null ) { $ this -> timeZone = Reaction :: $ app -> timeZone ; } if ( $ this -> locale === null ) { $ this -> locale = Reaction :: $ app -> language ; } if ( $ this -> booleanFormat === null ) { $ this -> booleanFormat = [ Reaction :: t ( 'rct' , 'No' , [ ] , $ this -> locale ) , Reaction :: t ( 'rct' , 'Yes' , [ ] , $ this -> locale ) ] ; } if ( $ this -> nullDisplay === null ) { $ this -> nullDisplay = '<span class="not-set">' . Reaction :: t ( 'rct' , '(not set)' , [ ] , $ this -> locale ) . '</span>' ; } $ this -> _intlLoaded = extension_loaded ( 'intl' ) ; if ( ! $ this -> _intlLoaded ) { if ( $ this -> decimalSeparator === null ) { $ this -> decimalSeparator = '.' ; } if ( $ this -> thousandSeparator === null ) { $ this -> thousandSeparator = ',' ; } } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/mamasu/mama-framework/blob/105a4980b56f1fdaad095a32189ee47d39203a7a/src/View/TwigView.php#L34-L48<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function loadTwig ( ) { $ loader = new \ Twig_Loader_Filesystem ( array ( $ this -> viewsFolder ) ) ; // Set up environment $ params = array ( //'cache' => $this->viewsFolder . "cache", ) ; $ this -> twig = new \ Twig_Environment ( $ loader , $ params ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/danog/PHPStruct/blob/36d1dfa6c7d28fcb804f441ad942bdf8bb65e984/lib/danog/PHP/StructTools.php#L630-L667<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function padformat ( $ format ) { $ modifier = $ this -> MODIFIERS [ '@' ] ; $ result = null ; // Result gormat string $ count = null ; $ totallength = 0 ; foreach ( str_split ( $ format ) as $ offset => $ currentformatchar ) { // Current format char if ( isset ( $ this -> MODIFIERS [ $ currentformatchar ] ) ) { // If current format char is a modifier $ modifier = $ this -> MODIFIERS [ $ currentformatchar ] ; // Set the modifiers for the current format char $ result = $ currentformatchar ; } elseif ( is_numeric ( $ currentformatchar ) && ( ( int ) $ currentformatchar >= 0 || ( int ) $ currentformatchar <= 9 ) ) { $ count .= ( int ) $ currentformatchar ; // Set the count for the current format char } elseif ( isset ( $ modifier [ 'FORMATS' ] [ $ currentformatchar ] ) ) { if ( ! isset ( $ count ) || $ count == null ) { $ count = 1 ; // Set count to 1 by default. } $ count = ( int ) $ count ; if ( $ currentformatchar == 's' || $ currentformatchar == 'p' ) { $ result .= $ count . $ currentformatchar ; $ totallength += $ modifier [ 'SIZE' ] [ $ currentformatchar ] * $ count ; } else { for ( $ x = 0 ; $ x < $ count ; $ x ++ ) { if ( $ modifier [ 'MODIFIER' ] == '@' ) { $ result .= str_pad ( '' , $ this -> posmod ( - $ totallength , $ modifier [ 'SIZE' ] [ $ currentformatchar ] ) , 'x' ) ; $ totallength += $ this -> posmod ( - $ totallength , $ modifier [ 'SIZE' ] [ $ currentformatchar ] ) + $ modifier [ 'SIZE' ] [ $ currentformatchar ] ; } $ result .= $ currentformatchar ; } } $ count = null ; } else { throw new StructException ( 'Unkown format or modifier supplied at offset ' . $ offset . ' (' . $ currentformatchar . ').' ) ; } } return $ result ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/blob/04bfa1284ca652e8e9befe82134f440cc31f655d/WordPress/Sniffs/Security/PluginMenuSlugSniff.php#L77-L87<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function process_parameters ( $ stackPtr , $ group_name , $ matched_content , $ parameters ) { foreach ( $ this -> target_functions [ $ matched_content ] as $ position ) { if ( isset ( $ parameters [ $ position ] ) ) { $ file_constant = $ this -> phpcsFile -> findNext ( \ T_FILE , $ parameters [ $ position ] [ 'start' ] , ( $ parameters [ $ position ] [ 'end' ] + 1 ) ) ; if ( false !== $ file_constant ) { $ this -> phpcsFile -> addWarning ( 'Using __FILE__ for menu slugs risks exposing filesystem structure.' , $ stackPtr , 'Using__FILE__' ) ; } } } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/stephanecollot/DatetimepickerBundle/blob/ebecd027c702816bc86e6727c8075a67b01a43f1/DependencyInjection/Compiler/FormPass.php#L27-L36<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function process ( ContainerBuilder $ container ) { $ resources = $ container -> getParameter ( 'twig.form.resources' ) ; foreach ( array ( 'div' , 'jquery' , 'stylesheet' ) as $ template ) { $ resources [ ] = 'SCDatetimepickerBundle:Form:' . $ template . '_layout.html.twig' ; } $ container -> setParameter ( 'twig.form.resources' , $ resources ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Payum/Payum/blob/cf4be4f91d9bf24069153aceeb44b4f5b3d4f011/src/Payum/Core/Extension/EndlessCycleDetectorExtension.php#L24-L32<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function onPreExecute ( Context $ context ) { if ( count ( $ context -> getPrevious ( ) ) >= $ this -> limit ) { throw new LogicException ( sprintf ( 'Possible endless cycle detected. ::onPreExecute was called %d times before reach the limit.' , $ this -> limit ) ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/F21/Paradox/blob/d1f47203e743760d8d8d6232bf0ea62920e7eefe/Paradox/toolbox/PodManager.php#L443-L456<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function processStoreResult ( $ pod , $ revision , $ id = null ) { $ pod -> setSaved ( ) ; $ pod -> setRevision ( $ revision ) ; if ( $ id && $ pod -> getId ( ) === null ) { $ pod -> setId ( $ id ) ; } //Signal here $ this -> notify ( "after_store" , $ pod ) ; return $ pod -> getKey ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Intervention/gif/blob/7f7e747f26b8362f18384f67a9765290523f607a/src/Intervention/Gif/Decoder.php#L123-L188<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function decodeExtension ( Decoded $ gif ) { switch ( $ this -> getNextBytes ( 1 ) ) { case self :: GRAPHICS_CONTROL_EXTENSION_MARKER : $ gif -> addGraphicsControlExtension ( $ this -> getNextBytes ( 6 ) ) ; break ; case self :: APPLICATION_EXTENSION_MARKER : $ application_block_size = $ this -> getNextBytes ( 1 ) ; $ application_block_size = unpack ( 'C' , $ application_block_size ) [ 1 ] ; $ application_block = $ this -> getNextBytes ( $ application_block_size ) ; // only save netscape application extension if ( $ application_block == self :: NETSCAPE_EXTENSION_MARKER ) { $ data_block_size = $ this -> getNextBytes ( 1 ) ; $ data_block_size = unpack ( 'C' , $ data_block_size ) [ 1 ] ; $ data_block = $ this -> getNextBytes ( $ data_block_size ) ; $ extension = "\x0B" ; $ extension .= self :: NETSCAPE_EXTENSION_MARKER ; $ extension .= "\x03" ; $ extension .= $ data_block ; $ extension .= "\x00" ; $ gif -> setNetscapeExtension ( $ extension ) ; } elseif ( $ application_block == self :: XMP_EXTENSION_MARKER ) { do { // skip xmp data for now $ byte = $ this -> getNextBytes ( 1 ) ; } while ( $ byte != "\x00" ) ; } else { $ data_block_size = $ this -> getNextBytes ( 1 ) ; $ data_block_size = unpack ( 'C' , $ data_block_size ) [ 1 ] ; $ data_block = $ this -> getNextBytes ( $ data_block_size ) ; } // subblock $ this -> getNextBytes ( 1 ) ; break ; case self :: PLAINTEXT_EXTENSION_MARKER : $ blocksize = $ this -> getNextBytes ( 1 ) ; $ blocksize = unpack ( 'C' , $ blocksize ) [ 1 ] ; $ gif -> setPlaintextExtension ( $ this -> getNextBytes ( $ blocksize ) ) ; $ this -> getNextBytes ( 1 ) ; // null byte break ; case self :: COMMENT_EXTENSION_MARKER : $ blocksize = $ this -> getNextBytes ( 1 ) ; $ blocksize = unpack ( 'C' , $ blocksize ) ; $ gif -> setCommentExtension ( $ this -> getNextBytes ( $ blocksize ) ) ; $ this -> getNextBytes ( 1 ) ; // null byte break ; default : # code... break ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/contao-bootstrap/core/blob/5f9b12b921847e7c2b8d9fb332f157a2b6bea6b4/src/DependencyInjection/ConfigPass.php#L47-L62<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function loadConfigFromBundles ( ContainerBuilder $ container ) { $ config = [ ] ; foreach ( $ container -> getParameter ( 'kernel.bundles' ) as $ bundleClass ) { $ refClass = new \ ReflectionClass ( $ bundleClass ) ; $ bundleDir = dirname ( $ refClass -> getFileName ( ) ) ; $ configFile = $ bundleDir . '/Resources/config/contao_bootstrap.yml' ; if ( file_exists ( $ configFile ) ) { $ config = ArrayUtil :: merge ( $ config , Yaml :: parse ( file_get_contents ( $ configFile ) ) ) ; } } $ container -> setParameter ( 'contao_bootstrap.config' , $ config ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/tastyigniter/flame/blob/3c922ba1c02b3c14ad4adf91c2f37498045fa92a/src/Foundation/Application.php#L275-L287<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function hasDatabase ( ) { try { $ hasDatabase = is_null ( $ this -> hasDatabase ) ? $ this [ 'db.connection' ] -> getSchemaBuilder ( ) -> hasTable ( 'settings' ) : $ this -> hasDatabase ; } catch ( Exception $ ex ) { $ hasDatabase = FALSE ; } return $ this -> hasDatabase = $ hasDatabase ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/tourze/http/blob/0ce2605eac1525c5e8b266996d2d5237111da283/src/Request.php#L908-L926<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function post ( $ key = null , $ value = null ) { if ( is_array ( $ key ) ) { $ this -> _post = $ key ; return $ this ; } if ( null === $ key ) { return $ this -> _post ; } elseif ( null === $ value ) { return Arr :: path ( $ this -> _post , $ key ) ; } $ this -> _post [ $ key ] = $ value ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/alt3/tokens/blob/4870c7931578c6042156b1e48c17c3b3b51b99fd/src/Adapters/RandomBytesAdapter.php#L64-L117<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function generate ( ) { $ randomCompat = join ( DIRECTORY_SEPARATOR , [ dirname ( dirname ( __DIR__ ) ) , 'vendor' , 'paragonie' , 'random_compat' , 'lib' , 'random.php' ] ) ; // PHP 5.x native if ( version_compare ( PHP_VERSION , '7.0.0' , '<' ) && ! file_exists ( $ randomCompat ) ) { $ this -> function = [ 'PHP 5.x native' => 'openssl_random_pseudo_bytes' ] ; $ bytes = openssl_random_pseudo_bytes ( $ this -> length / 2 ) ; if ( $ this -> bytes === true ) { return $ bytes ; } return bin2hex ( $ bytes ) ; } // PHP 7.x if ( version_compare ( PHP_VERSION , '7.0.0' ) >= 0 ) { $ this -> function = [ 'PHP 7.x' => 'random_bytes' ] ; } // PHP 5.x with random_compat polyfill if ( version_compare ( PHP_VERSION , '7.0.0' , '<' ) ) { $ this -> function = [ 'PHP 5.x paragonie/random_compat' => 'random_bytes' ] ; require_once ( $ randomCompat ) ; } // Handle token generating the PHP 7.x way try { $ bytes = random_bytes ( $ this -> length / 2 ) ; } catch ( TypeError $ e ) { throw new Exception ( 'Unexpected TypeError whilst generating the RandomBytes token: ' . $ e -> getMessage ( ) ) ; } catch ( Error $ e ) { throw new Exception ( 'Unexpected Error whilst generating the RandomBytes token: ' . $ e -> getMessage ( ) ) ; } catch ( Exception $ e ) { throw new Exception ( 'Could not generate RandomBytes token due to failing CSPRNG: ' . $ e -> getMessage ( ) ) ; } if ( $ this -> bytes === true ) { return $ bytes ; } return bin2hex ( $ bytes ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/intuit/QuickBooks-V3-PHP-SDK/blob/09f9f42e4cf49a7d6e0aa4d2c15e15eba245bfd5/src/XSD2PHP/src/com/mikebevz/xsd2php/Php2Xml.php#L355-L361<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function castToStringZero ( $ prop , $ obj ) { if ( $ this -> isEmptyInt ( $ prop -> getValue ( $ obj ) ) ) { //reset value in very specific case to keep it intact $ prop -> setValue ( $ obj , ( string ) $ prop -> getValue ( $ obj ) ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/VitexSoftware/EaseFramework/blob/700693949ee6c858d40365c6d3c3825e8a742397/src/Ease/Sand.php#L642-L658<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function humanFilesize ( $ filesize ) { if ( is_numeric ( $ filesize ) ) { $ decr = 1024 ; $ step = 0 ; $ prefix = [ 'Byte' , 'KB' , 'MB' , 'GB' , 'TB' , 'PB' ] ; while ( ( $ filesize / $ decr ) > 0.9 ) { $ filesize = $ filesize / $ decr ; ++ $ step ; } return round ( $ filesize , 2 ) . ' ' . $ prefix [ $ step ] ; } else { return 'NaN' ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/consolibyte/quickbooks-php/blob/3df0d35e2fc04c1fe04c63dbdb3c11a501c305a1/QuickBooks/Callbacks/SQL/Callbacks.php#L1115-L1170<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function ListDeletedQueryRequest ( $ requestID , $ user , $ action , $ ID , $ extra , & $ err , $ last_action_time , $ last_actionident_time , $ version , $ locale , $ config = array ( ) ) { $ xml = '' ; if ( ! QuickBooks_Callbacks_SQL_Callbacks :: _requiredVersion ( 2.0 , $ version , $ locale , QUICKBOOKS_DEL_LIST ) ) { return QUICKBOOKS_SKIP ; } $ xml .= '<?xml version="1.0" encoding="utf-8"?> 			<?qbxml version="' . QuickBooks_Callbacks_SQL_Callbacks :: _version ( $ version , $ locale ) . '"?> 			<QBXML> 				<QBXMLMsgsRq onError="' . QUICKBOOKS_SERVER_SQL_ON_ERROR . '"> 					<ListDeletedQueryRq requestID="' . $ requestID . '"> 						<ListDelType>Account</ListDelType> 						<ListDelType>BillingRate</ListDelType> 						<ListDelType>Class</ListDelType> 						<ListDelType>Customer</ListDelType> 						<ListDelType>CustomerMsg</ListDelType> 						<ListDelType>CustomerType</ListDelType> 						<ListDelType>DateDrivenTerms</ListDelType> 						<ListDelType>Employee</ListDelType> 						<ListDelType>ItemDiscount</ListDelType> 						<ListDelType>ItemFixedAsset</ListDelType> 						<ListDelType>ItemGroup</ListDelType> 						<ListDelType>ItemInventory</ListDelType> 						<ListDelType>ItemInventoryAssembly</ListDelType> 						<ListDelType>ItemNonInventory</ListDelType> 						<ListDelType>ItemOtherCharge</ListDelType> 						<ListDelType>ItemPayment</ListDelType> 						<ListDelType>ItemSalesTax</ListDelType> 						<ListDelType>ItemSalesTaxGroup</ListDelType> 						<ListDelType>ItemService</ListDelType> 						<ListDelType>ItemSubtotal</ListDelType> 						<ListDelType>JobType</ListDelType> 						<ListDelType>OtherName</ListDelType> 						<ListDelType>PaymentMethod</ListDelType> 						<ListDelType>PayrollItemNonWage</ListDelType> 						<ListDelType>PayrollItemWage</ListDelType> 						<ListDelType>PriceLevel</ListDelType> 						<ListDelType>SalesRep</ListDelType> 						<ListDelType>SalesTaxCode</ListDelType> 						<ListDelType>ShipMethod</ListDelType> 						<ListDelType>StandardTerms</ListDelType> 						<ListDelType>ToDo</ListDelType> 						<ListDelType>UnitOfMeasureSet</ListDelType> 						<ListDelType>Vehicle</ListDelType> 						<ListDelType>Vendor</ListDelType> 						<ListDelType>VendorType</ListDelType> 						' . QuickBooks_Callbacks_SQL_Callbacks :: _buildFilter ( $ user , $ action , $ extra , true ) . ' 					</ListDeletedQueryRq> 				</QBXMLMsgsRq> 			</QBXML>' ; return $ xml ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/perminder-klair/kato-core/blob/168227027b857c90e8c5f24a2d591796b49ac9e7/modules/media/controllers/DefaultController.php#L273-L284<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function actionUpdateData ( $ id ) { if ( $ post = Yii :: $ app -> request -> post ( ) ) { $ model = $ this -> findModel ( $ id ) ; $ model -> $ post [ 'name' ] = $ post [ 'value' ] ; if ( $ model -> save ( false ) ) { echo 'true' ; exit ; } } echo 'false' ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Web/RequestHelper.php#L816-L821<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getServerParams ( ) { if ( ! isset ( $ this -> _serverParams ) ) { $ this -> _serverParams = Reaction \ Helpers \ ArrayHelper :: merge ( $ this -> getDefaultServerParams ( ) , $ this -> reactRequest -> getServerParams ( ) ) ; } return $ this -> _serverParams ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Parser/Dumper/PoDumper.php#L115-L128<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function cleanExport ( string $ string ) : string { $ replaces = [ '\\' => '\\\\' , '"' => '\"' , "\t" => '\t' , ] ; $ string = \ str_replace ( \ array_keys ( $ replaces ) , \ array_values ( $ replaces ) , $ string ) ; $ po = '"' . \ implode ( '$' . "\n" . '"' . $ this -> eol . '"' , \ explode ( $ this -> eol , $ string ) ) . '"' ; // remove empty strings return \ str_replace ( $ this -> eol . '""' , '' , $ po ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ordercloud/ordercloud-php/blob/de4a9e060aab3848d7f86a5c6a6c08ff25dba965/src/Entities/Settings/Setting.php#L82-L92<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function jsonSerialize ( ) { return [ 'id' => $ this -> getId ( ) , 'value' => $ this -> getValue ( ) , 'key' => $ this -> getKey ( ) , 'startDate' => $ this -> getStartDate ( ) , 'endDate' => $ this -> getEndDate ( ) , 'organisation' => $ this -> getOrganisation ( ) , ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/orchestral/resources/blob/27498c7c5a7d1b509ab0666dd509aada98dc422f/src/Router.php#L53-L64<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function route ( $ name , $ uses ) { if ( in_array ( $ name , $ this -> reserved ) ) { throw new InvalidArgumentException ( "Unable to use reserved keyword [{$name}]." ) ; } elseif ( Str :: contains ( $ name , '/' ) ) { throw new InvalidArgumentException ( "Invalid character in resource name [{$name}]." ) ; } $ this -> attributes [ 'routes' ] [ $ name ] = $ uses ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/shumkov/rediska/blob/220afbfc4095e90aa050a5dfc00ce7413147ce45/library/Rediska/Command/PopFromListBlocking.php#L37-L108<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function create ( $ keyOrKeys , $ timeout = 0 , $ pushToKey = null ) { // TODO: Refactor this shit if ( $ pushToKey !== null ) { if ( is_array ( $ keyOrKeys ) ) { throw new Rediska_Command_Exception ( 'PopFromListBlocking with $pushToKey argument accept only one key' ) ; } $ key = $ keyOrKeys ; $ connection = $ this -> getRediska ( ) -> getConnectionByKeyName ( $ key ) ; $ this -> _storeConnection = $ this -> getRediska ( ) -> getConnectionByKeyName ( $ pushToKey ) ; if ( $ connection != $ this -> _storeConnection ) { $ this -> setAtomic ( false ) ; $ command = array ( 'BRPOP' , $ this -> getRediska ( ) -> getOption ( 'namespace' ) . $ key , $ timeout ) ; } else { $ this -> _throwExceptionIfNotSupported ( '2.1.7' ) ; $ command = array ( 'BRPOPLPUSH' , $ this -> getRediska ( ) -> getOption ( 'namespace' ) . $ key , $ this -> getRediska ( ) -> getOption ( 'namespace' ) . $ pushToKey , $ timeout ) ; } return new Rediska_Connection_Exec ( $ connection , $ command ) ; } else { $ keys = array ( ) ; if ( ! is_array ( $ keyOrKeys ) ) { $ keys = array ( $ keyOrKeys ) ; } elseif ( ! empty ( $ keyOrKeys ) ) { $ keys = $ keyOrKeys ; } else { throw new Rediska_Command_Exception ( 'Not present keys for pop' ) ; } $ connections = array ( ) ; $ keysByConnections = array ( ) ; foreach ( $ keys as $ key ) { $ connection = $ this -> _rediska -> getConnectionByKeyName ( $ key ) ; $ connectionAlias = $ connection -> getAlias ( ) ; if ( ! array_key_exists ( $ connectionAlias , $ connections ) ) { $ connections [ $ connectionAlias ] = $ connection ; $ keysByConnections [ $ connectionAlias ] = array ( ) ; } $ keysByConnections [ $ connectionAlias ] [ ] = $ key ; } // TODO: Implement for many connections if ( count ( $ keysByConnections ) > 1 ) { throw new Rediska_Command_Exception ( "Blocking pop until worked only with one connection. Try to use Rediska#on() method for specify it." ) ; } $ execs = array ( ) ; foreach ( $ keysByConnections as $ connectionAlias => $ keys ) { $ command = array ( 'BRPOP' ) ; foreach ( $ keys as $ key ) { $ command [ ] = $ this -> _rediska -> getOption ( 'namespace' ) . $ key ; } $ command [ ] = $ timeout ; $ execs [ ] = new Rediska_Connection_Exec ( $ connections [ $ connectionAlias ] , $ command ) ; } return $ execs ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/yii2mod/yii2-cart/blob/14bbda69edfcd234bb6008b53ea1198af4134038/storage/DatabaseStorage.php#L108-L117<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function getIdentifier ( $ default ) { $ id = $ default ; if ( $ this -> _user instanceof User && ! $ this -> _user -> getIsGuest ( ) ) { $ id = $ this -> _user -> getId ( ) ; } return $ id ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Helpers/Url.php#L249-L258<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function remember ( $ url = '' , $ name = null , RequestApplicationInterface $ app ) { $ url = static :: to ( $ url ) ; if ( $ name === null ) { $ app -> user -> setReturnUrl ( $ url ) ; } else { $ app -> session -> set ( $ name , $ url ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/slince/phpdish/blob/5057eec1b54cb349650d0ce162f663e49287ce2c/src/PHPDish/Bundle/PostBundle/Service/BookManager.php#L109-L114<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function createBook ( UserInterface $ user ) { $ book = $ this -> categoryManager -> createCategory ( $ user ) ; $ book -> asBook ( ) ; return $ book ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/iNem0o/PicORM/blob/0bf6c5b359d5fcb098b43d3ea3bf99839bee8b9f/src/PicORM/Collection.php#L194-L216<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function delete ( ) { $ modelClass = $ this -> _className ; // cloning fetch query to get where,order by and limit values $ deleteQuery = clone ( $ this -> _queryHelper ) ; // transform query to delete $ deleteQuery -> cleanQueryBeforeSwitching ( ) -> delete ( $ modelClass :: formatTableNameMySQL ( ) ) ; // execute query $ query = $ this -> _dataSource -> prepare ( $ deleteQuery -> buildQuery ( ) ) ; $ query -> execute ( $ deleteQuery -> getWhereParamsValues ( ) ) ; // check for mysql error $ errorcode = $ query -> errorInfo ( ) ; if ( $ errorcode [ 0 ] != "00000" ) { throw new Exception ( $ errorcode [ 2 ] ) ; } return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/l5starter/user-management/blob/8dc5f60c76669bc7ae71d027785bbc880dc2effd/database/seeds/UsersTableSeeder.php#L12-L21<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function run ( ) { DB :: table ( 'users' ) -> insert ( [ 'name' => 'Administrator' , 'email' => 'admin@admin.com' , 'password' => bcrypt ( 'password' ) , 'created_at' => \ Carbon \ Carbon :: now ( ) , 'updated_at' => \ Carbon \ Carbon :: now ( ) ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/silvershop/silvershop-core/blob/b090e970b06c0fb7e68107360760b6e2d6d184c4/src/ShopTools.php#L82-L101<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function getSession ( HTTPRequest $ request = null ) { if ( $ request && ( $ session = $ request -> getSession ( ) ) ) { return $ session ; } if ( Controller :: has_curr ( ) && ( $ request = Controller :: curr ( ) -> getRequest ( ) ) ) { return $ request -> getSession ( ) ; } try { if ( $ session = Injector :: inst ( ) -> get ( HTTPRequest :: class ) -> getSession ( ) ) { return $ session ; } } catch ( NotFoundExceptionInterface $ e ) { // No-Op } return new Session ( [ ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/sulu/SuluFormBundle/blob/4226e71f3c220f40d75bd289297e4879a3f36f69/Dynamic/Types/FreeTextType.php#L43-L50<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function build ( FormBuilderInterface $ builder , FormField $ field , $ locale , $ options = [ ] ) { $ options [ 'mapped' ] = false ; $ options [ 'attr' ] [ 'type' ] = $ field -> getType ( ) ; $ type = HiddenType :: class ; $ builder -> add ( $ field -> getKey ( ) , $ type , $ options ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Console/Traits/ConfirmableTrait.php#L64-L77<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function getDefaultConfirmCallback ( ) : Closure { return function ( ) { if ( $ this -> container !== null && $ this -> container -> has ( 'env' ) ) { return $ this -> container -> get ( 'env' ) === 'prod' ; } if ( ( $ env = \ getenv ( 'APP_ENV' ) ) !== false ) { return $ env === 'prod' ; } return true ; } ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/vanilla/garden/blob/ad9af189da98d57dc990eb3e6c0524f32e5e7e01/src/Db/SqliteDb.php#L478-L493<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function quoteVal ( $ value , $ quote = true ) { if ( $ value instanceof Literal ) { /* @var Literal $value */ return $ value -> getValue ( 'mysql' ) ; } elseif ( in_array ( gettype ( $ value ) , [ 'integer' , 'double' ] ) ) { return ( string ) $ value ; } elseif ( $ value === true ) { return '1' ; } elseif ( $ value === false ) { return '0' ; } elseif ( $ quote ) { return $ this -> pdo ( ) -> quote ( $ value ) ; } else { return $ value ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/php-carteblanche/core/blob/b55de6ac4d7c9ba09f8d0fbcc3cc1866713ac343/src/CarteBlanche/Controller/Dev.php#L58-L62<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function clearAction ( ) { $ this -> getContainer ( ) -> get ( 'session' ) -> clear ( ) ; $ this -> getContainer ( ) -> get ( 'router' ) -> redirect ( $ this -> getContainer ( ) -> get ( 'router' ) -> buildUrl ( ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/3f2707d1d606a59527f74e88808b820a170d3f42/src/DependencyInjection/Compiler/ConfigSourcePass.php#L25-L44<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function process ( ContainerBuilder $ container ) { if ( ! $ container -> hasDefinition ( 'fos_elastica.config_manager' ) ) { return ; } $ indexSources = [ ] ; $ indexTemplateSources = [ ] ; foreach ( array_keys ( $ container -> findTaggedServiceIds ( 'fos_elastica.config_source' ) ) as $ id ) { $ tag = $ container -> findDefinition ( $ id ) -> getTag ( 'fos_elastica.config_source' ) ; if ( isset ( $ tag [ 0 ] [ 'source' ] ) && $ tag [ 0 ] [ 'source' ] === self :: SOURCE_TYPE_INDEX_TEMPLATE ) { $ indexTemplateSources [ ] = new Reference ( $ id ) ; } else { $ indexSources [ ] = new Reference ( $ id ) ; } } $ container -> getDefinition ( 'fos_elastica.config_manager' ) -> replaceArgument ( 0 , $ indexSources ) ; $ container -> getDefinition ( 'fos_elastica.config_manager.index_templates' ) -> replaceArgument ( 0 , $ indexTemplateSources ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/valkyrjaio/valkyrja/blob/3b4ad998d96c3ab08e36a11c76ce8d9d48759ffe/src/Valkyrja/Http/NativeResponseBuilder.php#L143-L155<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function route ( string $ route , array $ parameters = [ ] , int $ statusCode = StatusCode :: FOUND , array $ headers = [ ] ) : RedirectResponse { return $ this -> app -> redirectRoute ( $ route , $ parameters , $ statusCode , $ headers ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/denhaphp/framework/blob/2c77b025d4e4181e5eee34daf4471a439c4e0025/src/Mysqli.php#L747-L767<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function add ( $ data = '' ) { $ newField = '' ; $ data = is_array ( $ data ) ? $ data : explode ( ',' , $ data ) ; foreach ( $ data as $ k => $ v ) { $ v = str_replace ( '\'' , '\\\'' , $ v ) ; $ v = str_replace ( '\\' , '\\/\\' , $ v ) ; $ newField .= $ this -> addFieldTag ( $ k ) . ' = \'' . $ v . '\',' ; } $ newField = substr ( $ newField , 0 , - 1 ) ; $ this -> field = $ newField ; $ this -> _sql = 'INSERT INTO `' . $ this -> table . '` SET ' . $ this -> field ; $ result = $ this -> query ( ) ; if ( $ result ) { $ result = max ( mysqli_insert_id ( $ this -> linkId ) , 1 ) ; } return $ result ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/sminnee/phpcrawl/blob/025c2ce86e5056c09de5a0eb4d76e8cf775dae36/libs/PHPCrawlerBenchmark.class.php#L147-L151<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function getmicrotime ( ) { list ( $ usec , $ sec ) = explode ( " " , microtime ( ) ) ; return ( ( float ) $ usec + ( float ) $ sec ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/bradcornford/Bootstrapper/blob/93045a96c0d431aaad177d61ecec9e718c13ce82/src/Cornford/Bootstrapper/Bootstrap.php#L201-L204<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function file ( $ name , $ label = null , $ errors = null , array $ options = array ( ) ) { return $ this -> input ( 'file' , $ name , $ label , null , $ errors , $ options ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/tastyigniter/flame/blob/3c922ba1c02b3c14ad4adf91c2f37498045fa92a/src/Database/Attach/Media.php#L139-L149<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function addFromUrl ( $ url , $ filename = null , $ tag = null ) { if ( ! $ stream = @ fopen ( $ url , 'rb' ) ) throw new Exception ( sprintf ( 'Error opening file "%s"' , $ url ) ) ; return $ this -> addFromRaw ( $ stream , ! empty ( $ filename ) ? $ filename : File :: basename ( $ url ) , $ tag ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/asterixcapri/gestpaycrypt-php/blob/f3ddd06968ae39b800f0f1cc9f18be9cdeece1c8/lib/GestPayCrypt.php#L733-L768<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function _httpGetResponse ( $ type , $ a , $ b ) { $ errno = "" ; $ errstr = "" ; $ socket = fsockopen ( $ this -> getTransport ( ) . "://" . $ this -> getDomainName ( ) , $ this -> getPort ( ) , $ errno , $ errstr , 60 ) ; if ( ! $ socket ) { $ this -> setError ( '9999' , "Impossible to connect to: " . $ this -> getTransport ( ) . "://" . $ this -> getDomainName ( ) . ':' . $ this -> getPort ( ) ) ; return - 1 ; } $ uri = $ this -> getScriptType ( $ type ) . "?a=" . $ a . "&b=" . $ b ; fputs ( $ socket , "GET " . $ uri . " HTTP/1.0\r\n\r\n" ) ; while ( fgets ( $ socket , 4096 ) != "\r\n" ) { ; } $ line = fgets ( $ socket , 4096 ) ; fclose ( $ socket ) ; return $ line ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/I18n/TimeDifference.php#L188-L197<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getDays ( bool $ raw = false ) { if ( $ raw ) { return $ this -> difference / DAY ; } $ time = clone ( $ this -> currentTime ) ; return $ time -> fieldDifference ( $ this -> testTime , IntlCalendar :: FIELD_DAY_OF_YEAR ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/shumkov/rediska/blob/220afbfc4095e90aa050a5dfc00ce7413147ce45/library/Rediska/KeyDistributor/ConsistentHashing.php#L89-L171<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getConnectionsByKeyName ( $ name , $ count ) { // If we have only one backend, return it. if ( $ this -> _backendsCount == 1 ) { return array_keys ( $ this -> _backends ) ; } if ( ! $ this -> _hashringIsInitialized ) { $ this -> _initializeHashring ( ) ; $ this -> _hashringIsInitialized = true ; } // If the key has already been mapped, return the cached entry. if ( $ this -> _cacheMax > 0 && isset ( $ this -> _cache [ $ name ] ) ) { return $ this -> _cache [ $ name ] ; } // If $count is greater than or equal to the number of available backends, return all. if ( $ count >= $ this -> _backendsCount ) return array_keys ( $ this -> _backends ) ; // Initialize the return array. $ return = array ( ) ; $ crc32 = crc32 ( $ name ) ; // Select the slice to begin with. $ slice = floor ( $ crc32 / $ this -> _slicesDiv ) + $ this -> _slicesHalf ; // This counter prevents going through more than 1 loop. $ looped = false ; while ( true ) { // Go through the hashring, one slice at a time. foreach ( $ this -> _hashring [ $ slice ] as $ position => $ backend ) { // If we have a usable backend, add to the return array. if ( $ position >= $ crc32 ) { // If $count = 1, no more checks are necessary. if ( $ count === 1 ) { $ return = array ( $ backend ) ; break 2 ; } elseif ( ! in_array ( $ backend , $ return ) ) { $ return [ ] = $ backend ; if ( count ( $ return ) >= $ count ) break 2 ; } $ return = array ( $ backend ) ; break 1 ; } } // Continue to the next slice. $ slice ++ ; // If at the end of the hashring. if ( $ slice >= $ this -> _slicesCount ) { // If already looped once, something is wrong. if ( $ looped ) { break ; } // Otherwise, loop back to the beginning.        $ crc32 = - 2147483648 ; $ slice = 0 ; $ looped = true ; } } // Cache the result for quick retrieval in the future. if ( $ this -> _cacheMax > 0 ) { // Add to internal cache. $ this -> _cache [ $ name ] = $ return ; $ this -> _cacheCount ++ ; // If the cache is getting too big, clear it. if ( $ this -> _cacheCount > $ this -> _cacheMax ) { $ this -> _cleanCache ( ) ; } } // Return the result. return $ return ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/JVMartin/angel-core/blob/96637ecf2fdaeda2337d8a2dbea0ab1a18198b11/public/js/kcfinder/lib/helper_file.php#L174-L199<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>static function getInexistantFilename ( $ filename , $ dir = null , $ tpl = null ) { if ( $ tpl === null ) $ tpl = "{name}({sufix}){ext}" ; $ fullPath = ( $ dir === null ) ; if ( $ fullPath ) $ dir = path :: normalize ( dirname ( $ filename ) ) ; else { $ fdir = dirname ( $ filename ) ; $ dir = strlen ( $ fdir ) ? path :: normalize ( "$dir/$fdir" ) : path :: normalize ( $ dir ) ; } $ filename = basename ( $ filename ) ; $ ext = self :: getExtension ( $ filename , false ) ; $ name = strlen ( $ ext ) ? substr ( $ filename , 0 , - strlen ( $ ext ) - 1 ) : $ filename ; $ tpl = str_replace ( '{name}' , $ name , $ tpl ) ; $ tpl = str_replace ( '{ext}' , ( strlen ( $ ext ) ? ".$ext" : "" ) , $ tpl ) ; $ i = 1 ; $ file = "$dir/$filename" ; while ( file_exists ( $ file ) ) $ file = "$dir/" . str_replace ( '{sufix}' , $ i ++ , $ tpl ) ; return $ fullPath ? $ file : ( strlen ( $ fdir ) ? "$fdir/" . basename ( $ file ) : basename ( $ file ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/cloudcreativity/json-api-testing/blob/0243fa0a9b6ac0955beeb82af43b8eb5cc5f1917/src/Concerns/HasHttpAssertions.php#L318-L331<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function assertCreatedWithServerId ( string $ expectedLocation , $ expected , bool $ strict = true ) : self { $ this -> document = HttpAssert :: assertCreatedWithServerId ( $ this -> getStatusCode ( ) , $ this -> getContentType ( ) , $ this -> getContent ( ) , $ this -> getLocation ( ) , $ expectedLocation , $ this -> identifier ( $ expected ) , $ strict ) ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Log/LogManager.php#L266-L276<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function createSyslogDriver ( array $ config ) : LoggerInterface { $ handler = new SyslogHandler ( $ config [ 'name' ] , $ config [ 'facility' ] ?? \ LOG_USER , self :: parseLevel ( $ config [ 'level' ] ?? 'debug' ) ) ; $ handler -> setFormatter ( $ this -> getConfiguredLineFormatter ( ) ) ; return new Monolog ( $ this -> parseChannel ( $ config ) , [ $ handler ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wpsharks/core/blob/7a086f144d15ba2587c348744b75f811b9dd6625/src/includes/classes/Core/Utils/Stripe.php#L519-L542<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function unitAmount ( float $ amount , string $ currency ) : int { switch ( mb_strtoupper ( $ currency ) ) { case 'BIF' : case 'DJF' : case 'JPY' : case 'KRW' : case 'PYG' : case 'VND' : case 'XAF' : case 'XPF' : case 'CLP' : case 'GNF' : case 'KMF' : case 'MGA' : case 'RWF' : case 'VUV' : case 'XOF' : return ( int ) $ amount ; default : // In cents. return ( int ) ( $ amount * 100 ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/vanilla/garden/blob/ad9af189da98d57dc990eb3e6c0524f32e5e7e01/src/Db/Db.php#L189-L255<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setTableDef ( $ tablename , array $ tableDef , array $ options = [ ] ) { $ ltablename = strtolower ( $ tablename ) ; $ tableDef [ 'name' ] = $ tablename ; $ drop = val ( Db :: OPTION_DROP , $ options , false ) ; $ curTable = $ this -> getTableDef ( $ tablename ) ; $ this -> fixIndexes ( $ tablename , $ tableDef , $ curTable ) ; if ( ! $ curTable ) { $ this -> createTable ( $ tablename , $ tableDef , $ options ) ; $ this -> tables [ $ ltablename ] = $ tableDef ; return ; } // This is the alter statement. $ alterDef = [ ] ; // Figure out the columns that have changed. $ curColumns = ( array ) val ( 'columns' , $ curTable , [ ] ) ; $ newColumns = ( array ) val ( 'columns' , $ tableDef , [ ] ) ; $ alterDef [ 'add' ] [ 'columns' ] = array_diff_key ( $ newColumns , $ curColumns ) ; $ alterDef [ 'alter' ] [ 'columns' ] = array_uintersect_assoc ( $ newColumns , $ curColumns , function ( $ new , $ curr ) { // Return 0 if the values are different, not the same. if ( val ( 'type' , $ curr ) !== val ( 'type' , $ new ) || val ( 'required' , $ curr ) !== val ( 'required' , $ new ) || val ( 'default' , $ curr ) !== val ( 'required' , $ new ) ) { return 0 ; } return 1 ; } ) ; // Figure out the indexes that have changed. $ curIndexes = ( array ) val ( 'indexes' , $ curTable , [ ] ) ; $ newIndexes = ( array ) val ( 'indexes' , $ tableDef , [ ] ) ; $ alterDef [ 'add' ] [ 'indexes' ] = array_udiff ( $ newIndexes , $ curIndexes , [ $ this , 'indexCompare' ] ) ; $ dropIndexes = array_udiff ( $ curIndexes , $ newIndexes , [ $ this , 'indexCompare' ] ) ; if ( $ drop ) { $ alterDef [ 'drop' ] [ 'columns' ] = array_diff_key ( $ curColumns , $ newColumns ) ; $ alterDef [ 'drop' ] [ 'indexes' ] = $ dropIndexes ; } else { $ alterDef [ 'drop' ] [ 'columns' ] = [ ] ; $ alterDef [ 'drop' ] [ 'indexes' ] = [ ] ; // If the primary key has changed then the old one needs to be dropped. if ( isset ( $ dropIndexes [ Db :: INDEX_PK ] ) ) { $ alterDef [ 'drop' ] [ 'indexes' ] [ Db :: INDEX_PK ] = $ dropIndexes [ Db :: INDEX_PK ] ; } } // Check to see if any alterations at all need to be made. if ( empty ( $ alterDef [ 'add' ] [ 'columns' ] ) && empty ( $ alterDef [ 'add' ] [ 'indexes' ] ) && empty ( $ alterDef [ 'drop' ] [ 'columns' ] ) && empty ( $ alterDef [ 'drop' ] [ 'indexes' ] ) && empty ( $ alterDef [ 'alter' ] [ 'columns' ] ) ) { return ; } $ alterDef [ 'def' ] = $ tableDef ; // Alter the table. $ this -> alterTable ( $ tablename , $ alterDef , $ options ) ; // Update the cached schema. $ tableDef [ 'name' ] = $ tablename ; $ this -> tables [ $ ltablename ] = $ tableDef ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/cundd/noshi/blob/4c236ccd08532d81ab1f54fc0634ea0445c43388/Classes/Cundd/Noshi/Domain/Repository/PageRepository.php#L180-L272<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getPagesForPath ( $ path , $ uriBase = '' ) { $ pages = [ ] ; $ pagesSortingMap = [ ] ; $ pagesIdentifierMap = [ ] ; if ( ! file_exists ( $ path ) ) { throw new \ InvalidArgumentException ( "Page path '$path' does not exist" ) ; } if ( ! is_readable ( $ path ) ) { throw new \ InvalidArgumentException ( "Page path '$path' is not readable" ) ; } if ( $ handle = opendir ( $ path ) ) { $ dataSuffix = '.' . ConfigurationManager :: getConfiguration ( ) -> get ( 'dataSuffix' ) ; $ dataSuffixLength = strlen ( $ dataSuffix ) ; while ( false !== ( $ file = readdir ( $ handle ) ) ) { // Skip the current file if the first character is a dot if ( $ file [ 0 ] === '.' ) { continue ; } // Skip hidden pages if ( $ file [ 0 ] === '_' ) { continue ; } $ isFolder = strpos ( $ file , '.' ) === false ; $ isPage = substr ( $ file , - $ dataSuffixLength ) === $ dataSuffix ; $ isConfig = substr ( $ file , - 5 ) === '.json' ; if ( ! ( $ isFolder || $ isPage || $ isConfig ) ) { continue ; } $ relativePageIdentifier = str_replace ( ' ' , Page :: URI_WHITESPACE_REPLACE , substr ( $ file , 0 , strrpos ( $ file , '.' ) ) ) ; $ pageIdentifier = ( $ uriBase ? $ uriBase . '/' : '' ) . ( $ relativePageIdentifier ? $ relativePageIdentifier : $ file ) ; /** @var Page $page */ $ page = $ this -> findByIdentifier ( $ pageIdentifier ) ; $ page -> setIsDirectory ( $ isFolder ) ; $ sorting = $ page -> getSorting ( ) ; $ sortingDescriptor = sprintf ( '%05d-%s' , $ sorting , $ pageIdentifier ) ; /*                  * Build the page data merged with previous definitions                  * Page definition is more important than the Directory definition                  */ $ pageData = array_merge ( ( isset ( $ pagesIdentifierMap [ $ pageIdentifier ] ) ? $ pagesIdentifierMap [ $ pageIdentifier ] : [ ] ) , [ 'id' => $ pageIdentifier , 'page' => $ page , 'sorting' => $ sorting , 'sorting_descriptor' => $ sortingDescriptor , ] ) ; /*                  * If the current page is a folder get the children                  */ if ( $ isFolder ) { $ pageData [ 'children' ] = $ this -> getPagesForPath ( $ path . $ file . DIRECTORY_SEPARATOR , $ pageIdentifier ) ; } $ pagesSortingMap [ $ sortingDescriptor ] = $ pageData ; $ pagesIdentifierMap [ $ pageIdentifier ] = $ pageData ; } closedir ( $ handle ) ; } // Add the page to the list pages ksort ( $ pagesSortingMap , SORT_NUMERIC ) ; $ tempPages = [ ] ; foreach ( $ pagesSortingMap as $ pageWithSorting ) { $ tempPages [ $ pageWithSorting [ 'id' ] ] = $ pageWithSorting [ 'page' ] ; } $ this -> allPages = array_merge ( $ this -> allPages , $ tempPages ) ; ksort ( $ pages , SORT_NUMERIC ) ; return $ pagesSortingMap ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Profiler/Profiler.php#L317-L328<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function createTemplate ( string $ token ) : string { $ assets = $ this -> getAssetsRenderer ( ) ; $ template = new TemplateManager ( $ this -> collectors , $ this -> template , $ token , $ assets -> getIcons ( ) ) ; return $ assets -> render ( ) . $ template -> render ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/slince/phpdish/blob/5057eec1b54cb349650d0ce162f663e49287ce2c/src/PHPDish/Bundle/AdminBundle/Grid/Grid.php#L139-L147<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function loadEntities ( ) { if ( $ this -> request ) { if ( $ filters = $ this -> request -> get ( 'filters' ) ) { $ this -> applyFilters ( $ filters ) ; } } $ this -> entities = $ this -> source -> loadSource ( $ this -> columns ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/BapCat/Values/blob/75fcb00e80a83a1176080dbb99338b1d37d411e2/src/Text.php#L253-L255<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function replaceByRegex ( Regex $ search , Text $ replace ) : Text { return $ search -> replace ( $ this , $ replace ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wp-papi/papi/blob/444960585ed761447b7886ff4cc31be91b4e8302/src/types/class-papi-page-type.php#L377-L399<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setup ( ) { parent :: setup ( ) ; // Remove post type support and meta boxes. $ this -> remove_post_type_support ( ) ; // Add support for displaying information in publish box from a page type. if ( method_exists ( $ this , 'publish_box' ) ) { add_action ( 'post_submitbox_misc_actions' , [ $ this , 'publish_box' ] ) ; } // Hide page template dropdown if it shouldn't be showed. if ( ! $ this -> show_page_template ) { add_filter ( 'theme_page_templates' , '__return_empty_array' ) ; } // Main title input placeholder. if ( ! empty ( $ this -> labels [ 'title_placeholder' ] ) ) { add_filter ( 'enter_title_here' , function ( ) { return $ this -> labels [ 'title_placeholder' ] ; } ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Kuestenschmiede/CoreBundle/blob/f8a9044369df8f45dd07bdf25d02119042ac5bc4/Resources/contao/classes/stack/StackDatabase.php#L95-L106<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function pop ( ) { $ data = $ this -> top ( ) ; if ( is_array ( $ data ) && count ( $ data ) ) { $ query = 'DELETE FROM `' . $ this -> table . '` WHERE `id` = ' . $ data [ "id" ] ; $ this -> execute ( $ query ) ; return $ data ; } return array ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/DevGroup-ru/yii2-extensions-manager/blob/25bce89ee085af217c07b779db9fbcd87172b75e/src/models/BaseConfigurationModel.php#L106-L117<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function loadState ( $ statePath ) { $ filename = Yii :: getAlias ( $ statePath . $ this -> stateFilename ( ) . '.php' ) ; if ( is_readable ( $ filename ) === true ) { $ this -> loadAttributesFromState ( include ( $ filename ) ) ; return true ; } else { return false ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Application.php#L501-L526<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function invokeRPC ( ) { $ request = $ this -> request ; if ( ! $ request -> hasInvocation ( ) ) { return '' ; } if ( ! $ request -> isValidInvocation ( ) ) { $ invocationType = $ request -> getInvocationType ( ) ; trigger_error ( "$invocationType is not a valid invocation" , E_USER_ERROR ) ; } if ( $ request -> isRPCInvokeInvocation ( ) ) { $ this -> getClientProxy ( ) -> setRpcFlag ( true ) ; } $ rpcParams = $ this -> request -> getRpcParameters ( ) ; $ num_arg = count ( $ rpcParams ) ; if ( $ num_arg < 2 ) { //$errmsg = MessageHelper::getMessage("SYS_ERROR_RPCARG", array($class)); $ errmsg = MessageHelper :: getMessage ( "SYS_ERROR_RPCARG" ) ; trigger_error ( $ errmsg , E_USER_ERROR ) ; } else { $ objName = array_shift ( $ rpcParams ) ; $ methodName = array_shift ( $ rpcParams ) ; return $ this -> executeRpcMethod ( $ objName , $ methodName , $ rpcParams ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/intuit/QuickBooks-V3-PHP-SDK/blob/09f9f42e4cf49a7d6e0aa4d2c15e15eba245bfd5/src/Core/HttpClients/SyncRestHandler.php#L301-L307<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function parseStringToDom ( $ string ) { $ dom = new \ DOMDocument ( ) ; $ dom -> preserveWhiteSpace = FALSE ; $ dom -> loadXML ( $ string ) ; $ dom -> formatOutput = TRUE ; return $ dom -> saveXml ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/laravel-notification-channels/smsc-ru/blob/0ae027f1d1aab79d8d69170ce90441d8688125cc/src/SmscRuChannel.php#L26-L39<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function send ( $ notifiable , Notification $ notification ) { if ( ! ( $ to = $ this -> getRecipients ( $ notifiable , $ notification ) ) ) { return ; } $ message = $ notification -> { 'toSmscRu' } ( $ notifiable ) ; if ( \ is_string ( $ message ) ) { $ message = new SmscRuMessage ( $ message ) ; } $ this -> sendMessage ( $ to , $ message ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/techdivision/import/blob/66d3eb967cbbd2d248942044fa8ede1192e48fd4/src/Repositories/LinkTypeRepository.php#L70-L95<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function findAll ( ) { // query whether or not we've already loaded the value if ( ! isset ( $ this -> cache [ __METHOD__ ] ) ) { // try to load the link types $ this -> linkTypeStmt -> execute ( ) ; // initialize the array for the link types $ linkTypes = array ( ) ; // load the available link types $ availableLinkTypes = $ this -> linkTypeStmt -> fetchAll ( \ PDO :: FETCH_ASSOC ) ; // prepare the link types => we need the code as key foreach ( $ availableLinkTypes as $ linkType ) { $ linkTypes [ $ linkType [ MemberNames :: CODE ] ] = $ linkType ; } // append the link types to the cache $ this -> cache [ __METHOD__ ] = $ linkTypes ; } // return the link types from the cache return $ this -> cache [ __METHOD__ ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ARCANEDEV/LaravelHtml/blob/539ed117df0b21d2a267aac074446c6dadf50828/src/HtmlBuilder.php#L95-L101<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function script ( $ url , array $ attributes = [ ] , $ secure = null ) { return Elements \ Element :: withTag ( 'script' ) -> attribute ( 'src' , $ this -> url -> asset ( $ url , $ secure ) ) -> attributes ( $ attributes ) -> render ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/EliuFlorez/google-map/blob/b96e3975314a83f806ed86623f7b219d2c96ee9f/src/Helper/Extension/CoreExtensionHelper.php#L94-L112<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function renderLibraries ( Map $ map ) { if ( $ this -> apiHelper -> isLoaded ( ) ) { return ; } $ callback = null ; if ( $ map -> isAsync ( ) ) { $ callback = 'load_ivory_google_map' ; } $ output = array ( ) ; $ output [ ] = $ this -> apiHelper -> render ( $ map -> getLanguage ( ) , $ this -> getLibraries ( $ map ) , $ callback , $ map -> getApiKey ( ) ) ; $ output [ ] = $ this -> markerClusterHelper -> renderLibraries ( $ map -> getMarkerCluster ( ) , $ map ) ; return implode ( '' , $ output ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/phug-php/phug/blob/85a2c87864a80b0536755acc9ba65b9a78fdfbc1/src/Phug/Optimizer.php#L181-L228<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function displayFile ( $ __pug_file , array $ __pug_parameters = [ ] ) { if ( $ this -> isExpired ( $ __pug_file , $ __pug_cache_file ) ) { if ( isset ( $ this -> options [ 'render' ] ) ) { call_user_func ( $ this -> options [ 'render' ] , $ __pug_file , $ __pug_parameters , $ this -> options ) ; return ; } if ( isset ( $ this -> options [ 'renderer' ] ) ) { $ this -> options [ 'renderer' ] -> displayFile ( $ __pug_file , $ __pug_parameters ) ; return ; } if ( isset ( $ this -> options [ 'renderer_class_name' ] ) ) { $ className = $ this -> options [ 'renderer_class_name' ] ; $ renderer = new $ className ( $ this -> options ) ; $ renderer -> displayFile ( $ __pug_file , $ __pug_parameters ) ; return ; } $ facade = isset ( $ this -> options [ 'facade' ] ) ? $ this -> options [ 'facade' ] : static :: FACADE ; if ( is_callable ( [ $ facade , 'displayFile' ] ) ) { $ facade :: displayFile ( $ __pug_file , $ __pug_parameters , $ this -> options ) ; return ; } throw new \ RuntimeException ( 'No valid render method, renderer engine, renderer class or facade provided.' ) ; } if ( isset ( $ this -> options [ 'shared_variables' ] ) ) { $ __pug_parameters = array_merge ( $ this -> options [ 'shared_variables' ] , $ __pug_parameters ) ; } if ( isset ( $ this -> options [ 'globals' ] ) ) { $ __pug_parameters = array_merge ( $ this -> options [ 'globals' ] , $ __pug_parameters ) ; } if ( isset ( $ this -> options [ 'self' ] ) && $ this -> options [ 'self' ] ) { $ self = $ this -> options [ 'self' ] === true ? 'self' : strval ( $ this -> options [ 'self' ] ) ; $ __pug_parameters = [ $ self => $ __pug_parameters ] ; } extract ( $ __pug_parameters ) ; include $ __pug_cache_file ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/cloudcreativity/json-api-testing/blob/0243fa0a9b6ac0955beeb82af43b8eb5cc5f1917/src/HttpAssert.php#L536-L548<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function assertExactMetaWithoutData ( $ status , $ contentType , $ content , array $ expected , bool $ strict = true , string $ message = '' ) : Document { return self :: assertJsonApi ( $ status , $ contentType , $ content , self :: STATUS_OK , $ message ) -> assertNotExists ( '/data' , $ message ) -> assertExactMeta ( $ expected , $ strict , $ message ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/Config/Services.php#L348-L362<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function language ( string $ locale = null , bool $ getShared = true ) { if ( $ getShared ) { return static :: getSharedInstance ( 'language' , $ locale ) -> setLocale ( $ locale ) ; } $ locale = ! empty ( $ locale ) ? $ locale : static :: request ( ) -> getLocale ( ) ; return new Language ( $ locale ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/n2n/n2n-impl-persistence-orm/blob/39f309c380d44d72c94224799eb7c7d3530e9780/src/app/n2n/impl/persistence/orm/property/BoolEntityProperty.php#L80-L84<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function valueToRep ( $ value ) : string { ArgUtils :: assertTrue ( is_bool ( $ value ) ) ; return ( string ) ( int ) $ value ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Helpers/Request/ArrayHelper.php#L51-L54<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function toArray ( $ object , $ properties = [ ] , $ recursive = true ) { return $ this -> proxy ( __FUNCTION__ , [ $ object , $ properties , $ recursive ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/I18n/Time.php#L1084-L1101<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function sameAs ( $ testTime , string $ timezone = null ) : bool { if ( $ testTime instanceof DateTime ) { $ testTime = $ testTime -> format ( 'Y-m-d H:i:s' ) ; } else if ( is_string ( $ testTime ) ) { $ timezone = $ timezone ? : $ this -> timezone ; $ timezone = $ timezone instanceof DateTimeZone ? $ timezone : new DateTimeZone ( $ timezone ) ; $ testTime = new DateTime ( $ testTime , $ timezone ) ; $ testTime = $ testTime -> format ( 'Y-m-d H:i:s' ) ; } $ ourTime = $ this -> toDateTimeString ( ) ; return $ testTime === $ ourTime ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/slince/phpdish/blob/5057eec1b54cb349650d0ce162f663e49287ce2c/src/PHPDish/Bundle/WebBundle/Controller/DefaultController.php#L52-L60<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function countNotificationAction ( ) { $ this -> denyAccessUnlessGranted ( 'IS_AUTHENTICATED_REMEMBERED' ) ; $ count = $ this -> get ( 'phpdish_notification.manager.notification' ) -> getNotificationCount ( $ this -> getUser ( ) , false ) ; $ nbMessageCount = $ this -> get ( 'fos_message.provider' ) -> getNbUnreadMessages ( ) ; return $ this -> json ( [ 'count' => $ count + $ nbMessageCount , ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/zammad/zammad-api-client-php/blob/0ae079f643ce199624349cc05849deac1cc8e056/src/Resource/Tag.php#L146-L179<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function remove ( $ object_id , $ tag , $ object_type = 'Ticket' ) { $ this -> clearError ( ) ; if ( empty ( $ object_id ) ) { throw new \ RuntimeException ( 'Missing object ID' ) ; } if ( empty ( $ tag ) ) { throw new \ RuntimeException ( 'Missing tag' ) ; } // Delete object in Zammad. $ response = $ this -> getClient ( ) -> get ( $ this -> getURL ( 'remove' ) , [ 'object' => $ object_type , 'o_id' => $ object_id , 'item' => $ tag , ] ) ; if ( $ response -> hasError ( ) ) { $ this -> setError ( $ response -> getError ( ) ) ; return $ this ; } // Clear data of this (local) object. $ this -> clearError ( ) ; $ this -> clearRemoteData ( ) ; $ this -> clearUnsavedValues ( ) ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/jelix/inifile/blob/003f15245f074cc3a3b6023fae31861a090df832/lib/IniReader.php#L208-L229<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getValues ( $ section = 0 ) { if ( ! isset ( $ this -> content [ $ section ] ) ) { return array ( ) ; } $ values = array ( ) ; foreach ( $ this -> content [ $ section ] as $ k => $ item ) { if ( $ item [ 0 ] != self :: TK_VALUE && $ item [ 0 ] != self :: TK_ARR_VALUE ) { continue ; } $ val = $ this -> convertValue ( $ item [ 2 ] ) ; if ( $ item [ 0 ] == self :: TK_VALUE ) { $ values [ $ item [ 1 ] ] = $ val ; } else { $ values [ $ item [ 1 ] ] [ $ item [ 3 ] ] = $ val ; } } return $ values ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/helsingborg-stad/api-event-manager-integration/blob/d29a177f3973eaebd506e4356d45462e6f2a712b/source/php/Event.php#L182-L219<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function saveLanguage ( ) { // Bail if Polylang is not active if ( ! is_plugin_active ( 'polylang-pro/polylang.php' ) ) { return ; } // Apply language to the event if ( ! empty ( $ this -> lang ) ) { pll_set_post_language ( $ this -> ID , $ this -> lang ) ; } // Define which events are translations of each other if ( ! empty ( $ this -> translations ) ) { $ translations = $ this -> translations ; // Get locally installed languages $ localLangs = pll_languages_list ( ) ; // Remove all languages that don't exist locally $ translations = array_filter ( $ translations , function ( $ translation ) use ( $ localLangs ) { return in_array ( $ translation , $ localLangs ) ; } , ARRAY_FILTER_USE_KEY ) ; // Replace the old IDs with new events IDs foreach ( $ translations as $ key => & $ id ) { $ id = $ this -> getEventByOriginalId ( $ id ) ; if ( ! $ id ) { // Remove if event cant't be found unset ( $ translations [ $ key ] ) ; } } // Define event translations pll_save_post_translations ( $ translations ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/yawik/organizations/blob/a5d982212be5f445c067656aeb0aa3ca7daf0251/src/Acl/Listener/CheckJobCreatePermissionListener.php#L56-L87<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function checkCreatePermission ( AssertionEvent $ e ) { /* @var $role \Auth\Entity\User          * @var $organization \Organizations\Entity\OrganizationReference          */ $ role = $ e -> getRole ( ) ; if ( ! $ role instanceof UserInterface ) { return false ; } $ organization = $ role -> getOrganization ( ) ; if ( ! $ organization -> hasAssociation ( ) || $ organization -> isOwner ( ) ) { return true ; } $ employees = $ organization -> getEmployees ( ) ; foreach ( $ employees as $ emp ) { /* @var $emp \Organizations\Entity\EmployeeInterface */ if ( $ emp -> getUser ( ) -> getId ( ) == $ role -> getId ( ) && $ emp -> getPermissions ( ) -> isAllowed ( EmployeePermissionsInterface :: JOBS_CREATE ) ) { return true ; } } return false ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/shumkov/rediska/blob/220afbfc4095e90aa050a5dfc00ce7413147ce45/library/Rediska/PubSub/Channel.php#L412-L497<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function _execCommand ( $ command , $ channels ) { // Group channels by connections $ channelsByConnections = array ( ) ; foreach ( $ channels as $ channel ) { $ hasSubscription = in_array ( $ channel , $ this -> _subscriptions ) ; if ( $ command == self :: SUBSCRIBE ) { if ( $ hasSubscription ) { throw new Rediska_PubSub_Exception ( "You already subscribed to $channel" ) ; } else { $ this -> _subscriptions [ ] = $ channel ; } } if ( $ command == self :: UNSUBSCRIBE ) { if ( ! $ hasSubscription ) { throw new Rediska_PubSub_Exception ( "You not subscribed to $channel" ) ; } else { $ key = array_search ( $ channel , $ this -> _subscriptions ) ; unset ( $ this -> _subscriptions [ $ key ] ) ; } } $ hasChannel = $ this -> _connections -> hasChannel ( $ channel ) ; if ( ( $ command == self :: SUBSCRIBE && ! $ hasChannel ) || ( $ command == self :: UNSUBSCRIBE && $ hasChannel ) ) { switch ( $ command ) { case self :: SUBSCRIBE : $ connection = $ this -> _connections -> addChannel ( $ channel ) ; break ; case self :: UNSUBSCRIBE : $ connection = $ this -> _connections -> removeChannel ( $ channel ) ; break ; } $ connectionAlias = $ connection -> getAlias ( ) ; if ( ! array_key_exists ( $ connectionAlias , $ channelsByConnections ) ) { $ channelsByConnections [ $ connectionAlias ] = array ( ) ; } $ channelsByConnections [ $ connectionAlias ] [ ] = $ channel ; } } // Write commands to connections foreach ( $ channelsByConnections as $ connectionAlias => $ channels ) { $ execCommand = array ( $ command ) ; foreach ( $ channels as $ channel ) { $ execCommand [ ] = $ this -> getRediska ( ) -> getOption ( 'namespace' ) . $ channel ; } $ connection = $ this -> _connections -> getConnectionByAlias ( $ connectionAlias ) ; $ exec = new Rediska_Connection_Exec ( $ connection , $ execCommand ) ; $ exec -> write ( ) ; } // Get responses from connections while ( ! empty ( $ channelsByConnections ) ) { foreach ( $ channelsByConnections as $ connectionAlias => $ channels ) { $ connection = $ this -> _connections -> getConnectionByAlias ( $ connectionAlias ) ; foreach ( $ channels as $ channel ) { $ response = $ this -> _getResponseFromConnection ( $ connection ) ; // TODO: May be timeout? Not data or server die() if ( $ response === null ) { continue ; } $ channel = $ response -> getChannel ( ) ; if ( ( $ command == self :: SUBSCRIBE && $ response instanceof Rediska_PubSub_Response_Subscribe ) || ( $ command == self :: UNSUBSCRIBE && $ response instanceof Rediska_PubSub_Response_Unsubscribe ) ) { $ key = array_search ( $ channel , $ channelsByConnections [ $ connectionAlias ] ) ; unset ( $ channelsByConnections [ $ connectionAlias ] [ $ key ] ) ; if ( empty ( $ channelsByConnections [ $ connectionAlias ] ) ) { unset ( $ channelsByConnections [ $ connectionAlias ] ) ; } } else if ( $ response instanceof Rediska_PubSub_Response_Message ) { $ this -> _addMessageToBuffer ( $ response ) ; } } } } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Payum/Payum/blob/cf4be4f91d9bf24069153aceeb44b4f5b3d4f011/src/Payum/Core/Bridge/Psr/Log/LogExecutedActionsExtension.php#L44-L52<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function onExecute ( Context $ context ) { $ this -> logger -> debug ( sprintf ( '[Payum] %d# %s::execute(%s)' , count ( $ context -> getPrevious ( ) ) + 1 , Humanify :: value ( $ context -> getAction ( ) , false ) , Humanify :: request ( $ context -> getRequest ( ) ) ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/littlegiant/silverstripe-seo-editor/blob/f8a5536540c69309c4d8b291b21c909acfbb1b17/src/ModelAdmin/SEOEditorAdmin.php#L175-L197<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getList ( ) { $ list = parent :: getList ( ) ; $ params = $ this -> request -> requestVar ( 'q' ) ; if ( isset ( $ params [ 'RemoveEmptyMetaTitles' ] ) && $ params [ 'RemoveEmptyMetaTitles' ] ) { $ list = $ this -> removeEmptyAttributes ( $ list , 'MetaTitle' ) ; } if ( isset ( $ params [ 'RemoveEmptyMetaDescriptions' ] ) && $ params [ 'RemoveEmptyMetaDescriptions' ] ) { $ list = $ this -> removeEmptyAttributes ( $ list , 'MetaDescription' ) ; } $ list = $ this -> markDuplicates ( $ list ) ; if ( isset ( $ params [ 'DuplicatesOnly' ] ) && $ params [ 'DuplicatesOnly' ] ) { $ list = $ list -> filter ( 'IsDuplicate' , true ) ; } $ list = $ list -> sort ( 'ID' ) ; return $ list ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/intpro/imageaggr/blob/f47ae6ba1f8a8e9157e2afd54bdc7bde27bc2f1f/src/Db/ImageAggrDbAgent.php#L379-L391<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function deleteResize ( ARef $ aRef , ImageSettingInterface $ imageSetting , ResizeSettingInterface $ resizeSetting ) { $ owner_name = $ aRef -> getType ( ) -> getName ( ) ; $ image_name = $ imageSetting -> getName ( ) ; $ resize_name = $ resizeSetting -> getName ( ) ; $ owner_id = $ aRef -> getId ( ) ; Resize :: where ( 'entity_name' , '=' , $ owner_name ) -> where ( 'entity_id' , '=' , $ owner_id ) -> where ( 'image_name' , '=' , $ image_name ) -> where ( 'name' , '=' , $ resize_name ) -> delete ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ChristianKuri/laravel-favorite/blob/13ce8af16f5f802a3ded855c269a3e846f33c4b6/src/Traits/Favoriteable.php#L66-L69<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function isFavorited ( $ user_id = null ) { return $ this -> favorites ( ) -> where ( 'user_id' , ( $ user_id ) ? $ user_id : Auth :: id ( ) ) -> exists ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/TopShelfCraft/Wordsmith/blob/efe40e9324d2449d431444070e0972fd60aaac37/src/libs/APTitleCapitalizer.php#L75-L83<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function capitalize ( $ string ) { $ string = $ this -> normalizeInput ( $ string ) ; $ parts = $ this -> splitStringIntoParts ( $ string ) ; $ parts = $ this -> processStringParts ( $ parts ) ; $ parts = $ this -> processFirstSentenceWordsInParts ( $ parts ) ; $ parts = $ this -> processLastWordInParts ( $ parts ) ; return $ this -> joinStringParts ( $ parts ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/silverstripe/silverstripe-activedirectory/blob/ffdbe06b6cda42aeab1a1fd1c287b517811efab3/code/authenticators/LDAPLoginForm.php#L111-L200<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function forgotPassword ( $ data ) { // Passing true returns a float rather than a string $ startTime = microtime ( true ) ; // No need to protect against injections, LDAPService will ensure that this is safe $ login = trim ( $ data [ 'Login' ] ) ; $ service = Injector :: inst ( ) -> get ( 'LDAPService' ) ; if ( Email :: validEmailAddress ( $ login ) ) { if ( Config :: inst ( ) -> get ( 'LDAPAuthenticator' , 'allow_email_login' ) != 'yes' ) { $ this -> sessionMessage ( _t ( 'LDAPLoginForm.USERNAMEINSTEADOFEMAIL' , 'Please enter your username instead of your email to get a password reset link.' ) , 'bad' ) ; $ this -> consistentResponseTime ( $ startTime ) ; $ this -> controller -> redirect ( $ this -> controller -> Link ( 'lostpassword' ) ) ; return ; } $ userData = $ service -> getUserByEmail ( $ login ) ; } else { $ userData = $ service -> getUserByUsername ( $ login ) ; } // Avoid information disclosure by displaying the same status, // regardless whether the email address actually exists if ( ! isset ( $ userData [ 'objectguid' ] ) ) { $ this -> consistentResponseTime ( $ startTime ) ; return $ this -> controller -> redirect ( $ this -> controller -> Link ( 'passwordsent/' ) . urlencode ( $ data [ 'Login' ] ) ) ; } $ member = Member :: get ( ) -> filter ( 'GUID' , $ userData [ 'objectguid' ] ) -> limit ( 1 ) -> first ( ) ; // User haven't been imported yet so do that now if ( ! ( $ member && $ member -> exists ( ) ) ) { $ member = new Member ( ) ; $ member -> GUID = $ userData [ 'objectguid' ] ; } // Update the users from LDAP so we are sure that the email is correct. // This will also write the Member record. $ service -> updateMemberFromLDAP ( $ member ) ; // Allow vetoing forgot password requests $ results = $ this -> extend ( 'forgotPassword' , $ member ) ; if ( $ results && is_array ( $ results ) && in_array ( false , $ results , true ) ) { $ this -> consistentResponseTime ( $ startTime ) ; return $ this -> controller -> redirect ( $ this -> ldapSecController -> Link ( 'lostpassword' ) ) ; } if ( $ member ) { $ token = $ member -> generateAutologinTokenAndStoreHash ( ) ; $ e = Member_ForgotPasswordEmail :: create ( ) ; $ e -> populateTemplate ( $ member ) ; $ e -> populateTemplate ( [ 'PasswordResetLink' => LDAPSecurityController :: getPasswordResetLink ( $ member , $ token ) ] ) ; $ e -> setTo ( $ member -> Email ) ; $ e -> send ( ) ; $ this -> consistentResponseTime ( $ startTime ) ; $ this -> controller -> redirect ( $ this -> controller -> Link ( 'passwordsent/' ) . urlencode ( $ data [ 'Login' ] ) ) ; } elseif ( $ data [ 'Login' ] ) { // Avoid information disclosure by displaying the same status, // regardless whether the email address actually exists $ this -> consistentResponseTime ( $ startTime ) ; $ this -> controller -> redirect ( $ this -> controller -> Link ( 'passwordsent/' ) . urlencode ( $ data [ 'Login' ] ) ) ; } else { if ( Config :: inst ( ) -> get ( 'LDAPAuthenticator' , 'allow_email_login' ) === 'yes' ) { $ this -> sessionMessage ( _t ( 'LDAPLoginForm.ENTERUSERNAMEOREMAIL' , 'Please enter your username or your email address to get a password reset link.' ) , 'bad' ) ; } else { $ this -> sessionMessage ( _t ( 'LDAPLoginForm.ENTERUSERNAME' , 'Please enter your username to get a password reset link.' ) , 'bad' ) ; } $ this -> consistentResponseTime ( $ startTime ) ; $ this -> controller -> redirect ( $ this -> controller -> Link ( 'lostpassword' ) ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/View/Parser.php#L850-L908<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function addThemeTree ( array $ top , array $ new ) : array { $ result = [ ] ; foreach ( $ top [ 'children' ] as $ child ) { if ( $ new ) { $ relative = $ this -> positionRelative ( $ new [ 'position' ] , $ child [ 'position' ] ) ; switch ( $ relative ) { /*                      * 新增的和上次处于平级关系直接加入上级的 children 容器中                      * new 在前 child 在后面                      */ case 'front' : $ result [ ] = $ new ; $ result [ ] = $ child ; $ new = null ; break ; /*                      * 新增的和上次处于平级关系直接加入上级的 children 容器中                      * child 在前 new 在后面                      */ case 'behind' : $ result [ ] = $ child ; break ; /*                      * new 处于 child 内部                      * new 在 child 内部                      */ case 'in' : $ child = $ this -> addThemeTree ( $ child , $ new ) ; $ result [ ] = $ child ; $ new = null ; break ; /*                      * child 处于 new 内部                      * child 在 new 内部                      */ case 'out' : $ new = $ this -> addThemeTree ( $ new , $ child ) ; break ; } } else { $ result [ ] = $ child ; } } if ( $ new ) { $ result [ ] = $ new ; } $ top [ 'children' ] = $ result ; return $ top ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wp-papi/papi/blob/444960585ed761447b7886ff4cc31be91b4e8302/src/core/class-papi-core-conditional.php#L112-L132<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function get_rule_slug ( $ rule , $ property ) { $ arr_reg = '/\[\d+\](\[\w+\])$/' ; $ slug = $ property -> get_slug ( ) ; $ page_type = papi_get_entry_type_by_meta_id ( ) ; if ( $ page_type instanceof Papi_Page_Type === false ) { return $ rule -> slug ; } if ( preg_match ( $ arr_reg , $ slug , $ out ) ) { $ slug = str_replace ( $ out [ 1 ] , '[' . unpapify ( $ rule -> slug ) . ']' , $ slug ) ; $ property = $ page_type -> get_property ( $ slug ) ; if ( papi_is_property ( $ property ) ) { return $ slug ; } } return $ rule -> slug ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/Security/Security.php#L336-L356<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function sanitizeFilename ( string $ str , bool $ relative_path = false ) : string { $ bad = $ this -> filenameBadChars ; if ( ! $ relative_path ) { $ bad [ ] = './' ; $ bad [ ] = '/' ; } $ str = remove_invisible_characters ( $ str , false ) ; do { $ old = $ str ; $ str = str_replace ( $ bad , '' , $ str ) ; } while ( $ old !== $ str ) ; return stripslashes ( $ str ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/helsingborg-stad/api-event-manager-integration/blob/d29a177f3973eaebd506e4356d45462e6f2a712b/source/php/OAuth/OAuthRequests.php#L336-L350<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function sanitizeInput ( & $ array ) { foreach ( $ array as $ key => & $ value ) { if ( ! is_array ( $ value ) ) { if ( $ key == 'content' ) { $ value = sanitize_textarea_field ( $ value ) ; } else { $ value = sanitize_text_field ( $ value ) ; } } else { $ this -> sanitizeInput ( $ value ) ; } } return $ array ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Widgets/Bootstrap/Tabs.php#L343-L361<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function registerPlugin ( $ name ) { $ view = $ this -> getView ( ) ; BootstrapPluginAsset :: register ( $ view ) ; if ( $ this -> hasDropDown && ! isset ( $ this -> clientEvents [ 'shown.bs.tab' ] ) ) { //FIX dropdown links $ this -> clientEvents [ 'shown.bs.tab' ] = [ 'a' , new JsExpression ( "function(e) {             var btn = $(this), nav = btn.parents('.nav:first'), dropDown = btn.parents('.dropdown-menu:first');                 btn.parents('.nav:first').find('[data-toggle=\"tab\"]').not(btn).removeClass('active');                 if(dropDown.length) {                     dropDown.siblings('.dropdown-toggle').addClass('active');                 }             }" ) ] ; } $ this -> registerClientEvents ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/CDV-Yami/sheet-fight/blob/d991329f367c1320cd5c38511e52fbd9ff60cb12/src/Yami/SheetFight/Model/MoveBuilder.php#L118-L127<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function aim ( $ hitLevel ) { if ( null !== $ this -> hitLevel ) { throw new LogicException ( 'Hit level already defined' ) ; } $ this -> hitLevel = $ hitLevel ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Provider/Twig/Provider/TwigServiceProvider.php#L86-L92<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function createTwigEngine ( ContainerInterface $ container ) : TwigEngine { $ engine = new TwigEngine ( $ container -> get ( TwigEnvironment :: class ) , $ container -> get ( 'config' ) ) ; $ engine -> setContainer ( $ container ) ; return $ engine ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Eresus/ORM/blob/388abc70c9918c80e27dc2f8132030783d0a1c90/src/orm/classes/Driver/MySQL.php#L77-L85<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function getIndexDefinition ( $ name , array $ params ) { foreach ( $ params [ 'fields' ] as & $ fieldName ) { $ fieldName = "`$fieldName`" ; } $ sql = parent :: getIndexDefinition ( $ name , $ params ) ; return $ sql ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/F21/Paradox/blob/d1f47203e743760d8d8d6232bf0ea62920e7eefe/Paradox/pod/Vertex.php#L96-L99<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getNeighbours ( $ direction = "any" , $ labels = null , $ aql = "" , $ params = array ( ) , $ placeholder = "doc" ) { return $ this -> _toolbox -> getGraphManager ( ) -> getNeighbours ( $ this -> getId ( ) , $ direction , $ labels , $ aql , $ params , $ placeholder ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ddvphp/ddv-util/blob/6d6532b8769f94eb657b9579d8476f6639a34c54/src/DdvUtil/Laravel/Model.php#L22-L31<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function relationsToArray ( ) { $ snakeAttributes = null ; if ( isset ( $ this -> ddvSnakeAttributes ) && is_bool ( $ this -> ddvSnakeAttributes ) ) { $ snakeAttributes = static :: $ snakeAttributes ; static :: $ snakeAttributes = $ this -> ddvSnakeAttributes ; } $ res = parent :: relationsToArray ( ) ; is_null ( $ snakeAttributes ) || ( static :: $ snakeAttributes = $ snakeAttributes ) ; return $ res ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/slince/phpdish/blob/5057eec1b54cb349650d0ce162f663e49287ce2c/src/PHPDish/Bundle/CoreBundle/Util/NotificationHelper.php#L224-L241<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function createVoteTopicNotification ( TopicInterface $ topic , UserInterface $ user ) { $ notification = $ this -> notificationManager -> createNotification ( $ this -> translator -> trans ( 'notification.vote_topic.subject' , [ '%userUrl%' => $ this -> router -> generate ( 'user_view' , [ 'username' => $ user -> getUsername ( ) ] ) , '%username%' => $ user -> getUsername ( ) , '%topicUrl%' => $ this -> router -> generate ( 'topic_view' , [ 'id' => $ topic -> getId ( ) ] ) , '%topicTitle%' => $ topic -> getTitle ( ) ] ) ) ; $ notification -> addParameters ( [ 'subject' => Notification :: SUBJECT_VOTE_TOPIC , 'topic_id' => $ topic -> getId ( ) , 'voter_id' => $ user -> getId ( ) , 'voter_username' => $ user -> getUsername ( ) , ] ) ; return $ notification ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/iron-bound-designs/IronBound-DB/blob/98511870a333aa930d6f9fd19796dff6a383d594/src/Saver/TermSaver.php#L90-L118<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function do_save ( $ term ) { if ( ! $ term -> term_id ) { $ ids = wp_insert_term ( wp_slash ( $ term -> name ) , $ term -> taxonomy , array ( 'description' => wp_slash ( $ term -> description ) , 'parent' => $ term -> parent , 'slug' => $ term -> slug ) ) ; } else { $ ids = wp_update_term ( $ term -> term_id , $ term -> taxonomy , array ( 'name' => wp_slash ( $ term -> name ) , 'description' => wp_slash ( $ term -> description ) , 'parent' => $ term -> parent , 'slug' => $ term -> slug ) ) ; } if ( is_wp_error ( $ ids ) ) { throw new \ InvalidArgumentException ( 'Error encountered while saving WP_Term: ' . $ ids -> get_error_message ( ) ) ; } $ term = get_term ( $ ids [ 'term_id' ] , $ term -> taxonomy ) ; if ( is_wp_error ( $ term ) ) { throw new \ UnexpectedValueException ( $ term -> get_error_message ( ) ) ; } return $ term ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Evaneos/Burrow/blob/98b4761ba68cfedd62a8cc0b064809a0fc6cc928/src/Driver/PhpAmqpLibDriver.php#L311-L315<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private static function getCorrelationId ( AMQPMessage $ message ) { return $ message -> has ( self :: CORRELATION_ID ) ? $ message -> get ( self :: CORRELATION_ID ) : '' ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/EliuFlorez/google-map/blob/b96e3975314a83f806ed86623f7b219d2c96ee9f/src/Helper/Extension/CoreExtensionHelper.php#L141-L151<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function getLibraries ( Map $ map ) { $ libraries = $ map -> getLibraries ( ) ; $ encodedPolylines = $ map -> getEncodedPolylines ( ) ; if ( ! empty ( $ encodedPolylines ) ) { $ libraries [ ] = 'geometry' ; } return array_unique ( $ libraries ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Payum/Payum/blob/cf4be4f91d9bf24069153aceeb44b4f5b3d4f011/src/Payum/Core/Security/GenericTokenFactory.php#L124-L127<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function createNotifyToken ( $ gatewayName , $ model = null ) { return $ this -> createToken ( $ gatewayName , $ model , $ this -> getPath ( 'notify' ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Easy/HTMLMenus.php#L58-L64<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function readMetadata ( & $ xmlArr ) { $ this -> objectName = $ xmlArr [ "MENU" ] [ "ATTRIBUTES" ] [ "NAME" ] ; $ this -> package = $ xmlArr [ "MENU" ] [ "ATTRIBUTES" ] [ "PACKAGE" ] ; $ this -> className = $ xmlArr [ "MENU" ] [ "ATTRIBUTES" ] [ "CLASS" ] ; $ this -> menuItemsXml = $ xmlArr [ "MENU" ] [ "MENUITEM" ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Azure/azure-storage-php/blob/9e53aa6e447e2260a29d54b96fab9fe18b665afa/azure-storage-table/src/Table/Models/UpdateEntityResult.php#L53-L61<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function create ( array $ headers ) { $ result = new UpdateEntityResult ( ) ; $ result -> setETag ( Utilities :: tryGetValueInsensitive ( Resources :: ETAG , $ headers ) ) ; return $ result ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/jjanvier/php-crowdin-lib/blob/880f4d9171fe01768b0aff2f9352fc9e5cb58865/Synchronizer/GitHandler.php#L145-L149<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function deleteBranch ( $ branch ) { $ cmd = 'cd %s && git checkout master && git branch -D %s' ; $ this -> systemLog ( sprintf ( $ cmd , $ this -> projectPath , $ branch ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/sulu/SuluFormBundle/blob/4226e71f3c220f40d75bd289297e4879a3f36f69/Twig/FormTwigExtension.php#L60-L69<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getFormById ( $ id , $ type , $ typeId , $ locale = null , $ name = 'form' ) { $ form = $ this -> formBuilder -> build ( ( int ) $ id , $ type , $ typeId , $ locale , $ name ) ; if ( ! $ form ) { return ; } return $ form -> createView ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Cache/ArrayCache.php#L24-L31<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function get ( $ key , $ default = null ) { $ key = $ this -> processKey ( $ key ) ; if ( $ this -> existInternal ( $ key ) ) { return resolve ( $ this -> storage [ $ key ] ) ; } return resolve ( $ default ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Nobox/Lazy-Strings/blob/fcedd2d7a0e1ac5e9e1efca44ae4428917fcd957/src/Validator.php#L16-L25<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function validateDocUrl ( $ url ) { $ pattern = '/http:\/\/docs\.google\.com\/spreadsheets\/d\/.*\/export\?format=csv/' ; if ( is_null ( $ url ) || $ url === '' || preg_match ( $ pattern , $ url ) !== 1 ) { return false ; } return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/tastyigniter/flame/blob/3c922ba1c02b3c14ad4adf91c2f37498045fa92a/src/Database/DatabaseServiceProvider.php#L15-L22<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function boot ( ) { Model :: setConnectionResolver ( $ this -> app [ 'db' ] ) ; Model :: setEventDispatcher ( $ this -> app [ 'events' ] ) ; Schema :: defaultStringLength ( 128 ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/joegreen88/zf1-component-filter/blob/c19c3729ad352cb0ece6ae4777921722d46a1711/src/Zend/Filter/RealPath.php#L91-L132<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function filter ( $ value ) { $ path = ( string ) $ value ; if ( $ this -> _exists ) { return realpath ( $ path ) ; } $ realpath = @ realpath ( $ path ) ; if ( $ realpath ) { return $ realpath ; } $ drive = '' ; if ( substr ( PHP_OS , 0 , 3 ) == 'WIN' ) { $ path = preg_replace ( '/[\\\\\/]/' , DIRECTORY_SEPARATOR , $ path ) ; if ( preg_match ( '/([a-zA-Z]\:)(.*)/' , $ path , $ matches ) ) { list ( $ fullMatch , $ drive , $ path ) = $ matches ; } else { $ cwd = getcwd ( ) ; $ drive = substr ( $ cwd , 0 , 2 ) ; if ( substr ( $ path , 0 , 1 ) != DIRECTORY_SEPARATOR ) { $ path = substr ( $ cwd , 3 ) . DIRECTORY_SEPARATOR . $ path ; } } } elseif ( substr ( $ path , 0 , 1 ) != DIRECTORY_SEPARATOR ) { $ path = getcwd ( ) . DIRECTORY_SEPARATOR . $ path ; } $ stack = array ( ) ; $ parts = explode ( DIRECTORY_SEPARATOR , $ path ) ; foreach ( $ parts as $ dir ) { if ( strlen ( $ dir ) && $ dir !== '.' ) { if ( $ dir == '..' ) { array_pop ( $ stack ) ; } else { array_push ( $ stack , $ dir ) ; } } } return $ drive . DIRECTORY_SEPARATOR . implode ( DIRECTORY_SEPARATOR , $ stack ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/valkyrjaio/valkyrja/blob/3b4ad998d96c3ab08e36a11c76ce8d9d48759ffe/src/Valkyrja/Console/Commands/CacheAllCommand.php#L48-L79<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function run ( string $ sync = null ) : int { $ containerCache = console ( ) -> matchCommand ( ContainerCacheCommand :: COMMAND ) ; $ consoleCache = console ( ) -> matchCommand ( ConsoleCacheCommand :: COMMAND ) ; $ eventsCache = console ( ) -> matchCommand ( EventsCacheCommand :: COMMAND ) ; $ routesCache = console ( ) -> matchCommand ( RoutesCacheCommand :: COMMAND ) ; console ( ) -> dispatchCommand ( $ containerCache ) ; console ( ) -> dispatchCommand ( $ consoleCache ) ; console ( ) -> dispatchCommand ( $ eventsCache ) ; console ( ) -> dispatchCommand ( $ routesCache ) ; $ configCache = console ( ) -> matchCommand ( ConfigCacheCommand :: COMMAND ) ; console ( ) -> dispatchCommand ( $ configCache ) ; if ( null !== $ sync && config ( ) [ 'app' ] [ 'debug' ] ) { $ files = [ config ( ) [ 'console' ] [ 'cacheFilePath' ] , config ( ) [ 'container' ] [ 'cacheFilePath' ] , config ( ) [ 'events' ] [ 'cacheFilePath' ] , config ( ) [ 'routing' ] [ 'cacheFilePath' ] , config ( ) [ 'cacheFilePath' ] , ] ; foreach ( $ files as $ file ) { copy ( $ file , str_replace ( 'site' , 'sync' , $ file ) ) ; output ( ) -> writeMessage ( 'Copied: ' . $ file , true ) ; } } return 0 ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/googleapis/common-protos-php/blob/d4763ce7c8046ec84534bd3aa61ab606f4b27373/src/Iam/Admin/V1/GetServiceAccountKeyRequest.php#L112-L118<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setPublicKeyType ( $ var ) { GPBUtil :: checkEnum ( $ var , \ Google \ Iam \ Admin \ V1 \ ServiceAccountPublicKeyType :: class ) ; $ this -> public_key_type = $ var ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Web/UrlManager.php#L347-L349<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getHomeUrl ( ) { return $ this -> _homeUrl !== null ? $ this -> _homeUrl : Reaction :: $ app -> urlManager -> getHomeUrl ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/php-carteblanche/core/blob/b55de6ac4d7c9ba09f8d0fbcc3cc1866713ac343/src/CarteBlanche/App/Container.php#L168-L174<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getBundle ( $ name ) { if ( true === $ this -> instances -> isEntry ( $ name , 'bundles' ) ) { return $ this -> instances -> getEntry ( $ name , 'bundles' ) ; } return null ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/netvlies/basecamp-php/blob/87c971b191beaa97ef285424ade8281bc086efa9/generate-api-docs.php#L227-L290<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>function insertWithMarkers ( $ filename , $ insertion ) { if ( ! is_array ( $ insertion ) ) { $ insertion = explode ( "\n" , $ insertion ) ; } if ( ! file_exists ( $ filename ) || is_writable ( $ filename ) ) { if ( ! file_exists ( $ filename ) ) { $ markerdata = '' ; } else { $ markerdata = explode ( "\n" , implode ( '' , file ( $ filename ) ) ) ; } if ( ! $ f = @ fopen ( $ filename , 'w' ) ) return false ; $ foundit = false ; if ( $ markerdata ) { $ state = true ; foreach ( $ markerdata as $ n => $ markerline ) { if ( strpos ( $ markerline , $ this -> start_marker ) !== false ) { $ state = false ; } if ( $ state ) { if ( $ n + 1 < count ( $ markerdata ) ) fwrite ( $ f , "{$markerline}\n" ) ; else fwrite ( $ f , "{$markerline}" ) ; } if ( strpos ( $ markerline , $ this -> end_marker ) !== false ) { fwrite ( $ f , $ this -> start_marker . "\n" ) ; if ( is_array ( $ insertion ) ) { foreach ( $ insertion as $ insertline ) { fwrite ( $ f , "{$insertline}\n" ) ; } } fwrite ( $ f , $ this -> end_marker . "\n" ) ; $ state = true ; $ foundit = true ; } } } if ( ! $ foundit ) { fwrite ( $ f , "\n" . $ this -> start_marker . "\n" ) ; foreach ( $ insertion as $ insertline ) { fwrite ( $ f , "{$insertline}\n" ) ; } fwrite ( $ f , $ this -> end_marker . "\n" ) ; } fclose ( $ f ) ; return true ; } return false ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/flugger/laravel-responder/blob/4baadabc9087d73927cf13b65a253f9e7ddef15c/src/Transformers/Concerns/HasRelationships.php#L220-L230<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function resolveRelation ( Model $ model , string $ identifier ) { $ identifier = camel_case ( $ identifier ) ; $ relation = $ model -> $ identifier ; if ( method_exists ( $ this , $ method = 'filter' . ucfirst ( $ identifier ) ) ) { return $ this -> $ method ( $ relation ) ; } return $ relation ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/maniaplanet/manialive-plugins/blob/f3f37da6836fe3d06fed32e75880caa6e9c0496b/Standard/TeamSpeak/TeamSpeak3/Node/Host.php#L130-L149<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function serverSelect ( $ sid , $ virtual = null ) { if ( $ this -> whoami !== null && $ this -> serverSelectedId ( ) == $ sid ) return ; $ virtual = ( $ virtual !== null ) ? $ virtual : $ this -> start_offline_virtual ; $ getargs = func_get_args ( ) ; $ this -> execute ( "use" , array ( "sid" => $ sid , $ virtual ? "-virtual" : null ) ) ; if ( $ sid != 0 && $ this -> predefined_query_name !== null ) { $ this -> execute ( "clientupdate" , array ( "client_nickname" => ( string ) $ this -> predefined_query_name ) ) ; } $ this -> whoamiReset ( ) ; $ this -> setStorage ( "_server_use" , array ( __FUNCTION__ , $ getargs ) ) ; \ ManiaLivePlugins \ Standard \ TeamSpeak \ TeamSpeak3 \ Helper \ Signal :: getInstance ( ) -> emit ( "notifyServerselected" , $ this ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/qranio-com/azure-sdk-pear-deps/blob/6609eab8623759b5e23345ded80d832278a7b680/src/HTTP/Request2/Adapter/Curl.php#L436-L459<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function callbackReadBody ( $ ch , $ fd , $ length ) { if ( ! $ this -> eventSentHeaders ) { $ this -> request -> setLastEvent ( 'sentHeaders' , curl_getinfo ( $ ch , CURLINFO_HEADER_OUT ) ) ; $ this -> eventSentHeaders = true ; } if ( in_array ( $ this -> request -> getMethod ( ) , self :: $ bodyDisallowed ) || 0 == $ this -> contentLength || $ this -> position >= $ this -> contentLength ) { return '' ; } if ( is_string ( $ this -> requestBody ) ) { $ string = substr ( $ this -> requestBody , $ this -> position , $ length ) ; } elseif ( is_resource ( $ this -> requestBody ) ) { $ string = fread ( $ this -> requestBody , $ length ) ; } else { $ string = $ this -> requestBody -> read ( $ length ) ; } $ this -> request -> setLastEvent ( 'sentBodyPart' , strlen ( $ string ) ) ; $ this -> position += strlen ( $ string ) ; return $ string ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/shumkov/rediska/blob/220afbfc4095e90aa050a5dfc00ce7413147ce45/library/Rediska/PubSub/Connections.php#L179-L186<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getChannelsByConnection ( Rediska_Connection $ connection ) { if ( ! isset ( $ this -> _channelsByConnections [ $ connection -> getAlias ( ) ] ) ) { throw new Rediska_PubSub_Exception ( "Channels by this connection not present" ) ; } return $ this -> _channelsByConnections [ $ connection -> getAlias ( ) ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ekyna/CoreBundle/blob/a471324311591489e7cebdb805921dd85ba104ec/Uploader/Uploader.php#L125-L140<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function remove ( UploadableInterface $ uploadable ) { if ( 0 < strlen ( $ path = $ uploadable -> getOldPath ( ) ) ) { $ fs = $ this -> getFilesystem ( ) ; if ( ! $ fs -> has ( $ path ) ) { throw new UploadException ( sprintf ( 'File "%s" not found.' , $ path ) ) ; } if ( ! $ fs -> delete ( $ path ) ) { throw new UploadException ( sprintf ( 'Failed to delete file "%s".' , $ path ) ) ; } $ this -> cleanUp ( $ path ) ; $ uploadable -> setOldPath ( null ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/OXID-eSales/oxideshop_composer_plugin/blob/867d38a2637a191ceba1680ac6af41f6694affed/src/Utilities/CopyFileManager/CopyGlobFilteredFileManager.php#L116-L128<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private static function copyDirectory ( $ sourcePath , $ destinationPath , $ globExpressionList ) { $ filesystem = new Filesystem ( ) ; $ flatFileListIterator = self :: getFlatFileListIterator ( $ sourcePath ) ; $ filteredFileListIterator = new BlacklistFilterIterator ( $ flatFileListIterator , $ sourcePath , $ globExpressionList ) ; $ filesystem -> mirror ( $ sourcePath , $ destinationPath , $ filteredFileListIterator , [ "override" => true ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/valkyrjaio/valkyrja/blob/3b4ad998d96c3ab08e36a11c76ce8d9d48759ffe/src/Valkyrja/Valkyrja.php#L136-L168<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setup ( array $ config = null , bool $ force = false ) : void { // If the application was already setup, no need to do it again if ( self :: $ setup && false === $ force ) { return ; } // Avoid re-setting up the app later self :: $ setup = true ; // Set the app static self :: $ app = $ this ; // Ensure the env has been set self :: setEnv ( ) ; // If the VALKYRJA_START constant hasn't already been set if ( ! \ defined ( 'VALKYRJA_START' ) ) { // Set a global constant for when the framework started \ define ( 'VALKYRJA_START' , microtime ( true ) ) ; } // Bootstrap debug capabilities $ this -> bootstrapConfig ( $ config ) ; // Bootstrap debug capabilities $ this -> bootstrapDebug ( ) ; // Bootstrap core functionality $ this -> bootstrapCore ( ) ; // Bootstrap the container $ this -> bootstrapContainer ( ) ; // Bootstrap setup $ this -> bootstrapSetup ( ) ; // Bootstrap the timezone $ this -> bootstrapTimezone ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/perminder-klair/kato-core/blob/168227027b857c90e8c5f24a2d591796b49ac9e7/modules/setting/models/Setting.php#L129-L144<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function dropDownOptions ( ) { $ result = [ ] ; if ( strlen ( $ this -> options ) > 1 ) { $ options = str_replace ( ' ' , '' , $ this -> options ) ; $ optionsArray = explode ( "," , $ options ) ; foreach ( $ optionsArray as $ key => $ val ) { $ data = explode ( ':' , $ val ) ; $ result [ $ data [ 0 ] ] = $ data [ 1 ] ; } } return $ result ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/valkyrjaio/valkyrja/blob/3b4ad998d96c3ab08e36a11c76ce8d9d48759ffe/src/Valkyrja/HttpMessage/MessageTrait.php#L361-L376<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function setHeaders ( array $ originalHeaders ) : void { $ headerNames = $ headers = [ ] ; foreach ( $ originalHeaders as $ header => $ value ) { $ value = $ this -> assertHeaderValues ( $ value ) ; HeaderSecurity :: assertValidName ( $ header ) ; $ headerNames [ strtolower ( $ header ) ] = $ header ; $ headers [ $ header ] = $ value ; } $ this -> headerNames = $ headerNames ; $ this -> headers = $ headers ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Session/SessionManager.php#L268-L271<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function callCustomCreator ( string $ driver , array $ options = [ ] ) : StoreContract { return $ this -> buildSession ( parent :: callCustomCreator ( $ driver , $ options ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Helpers/FileHelper.php#L228-L239<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected static function loadMimeAliases ( $ aliasesFile ) { if ( $ aliasesFile === null ) { $ aliasesFile = static :: $ mimeAliasesFile ; } $ aliasesFile = \ Reaction :: $ app -> getAlias ( $ aliasesFile ) ; if ( ! isset ( self :: $ _mimeAliases [ $ aliasesFile ] ) ) { self :: $ _mimeAliases [ $ aliasesFile ] = require $ aliasesFile ; } return self :: $ _mimeAliases [ $ aliasesFile ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/Router/ResponseFactory.php#L432-L435<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function apiInternalServerError ( ? string $ message = null , ? string $ text = null ) : ApiResponse { return $ this -> createApiResponse ( ) -> internalServerError ( $ message , $ text ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/cscfa/CacheSystemBundle/blob/781d36bab6e013b44f0a82aad22121a5cc60b95f/Object/Element/CacheElement.php#L166-L176<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function unserialize ( $ serialized ) { $ tmp = unserialize ( $ serialized ) ; $ dateTime = new \ DateTime ( ) ; $ dateTime -> setTimestamp ( $ tmp [ 'timeOver' ] ) ; $ this -> key = $ tmp [ 'key' ] ; $ this -> timeOver = $ dateTime ; $ this -> content = $ tmp [ 'content' ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/3f2707d1d606a59527f74e88808b820a170d3f42/src/Finder/TransformedFinder.php#L96-L101<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function createHybridPaginatorAdapter ( $ query ) { $ query = Query :: create ( $ query ) ; return new HybridPaginatorAdapter ( $ this -> searchable , $ query , $ this -> transformer ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/imkrimerman/primitive/blob/bdb45bb5109ca07f116cce571b76804e47ac5d56/src/Primitive/String/String.php#L574-L577<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function is ( $ pattern ) { return ( bool ) Str :: matches ( $ this -> retrieveValue ( $ pattern ) , $ this -> string ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Cecilapp/PHPoole/blob/ac921557e4c61ef649bf5c41011f72dc890a2e9f/src/Renderer/Twig/Extension.php#L423-L437<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function excerptHtml ( $ string ) { // https://regex101.com/r/mA2mG0/3 $ pattern = '^(.*)[\n\r\s]*<!-- excerpt -->[\n\r\s]*(.*)$' ; preg_match ( '/' . $ pattern . '/s' , $ string , $ matches ) ; if ( ! $ matches ) { return $ string ; } return trim ( $ matches [ 1 ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/silvershop/silvershop-core/blob/b090e970b06c0fb7e68107360760b6e2d6d184c4/src/Model/Order.php#L444-L448<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getModifier ( $ className , $ forcecreate = false ) { $ calculator = OrderTotalCalculator :: create ( $ this ) ; return $ calculator -> getModifier ( $ className , $ forcecreate ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/syahzul/admin-theme/blob/93d254a883220c9f4943ed2cc0eb8b3c8bab2e2c/src/Commands/AdminThemeCommand.php#L333-L344<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function copyAssetFiles ( ) { foreach ( $ this -> assets as $ destination => $ source ) { $ this -> line ( '<info>Asset:</info> ' . base_path ( $ destination ) ) ; file_put_contents ( base_path ( $ destination ) , file_get_contents ( $ source ) ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/valkyrjaio/valkyrja/blob/3b4ad998d96c3ab08e36a11c76ce8d9d48759ffe/src/Valkyrja/Annotations/NativeAnnotationsParser.php#L369-L388<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getAnnotationFromMap ( string $ annotationType ) : Annotation { // Get the annotations map (annotation name to annotation class) $ annotationsMap = $ this -> getAnnotationsMap ( ) ; // If an annotation is mapped to a class if ( $ annotationType && array_key_exists ( $ annotationType , $ annotationsMap ) ) { // Set a new class based on the match found $ annotation = new $ annotationsMap [ $ annotationType ] ( ) ; } else { // Otherwise set a new base annotation model $ annotation = new Annotation ( ) ; } return $ annotation ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/techdivision/import-attribute/blob/7d75902d079e64b5c3e33c43fdf8071334489d62/src/Callbacks/OptionValueAndSwatchHandler.php#L234-L253<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function createOptionByValueIfNecessary ( $ entityTypeId , $ attributeCode , $ storeId , $ value ) { // initialize the option ID $ optionId = 0 ; // try to load the attribute option by the given attribute code, store ID + value if ( $ attributeOption = $ this -> loadAttributeOptionByEntityTypeIdAndAttributeCodeAndStoreIdAndValue ( $ entityTypeId , $ attributeCode , $ storeId , $ value ) ) { // set the ID of the loaded option $ optionId = $ attributeOption [ MemberNames :: OPTION_ID ] ; } else { // create a new option and set the ID $ optionId = $ this -> persistAttributeOption ( $ this -> prepareAttributeOption ( $ entityTypeId , $ attributeCode ) ) ; // log a message that a new option has been created $ this -> getSystemLogger ( ) -> info ( sprintf ( 'Successfully created new option for attribute with code "%s"' , $ attributeCode ) ) ; } // return the option ID return $ optionId ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/graste/environaut/blob/e40b498c31214fdbdd529f334f6ce5e6138bb5fb/src/Environaut/Command/CheckCommand.php#L123-L131<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function readConfig ( ) { $ this -> config = $ this -> getConfigHandler ( ) -> getConfig ( ) ; if ( $ this -> config -> has ( 'introduction' ) ) { $ this -> output -> writeln ( $ this -> config -> get ( 'introduction' ) ) ; $ this -> output -> writeln ( '' ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/estebanmatias92/RestGalleries/blob/09bbaf351e1ec330f075aa96b7c2aed407534a57/src/RestGalleries/APIs/Flickr/Photo.php#L109-L130<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function extractPhotoArray ( $ source ) { if ( $ source -> stat == 'fail' ) { return ; } $ data = & $ source -> photo ; $ photo = [ ] ; $ photo [ 'id' ] = $ data -> id ; $ photo [ 'title' ] = $ data -> title -> _content ; $ photo [ 'description' ] = $ data -> description -> _content ; $ photo [ 'url' ] = $ data -> urls -> url [ 0 ] -> _content ; $ photo [ 'created' ] = ( string ) $ data -> dates -> posted ; $ photo [ 'views' ] = $ data -> views ; $ images = $ this -> fetchImages ( $ photo [ 'id' ] ) ; $ photo [ 'source' ] = $ images [ 1 ] ; $ photo [ 'source_thumbnail' ] = $ images [ 0 ] ; return $ photo ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/lightSAML/lightSAML/blob/377f04d1fb25f2fb2e72dabeff10b336f1cbe4c5/src/LightSaml/Model/Assertion/ProxyRestriction.php#L68-L73<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setCount ( $ count ) { $ this -> count = null !== $ count ? intval ( $ count ) : null ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wp-papi/papi/blob/444960585ed761447b7886ff4cc31be91b4e8302/src/properties/class-papi-property-module.php#L36-L66<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function format_value ( $ value , $ slug , $ post_id ) { if ( is_numeric ( $ value ) && intval ( $ value ) !== 0 ) { $ value = [ 'module' => get_post ( $ value ) , 'template' => papi_data_get ( $ post_id , sprintf ( '%s_template' , unpapify ( $ this -> html_name ( ) ) ) ) ] ; if ( papi_is_admin ( ) ) { return ( object ) $ value ; } // Return the template value instead of index when not in admin. if ( $ value [ 'module' ] instanceof WP_Post ) { $ templates = $ this -> get_templates ( $ value [ 'module' ] -> ID ) ; // Check if index exists. if ( isset ( $ templates [ $ value [ 'template' ] ] ) ) { $ value [ 'template' ] = $ templates [ $ value [ 'template' ] ] ; } // Supports label and template array. if ( is_array ( $ value [ 'template' ] ) && isset ( $ value [ 'template' ] [ 'template' ] ) ) { $ value [ 'template' ] = $ value [ 'template' ] [ 'template' ] ; } } return ( object ) $ value ; } return ( object ) $ this -> default_value ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Console/Controllers/BaseMigrateController.php#L940-L971<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function migrateToVersion ( RequestApplicationInterface $ app , $ version ) { $ originalVersion = $ version ; return $ this -> getNewMigrations ( ) -> then ( function ( $ migrations ) use ( $ app , $ version ) { foreach ( $ migrations as $ i => $ migration ) { if ( strpos ( $ migration , $ version ) === 0 ) { return $ this -> actionUp ( $ app , $ i + 1 ) ; } } return reject ( null ) ; } ) -> then ( null , function ( ) use ( $ app , $ version , $ originalVersion ) { return $ this -> getMigrationHistory ( null ) -> then ( function ( $ migrations ) use ( $ app , $ version , $ originalVersion ) { $ migrations = array_keys ( $ migrations ) ; foreach ( $ migrations as $ i => $ migration ) { if ( strpos ( $ migration , $ version , $ originalVersion ) === 0 ) { if ( $ i === 0 ) { $ this -> stdout ( "Already at '$originalVersion'. Nothing needs to be done.\n" , Console :: FG_YELLOW ) ; } else { $ this -> actionDown ( $ app , $ i ) ; } return resolve ( true ) ; } } throw new Exception ( "Unable to find the version '$originalVersion'." ) ; } ) ; } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/miBadger/miBadger.Http/blob/b82b72a6e7d645cae0e1976f5e0bfa080cd015ce/src/Message.php#L183-L198<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function addHeader ( $ name , $ value ) { if ( ! $ this -> hasHeader ( $ name ) ) { return $ this -> setHeader ( $ name , $ value ) ; } if ( ! is_array ( $ value ) ) { $ value = [ $ value ] ; } foreach ( $ value as $ element ) { $ this -> headers [ $ this -> headerNames [ strtolower ( $ name ) ] ] [ ] = $ element ; } return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/intpro/imageaggr/blob/f47ae6ba1f8a8e9157e2afd54bdc7bde27bc2f1f/src/Executors/ModImagesRefConsistExecutor.php#L33-L43<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function exist ( ARef $ ref ) { $ name = $ ref -> getType ( ) -> getName ( ) ; if ( $ name === 'modimages' ) { return true ; } return false ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/FACT-Finder/FACT-Finder-PHP-Library/blob/5c795b94117fa7ac40f5e80d4edc93999a76fc90/src/log4php/LoggerConfigurable.php#L43-L50<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function setInteger ( $ property , $ value ) { try { $ this -> $ property = LoggerOptionConverter :: toIntegerEx ( $ value ) ; } catch ( Exception $ ex ) { $ value = var_export ( $ value , true ) ; $ this -> warn ( "Invalid value given for '$property' property: [$value]. Expected an integer. Property not changed." ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/Database/SQLite3/Table.php#L272-L296<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function copyData ( ) { $ exFields = [ ] ; $ newFields = [ ] ; foreach ( $ this -> fields as $ name => $ details ) { // Are we modifying the column? if ( isset ( $ details [ 'new_name' ] ) ) { $ newFields [ ] = $ details [ 'new_name' ] ; } else { $ newFields [ ] = $ name ; } $ exFields [ ] = $ name ; } $ exFields = implode ( ', ' , $ exFields ) ; $ newFields = implode ( ', ' , $ newFields ) ; $ this -> db -> query ( "INSERT INTO {$this->prefixedTableName}({$newFields}) SELECT {$exFields} FROM {$this->db->DBPrefix}temp_{$this->tableName}" ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/APY/APYDataGridBundle/blob/03050b366a79553b014aa4297d31b585a84622a3/Grid/Export/Export.php#L403-L412<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function renderBlock ( $ name , $ parameters ) { foreach ( $ this -> getTemplates ( ) as $ template ) { if ( $ template -> hasBlock ( $ name , [ ] ) ) { return $ template -> renderBlock ( $ name , array_merge ( $ parameters , $ this -> params ) ) ; } } throw new \ InvalidArgumentException ( sprintf ( 'Block "%s" doesn\'t exist in grid template "%s".' , $ name , 'ee' ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/Http/Cookie.php#L127-L138<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function put ( $ keys , $ value = null , array $ option = [ ] ) : void { if ( ! is_array ( $ keys ) ) { $ keys = [ $ keys => $ value , ] ; } foreach ( $ keys as $ key => $ value ) { $ this -> set ( $ key , $ value , $ option ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/qranio-com/azure-sdk-pear-deps/blob/6609eab8623759b5e23345ded80d832278a7b680/src/HTTP/Request2.php#L870-L890<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setCookieJar ( $ jar = true ) { if ( ! class_exists ( 'HTTP_Request2_CookieJar' , false ) ) { require_once 'HTTP/Request2/CookieJar.php' ; } if ( $ jar instanceof HTTP_Request2_CookieJar ) { $ this -> cookieJar = $ jar ; } elseif ( true === $ jar ) { $ this -> cookieJar = new HTTP_Request2_CookieJar ( ) ; } elseif ( ! $ jar ) { $ this -> cookieJar = null ; } else { throw new HTTP_Request2_LogicException ( 'Invalid parameter passed to setCookieJar()' , HTTP_Request2_Exception :: INVALID_ARGUMENT ) ; } return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Nekland/FeedBundle/blob/9cce9e582b06f12849aa217b8fb326661a215760/Renderer/RssRenderer.php#L144-L177<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function writeItem ( XMLManager $ xml , ItemInterface $ item ) { $ nodeItem = $ this -> createItem ( $ xml ) ; $ xml -> addTextNode ( 'title' , $ item -> getFeedTitle ( ) , $ nodeItem ) ; $ xml -> addTextNode ( 'description' , $ item -> getFeedDescription ( ) , $ nodeItem ) ; $ id = $ item -> getFeedId ( ) ; if ( empty ( $ id ) ) throw new \ InvalidArgumentException ( 'The method « getFeedId » MUST return a not empty value.');   $ xml -> addTextNode ( 'guid' , $ id , $ nodeItem ) ; $ xml -> addTextNode ( 'link' , $ this -> getRoute ( $ item ) , $ nodeItem ) ; $ xml -> addTextNode ( 'pubDate' , $ item -> getFeedDate ( ) -> format ( \ DateTime :: RSS ) , $ nodeItem ) ; if ( $ this -> itemHas ( $ item , 'getFeedAuthor' ) ) { if ( $ author = $ this -> getAuthor ( $ item ) ) { $ xml -> addTextNode ( 'author' , $ author , $ nodeItem ) ; } } if ( $ this -> itemHas ( $ item , 'getFeedCategory' ) ) { $ xml -> addTextNode ( 'category' , $ item -> getFeedCategory ( ) , $ nodeItem ) ; } if ( $ this -> itemHas ( $ item , 'getFeedCommentRoute' ) ) { if ( $ comments = $ this -> getComments ( $ item ) ) { $ xml -> addTextNode ( 'comments' , $ comments , $ nodeItem ) ; } } if ( $ this -> itemHas ( $ item , 'getFeedEnclosure' ) ) { if ( $ enclosure = $ this -> getEnclosure ( $ item , $ xml ) ) { $ nodeItem -> appendChild ( $ enclosure ) ; } } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/helsingborg-stad/api-event-manager-integration/blob/d29a177f3973eaebd506e4356d45462e6f2a712b/source/php/PostTypes/Events.php#L265-L280<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getCustomContent ( ) { global $ post ; $ get_date = ( ! empty ( get_query_var ( 'date' ) ) ) ? get_query_var ( 'date' ) : false ; if ( $ get_date != false ) { $ occasions = \ EventManagerIntegration \ Helper \ QueryEvents :: getEventOccasions ( $ post -> ID , false ) ; foreach ( $ occasions as $ o ) { $ event_date = preg_replace ( '/\D/' , '' , $ o -> start_date ) ; // Replace content with occasion custom content if ( $ get_date == $ event_date && ! empty ( $ o -> content ) && $ o -> content_mode == 'custom' ) { return $ o -> content ; } } } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/StaticApplicationAbstract.php#L161-L167<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function createRequestApplication ( ServerRequestInterface $ request ) { $ config = Reaction :: $ config -> get ( 'appRequest' ) ; $ config = [ 'request' => $ request ] + $ config ; $ app = Reaction :: create ( $ config ) ; return $ app ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/consolibyte/quickbooks-php/blob/3df0d35e2fc04c1fe04c63dbdb3c11a501c305a1/QuickBooks/Callbacks.php#L392-L503<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>static public function callHook ( $ Driver , & $ hooks , $ hook , $ requestID , $ user , $ ticket , & $ err , $ hook_data , $ callback_config = array ( ) ) { // There's a bug somewhere that passes a null value to this function... ? if ( ! is_array ( $ hooks ) ) { $ hooks = array ( ) ; } // First, clean up the hooks array foreach ( $ hooks as $ key => $ value ) { if ( ! is_array ( $ value ) ) { $ hooks [ $ key ] = array ( $ value ) ; } } // Clean up the hook data foreach ( array ( 'requestID' => $ requestID , 'user' => $ user , 'ticket' => $ ticket ) as $ key => $ value ) { if ( empty ( $ hook_data [ $ key ] ) ) { $ hook_data [ $ key ] = $ value ; } } // Check if the hook is set, if so, call it! if ( isset ( $ hooks [ $ hook ] ) ) { // Drop a message in the log if ( $ Driver ) { $ Driver -> log ( 'Calling hooks for: ' . $ hook , $ ticket , QUICKBOOKS_LOG_VERBOSE ) ; } // Loop through the hooks foreach ( $ hooks [ $ hook ] as $ callback ) { // Determine the type of hook $ type = QuickBooks_Callbacks :: _type ( $ callback , $ Driver , $ ticket ) ; if ( $ Driver ) { // Log the callback for debugging $ Driver -> log ( 'Calling callback [' . $ type . ']: ' . gettype ( $ callback ) , $ ticket , QUICKBOOKS_LOG_DEVELOP ) ; } $ vars = array ( $ requestID , $ user , $ hook , & $ err , $ hook_data , $ callback_config ) ; if ( $ type == QUICKBOOKS_CALLBACKS_TYPE_OBJECT_METHOD ) // Object instance method hook { $ object = $ callback [ 0 ] ; $ method = $ callback [ 1 ] ; if ( $ Driver ) { $ Driver -> log ( 'Calling hook instance method: ' . get_class ( $ callback [ 0 ] ) . '->' . $ callback [ 1 ] , $ ticket , QUICKBOOKS_LOG_VERBOSE ) ; } $ ret = QuickBooks_Callbacks :: _callObjectMethod ( array ( $ object , $ method ) , $ vars , $ err ) ; //$ret = call_user_func_array( array( $object, $method ), array( $requestID, $user, $hook, &$err, $hook_data, $callback_config) ); } else if ( $ type == QUICKBOOKS_CALLBACKS_TYPE_FUNCTION ) // Function hook { if ( $ Driver ) { $ Driver -> log ( 'Calling hook function: ' . $ callback , $ ticket , QUICKBOOKS_LOG_VERBOSE ) ; } $ ret = QuickBooks_Callbacks :: _callFunction ( $ callback , $ vars , $ err ) ; //$ret = $callback($requestID, $user, $hook, $err, $hook_data, $callback_config); // 			$requestID, $user, $action, $ident, $extra, $err, $xml, $qb_identifier } else if ( $ type == QUICKBOOKS_CALLBACKS_TYPE_STATIC_METHOD ) // Static method hook { if ( $ Driver ) { $ Driver -> log ( 'Calling hook static method: ' . $ callback , $ ticket , QUICKBOOKS_LOG_VERBOSE ) ; } //$tmp = explode('::', $callback); //$class = trim(current($tmp)); //$method = trim(end($tmp)); $ ret = QuickBooks_Callbacks :: _callStaticMethod ( $ callback , $ vars , $ err ) ; //$ret = call_user_func_array( array( $class, $method ), array( $requestID, $user, $hook, &$err, $hook_data, $callback_config) ); } else if ( $ type == QUICKBOOKS_CALLBACKS_TYPE_HOOK_INSTANCE ) { // Just call the ->hook() method if ( $ Driver ) { $ Driver -> log ( 'Calling hook instance: ' . get_class ( $ callback ) , $ ticket , QUICKBOOKS_LOG_VERBOSE ) ; } $ ret = QuickBooks_Callbacks :: _callObjectMethod ( array ( $ callback , 'hook' ) , $ vars , $ err ) ; } else { return false ; } // If the hook returns FALSE, then *do not* run all of the other hooks, just return FALSE here if ( $ ret == false ) { return false ; } } } return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/WebServer/Command/ServerLogCommand.php#L50-L89<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function handle ( ) : int { $ output = $ this -> getOutput ( ) ; $ this -> handler = new ConsoleHandler ( $ output ) ; $ format = $ this -> hasOption ( 'format' ) ? $ this -> option ( 'format' ) : ConsoleFormatter :: SIMPLE_FORMAT ; $ dateFormat = $ this -> hasOption ( 'date-format' ) ? $ this -> option ( 'date-format' ) : ConsoleFormatter :: SIMPLE_DATE ; $ this -> handler -> setFormatter ( new ConsoleFormatter ( [ 'format' => \ str_replace ( '\n' , "\n" , $ format ) , 'date_format' => $ dateFormat , 'colors' => $ output -> isDecorated ( ) , 'multiline' => OutputInterface :: VERBOSITY_DEBUG <= $ output -> getVerbosity ( ) , ] ) ) ; $ host = $ this -> option ( 'host' ) ; $ port = $ this -> option ( 'port' ) ; $ address = 'tcp://' . $ host . ':' . $ port ; if ( ! $ socket = \ stream_socket_server ( $ address , $ errno , $ errstr ) ) { throw new RuntimeException ( \ sprintf ( 'Server start failed on "%s": %s %s.' , $ address , $ errstr , $ errno ) ) ; } $ output -> success ( \ sprintf ( 'Server listening on %s' , $ host !== '0.0.0.0' ? $ host . ':' . $ port : 'all interfaces, port ' . $ port ) ) ; foreach ( $ this -> getLogs ( $ socket ) as $ clientId => $ message ) { $ record = \ unserialize ( \ base64_decode ( $ message , true ) ) ; // Impossible to decode the message, give up. if ( $ record === false ) { continue ; } $ this -> displayLog ( $ output , $ clientId , $ record ) ; } return 0 ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/consolibyte/quickbooks-php/blob/3df0d35e2fc04c1fe04c63dbdb3c11a501c305a1/QuickBooks/QBXML/Object/ReceivePayment.php#L460-L483<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function asList ( $ request ) { switch ( $ request ) { case 'ReceivePaymentAddRq' : if ( isset ( $ this -> _object [ 'AppliedToTxn' ] ) ) { $ this -> _object [ 'AppliedToTxnAdd' ] = $ this -> _object [ 'AppliedToTxn' ] ; } break ; case 'ReceivePaymentModRq' : if ( isset ( $ this -> _object [ 'AppliedToTxn' ] ) ) { $ this -> _object [ 'AppliedToTxnMod' ] = $ this -> _object [ 'AppliedToTxn' ] ; } break ; } return parent :: asList ( $ request ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/equip/framework/blob/2cb587e36286439dc84b24d2808c3c4c04a20d9c/src/Responder/StatusResponder.php#L61-L69<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function status ( ResponseInterface $ response , PayloadInterface $ payload ) { $ status = $ payload -> getStatus ( ) ; $ code = $ this -> http_status -> getStatusCode ( $ status ) ; return $ response -> withStatus ( $ code ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/belgattitude/solublecomponents/blob/f045b3967e42d352d8e70fb2c1f8a427df62599f/src/Soluble/Normalist/Synthetic/TableSearch.php#L194-L199<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function joinLeft ( $ table , $ on , $ columns = [ ] ) { $ prefixed_table = $ this -> prefixTableJoinCondition ( $ table ) ; $ this -> select -> join ( $ prefixed_table , $ on , $ columns , Select :: JOIN_LEFT ) ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/cleverage/process-bundle/blob/d03bfe390a9d94d4d51752e463abd0b6323bf4f7/Task/Doctrine/AbstractDoctrineQueryTask.php#L76-L112<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function getQueryBuilder ( EntityRepository $ repository , array $ criteria , array $ orderBy , $ limit = null , $ offset = null ) { $ qb = $ repository -> createQueryBuilder ( 'e' ) ; foreach ( $ criteria as $ field => $ value ) { if ( preg_match ( '/[^a-zA-Z0-9]/' , $ field ) ) { throw new \ UnexpectedValueException ( "Forbidden field name '{$field}'" ) ; } $ parameterName = uniqid ( 'param' , false ) ; if ( null === $ value ) { $ qb -> andWhere ( "e.{$field} IS NULL" ) ; } else { if ( \ is_array ( $ value ) ) { $ qb -> andWhere ( "e.{$field} IN (:{$parameterName})" ) ; } else { $ qb -> andWhere ( "e.{$field} = :{$parameterName}" ) ; } $ qb -> setParameter ( $ parameterName , $ value ) ; } } /** @noinspection ForeachSourceInspection */ foreach ( $ orderBy as $ field => $ order ) { $ qb -> addOrderBy ( "e.{$field}" , $ order ) ; } if ( null !== $ limit ) { $ qb -> setMaxResults ( $ limit ) ; } if ( null !== $ offset ) { $ qb -> setFirstResult ( $ offset ) ; } return $ qb ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/qranio-com/azure-sdk-pear-deps/blob/6609eab8623759b5e23345ded80d832278a7b680/src/PEAR/PackageFile/v1.php#L1564-L1608<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>function _buildProvidesArray ( $ srcinfo ) { if ( ! $ this -> _isValid ) { return false ; } $ file = basename ( $ srcinfo [ 'source_file' ] ) ; $ pn = $ this -> getPackage ( ) ; $ pnl = strlen ( $ pn ) ; foreach ( $ srcinfo [ 'declared_classes' ] as $ class ) { $ key = "class;$class" ; if ( isset ( $ this -> _packageInfo [ 'provides' ] [ $ key ] ) ) { continue ; } $ this -> _packageInfo [ 'provides' ] [ $ key ] = array ( 'file' => $ file , 'type' => 'class' , 'name' => $ class ) ; if ( isset ( $ srcinfo [ 'inheritance' ] [ $ class ] ) ) { $ this -> _packageInfo [ 'provides' ] [ $ key ] [ 'extends' ] = $ srcinfo [ 'inheritance' ] [ $ class ] ; } } foreach ( $ srcinfo [ 'declared_methods' ] as $ class => $ methods ) { foreach ( $ methods as $ method ) { $ function = "$class::$method" ; $ key = "function;$function" ; if ( $ method { 0 } == '_' || ! strcasecmp ( $ method , $ class ) || isset ( $ this -> _packageInfo [ 'provides' ] [ $ key ] ) ) { continue ; } $ this -> _packageInfo [ 'provides' ] [ $ key ] = array ( 'file' => $ file , 'type' => 'function' , 'name' => $ function ) ; } } foreach ( $ srcinfo [ 'declared_functions' ] as $ function ) { $ key = "function;$function" ; if ( $ function { 0 } == '_' || isset ( $ this -> _packageInfo [ 'provides' ] [ $ key ] ) ) { continue ; } if ( ! strstr ( $ function , '::' ) && strncasecmp ( $ function , $ pn , $ pnl ) ) { $ warnings [ ] = "in1 " . $ file . ": function \"$function\" not prefixed with package name \"$pn\"" ; } $ this -> _packageInfo [ 'provides' ] [ $ key ] = array ( 'file' => $ file , 'type' => 'function' , 'name' => $ function ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/simply-framework/container/blob/7f42b2c9f3cf438013c71bb0eea81b656a9faa9a/src/Container.php#L59-L76<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getCacheFile ( callable $ encoder = null ) : string { if ( \ is_null ( $ encoder ) ) { $ encoder = function ( $ value ) : string { return var_export ( $ value , true ) ; } ; } $ this -> loadCacheParameters ( ) ; ksort ( $ this -> entries ) ; $ encoded = $ encoder ( $ this -> entries ) ; return  <<<TEMPLATE <?php return new class extends \Simply\Container\Container {     protected \$entries = $encoded; }; TEMPLATE ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/n2n/n2n-impl-persistence-orm/blob/39f309c380d44d72c94224799eb7c7d3530e9780/src/app/n2n/impl/persistence/orm/property/relation/JoinColumnToOneRelation.php#L142-L179<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function supplyPersistAction ( PersistAction $ persistAction , $ value , ValueHash $ valueHash , ? ValueHash $ oldValueHash ) { if ( $ value === null ) { $ persistAction -> getMeta ( ) -> setRawValue ( $ this -> entityModel , $ this -> joinColumnName , null ) ; return ; } $ actionQueue = $ persistAction -> getActionQueue ( ) ; $ pdo = $ actionQueue -> getEntityManager ( ) -> getPdo ( ) ; $ targetPersistAction = $ persistAction -> getActionQueue ( ) -> getPersistAction ( $ value ) ; try { $ targetPersistAction = $ persistAction -> getActionQueue ( ) -> getPersistAction ( $ value ) ; } catch ( PersistenceOperationException $ e ) { throw new PersistenceOperationException ( $ this -> entityProperty -> toPropertyString ( ) . ' of entity obj ' . EntityInfo :: buildEntityString ( $ persistAction -> getEntityModel ( ) , $ persistAction -> getId ( ) ) . ' contains value that can not be persisted.' , 0 , $ e , 3 ) ; } if ( $ targetPersistAction -> hasId ( ) ) { $ persistAction -> getMeta ( ) -> setRawValue ( $ this -> entityModel , $ this -> joinColumnName , $ this -> getTargetIdEntityProperty ( ) -> buildRaw ( $ targetPersistAction -> getId ( ) , $ pdo ) ) ; return ; } $ persistAction -> addDependent ( $ targetPersistAction ) ; ArgUtils :: assertTrue ( $ valueHash instanceof ToOneValueHash ) ; $ targetPersistAction -> executeAtEnd ( function ( ) use ( $ persistAction , $ valueHash , $ targetPersistAction , $ pdo ) { $ targetId = $ targetPersistAction -> getId ( ) ; $ persistAction -> getMeta ( ) -> setRawValue ( $ this -> entityModel , $ this -> joinColumnName , $ this -> getTargetIdEntityProperty ( ) -> buildRaw ( $ targetId , $ pdo ) ) ; $ hasher = new ToOneValueHasher ( $ this -> getTargetIdEntityProperty ( ) ) ; $ hasher -> reportId ( $ targetId , $ valueHash ) ; } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/phalcon-nucleon/framework/blob/f50fe76387bb623497f066c86f58fa70bfa613ef/src/Neutrino/Auth/Manager.php#L155-L180<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function login ( User $ user , $ remember = false ) { if ( ! $ user ) { return false ; } $ this -> regenerateSessionId ( ) ; $ this -> { Services :: SESSION } -> set ( $ this -> sessionKey ( ) , $ user -> getAuthIdentifier ( ) ) ; if ( $ remember ) { $ rememberToken = Str :: random ( 60 ) ; /** @var \Phalcon\Http\Response\Cookies|\Phalcon\Http\Response\CookiesInterface $cookies */ $ cookies = $ this -> { Services :: COOKIES } ; $ cookies -> set ( 'remember_me' , $ user -> getAuthIdentifier ( ) . '|' . $ rememberToken , time ( ) + ( 100 * 365 * 24 * 60 * 60 ) ) ; $ user -> setRememberToken ( $ rememberToken ) ; $ user -> save ( ) ; } $ this -> user = $ user ; return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/silverstripe/silverstripe-activedirectory/blob/ffdbe06b6cda42aeab1a1fd1c287b517811efab3/code/services/LDAPService.php#L351-L360<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getUserByDN ( $ dn , $ attributes = [ ] ) { $ searchLocations = $ this -> config ( ) -> users_search_locations ? : [ null ] ; foreach ( $ searchLocations as $ searchLocation ) { $ records = $ this -> gateway -> getUserByDN ( $ dn , $ searchLocation , Zend \ Ldap \ Ldap :: SEARCH_SCOPE_SUB , $ attributes ) ; if ( $ records ) { return $ records [ 0 ] ; } } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/core23/lastfm-php-api/blob/7741ae884b07964d290c6783553437f621c7fe6b/src/Service/ArtistService.php#L142-L156<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getTopAlbums ( ArtistTopAlbumsBuilder $ builder ) : array { $ response = $ this -> client -> unsignedCall ( 'artist.getTopAlbums' , $ builder -> getQuery ( ) ) ; if ( ! isset ( $ response [ 'topalbums' ] [ 'album' ] ) ) { return [ ] ; } return ApiHelper :: mapList ( static function ( $ data ) { return Album :: fromApi ( $ data ) ; } , $ response [ 'topalbums' ] [ 'album' ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/Cache/Provider/Register.php#L101-L106<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function cacheLoad ( ) : void { $ this -> container -> singleton ( 'cache.load' , function ( IContainer $ container ) { return new Load ( $ container , $ container [ 'cache' ] ) ; } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ekyna/CoreBundle/blob/a471324311591489e7cebdb805921dd85ba104ec/DependencyInjection/Compiler/FormJsPass.php#L18-L47<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function process ( ContainerBuilder $ container ) { // TODO configuration / extension parameter $ formJs = [ [ 'selector' => '.file-picker' , 'path' => 'ekyna-form/file-picker' , ] ] ; $ taggedFormServices = $ container -> findTaggedServiceIds ( 'form.js' ) ; foreach ( $ taggedFormServices as $ service => $ tagAttributes ) { foreach ( $ tagAttributes as $ attributes ) { if ( ! array_key_exists ( 'selector' , $ attributes ) ) { throw new \ InvalidArgumentException ( sprintf ( 'The "selector" attributes is missing for tag "form.js" of service "%s"' , $ service ) ) ; } if ( ! array_key_exists ( 'path' , $ attributes ) ) { throw new \ InvalidArgumentException ( sprintf ( 'The "path" attributes is missing for tag "form.js" of service "%s"' , $ service ) ) ; } $ formJs [ ] = [ 'selector' => $ attributes [ 'selector' ] , 'path' => $ attributes [ 'path' ] , ] ; } } $ container -> setParameter ( 'ekyna_core.form_js' , $ formJs ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/View/Filters.php#L163-L168<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function highlight ( string $ value , string $ phrase ) : string { helper ( 'text' ) ; return highlight_phrase ( $ value , $ phrase ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/cleverage/process-bundle/blob/d03bfe390a9d94d4d51752e463abd0b6323bf4f7/Transformer/MappingTransformer.php#L232-L247<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function configureMappingOptions ( OptionsResolver $ resolver ) { $ resolver -> setDefaults ( [ 'code' => null , // Source property 'constant' => null , 'set_null' => false , // Because the "null" value cannot be covered by the constant option 'ignore_missing' => false , ] ) ; $ resolver -> setAllowedTypes ( 'code' , [ 'NULL' , 'string' , 'array' ] ) ; $ resolver -> setAllowedTypes ( 'set_null' , [ 'boolean' ] ) ; $ resolver -> setAllowedTypes ( 'ignore_missing' , [ 'boolean' ] ) ; $ this -> configureTransformersOptions ( $ resolver ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/phpbb/epv/blob/ef657d88cd1d9d607abf2113db3fe29f01b645e1/src/Output/Output.php#L150-L156<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function writelnIfDebug ( $ message ) { if ( $ this -> debug ) { $ this -> debugMessages [ ] = new Message ( Output :: DEBUG , $ message , null ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/n2n/n2n-impl-persistence-orm/blob/39f309c380d44d72c94224799eb7c7d3530e9780/src/app/n2n/impl/persistence/orm/property/hangar/DateTimePropDef.php#L99-L103<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function createMetaColumn ( EntityProperty $ entityProperty , PropSourceDef $ propSourceDef ) : ? Column { ArgUtils :: assertTrue ( $ entityProperty instanceof DateTimeEntityProperty ) ; return new MysqlDateTimeColumn ( $ entityProperty -> getColumnName ( ) , true , true ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Easy/Element/CheckListbox.php#L35-L64<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function render ( ) { $ fromList = array ( ) ; $ this -> getFromList ( $ fromList ) ; $ style = $ this -> getStyle ( ) ; $ func = $ this -> getFunction ( ) ; $ valueList = array ( ) ; $ valueArray = array ( ) ; $ this -> getFromList ( $ valueList , $ this -> getSelectedList ( ) ) ; foreach ( $ valueList as $ vl ) { $ valueArray [ ] = $ vl [ 'val' ] ; } $ sHTML = "<div name=\"" . $ this -> objectName . "\" ID=\"" . $ this -> objectName . "\" $this->htmlAttr $style>" ; foreach ( $ fromList as $ option ) { $ test = array_search ( $ option [ 'val' ] , $ valueArray ) ; if ( $ test === false ) { $ selectedStr = '' ; } else { $ selectedStr = "CHECKED" ; } $ sHTML .= "<input type=\"checkbox\" name=\"" . $ this -> objectName . "[]\" VALUE=\"" . $ option [ 'val' ] . "\" $selectedStr></input>" . $ option [ 'txt' ] . "<br/>" ; } $ sHTML .= "</div>" ; return $ sHTML ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/slickframework/http/blob/9da14b618e0f75d3d565e0ce928a35d992755e75/src/Client/CurlHttpClient.php#L250-L255<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function checkClientError ( ResponseInterface $ response , RequestInterface $ request ) { if ( $ response -> getStatusCode ( ) >= 400 && $ response -> getStatusCode ( ) < 500 ) { throw new ClientErrorException ( $ request , $ response ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/AeonDigital/PHP-DataModel/blob/57d546000b5628667f16eb7d3e55ac38ac67c61e/src/Traits/FieldCollectionCommomMethods.php#L131-L142<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function collectionGetDistinctKeys ( ) : ? array { if ( $ this -> collectionDistinctKeys === null && $ this -> isReference ( ) === true ) { if ( $ this -> modelValidate === null ) { $ this -> modelValidate = $ this -> modelFactory -> createDataModel ( $ this -> modelName ) ; } $ this -> collectionDistinctKeys = $ this -> modelValidate -> getFieldNames ( ) ; } return $ this -> collectionDistinctKeys ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/EliuFlorez/google-map/blob/b96e3975314a83f806ed86623f7b219d2c96ee9f/src/Overlays/Marker.php#L112-L130<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setPosition ( ) { $ args = func_get_args ( ) ; if ( isset ( $ args [ 0 ] ) && ( $ args [ 0 ] instanceof Coordinate ) ) { $ this -> position = $ args [ 0 ] ; } elseif ( ( isset ( $ args [ 0 ] ) && is_numeric ( $ args [ 0 ] ) ) && ( isset ( $ args [ 1 ] ) && is_numeric ( $ args [ 1 ] ) ) ) { $ this -> position -> setLatitude ( $ args [ 0 ] ) ; $ this -> position -> setLongitude ( $ args [ 1 ] ) ; if ( isset ( $ args [ 2 ] ) && is_bool ( $ args [ 2 ] ) ) { $ this -> position -> setNoWrap ( $ args [ 2 ] ) ; } } elseif ( ! isset ( $ args [ 0 ] ) ) { $ this -> position = null ; } else { throw OverlayException :: invalidMarkerPosition ( ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/tastyigniter/flame/blob/3c922ba1c02b3c14ad4adf91c2f37498045fa92a/src/Pagic/Template.php#L50-L76<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function render ( $ context = [ ] ) { $ this -> mergeGlobals ( $ context ) ; unset ( $ context [ 'this' ] ) ; $ obLevel = ob_get_level ( ) ; ob_start ( ) ; extract ( $ context ) ; // We'll evaluate the contents of the view inside a try/catch block so we can // flush out any stray output that might get out before an error occurs or // an exception is thrown. This prevents any partial views from leaking. try { $ filePath = $ this -> path ; include $ filePath ; } catch ( Exception $ e ) { $ this -> handleException ( $ e , $ obLevel ) ; } catch ( Throwable $ e ) { $ this -> handleException ( new FatalThrowableError ( $ e ) , $ obLevel ) ; } return ob_get_clean ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/atk4/dsql/blob/6abdd965c0ffedb9572fb97ceec1bdc806e941b2/src/Expression.php#L202-L222<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function expr ( $ properties = [ ] , $ arguments = null ) { // If we use DSQL Connection, then we should call expr() from there. // Connection->expr() will return correct, connection specific Expression class. if ( $ this -> connection instanceof Connection ) { return $ this -> connection -> expr ( $ properties , $ arguments ) ; } // Otherwise, connection is probably PDO and we don't know which Expression // class to use, so we make a smart guess :) if ( $ this instanceof Query ) { $ e = new self ( $ properties , $ arguments ) ; } else { $ e = new static ( $ properties , $ arguments ) ; } $ e -> escape_char = $ this -> escape_char ; $ e -> connection = $ this -> connection ; return $ e ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Log/DataCollector/LoggerDataCollector.php#L260-L287<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function sanitizeLogs ( array $ logs ) : array { $ sanitizedLogs = [ ] ; foreach ( $ logs as $ log ) { if ( ! $ this -> isSilencedOrDeprecationErrorLog ( $ log ) ) { $ sanitizedLogs [ ] = $ log ; continue ; } $ exception = $ log [ 'context' ] [ 'exception' ] ; $ errorId = \ md5 ( "{$exception->getSeverity()}/{$exception->getLine()}/{$exception->getFile()}\0{$log['message']}" , true ) ; if ( isset ( $ sanitizedLogs [ $ errorId ] ) ) { $ sanitizedLogs [ $ errorId ] [ 'errorCount' ] ++ ; } else { $ log += [ 'errorCount' => 1 , 'scream' => $ exception instanceof SilencedErrorContext , ] ; $ sanitizedLogs [ $ errorId ] = $ log ; } } return \ array_values ( $ sanitizedLogs ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wp-papi/papi/blob/444960585ed761447b7886ff4cc31be91b4e8302/src/properties/class-papi-property-editor.php#L11-L16<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function add_mce_buttons ( ) { for ( $ i = 0 ; $ i < 4 ; $ i ++ ) { $ num = $ i === 0 ? '' : '_' . ( $ i + 1 ) ; add_filter ( 'mce_buttons' . $ num , [ $ this , 'mce_buttons' ] ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/slince/phpdish/blob/5057eec1b54cb349650d0ce162f663e49287ce2c/src/PHPDish/Bundle/CoreBundle/Application/Kernel.php#L140-L146<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function findSimplePlugins ( ) { $ finder = new CachedPluginFinder ( $ this -> getCacheDir ( ) . '/phpdish_plugins.php' , new PluginFinder ( $ this -> getProjectDir ( ) ) ) ; return $ finder -> findAll ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/View/Parser.php#L762-L785<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function compileTheme ( array & $ theme ) : void { foreach ( $ theme [ 'children' ] as $ key => $ value ) { $ source = $ value [ 'source' ] ; // 编译子对象 $ this -> compileTheme ( $ value ) ; $ theme [ 'children' ] [ $ key ] = $ value ; // 置换对象 $ start = strpos ( $ theme [ 'content' ] , $ source ) ; $ len = $ value [ 'position' ] [ 'end' ] - $ value [ 'position' ] [ 'start' ] + 1 ; $ theme [ 'content' ] = substr_replace ( $ theme [ 'content' ] , $ value [ 'content' ] , $ start , $ len ) ; } // 编译自身 if ( $ theme [ 'compiler' ] ) { $ compilers = $ theme [ 'compiler' ] . 'Compiler' ; $ this -> compiler -> { $ compilers } ( $ theme ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/qranio-com/azure-sdk-pear-deps/blob/6609eab8623759b5e23345ded80d832278a7b680/src/PEAR/Downloader/Package.php#L1514-L1549<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>function _fromFile ( & $ param ) { $ saveparam = $ param ; if ( is_string ( $ param ) ) { if ( ! @ file_exists ( $ param ) ) { $ test = explode ( '#' , $ param ) ; $ group = array_pop ( $ test ) ; if ( @ file_exists ( implode ( '#' , $ test ) ) ) { $ this -> setGroup ( $ group ) ; $ param = implode ( '#' , $ test ) ; $ this -> _explicitGroup = true ; } } if ( @ is_file ( $ param ) ) { $ this -> _type = 'local' ; $ options = $ this -> _downloader -> getOptions ( ) ; $ pkg = & $ this -> getPackagefileObject ( $ this -> _config , $ this -> _downloader -> _debug ) ; PEAR :: pushErrorHandling ( PEAR_ERROR_RETURN ) ; $ pf = & $ pkg -> fromAnyFile ( $ param , PEAR_VALIDATE_INSTALLING ) ; PEAR :: popErrorHandling ( ) ; if ( PEAR :: isError ( $ pf ) ) { $ this -> _valid = false ; $ param = $ saveparam ; return $ pf ; } $ this -> _packagefile = & $ pf ; if ( ! $ this -> getGroup ( ) ) { $ this -> setGroup ( 'default' ) ; // install the default dependency group } return $ this -> _valid = true ; } } $ param = $ saveparam ; return $ this -> _valid = false ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wikimedia/simplei18n/blob/f1a39234bba74685070733d44bfc658407dd8245/src/TwigExtension.php#L83-L92<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function messageFilterCallback ( $ key /*...*/ ) { $ params = func_get_args ( ) ; array_shift ( $ params ) ; if ( count ( $ params ) == 1 && is_array ( $ params [ 0 ] ) ) { // Unwrap args array $ params = $ params [ 0 ] ; } $ msg = $ this -> ctx -> message ( $ key , $ params ) ; return $ msg -> plain ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/Protocol/Server.php#L141-L166<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function process ( string $ process ) : void { $ newProgress = new Process ( function ( Process $ worker ) use ( $ process ) { $ newProgress = $ this -> container -> make ( $ process ) ; if ( ! is_object ( $ newProgress ) || ( $ newProgress instanceof ProtocolProcess ) ) { throw new InvalidArgumentException ( sprintf ( 'Process `%s` was invalid.' , $ process ) ) ; } if ( ! is_callable ( [ $ newProgress , 'handle' ] ) ) { throw new InvalidArgumentException ( sprintf ( 'The `handle` of process `%s` was not found.' , $ process ) ) ; } $ worker -> name ( $ this -> option [ 'process_name' ] . '.' . $ newProgress -> getName ( ) ) ; $ newProgress -> handle ( $ this , $ worker ) ; } ) ; $ this -> server -> addProcess ( $ newProgress ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/dreamfactorysoftware/df-aws/blob/6f13ef0757d2228c2c5b59933b8fe520eb1d84bf/src/Database/Schema/RedshiftSchema.php#L473-L477<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function addForeignKey ( $ name , $ table , $ columns , $ refTable , $ refColumns , $ delete = null , $ update = null ) { // ON DELETE and ON UPDATE not supported by Redshift return parent :: addForeignKey ( $ name , $ table , $ columns , $ refTable , $ refColumns , null , null ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/inblank/yii2-seobility/blob/0459c84f4b9377ca2d05a90864ab1dbd2a137242/src/models/Seo.php#L62-L80<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function find ( ActiveRecord $ owner , $ condition = 0 ) { $ seo = new self ( ) ; $ seo -> _owner = $ owner ; $ condition = ( int ) $ condition ; $ data = $ owner -> getIsNewRecord ( ) ? false : ( new Query ( ) ) -> from ( Seo :: tableName ( $ owner ) ) -> limit ( 1 ) -> andWhere ( [ 'condition' => $ condition , 'model_id' => $ owner -> getPrimaryKey ( ) , ] ) -> one ( $ owner -> getDb ( ) ) ; $ seo -> _isNewRecord = empty ( $ data ) ; if ( $ data ) { $ seo -> setAttributes ( $ data ) ; } $ seo -> condition = $ condition ; return $ seo ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Danack/AdvancedSessionManagement/blob/c4e8c1b34f83044cd26972f9642090d097fb5c1c/lib/ASM/File/FileDriver.php#L129-L160<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function createSession ( SessionManager $ sessionManager , $ userProfile = null ) { list ( $ sessionId , $ fileHandle ) = $ this -> createNewSessionFile ( ) ; $ lockFileHandle = null ; if ( $ sessionManager -> getLockMode ( ) == SessionConfig :: LOCK_ON_OPEN ) { $ lockFileHandle = $ this -> acquireLock ( $ sessionId , $ sessionManager -> getSessionConfig ( ) -> getLockMilliSeconds ( ) , $ sessionManager -> getSessionConfig ( ) -> getMaxLockWaitTimeMilliseconds ( ) ) ; } $ existingProfiles = [ ] ; if ( $ userProfile !== null ) { $ existingProfiles [ ] = $ userProfile ; } $ fileInfo = new FileInfo ( $ lockFileHandle ) ; $ this -> save ( $ sessionId , [ ] , $ existingProfiles , $ fileInfo ) ; // fclose($fileHandle); umm. return new FileSession ( $ sessionId , [ ] , $ this , $ sessionManager , $ existingProfiles , $ fileInfo , false ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/MrJuliuss/syntara/blob/4d8c33aea1908ac404e0e00e09d5d1e2119e9039/src/controllers/UserController.php#L288-L357<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function putShow ( $ userId ) { try { $ validator = new UserValidator ( Input :: all ( ) , 'update' ) ; if ( ! $ validator -> passes ( ) ) { return Response :: json ( array ( 'userUpdated' => false , 'errorMessages' => $ validator -> getErrors ( ) ) ) ; } $ permissionsValues = Input :: get ( 'permission' ) ; $ permissions = $ this -> _formatPermissions ( $ permissionsValues ) ; // Find the user using the user id $ user = Sentry :: getUserProvider ( ) -> findById ( $ userId ) ; $ user -> username = Input :: get ( 'username' ) ; $ user -> email = Input :: get ( 'email' ) ; $ user -> last_name = Input :: get ( 'last_name' ) ; $ user -> first_name = Input :: get ( 'first_name' ) ; $ user -> permissions = $ permissions ; $ currentUser = Sentry :: getUser ( ) ; $ permissions = ( empty ( $ permissions ) ) ? '' : json_encode ( $ permissions ) ; $ hasPermissionManagement = $ currentUser -> hasAccess ( Config :: get ( 'syntara::permissions.addUserPermission' ) ) || $ currentUser -> hasAccess ( 'superuser' ) ; if ( $ hasPermissionManagement === true ) { DB :: table ( 'users' ) -> where ( 'id' , $ userId ) -> update ( array ( 'permissions' => $ permissions ) ) ; } $ pass = Input :: get ( 'pass' ) ; if ( ! empty ( $ pass ) ) { $ user -> password = $ pass ; } // Update the user if ( $ user -> save ( ) ) { // if the user has permission to update $ banned = Input :: get ( 'banned' ) ; if ( isset ( $ banned ) && Sentry :: getUser ( ) -> getId ( ) !== $ user -> getId ( ) ) { $ this -> _banUser ( $ userId , $ banned ) ; } if ( $ currentUser -> hasAccess ( Config :: get ( 'syntara::permissions.addUserGroup' ) ) ) { $ groups = ( Input :: get ( 'groups' ) === null ) ? array ( ) : Input :: get ( 'groups' ) ; $ userGroups = $ user -> getGroups ( ) -> toArray ( ) ; foreach ( $ userGroups as $ group ) { if ( ! in_array ( $ group [ 'id' ] , $ groups ) ) { $ group = Sentry :: getGroupProvider ( ) -> findById ( $ group [ 'id' ] ) ; $ user -> removeGroup ( $ group ) ; } } if ( isset ( $ groups ) && is_array ( $ groups ) ) { foreach ( $ groups as $ groupId ) { $ group = Sentry :: getGroupProvider ( ) -> findById ( $ groupId ) ; $ user -> addGroup ( $ group ) ; } } } return Response :: json ( array ( 'userUpdated' => true , 'message' => trans ( 'syntara::users.messages.update-success' ) , 'messageType' => 'success' ) ) ; } else { return Response :: json ( array ( 'userUpdated' => false , 'message' => trans ( 'syntara::users.messages.update-fail' ) , 'messageType' => 'danger' ) ) ; } } catch ( \ Cartalyst \ Sentry \ Users \ UserExistsException $ e ) { return Response :: json ( array ( 'userUpdated' => false , 'message' => trans ( 'syntara::users.messages.user-email-exists' ) , 'messageType' => 'danger' ) ) ; } catch ( \ Exception $ e ) { return Response :: json ( array ( 'userUpdated' => false , 'message' => trans ( 'syntara::users.messages.user-name-exists' ) , 'messageType' => 'danger' ) ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/valkyrjaio/valkyrja/blob/3b4ad998d96c3ab08e36a11c76ce8d9d48759ffe/src/Valkyrja/ORM/Repositories/PDORepository.php#L462-L496<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function selectQueryBuilder ( array $ columns = null , array $ criteria = null , array $ orderBy = null , int $ limit = null , int $ offset = null ) : QueryBuilder { // Create a new query $ query = $ this -> entityManager -> getQueryBuilder ( ) -> select ( $ columns ) -> table ( $ this -> table ) ; // If criteria has been passed if ( null !== $ criteria ) { $ this -> setCriteriaInQuery ( $ query , $ criteria ) ; } // If order by has been passed if ( null !== $ orderBy ) { $ this -> setOrderByInQuery ( $ query , $ orderBy ) ; } // If a limit is passed if ( null !== $ limit ) { $ this -> setLimitInQuery ( $ query , $ limit ) ; } // If an offset is passed if ( null !== $ offset ) { $ this -> setOffsetInQuery ( $ query , $ offset ) ; } return $ query ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/YOURLS/YOURLS/blob/c2b2863f416726039be715a67c245f170be12324/includes/functions-xml.php#L16-L22<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>function array2xml ( $ array ) { //global $text; $ this -> text = "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?><result>" ; $ this -> text .= $ this -> array_transform ( $ array ) ; $ this -> text .= "</result>" ; return $ this -> text ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/kitpages/KitpagesCmsBundle/blob/ae950dd4f4adb401644805f9f5a971ab34993c02/Model/PageManager.php#L140-L148<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getObjectBySerializeFormat ( $ content , $ format , $ entity ) { $ page = $ this -> jmsSerializer -> deserialize ( $ content , $ entity , $ format ) ; return $ page ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/skeetr/skeetr/blob/eb4ae5f7a6d3fed322041bbce830961e81ed6e20/src/Skeetr/Client/RPC/Method/Control.php#L44-L54<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function process ( \ GearmanJob $ job ) { $ start = microtime ( true ) ; $ command = json_decode ( $ job -> workload ( ) , true ) ; $ result = $ this -> executeCommand ( $ command ) ; $ result [ 'elapsed' ] = microtime ( true ) - $ start ; return json_encode ( $ result ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/AntonTerekhov/OrientDB-PHP/blob/c5196fe05bf249e2658a39be0866444997287cf0/OrientDB/Commands/OrientDBCommandAbstract.php#L297-L307<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function readString ( ) { $ size = $ this -> readInt ( ) ; if ( $ size === - 1 ) { return null ; } if ( $ size === 0 ) { return '' ; } return $ this -> readRaw ( $ size ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/denhaphp/framework/blob/2c77b025d4e4181e5eee34daf4471a439c4e0025/src/Mysqli.php#L354-L379<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function field ( $ field = '*' ) { if ( ! $ field ) { $ this -> field = '*' ; return $ this ; } $ newField = '' ; $ field = is_array ( $ field ) ? $ field : explode ( ',' , $ field ) ; foreach ( $ field as $ k => $ v ) { if ( stripos ( $ v , 'as' ) === false && stripos ( $ v , '*' ) === false && stripos ( $ v , '`' ) === false && stripos ( $ v , '.' ) === false && stripos ( $ v , 'concat' ) === false ) { $ newField .= '`' . $ v . '`,' ; } else { $ newField .= $ v . ',' ; } } $ newField = substr ( $ newField , 0 , - 1 ) ; $ this -> field = $ newField ; $ this -> build [ 'field' ] = $ field ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/skeeks-cms/cms-shop/blob/506c7f549352c15ddf6f2b15d963df7fd555c489/src/paySystems/YandexKassaPaySystem.php#L173-L196<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function checkRequest ( $ request ) { if ( $ this -> security_type == static :: SECURITY_MD5 ) { if ( $ this -> checkRequestMD5 ( $ request ) ) { \ Yii :: info ( "checkRequest true" , YandexKassaPaySystem :: class ) ; return true ; } } else { if ( $ yandexKassa -> security_type == YandexKassaPaySystem :: SECURITY_PKCS7 ) { // Checking for a certificate sign. If the checking fails, respond with "200" error code. if ( ( $ request = $ this -> verifySign ( ) ) == null ) { $ response = $ this -> buildResponse ( $ this -> action , null , 200 ) ; $ this -> sendResponse ( $ response ) ; } $ this -> log ( "Request: " . print_r ( $ request , true ) ) ; //TODO:; make it's \ Yii :: error ( 'SECURITY_PKCS7 — todo:: not realized',  Y ndexKassaPaySystem:: cl ass);   } } \ Yii :: info ( "checkRequest true" , YandexKassaPaySystem :: class ) ; return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Codeception/robo-paracept/blob/ff00b078921ddd072122cd5e8267fdb76f92d054/src/MergeReports.php#L278-L285<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function updateSummaryTable ( $ dstFile ) { $ dstFile = new \ DOMXPath ( $ dstFile ) ; $ pathFor = function ( $ type ) { return "//div[@id='stepContainerSummary']//td[@class='$type']" ; } ; $ dstFile -> query ( $ pathFor ( 'scenarioSuccessValue' ) ) -> item ( 0 ) -> nodeValue = $ this -> countSuccess ; $ dstFile -> query ( $ pathFor ( 'scenarioFailedValue' ) ) -> item ( 0 ) -> nodeValue = $ this -> countFailed ; $ dstFile -> query ( $ pathFor ( 'scenarioSkippedValue' ) ) -> item ( 0 ) -> nodeValue = $ this -> countSkipped ; $ dstFile -> query ( $ pathFor ( 'scenarioIncompleteValue' ) ) -> item ( 0 ) -> nodeValue = $ this -> countIncomplete ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/orchestral/extension/blob/d461c988ba6ec0200fc8f4e35b515e6710d3ef0a/src/Finder.php#L108-L117<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function addPath ( string $ path ) { $ path = \ rtrim ( $ path , '/' ) ; if ( ! \ in_array ( $ path , $ this -> paths ) ) { $ this -> paths [ ] = $ path ; } return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/fly-studio/laravel-addons-core/blob/2ce72b209fa544a27b107d72f88c4ea6fbd6fc29/src/Models/Tree.php#L109-L115<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getChildren ( $ columns = [ '*' ] ) { $ columns = $ this -> formatColumns ( $ columns ) ; $ builder = static :: where ( $ this -> parentKey , $ this -> getKey ( ) ) ; ! empty ( $ this -> orderKey ) && $ builder -> orderBy ( $ this -> orderKey ) ; return $ builder -> get ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/intuit/QuickBooks-V3-PHP-SDK/blob/09f9f42e4cf49a7d6e0aa4d2c15e15eba245bfd5/src/WebhooksService/WebhooksService.php#L41-L45<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function verifyPayload ( $ token , $ payload , $ intuitHeaderSignature ) { $ verifier = new TokenVerifier ( $ token ) ; return $ verifier -> verifyPayLoad ( $ payload , $ intuitHeaderSignature ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/OptionsResolver/Command/OptionsReader.php#L68-L83<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function readMandatoryOption ( string $ className , array $ dimensions , array $ mandatoryOptions ) : array { $ options = [ ] ; foreach ( $ mandatoryOptions as $ key => $ mandatoryOption ) { if ( ! \ is_scalar ( $ mandatoryOption ) ) { $ options [ $ key ] = $ this -> readMandatoryOption ( $ className , $ dimensions , $ mandatoryOptions [ $ key ] ) ; continue ; } $ options [ $ mandatoryOption ] = null ; } return $ options ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/Entity.php#L433-L440<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function __isset ( string $ key ) : bool { // Ensure an actual property exists, otherwise // we confuse the data mapping. $ value = property_exists ( $ this , $ key ) ? $ this -> $ key : null ; return ! is_null ( $ value ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/rollerworks-graveyard/datagrid/blob/1b65cf2cf1bb5d3f75c99a309b6cec79d12a9831/src/Extension/Core/DataTransformer/EmptyValueTransformer.php#L47-L87<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function transform ( $ value ) { if ( is_array ( $ this -> emptyValue ) && ! is_array ( $ value ) ) { throw new TransformationFailedException ( 'Empty value is an array, but provided value is not an array.' ) ; } // Note. empty is not used here as 0 is a none-empty value. // Only false, null and an empty string is considered empty. if ( ! is_array ( $ value ) ) { return '' === ( string ) $ value ? $ this -> emptyValue : $ value ; } $ emptyIsString = is_string ( $ this -> emptyValue ) ; foreach ( $ value as $ field => & $ val ) { if ( isset ( $ val ) && '' !== $ val ) { continue ; } if ( $ emptyIsString ) { $ val = $ this -> emptyValue ; } elseif ( ! array_key_exists ( $ field , $ this -> emptyValue ) ) { throw new TransformationFailedException ( sprintf ( 'No empty value-replacement for field "%s" set.' , $ field ) ) ; } else { $ emptyValue = $ this -> emptyValue [ $ field ] ; if ( ! is_string ( $ emptyValue ) ) { throw new TransformationFailedException ( sprintf ( 'Empty value of field "%s" must be a string value.' , $ field ) ) ; } $ val = $ emptyValue ; } } return $ value ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Filesystem/Filesystem.php#L469-L492<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function parseVisibility ( string $ path , string $ visibility = null ) : ? int { $ type = '' ; if ( \ is_file ( $ path ) ) { $ type = 'file' ; } elseif ( \ is_dir ( $ path ) ) { $ type = 'dir' ; } if ( $ visibility === null || $ type === '' ) { return null ; } if ( $ visibility === FilesystemContract :: VISIBILITY_PUBLIC ) { return $ this -> permissions [ $ type ] [ 'public' ] ; } if ( $ visibility === FilesystemContract :: VISIBILITY_PRIVATE ) { return $ this -> permissions [ $ type ] [ 'private' ] ; } throw new InvalidArgumentException ( 'Unknown visibility: ' . $ visibility ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/aphiria/router/blob/d9fa90d5f17dddbd52f311c2ec5cfec5865fd66b/src/Builders/RouteBuilder.php#L152-L157<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function withManyConstraints ( array $ constraints ) : self { $ this -> constraints = \ array_merge ( $ this -> constraints , $ constraints ) ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/icicleio/socket/blob/b46366df91831a11c734078e2d3b843fca66ebc5/src/Datagram/BasicDatagram.php#L169-L192<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function receive ( int $ length = 0 , float $ timeout = 0 ) : \ Generator { while ( ! $ this -> readQueue -> isEmpty ( ) ) { /** @var \Icicle\Awaitable\Delayed $delayed */ $ delayed = $ this -> readQueue -> bottom ( ) ; yield $ delayed ; // Wait for previous read to complete. } if ( ! $ this -> isOpen ( ) ) { throw new UnavailableException ( 'The datagram is no longer readable.' ) ; } $ this -> length = ( int ) $ length ; if ( 0 > $ this -> length ) { throw new InvalidArgumentError ( 'The length must be a non-negative integer.' ) ; } elseif ( 0 === $ this -> length ) { $ this -> length = self :: MAX_PACKET_SIZE ; } $ this -> readQueue -> push ( $ delayed = new Delayed ( $ this -> onReceiveCancelled ) ) ; $ this -> poll -> listen ( $ timeout ) ; return yield $ delayed ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/phpmob/settings-bundle/blob/1f285580a63f441b4bcffedb884e325713b25388/src/Controller/UpdateController.php#L84-L88<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function transformSettingValue ( SettingInterface $ setting ) { return $ this -> get ( 'phpmob.settings.transformer' ) -> reverse ( $ setting -> getSection ( ) , $ setting -> getKey ( ) , $ setting -> getValue ( ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/mk-j/PHP_XLSXWriter/blob/76fe5175ba66b8dc271068fa7ae48ce1b36b9db3/xlsxwriter.class.php#L829-L885<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function convert_date_time ( $ date_input ) //thanks to Excel::Writer::XLSX::Worksheet.pm (perl) { $ days = 0 ; # Number of days since epoch $ seconds = 0 ; # Time expressed as fraction of 24h hours in seconds $ year = $ month = $ day = 0 ; $ hour = $ min = $ sec = 0 ; $ date_time = $ date_input ; if ( preg_match ( "/(\d{4})\-(\d{2})\-(\d{2})/" , $ date_time , $ matches ) ) { list ( $ junk , $ year , $ month , $ day ) = $ matches ; } if ( preg_match ( "/(\d+):(\d{2}):(\d{2})/" , $ date_time , $ matches ) ) { list ( $ junk , $ hour , $ min , $ sec ) = $ matches ; $ seconds = ( $ hour * 60 * 60 + $ min * 60 + $ sec ) / ( 24 * 60 * 60 ) ; } //using 1900 as epoch, not 1904, ignoring 1904 special case # Special cases for Excel. if ( "$year-$month-$day" == '1899-12-31' ) return $ seconds ; # Excel 1900 epoch if ( "$year-$month-$day" == '1900-01-00' ) return $ seconds ; # Excel 1900 epoch if ( "$year-$month-$day" == '1900-02-29' ) return 60 + $ seconds ; # Excel false leapday # We calculate the date by calculating the number of days since the epoch # and adjust for the number of leap days. We calculate the number of leap # days by normalising the year in relation to the epoch. Thus the year 2000 # becomes 100 for 4 and 100 year leapdays and 400 for 400 year leapdays. $ epoch = 1900 ; $ offset = 0 ; $ norm = 300 ; $ range = $ year - $ epoch ; # Set month days and check for leap year. $ leap = ( ( $ year % 400 == 0 ) || ( ( $ year % 4 == 0 ) && ( $ year % 100 ) ) ) ? 1 : 0 ; $ mdays = array ( 31 , ( $ leap ? 29 : 28 ) , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 ) ; # Some boundary checks if ( $ year < $ epoch || $ year > 9999 ) return 0 ; if ( $ month < 1 || $ month > 12 ) return 0 ; if ( $ day < 1 || $ day > $ mdays [ $ month - 1 ] ) return 0 ; # Accumulate the number of days since the epoch. $ days = $ day ; # Add days for current month $ days += array_sum ( array_slice ( $ mdays , 0 , $ month - 1 ) ) ; # Add days for past months $ days += $ range * 365 ; # Add days for past years $ days += intval ( ( $ range ) / 4 ) ; # Add leapdays $ days -= intval ( ( $ range + $ offset ) / 100 ) ; # Subtract 100 year leapdays $ days += intval ( ( $ range + $ offset + $ norm ) / 400 ) ; # Add 400 year leapdays $ days -= $ leap ; # Already counted above # Adjust for Excel erroneously treating 1900 as a leap year. if ( $ days > 59 ) { $ days ++ ; } return $ days + $ seconds ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/arjanwestdorp/imaginary-client/blob/660697df0d40915426b0df7ee0164b2625bf8ac1/src/Builder.php#L49-L58<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function fit ( $ gravity = null ) { $ this -> manipulations [ 'c' ] = 'fit' ; if ( ! is_null ( $ gravity ) ) { $ this -> manipulations [ 'g' ] = $ gravity ; } return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/skeeks-cms/cms-shop/blob/506c7f549352c15ddf6f2b15d963df7fd555c489/src/components/ShopComponent.php#L361-L387<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getArrayForSelectElement ( ) { if ( ! $ data = CmsContent :: getDataForSelect ( ) ) { return [ ] ; } $ ids = ArrayHelper :: map ( $ this -> shopContents , 'id' , 'id' ) ; $ result = [ ] ; foreach ( $ data as $ typeKey => $ type ) { if ( $ type ) { $ contents = [ ] ; foreach ( $ type as $ key => $ value ) { if ( in_array ( $ key , $ ids ) ) { $ contents [ $ key ] = $ value ; } } if ( $ contents ) { $ result [ $ typeKey ] = $ contents ; } } } return $ result ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/silvershop/silvershop-core/blob/b090e970b06c0fb7e68107360760b6e2d6d184c4/src/Page/Product.php#L459-L472<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function Image ( ) { $ image = $ this -> getComponent ( 'Image' ) ; $ this -> extend ( 'updateImage' , $ image ) ; if ( $ image && $ image -> exists ( ) ) { return $ image ; } $ image = SiteConfig :: current_site_config ( ) -> DefaultProductImage ( ) ; if ( $ image && $ image -> exists ( ) ) { return $ image ; } return null ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/r4j4h/php-druid-query/blob/c5f9f5b8c3efd233eada7f3ca0b38baea5407e83/examples/src/ExampleGroupByQueries/ReferralsByCompanyGroupByQueryGenerator.php#L39-L49<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function generateQuery ( IDruidQueryParameters $ params ) { // @var ReferralsByCompanyGroupByQueryParameters $params $ query = $ this -> queryTemplate ; $ query = str_replace ( '{DATASOURCE}' , $ params -> dataSource , $ query ) ; $ query = str_replace ( '{STARTINTERVAL}' , $ params -> startInterval , $ query ) ; $ query = str_replace ( '{ENDINTERVAL}' , $ params -> endInterval , $ query ) ; return $ query ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/cleverage/process-bundle/blob/d03bfe390a9d94d4d51752e463abd0b6323bf4f7/Task/Doctrine/DoctrineBatchWriterTask.php#L51-L60<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function execute ( ProcessState $ state ) { $ this -> batch [ ] = $ state -> getInput ( ) ; if ( \ count ( $ this -> batch ) >= $ this -> getOption ( $ state , 'batch_count' ) ) { $ this -> writeBatch ( $ state ) ; } else { $ state -> setSkipped ( true ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/develpr/alexa-app/blob/4e14c2d2b6db4c58fb11c82867d1e712575f1ec3/src/Http/Routing/Matching/AlexaValidator.php#L20-L32<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function matches ( Route $ route , Request $ request ) { // If this isn't an Alexa Route then it doesn't match! if ( ! $ route instanceof AlexaRoute ) { return false ; } if ( ! $ request -> isPromptResponse ( ) ) { return ( $ request -> getRequestType ( ) . $ request -> getIntent ( ) == $ route -> getRouteIntent ( ) ) ; } else { return ( $ request -> getRequestType ( ) . $ request -> getPromptResponseIntent ( ) == $ route -> getRouteIntent ( ) ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/praxigento/mobi_mod_accounting/blob/87ebe278cb3f89387ee6c88a1ee902b4dd7fe68f/Service/Account/Get.php#L64-L101<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function exec ( $ request ) { assert ( $ request instanceof ARequest ) ; /** define local working data */ $ typeCode = $ request -> getAssetTypeCode ( ) ; $ typeId = $ request -> getAssetTypeId ( ) ; $ custId = $ request -> getCustomerId ( ) ; $ isSys = $ request -> getIsSystem ( ) ; /** perform processing */ if ( is_null ( $ typeId ) ) { /* get type ID by code if missed */ $ typeId = $ this -> daoTypeAsset -> getIdByCode ( $ typeCode ) ; } /* return cached data for system customer if exists */ if ( $ isSys && isset ( $ this -> cachedSysAccs [ $ typeId ] ) ) { $ result = $ this -> cachedSysAccs [ $ typeId ] ; } else { /* ... or get data from DB */ if ( $ isSys ) { /* get system customer ID */ $ custId = $ this -> daoAccount -> getSystemCustomerId ( ) ; } $ account = $ this -> getAccount ( $ custId , $ typeId ) ; $ result = $ this -> composeResult ( $ account ) ; /* cache data for system customer */ if ( $ isSys ) { $ this -> cachedSysAccs [ $ typeId ] = $ result ; } } /** compose result */ return $ result ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/intuit/QuickBooks-V3-PHP-SDK/blob/09f9f42e4cf49a7d6e0aa4d2c15e15eba245bfd5/src/XSD2PHP/src/com/mikebevz/xsd2php/wsdl/Wsdl_1_1.php#L354-L365<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function createSimpleElement ( $ name , $ type ) { $ el = $ this -> dom -> createElement ( $ this -> xmlSchemaPreffix . ':element' ) ; $ el -> setAttribute ( 'name' , $ name ) ; if ( preg_match ( '/:/' , $ type ) ) { $ el -> setAttribute ( 'type' , $ type ) ; } else { $ el -> setAttribute ( 'type' , $ this -> xmlSchemaPreffix . ':' . $ type ) ; } return $ el ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/F21/Paradox/blob/d1f47203e743760d8d8d6232bf0ea62920e7eefe/Paradox/Client.php#L526-L529<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function createFulltextIndex ( $ collection , $ field , $ minLength = null ) { return $ this -> getToolbox ( $ this -> _currentConnection ) -> getCollectionManager ( ) -> createFulltextIndex ( $ collection , $ field , $ minLength ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/dreamfactorysoftware/df-aws/blob/6f13ef0757d2228c2c5b59933b8fe520eb1d84bf/src/Resources/SnsTopic.php#L171-L192<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function retrieveTopic ( $ resource ) { $ request = [ 'TopicArn' => $ this -> service -> addArnPrefix ( $ resource ) ] ; try { if ( null !== $ result = $ this -> service -> getConnection ( ) -> getTopicAttributes ( $ request ) ) { $ out = array_get ( $ result -> toArray ( ) , 'Attributes' ) ; $ out [ 'Topic' ] = $ this -> service -> stripArnPrefix ( $ resource ) ; return $ out ; } } catch ( \ Exception $ ex ) { if ( null !== $ newEx = Sns :: translateException ( $ ex ) ) { throw $ newEx ; } throw new InternalServerErrorException ( "Failed to retrieve properties for '$resource'.\n{$ex->getMessage()}" , $ ex -> getCode ( ) ) ; } return [ ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ikodota/flysystem-china/blob/ded1dd71f05c49216a97a15a57d523b0b4fbe1ab/src/Upyun/UpyunAdapter.php#L320-L325<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function copy ( $ path , $ newpath ) { $ this -> writeStream ( $ this -> mergePath ( $ newpath ) , $ this -> readStream ( $ this -> mergePath ( $ path ) ) [ 'stream' ] , new Config ( ) ) ; return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/orchestral/extension/blob/d461c988ba6ec0200fc8f4e35b515e6710d3ef0a/src/ExtensionServiceProvider.php#L37-L51<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function registerExtension ( ) : void { $ this -> app -> singleton ( 'orchestra.extension' , function ( Application $ app ) { $ config = $ app -> make ( 'config' ) ; $ events = $ app -> make ( 'events' ) ; $ files = $ app -> make ( 'files' ) ; $ finder = $ app -> make ( 'orchestra.extension.finder' ) ; $ status = $ app -> make ( 'orchestra.extension.status' ) ; $ provider = $ app -> make ( 'orchestra.extension.provider' ) ; return new Factory ( $ app , new Dispatcher ( $ app , $ config , $ events , $ files , $ finder , $ provider ) , $ status ) ; } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/unclecheese/silverstripe-dashboard/blob/d8029a9c3b0f857acaa644ca93ff0188f100f7bc/code/thirdparty/gapi.php#L90-L103<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function requestAccountData ( $ start_index = 1 , $ max_results = 1000 ) { $ get_variables = array ( 'start-index' => $ start_index , 'max-results' => $ max_results , ) ; $ url = new gapiRequest ( gapi :: account_data_url ) ; $ response = $ url -> get ( $ get_variables , $ this -> auth_method -> generateAuthHeader ( ) ) ; if ( substr ( $ response [ 'code' ] , 0 , 1 ) == '2' ) { return $ this -> accountObjectMapper ( $ response [ 'body' ] ) ; } else { throw new Exception ( 'GAPI: Failed to request account data. Error: "' . strip_tags ( $ response [ 'body' ] ) . '"' ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/activecollab/databaseobject/blob/93ebbc26fdcd82e8effa15fea46432dafbfa5e83/src/Entity/Entity.php#L392-L412<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function copy ( $ save = false ) { $ object_class = get_class ( $ this ) ; /** @var EntityInterface $copy */ $ copy = new $ object_class ( $ this -> connection , $ this -> pool , $ this -> log ) ; foreach ( $ this -> getFields ( ) as $ field ) { if ( $ this -> isPrimaryKey ( $ field ) ) { continue ; } $ copy -> setFieldValue ( $ field , $ this -> getFieldValue ( $ field ) ) ; } if ( $ save ) { $ copy -> save ( ) ; } return $ copy ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/alekitto/function-mock/blob/cd920d7e5da05df8df38b349169cb8adac5e6b27/lib/Promise/ReturnArgumentPromise.php#L44-L47<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function execute ( array $ args , FunctionProphecy $ function ) { return count ( $ args ) > $ this -> index ? $ args [ $ this -> index ] : null ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/DevFactoryCH/media/blob/d30611fe32bc302616eec3e7db1c2df5d3542ba6/src/MediaTrait.php#L407-L422<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function databasePut ( ) { $ media = [ 'filename' => $ this -> directory_uri . $ this -> filename_new , 'mime' => $ this -> file -> getMimeType ( ) , 'size' => $ this -> file -> getSize ( ) , 'title' => $ this -> getTitle ( ) , 'alt' => $ this -> getAlt ( ) , 'name' => $ this -> getName ( ) , 'group' => $ this -> group , 'status' => TRUE , 'weight' => $ this -> getWeight ( ) , ] ; $ model = config ( 'media.config.model' ) ; return $ this -> media ( ) -> save ( new $ model ( $ media ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Payum/Payum/blob/cf4be4f91d9bf24069153aceeb44b4f5b3d4f011/src/Payum/Core/Registry/AbstractRegistry.php#L114-L121<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getGatewayFactory ( $ name ) { if ( ! isset ( $ this -> gatewayFactories [ $ name ] ) ) { throw new InvalidArgumentException ( sprintf ( 'Gateway factory "%s" does not exist.' , $ name ) ) ; } return $ this -> getService ( $ this -> gatewayFactories [ $ name ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wpsharks/core/blob/7a086f144d15ba2587c348744b75f811b9dd6625/src/includes/classes/Core/Utils/GitHub.php#L343-L412<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function mdIssueRefs ( $ value , array $ args = [ ] ) { if ( is_array ( $ value ) || is_object ( $ value ) ) { foreach ( $ value as $ _key => & $ _value ) { $ _value = $ this -> mdIssueRefs ( $ _value , $ args ) ; } // unset($_key, $_value); return $ value ; } $ markdown = ( string ) $ value ; if ( ! isset ( $ markdown [ 0 ] ) ) { return $ markdown ; } $ default_args = [ 'current_owner' => '' , 'current_repo' => '' , ] ; $ args += $ default_args ; // Merge defaults. $ current_owner = ( string ) $ args [ 'current_owner' ] ; $ current_repo = ( string ) $ args [ 'current_repo' ] ; $ have_currents = $ current_owner && $ current_repo ; $ current_owner_regex = '(?<owner>' . $ this -> c :: escRegex ( $ current_owner ) . ')' ; $ owner_regex = '(?<owner>[a-z][a-z0-9_\-]*?[a-z0-9])' ; $ repo_regex = '(?<repo>[a-z][a-z0-9_\-]*?[a-z0-9])' ; $ issue_regex = '(?<issue>[0-9]+)' ; $ comment_regex = '(?<comment>#[^#\s]+)?' ; $ pull_url_regex = '/(?<=^|[\s;,<]|(?<!\])\()https?\:\/\/github\.com\/' . $ owner_regex . '\/' . $ repo_regex . '\/(?<is_pull>pull)\/' . $ issue_regex . $ comment_regex . '(?=$|[\s.!?;,)>])/ui' ; $ issue_url_regex = '/(?<=^|[\s;,<]|(?<!\])\()https?\:\/\/github\.com\/' . $ owner_regex . '\/' . $ repo_regex . '\/issues\/' . $ issue_regex . $ comment_regex . '(?=$|[\s.!?;,)>])/ui' ; $ owner_repo_issue_regex = '/(?<=^|[\s;,]|(?<!\])\()' . $ owner_regex . '\/' . $ repo_regex . '#' . $ issue_regex . '(?=$|[\s.!?;,)])/ui' ; $ current_owner_issue_regex = $ have_currents ? '/(?<=^|[\s;,]|(?<!\])\()' . $ current_owner_regex . '#' . $ issue_regex . '(?=$|[\s.!?;,)])/ui' : '' ; $ issue_number_regex = $ have_currents ? '/(?<=^|[\s;,]|(?<!\])\()#' . $ issue_regex . '(?=$|[\s.!?;,)])/ui' : '' ; $ Tokenizer = $ this -> c :: tokenize ( $ markdown , [ 'md-fences' ] ) ; $ markdown = & $ Tokenizer -> getString ( ) ; // By reference. foreach ( [ $ pull_url_regex , $ issue_url_regex , $ owner_repo_issue_regex , $ current_owner_issue_regex , $ issue_number_regex ] as $ _regex ) { if ( ! $ _regex ) { // Skip if empty; e.g., currents not available. continue ; // Not possible; regex is empty. } $ markdown = preg_replace_callback ( $ _regex , function ( $ m ) use ( $ current_owner , $ current_repo , $ have_currents ) { if ( ! $ have_currents && ( empty ( $ m [ 'owner' ] ) || empty ( $ m [ 'repo' ] ) ) ) { return $ m [ 0 ] ; // Not possible. } $ is_pull = isset ( $ m [ 'is_pull' ] ) ; $ owner = ! empty ( $ m [ 'owner' ] ) ? $ m [ 'owner' ] : $ current_owner ; $ repo = ! empty ( $ m [ 'repo' ] ) ? $ m [ 'repo' ] : $ current_repo ; $ number = $ m [ 'issue' ] ; // Always have this. $ comment = $ m [ 'comment' ] ?? '' ; $ url = 'https://github.com/' . urlencode ( $ owner ) . '/' . urlencode ( $ repo ) . '/' . ( $ is_pull ? 'pull' : 'issues' ) . '/' . urlencode ( $ number ) . $ comment ; if ( $ have_currents && $ owner === $ current_owner ) { if ( $ repo === $ current_repo ) { return '[' . $ this -> c :: escHtmlChars ( '#' . $ number . ( $ comment ? ' (comment)' : '' ) ) . '](' . $ url . ')' ; } else { return '[' . $ this -> c :: escHtmlChars ( $ repo . '#' . $ number . ( $ comment ? ' (comment)' : '' ) ) . '](' . $ url . ')' ; } } else { return '[' . $ this -> c :: escHtmlChars ( $ owner . '/' . $ repo . '#' . $ number . ( $ comment ? ' (comment)' : '' ) ) . '](' . $ url . ')' ; } } , $ markdown ) ; } // unset($_regex); // Housekeeping. return $ markdown = $ Tokenizer -> restoreGetString ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/StuartApp/stuart-client-php/blob/34f345b57b38f58fe4b3bcf66af0d9f08875551e/src/Stuart/Converters/JobToJson.php#L16-L57<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function convert ( $ job ) { $ result = array ( 'job' => array ( ) ) ; if ( $ job -> getTransportType ( ) !== null ) { $ result [ 'job' ] [ 'transport_type' ] = $ job -> getTransportType ( ) ; } if ( $ job -> getAssignmentCode ( ) !== null ) { $ result [ 'job' ] [ 'assignment_code' ] = $ job -> getAssignmentCode ( ) ; } if ( count ( $ job -> getPickups ( ) ) === 1 && $ job -> getPickups ( ) [ 0 ] -> getPickupAt ( ) !== null ) { $ result [ 'job' ] [ 'pickup_at' ] = $ job -> getPickups ( ) [ 0 ] -> getPickupAt ( ) -> format ( JsonToJob :: $ STUART_DATE_FORMAT ) ; } if ( count ( $ job -> getDropoffs ( ) ) === 1 && $ job -> getDropoffs ( ) [ 0 ] -> getDropoffAt ( ) !== null ) { $ result [ 'job' ] [ 'dropoff_at' ] = $ job -> getDropoffs ( ) [ 0 ] -> getDropoffAt ( ) -> format ( JsonToJob :: $ STUART_DATE_FORMAT ) ; } $ pickups = array ( ) ; foreach ( $ job -> getPickups ( ) as $ pickup ) { $ pickups [ ] = JobToJson :: locationAsArray ( $ pickup ) ; } $ dropOffs = array ( ) ; foreach ( $ job -> getDropOffs ( ) as $ dropOff ) { $ dropOffs [ ] = array_merge ( JobToJson :: locationAsArray ( $ dropOff ) , array ( 'package_type' => $ dropOff -> getPackageType ( ) , 'package_description' => $ dropOff -> getPackageDescription ( ) , 'client_reference' => $ dropOff -> getClientReference ( ) ) ) ; } $ result [ 'job' ] [ 'pickups' ] = $ pickups ; $ result [ 'job' ] [ 'dropoffs' ] = $ dropOffs ; return json_encode ( $ result ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/EliuFlorez/google-map/blob/b96e3975314a83f806ed86623f7b219d2c96ee9f/src/Overlays/InfoWindow.php#L162-L188<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setPixelOffset ( ) { $ args = func_get_args ( ) ; if ( isset ( $ args [ 0 ] ) && ( $ args [ 0 ] instanceof Size ) ) { $ this -> pixedOffset = $ args [ 0 ] ; } elseif ( ( isset ( $ args [ 0 ] ) && is_numeric ( $ args [ 0 ] ) ) && ( isset ( $ args [ 1 ] ) && is_numeric ( $ args [ 1 ] ) ) ) { if ( $ this -> pixedOffset === null ) { $ this -> pixedOffset = new Size ( ) ; } $ this -> pixedOffset -> setWidth ( $ args [ 0 ] ) ; $ this -> pixedOffset -> setHeight ( $ args [ 1 ] ) ; if ( isset ( $ args [ 2 ] ) && is_string ( $ args [ 2 ] ) ) { $ this -> pixedOffset -> setWidthUnit ( $ args [ 2 ] ) ; } if ( isset ( $ args [ 3 ] ) && is_string ( $ args [ 3 ] ) ) { $ this -> pixedOffset -> setHeightUnit ( $ args [ 3 ] ) ; } } elseif ( ! isset ( $ args [ 0 ] ) ) { $ this -> pixedOffset = null ; } else { throw OverlayException :: invalidInfoWindowPixelOffset ( ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ekyna/CoreBundle/blob/a471324311591489e7cebdb805921dd85ba104ec/Model/UploadableTrait.php#L316-L324<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setRename ( $ rename ) { if ( $ rename !== $ this -> rename ) { $ this -> updatedAt = new \ DateTime ( ) ; } $ this -> rename = strtolower ( $ rename ) ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/scheb/yahoo-finance-api/blob/fbacb07e338c41489be5a2318a2213cda290e878/src/ApiClient.php#L123-L128<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getExchangeRate ( $ currency1 , $ currency2 ) { $ list = $ this -> getExchangeRates ( [ [ $ currency1 , $ currency2 ] ] ) ; return isset ( $ list [ 0 ] ) ? $ list [ 0 ] : null ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L400-L407<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function clearAllRules ( ) { $ this -> searchRule = $ this -> baseSearchRule ; $ this -> sortRule = $ this -> baseSortRule ; $ this -> otherSQLRule = $ this -> baseOtherSQLRule ; $ this -> queryLimit = array ( ) ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/HTTP/ContentSecurityPolicy.php#L439-L444<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function addImageSrc ( $ uri , ? bool $ explicitReporting = null ) { $ this -> addOption ( $ uri , 'imageSrc' , $ explicitReporting ?? $ this -> reportOnly ) ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ordercloud/ordercloud-php/blob/de4a9e060aab3848d7f86a5c6a6c08ff25dba965/src/Entities/Products/ProductExtraSet.php#L49-L58<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getExtraByID ( $ extraID ) { foreach ( $ this -> getExtras ( ) as $ extra ) { if ( $ extra -> getId ( ) == $ extraID ) { return $ extra ; } } return null ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/I18n/Load.php#L88-L93<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function addDir ( array $ dirs ) : self { $ this -> dirs = array_unique ( array_merge ( $ this -> dirs , $ dirs ) ) ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Cron/Cron.php#L717-L732<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function filtersPass ( ) : bool { foreach ( $ this -> filters as $ callback ) { if ( $ this -> getInvoker ( ) -> call ( $ callback ) === false ) { return false ; } } foreach ( $ this -> rejects as $ callback ) { if ( $ this -> getInvoker ( ) -> call ( $ callback ) === true ) { return false ; } } return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/dreamfactorysoftware/df-database/blob/ab6d2f0643ab292d1bcce2bc25002db9b0731139/src/Resources/BaseDbTableResource.php#L1421-L1476<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function deleteRecordsByIds ( $ table , $ ids , $ extras = [ ] ) { $ ids = static :: validateAsArray ( $ ids , ',' , true , 'The request contains no valid identifiers.' ) ; $ fields = array_get ( $ extras , ApiOptions :: FIELDS ) ; $ idFields = array_get ( $ extras , ApiOptions :: ID_FIELD ) ; $ idTypes = array_get ( $ extras , ApiOptions :: ID_TYPE ) ; $ isSingle = ( 1 == count ( $ ids ) ) ; $ rollback = array_get_bool ( $ extras , ApiOptions :: ROLLBACK ) ; $ continue = array_get_bool ( $ extras , ApiOptions :: CONTINUES ) ; if ( $ rollback && $ continue ) { throw new BadRequestException ( 'Rollback and continue operations can not be requested at the same time.' ) ; } $ this -> initTransaction ( $ table , $ idFields , $ idTypes ) ; $ extras [ 'id_fields' ] = $ idFields ; $ extras [ 'require_more' ] = static :: requireMoreFields ( $ fields , $ idFields ) ; $ out = [ ] ; $ errors = false ; foreach ( $ ids as $ index => $ id ) { try { if ( false === $ id = $ this -> checkForIds ( $ id , $ this -> tableIdsInfo , $ extras , true ) ) { throw new BadRequestException ( "Required id field(s) not valid in request $index: " . print_r ( $ id , true ) ) ; } $ out [ $ index ] = $ this -> addToTransaction ( null , $ id , $ extras , $ rollback , $ continue , $ isSingle ) ; } catch ( \ Exception $ ex ) { $ errors = true ; $ out [ $ index ] = $ ex ; if ( $ rollback || ! $ continue ) { break ; } } } if ( $ errors ) { $ msg = 'Batch Error: Not all requested records could be deleted.' ; if ( $ rollback ) { $ this -> rollbackTransaction ( ) ; $ msg .= " All changes rolled back." ; } throw new BatchException ( $ out , $ msg ) ; } $ result = $ this -> commitTransaction ( $ extras ) ; if ( isset ( $ result ) ) { $ out = $ result ; } return $ out ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/joegreen88/zf1-component-filter/blob/c19c3729ad352cb0ece6ae4777921722d46a1711/src/Zend/Filter/Encrypt/Openssl.php#L222-L240<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setPrivateKey ( $ key , $ passphrase = null ) { if ( is_array ( $ key ) ) { foreach ( $ key as $ type => $ option ) { if ( $ type !== 'private' ) { $ key [ 'private' ] = $ option ; unset ( $ key [ $ type ] ) ; } } } else { $ key = array ( 'private' => $ key ) ; } if ( $ passphrase !== null ) { $ this -> setPassphrase ( $ passphrase ) ; } return $ this -> _setKeys ( $ key ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/encorephp/wxwidgets/blob/01038c897b0ab3c95924f524a7c1093f5951d8f7/src/Collection.php#L28-L46<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function add ( ElementInterface $ element ) { $ id = $ element -> id ; if ( $ id === null ) $ id = $ this -> generateId ( ) ; $ element -> id = $ id ; $ this -> checkId ( $ id ) ; $ this -> objects [ ] = $ element ; if ( count ( $ this -> objects ) === 1 ) { array_unshift ( $ this -> objects , 'pseudo' ) ; unset ( $ this -> objects [ 0 ] ) ; } $ this -> ids [ array_search ( $ element , $ this -> objects , true ) ] = $ id ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/View/Parser.php#L634-L666<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function shouldAddEscaping ( string $ key ) { $ escape = false ; $ key = trim ( str_replace ( [ '{' , '}' ] , '' , $ key ) ) ; // If the key has a context stored (from setData) // we need to respect that. if ( array_key_exists ( $ key , $ this -> dataContexts ) ) { if ( $ this -> dataContexts [ $ key ] !== 'raw' ) { return $ this -> dataContexts [ $ key ] ; } } // No pipes, then we know we need to escape elseif ( strpos ( $ key , '|' ) === false ) { $ escape = 'html' ; } // If there's a `noescape` then we're definitely false. elseif ( strpos ( $ key , 'noescape' ) !== false ) { $ escape = false ; } // If no `esc` filter is found, then we'll need to add one. elseif ( ! preg_match ( '/\s+esc/' , $ key ) ) { $ escape = 'html' ; } return $ escape ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/flugger/laravel-responder/blob/4baadabc9087d73927cf13b65a253f9e7ddef15c/src/Transformers/Transformer.php#L60-L65<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function resolveTransformer ( string $ transformer ) { $ transformerResolver = $ this -> resolveContainer ( ) -> make ( TransformerResolver :: class ) ; return $ transformerResolver -> resolve ( $ transformer ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/maniaplanet/manialive-plugins/blob/f3f37da6836fe3d06fed32e75880caa6e9c0496b/Standard/TeamSpeak/TeamSpeak3/Node/Server.php#L2159-L2188<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected static function sortClientList ( Client $ a , Client $ b ) { if ( get_class ( $ a ) != get_class ( $ b ) ) { return 0 ; /* workaround for PHP bug #50688 */ throw new \ ManiaLivePlugins \ Standard \ TeamSpeak \ TeamSpeak3 \ Adapter \ ServerQuery \ Exception ( "invalid parameter" , 0x602 ) ; } if ( ! $ a instanceof Client ) { return 0 ; /* workaround for PHP bug #50688 */ throw new \ ManiaLivePlugins \ Standard \ TeamSpeak \ TeamSpeak3 \ Adapter \ ServerQuery \ Exception ( "convert error" , 0x604 ) ; } if ( $ a -> getProperty ( "client_talk_power" , 0 ) != $ b -> getProperty ( "client_talk_power" , 0 ) ) { return ( $ a -> getProperty ( "client_talk_power" , 0 ) > $ b -> getProperty ( "client_talk_power" , 0 ) ) ? - 1 : 1 ; } if ( $ a -> getProperty ( "client_is_talker" , 0 ) != $ b -> getProperty ( "client_is_talker" , 0 ) ) { return ( $ a -> getProperty ( "client_is_talker" , 0 ) > $ b -> getProperty ( "client_is_talker" , 0 ) ) ? - 1 : 1 ; } return strcmp ( strtolower ( $ a [ "client_nickname" ] ) , strtolower ( $ b [ "client_nickname" ] ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/core23/lastfm-php-api/blob/7741ae884b07964d290c6783553437f621c7fe6b/src/Service/ArtistService.php#L104-L118<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getSimilar ( SimilarArtistBuilder $ builder ) : array { $ response = $ this -> client -> unsignedCall ( 'artist.getSimilar' , $ builder -> getQuery ( ) ) ; if ( ! isset ( $ response [ 'similarartists' ] [ 'artist' ] ) ) { return [ ] ; } return ApiHelper :: mapList ( static function ( $ data ) { return Artist :: fromApi ( $ data ) ; } , $ response [ 'similarartists' ] [ 'artist' ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Base/Logger/StdioLogger.php#L249-L252<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function debug ( $ message , array $ context = array ( ) , $ traceShift = 0 ) { $ this -> log ( LogLevel :: DEBUG , $ message , $ context , $ traceShift ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/gridonic/PrinceXMLPhp/blob/c4441d82c50efa7635ab46eee01e03f70e11a53b/lib/prince.php#L453-L457<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setPDFOutputIntent ( $ pdfOutputIntent , $ convertColors = false ) { $ this -> pdfOutputIntent = $ pdfOutputIntent ; $ this -> convertColors = $ convertColors ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/crisu83/yii-arbehaviors/blob/0c88e17c6e9d492e3797601a835931db57f1991a/behaviors/ClosureTreeBehavior.php#L85-L106<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getParents ( $ includeSelf = true ) { $ parents = array ( ) ; if ( $ includeSelf ) { $ parents [ $ this -> owner -> { $ this -> idAttribute } ] = $ this -> owner ; } // Try and find a parent $ parent = $ this -> getParent ( ) ; if ( $ parent instanceof CActiveRecord ) { $ parents [ $ parent -> { $ this -> idAttribute } ] = $ parent ; // Fetch any additional ancestry levels while ( $ nextParent = $ parent -> getParent ( ) ) { $ parents [ $ nextParent -> { $ this -> idAttribute } ] = $ nextParent ; $ parent = $ nextParent ; } } return array_reverse ( $ parents , true ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/valkyrjaio/valkyrja/blob/3b4ad998d96c3ab08e36a11c76ce8d9d48759ffe/src/Valkyrja/Logger/MonologLogger.php#L78-L83<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function notice ( string $ message , array $ context = [ ] ) : Logger { $ this -> logger -> { LogLevel :: NOTICE } ( $ message , $ context ) ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/nails/module-admin/blob/2ed8a91b5f05c86fcde21feb621cfafe391ee0c3/src/Controller/DefaultController.php#L1174-L1185<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected static function getTitleSingle ( ) : string { if ( ! empty ( static :: CONFIG_TITLE_SINGLE ) ) { return static :: CONFIG_TITLE_SINGLE ; } $ sTitle = preg_replace ( '/([a-z])([A-Z])/' , '$1 $2' , static :: CONFIG_MODEL_NAME ) ; $ sTitle = strtolower ( $ sTitle ) ; $ sTitle = ucwords ( $ sTitle ) ; return $ sTitle ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/contao-bootstrap/grid-editor/blob/e017332aeec861b64b5dc963156533af4a21dc71/src/Grid.php#L117-L124<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getColumnAsString ( $ index ) { if ( isset ( $ this -> columns [ $ index ] ) ) { return implode ( ' ' , $ this -> columns [ $ index ] ) ; } return '' ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/intuit/QuickBooks-V3-PHP-SDK/blob/09f9f42e4cf49a7d6e0aa4d2c15e15eba245bfd5/src/XSD2PHP/lib/ZF/1.10.7/Zend/Soap/AutoDiscover.php#L269-L288<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setClass ( $ class , $ namespace = '' , $ argv = null ) { $ uri = $ this -> getUri ( ) ; $ wsdl = new Zend_Soap_Wsdl ( $ class , $ uri , $ this -> _strategy ) ; // The wsdl:types element must precede all other elements (WS-I Basic Profile 1.1 R2023) $ wsdl -> addSchemaTypeSection ( ) ; $ port = $ wsdl -> addPortType ( $ class . 'Port' ) ; $ binding = $ wsdl -> addBinding ( $ class . 'Binding' , 'tns:' . $ class . 'Port' ) ; $ wsdl -> addSoapBinding ( $ binding , $ this -> _bindingStyle [ 'style' ] , $ this -> _bindingStyle [ 'transport' ] ) ; $ wsdl -> addService ( $ class . 'Service' , $ class . 'Port' , 'tns:' . $ class . 'Binding' , $ uri ) ; foreach ( $ this -> _reflection -> reflectClass ( $ class ) -> getMethods ( ) as $ method ) { $ this -> _addFunctionToWsdl ( $ method , $ wsdl , $ port , $ binding ) ; } $ this -> _wsdl = $ wsdl ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/seaice/li-framework/blob/ee4f46e1e83d9c74218b4052c125669c5a785e3a/GridView.php#L273-L285<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function _getOptions ( $ options ) { $ optionsHtml = '' ; if ( ! empty ( $ options ) ) { if ( is_array ( $ options ) ) { foreach ( $ options as $ key => $ value ) { $ optionsHtml .= ' ' . $ key . '="' . $ value . '"' ; } } else { $ optionsHtml = ' class="' . $ options . '"' ; } } return $ optionsHtml ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ekyna/CoreBundle/blob/a471324311591489e7cebdb805921dd85ba104ec/Doctrine/Repository/EnabledFilterTrait.php#L34-L42<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function addFilterEnabledClause ( QueryBuilder $ qb ) { if ( $ this -> _filterEnabled ) { $ qb -> andWhere ( $ qb -> expr ( ) -> eq ( $ qb -> getRootAliases ( ) [ 0 ] . '.enabled' , ':enabled' ) ) -> setParameter ( 'enabled' , true ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/JVMartin/angel-core/blob/96637ecf2fdaeda2337d8a2dbea0ab1a18198b11/public/js/kcfinder/lib/class_image_gmagick.php#L190-L198<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function getBlankImage ( $ width , $ height ) { try { $ img = new \ Gmagick ( ) ; $ img -> newImage ( $ width , $ height , "none" ) ; } catch ( \ Exception $ e ) { return false ; } return $ img ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wj008t/php-beacon/blob/eeebfe8a26958dcf43bc6a5d693e946bc0ce4210/core/Form.php#L189-L192<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getError ( string $ name ) { return isset ( $ this -> fields [ $ name ] ) ? $ this -> fields [ $ name ] -> error : '' ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/Database/SQLite3/Forge.php#L156-L181<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function _alterTable ( string $ alter_type , string $ table , $ field ) { switch ( $ alter_type ) { case 'DROP' : $ sqlTable = new Table ( $ this -> db , $ this ) ; $ sqlTable -> fromTable ( $ table ) -> dropColumn ( $ field ) -> run ( ) ; return '' ; break ; case 'CHANGE' : $ sqlTable = new Table ( $ this -> db , $ this ) ; $ sqlTable -> fromTable ( $ table ) -> modifyColumn ( $ field ) -> run ( ) ; return null ; break ; default : return parent :: _alterTable ( $ alter_type , $ table , $ field ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Raphhh/trex-cli/blob/fbb057e855e008cd9ba87c6768411ecb464a6918/src/Executor.php#L37-L50<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function flush ( $ command , array $ streams , array & $ pipes = [ ] , $ cwd = null , array $ env = null , array $ options = [ ] ) { $ process = proc_open ( $ command , $ streams , $ pipes , $ cwd , $ env , $ options ) ; if ( ! is_resource ( $ process ) ) { throw new \ RuntimeException ( 'Error to open the process' ) ; } return proc_close ( $ process ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/rchouinard/bytesize/blob/6d192b08ac84a4d8b5d78e24a86c0ecd23000f8e/src/Formatter/AbstractFormatter.php#L156-L165<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function normalizeBytes ( $ bytes ) { $ filteredBytes = filter_var ( $ bytes , FILTER_SANITIZE_NUMBER_FLOAT , FILTER_FLAG_ALLOW_FRACTION ) ; list ( $ bytes , $ part ) = explode ( '.' , $ filteredBytes . '.0' ) ; if ( bccomp ( $ part , 0 ) == 1 ) { $ bytes = bcadd ( $ bytes , 1 ) ; } return $ bytes ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/joegreen88/zf1-component-filter/blob/c19c3729ad352cb0ece6ae4777921722d46a1711/src/Zend/Filter/Digits.php#L65-L79<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function filter ( $ value ) { if ( ! self :: $ _unicodeEnabled ) { // POSIX named classes are not supported, use alternative 0-9 match $ pattern = '/[^0-9]/' ; } else if ( extension_loaded ( 'mbstring' ) ) { // Filter for the value with mbstring $ pattern = '/[^[:digit:]]/' ; } else { // Filter for the value without mbstring $ pattern = '/[\p{^N}]/' ; } return preg_replace ( $ pattern , '' , ( string ) $ value ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Service/chartService.php#L98-L115<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function & getPlotData ( & $ bizObj , $ fields , $ labelField ) { $ oldCacheMode = $ bizObj -> GetCacheMode ( ) ; $ bizObj -> SetCacheMode ( 0 ) ; // turn off cache mode, not affect the current cache $ bizObj -> runSearch ( - 1 ) ; // don't use page search while ( 1 ) { $ recArray = $ bizObj -> GetRecord ( 1 ) ; if ( ! $ recArray ) break ; $ bizObj -> UnformatInputRecArr ( $ recArray ) ; foreach ( $ fields as $ fld ) $ recMatrix [ $ fld ] [ ] = $ recArray [ $ fld ] ; // get data without format $ recMatrix [ $ labelField ] [ ] = $ recArray [ $ labelField ] ; // get symbol with format } $ bizObj -> SetCacheMode ( $ oldCacheMode ) ; return $ recMatrix ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/BapCat/Values/blob/75fcb00e80a83a1176080dbb99338b1d37d411e2/src/Text.php#L116-L122<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function equals ( ? Text $ other = null ) : bool { if ( $ other === null ) { return false ; } return $ this -> raw === ( string ) $ other ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/qranio-com/azure-sdk-pear-deps/blob/6609eab8623759b5e23345ded80d832278a7b680/src/PEAR/DependencyDB.php#L115-L132<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>function setConfig ( & $ config , $ depdb = false ) { if ( ! $ config ) { $ this -> _config = & PEAR_Config :: singleton ( ) ; } else { $ this -> _config = & $ config ; } $ this -> _registry = & $ this -> _config -> getRegistry ( ) ; if ( ! $ depdb ) { $ this -> _depdb = $ this -> _config -> get ( 'php_dir' , null , 'pear.php.net' ) . DIRECTORY_SEPARATOR . '.depdb' ; } else { $ this -> _depdb = $ depdb ; } $ this -> _lockfile = dirname ( $ this -> _depdb ) . DIRECTORY_SEPARATOR . '.depdblock' ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/cymapgt/notifier/blob/ea129f6e3fd2506f7eb6acffb60fd8a12c569ccf/src/NotifierSmsAfricasTalkingService.php#L301-L346<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function _bootstrapSmsHandler ( $ configurationArr , $ isBehindProxy = false ) { //validate that username and APIKEY exist in the configuration  if ( ! isset ( $ configurationArr [ "USERNAME" ] ) && ! isset ( $ configurationArr [ "APIKEY" ] ) ) { throw new NotifierEmailException ( "The username or APIKEY is not configured" ) ; } $ userName = $ configurationArr [ "USERNAME" ] ; $ apiKey = $ configurationArr [ "APIKEY" ] ; //if behind proxy, we also need proxy settings  if ( $ isBehindProxy ) { if ( ! isset ( $ configurationArr [ "PROXY_AUTH" ] ) && ! isset ( $ configurationArr [ "PROXY_TYPE" ] ) && ! isset ( $ configurationArr [ "PROXY_SERVER" ] ) && ! isset ( $ configurationArr [ "PROXY_LOGIN" ] ) ) { throw new NotifierEmailException ( "The proxy settings are not configured properly" ) ; } $ proxySettings = array ( "PROXYAUTH" => $ configurationArr [ "PROXY_AUTH" ] , "PROXYTYPE" => $ configurationArr [ "PROXY_TYPE" ] , "PROXYSERVER" => $ configurationArr [ "PROXY_SERVER" ] , "PROXYLOGIN" => $ configurationArr [ "PROXY_LOGIN" ] ) ; //initiate the handler with credentials  $ this -> mailHandler = new \ AfricasTalkingGatewayWithProxy ( $ userName , $ apiKey , $ proxySettings ) ; } else { $ this -> mailHandler = new \ AfricasTalkingGateway ( $ userName , $ apiKey ) ; } //Set the configuration array  $ this -> setConfiguration ( $ configurationArr ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/VitexSoftware/EaseFramework/blob/700693949ee6c858d40365c6d3c3825e8a742397/src/Ease/SQL/Orm.php#L340-L371<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function insertToSQL ( $ data = null ) { if ( is_null ( $ data ) ) { $ data = $ this -> getData ( ) ; $ useInObject = true ; } else { $ useInObject = false ; } if ( ! count ( $ data ) ) { $ this -> addStatusMessage ( 'NO data for Insert to SQL: ' . $ this -> myTable , 'error' ) ; return ; } if ( $ this -> createColumn && ! isset ( $ data [ $ this -> createColumn ] ) ) { $ data [ $ this -> createColumn ] = 'NOW()' ; } $ queryRaw = 'INSERT INTO ' . $ this -> dblink -> getColumnComma ( ) . $ this -> myTable . $ this -> dblink -> getColumnComma ( ) . ' ' . $ this -> dblink -> arrayToInsertQuery ( $ data , false ) ; $ this -> dblink -> useObject ( $ this ) ; if ( $ this -> dblink -> exeQuery ( $ queryRaw ) ) { if ( $ useInObject ) { $ this -> setMyKey ( $ this -> dblink -> lastInsertID ) ; } return $ this -> dblink -> lastInsertID ; } return ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/I18n/TranslationPromise.php#L60-L76<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function suggestLanguage ( ) { if ( Reaction :: isDebug ( ) ) { Reaction :: warning ( __METHOD__ . ' call. Avoid it for performance reasons.' ) ; } $ trace = debug_backtrace ( DEBUG_BACKTRACE_PROVIDE_OBJECT | DEBUG_BACKTRACE_IGNORE_ARGS ) ; $ traceCount = count ( $ trace ) - 1 ; for ( $ i = $ traceCount ; $ i >= 0 ; $ i -- ) { if ( ! isset ( $ trace [ $ i ] [ 'object' ] ) || ! $ trace [ $ i ] [ 'object' ] instanceof RequestLanguageGetterInterface ) { continue ; } /** @var RequestLanguageGetterInterface $object */ $ object = $ trace [ $ i ] [ 'object' ] ; $ this -> language = $ object -> getRequestLanguage ( ) ; break ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/EasyCorp/EasyAdminBundle/blob/2e241936000d347a9e1230d08ccfe5bb27dd357f/src/Configuration/NormalizerConfigPass.php#L97-L109<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function normalizeFormConfig ( array $ backendConfig ) { foreach ( $ backendConfig [ 'entities' ] as $ entityName => $ entityConfig ) { if ( isset ( $ entityConfig [ 'form' ] ) ) { $ entityConfig [ 'new' ] = isset ( $ entityConfig [ 'new' ] ) ? $ this -> mergeFormConfig ( $ entityConfig [ 'form' ] , $ entityConfig [ 'new' ] ) : $ entityConfig [ 'form' ] ; $ entityConfig [ 'edit' ] = isset ( $ entityConfig [ 'edit' ] ) ? $ this -> mergeFormConfig ( $ entityConfig [ 'form' ] , $ entityConfig [ 'edit' ] ) : $ entityConfig [ 'form' ] ; } $ backendConfig [ 'entities' ] [ $ entityName ] = $ entityConfig ; } return $ backendConfig ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/Typography/Typography.php#L105-L268<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function autoTypography ( string $ str , bool $ reduce_linebreaks = false ) : string { if ( $ str === '' ) { return '' ; } // Standardize Newlines to make matching easier if ( strpos ( $ str , "\r" ) !== false ) { $ str = str_replace ( [ "\r\n" , "\r" ] , "\n" , $ str ) ; } // Reduce line breaks.  If there are more than two consecutive linebreaks // we'll compress them down to a maximum of two since there's no benefit to more. if ( $ reduce_linebreaks === false ) { $ str = preg_replace ( "/\n\n+/" , "\n\n" , $ str ) ; } // HTML comment tags don't conform to patterns of normal tags, so pull them out separately, only if needed $ html_comments = [ ] ; if ( strpos ( $ str , '<!--' ) !== false && preg_match_all ( '#(<!\-\-.*?\-\->)#s' , $ str , $ matches ) ) { for ( $ i = 0 , $ total = count ( $ matches [ 0 ] ) ; $ i < $ total ; $ i ++ ) { $ html_comments [ ] = $ matches [ 0 ] [ $ i ] ; $ str = str_replace ( $ matches [ 0 ] [ $ i ] , '{@HC' . $ i . '}' , $ str ) ; } } // match and yank <pre> tags if they exist.  It's cheaper to do this separately since most content will // not contain <pre> tags, and it keeps the PCRE patterns below simpler and faster if ( strpos ( $ str , '<pre' ) !== false ) { $ str = preg_replace_callback ( '#<pre.*?>.*?</pre>#si' , [ $ this , 'protectCharacters' ] , $ str ) ; } // Convert quotes within tags to temporary markers. $ str = preg_replace_callback ( '#<.+?>#si' , [ $ this , 'protectCharacters' ] , $ str ) ; // Do the same with braces if necessary if ( $ this -> protectBracedQuotes === false ) { $ str = preg_replace_callback ( '#\{.+?\}#si' , [ $ this , 'protectCharacters' ] , $ str ) ; } // Convert "ignore" tags to temporary marker.  The parser splits out the string at every tag // it encounters.  Certain inline tags, like image tags, links, span tags, etc. will be // adversely affected if they are split out so we'll convert the opening bracket < temporarily to: {@TAG} $ str = preg_replace ( '#<(/*)(' . $ this -> inlineElements . ')([ >])#i' , '{@TAG}\\1\\2\\3' , $ str ) ; /* Split the string at every tag. This expression creates an array with this prototype: 		 * 		 * 	[array] 		 * 	{ 		 * 		[0] = <opening tag> 		 * 		[1] = Content... 		 * 		[2] = <closing tag> 		 * 		Etc... 		 * 	} 		 */ $ chunks = preg_split ( '/(<(?:[^<>]+(?:"[^"]*"|\'[^\']*\')?)+>)/' , $ str , - 1 , PREG_SPLIT_DELIM_CAPTURE | PREG_SPLIT_NO_EMPTY ) ; // Build our finalized string.  We cycle through the array, skipping tags, and processing the contained text $ str = '' ; $ process = true ; for ( $ i = 0 , $ c = count ( $ chunks ) - 1 ; $ i <= $ c ; $ i ++ ) { // Are we dealing with a tag? If so, we'll skip the processing for this cycle. // Well also set the "process" flag which allows us to skip <pre> tags and a few other things. if ( preg_match ( '#<(/*)(' . $ this -> blockElements . ').*?>#' , $ chunks [ $ i ] , $ match ) ) { if ( preg_match ( '#' . $ this -> skipElements . '#' , $ match [ 2 ] ) ) { $ process = ( $ match [ 1 ] === '/' ) ; } if ( $ match [ 1 ] === '' ) { $ this -> lastBlockElement = $ match [ 2 ] ; } $ str .= $ chunks [ $ i ] ; continue ; } if ( $ process === false ) { $ str .= $ chunks [ $ i ] ; continue ; } //  Force a newline to make sure end tags get processed by _format_newlines() if ( $ i === $ c ) { $ chunks [ $ i ] .= "\n" ; } //  Convert Newlines into <p> and <br /> tags $ str .= $ this -> formatNewLines ( $ chunks [ $ i ] ) ; } // No opening block level tag? Add it if needed. if ( ! preg_match ( '/^\s*<(?:' . $ this -> blockElements . ')/i' , $ str ) ) { $ str = preg_replace ( '/^(.*?)<(' . $ this -> blockElements . ')/i' , '<p>$1</p><$2' , $ str ) ; } // Convert quotes, elipsis, em-dashes, non-breaking spaces, and ampersands $ str = $ this -> formatCharacters ( $ str ) ; // restore HTML comments for ( $ i = 0 , $ total = count ( $ html_comments ) ; $ i < $ total ; $ i ++ ) { // remove surrounding paragraph tags, but only if there's an opening paragraph tag // otherwise HTML comments at the ends of paragraphs will have the closing tag removed // if '<p>{@HC1}' then replace <p>{@HC1}</p> with the comment, else replace only {@HC1} with the comment $ str = preg_replace ( '#(?(?=<p>\{@HC' . $ i . '\})<p>\{@HC' . $ i . '\}(\s*</p>)|\{@HC' . $ i . '\})#s' , $ html_comments [ $ i ] , $ str ) ; } // Final clean up $ table = [ // If the user submitted their own paragraph tags within the text // we will retain them instead of using our tags. '/(<p[^>*?]>)<p>/' => '$1' , // <?php BBEdit syntax coloring bug fix // Reduce multiple instances of opening/closing paragraph tags to a single one '#(</p>)+#' => '</p>' , '/(<p>\W*<p>)+/' => '<p>' , // Clean up stray paragraph tags that appear before block level elements '#<p></p><(' . $ this -> blockElements . ')#' => '<$1' , // Clean up stray non-breaking spaces preceeding block elements '#(&nbsp;\s*)+<(' . $ this -> blockElements . ')#' => '  <$2' , // Replace the temporary markers we added earlier '/\{@TAG\}/' => '<' , '/\{@DQ\}/' => '"' , '/\{@SQ\}/' => "'" , '/\{@DD\}/' => '--' , '/\{@NBS\}/' => '  ' , // An unintended consequence of the _format_newlines function is that // some of the newlines get truncated, resulting in <p> tags // starting immediately after <block> tags on the same line. // This forces a newline after such occurrences, which looks much nicer. "/><p>\n/" => ">\n<p>" , // Similarly, there might be cases where a closing </block> will follow // a closing </p> tag, so we'll correct it by adding a newline in between '#</p></#' => "</p>\n</" , ] ; // Do we need to reduce empty lines? if ( $ reduce_linebreaks === true ) { $ table [ '#<p>\n*</p>#' ] = '' ; } else { // If we have empty paragraph tags we add a non-breaking space // otherwise most browsers won't treat them as true paragraphs $ table [ '#<p></p>#' ] = '<p>&nbsp;</p>' ; } return preg_replace ( array_keys ( $ table ) , $ table , $ str ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/TYPO3-Console/TYPO3-Console/blob/a8983d65aa5e2b7495082059cd72b6403b14abfd/Classes/Console/Service/Persistence/PersistenceIntegrityService.php#L62-L141<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function checkOrUpdateReferenceIndex ( $ dryRun , ReferenceIndexIntegrityDelegateInterface $ delegate = null ) { $ processedTables = [ ] ; $ errorCount = 0 ; $ recordCount = 0 ; $ this -> callDelegateForEvent ( $ delegate , 'willStartOperation' , [ $ this -> persistenceContext -> countAllRecordsOfAllTables ( ) ] ) ; // Traverse all tables: foreach ( $ this -> persistenceContext -> getPersistenceConfiguration ( ) as $ tableName => $ _ ) { // Traverse all records in tables, including deleted records: try { $ records = $ this -> persistenceContext -> getAllRecordsOfTable ( $ tableName ) ; } catch ( TableDoesNotExistException $ e ) { $ this -> delegateLog ( $ delegate , 'warning' , $ e -> getMessage ( ) ) ; continue ; } if ( ! is_array ( $ records ) && ! $ records instanceof \ Traversable ) { $ this -> delegateLog ( $ delegate , 'error' , 'Table "%s" exists in $TCA but fetching records from database failed. Check the Database Analyzer in Install Tool for missing fields.' , [ $ tableName ] ) ; continue ; } $ processedTables [ ] = $ tableName ; foreach ( $ records as $ record ) { $ this -> callDelegateForEvent ( $ delegate , 'willUpdateRecord' , [ $ tableName , $ record ] ) ; /** @var $refIndexObj ReferenceIndex */ $ refIndexObj = GeneralUtility :: makeInstance ( \ TYPO3 \ CMS \ Core \ Database \ ReferenceIndex :: class ) ; if ( isset ( $ record [ 't3ver_wsid' ] ) ) { $ refIndexObj -> setWorkspaceId ( $ record [ 't3ver_wsid' ] ) ; } $ result = $ refIndexObj -> updateRefIndexTable ( $ tableName , $ record [ 'uid' ] , $ dryRun ) ; $ recordCount ++ ; if ( $ result [ 'addedNodes' ] || $ result [ 'deletedNodes' ] ) { $ errorMessage = 'Record ' . $ tableName . ':' . $ record [ 'uid' ] ; if ( $ dryRun ) { $ errorMessage .= ' has ' . $ result [ 'addedNodes' ] . ' missing indexes and ' . $ result [ 'deletedNodes' ] . ' stale indexes.' ; } else { $ errorMessage .= ' ' . $ result [ 'addedNodes' ] . ' indexes were added and ' . $ result [ 'deletedNodes' ] . ' stale indexes were removed.' ; } $ errorCount ++ ; $ this -> delegateLog ( $ delegate , 'notice' , $ errorMessage ) ; } } try { // Searching lost indexes for this table: $ lostIndexCount = $ this -> persistenceContext -> countLostIndexesOfRecordsInTable ( $ tableName ) ; if ( $ lostIndexCount > 0 ) { $ errorMessage = 'Table ' . $ tableName . ' has ' . $ lostIndexCount ; if ( $ dryRun ) { $ errorMessage .= ' which need to be deleted.' ; } else { $ errorMessage .= ' which have been deleted.' ; } $ errorCount ++ ; $ this -> delegateLog ( $ delegate , 'notice' , $ errorMessage ) ; if ( ! $ dryRun ) { $ this -> persistenceContext -> deleteLostIndexesOfRecordsInTable ( $ tableName ) ; } } } catch ( TableDoesNotExistException $ e ) { $ this -> delegateLog ( $ delegate , 'warning' , $ e -> getMessage ( ) ) ; continue ; } } // Searching lost indexes for non-existing tables: $ lostTablesCount = $ this -> persistenceContext -> countLostTables ( $ processedTables ) ; if ( $ lostTablesCount > 0 ) { $ errorCount ++ ; $ this -> delegateLog ( $ delegate , 'notice' , 'Found ' . $ lostTablesCount . ' indexes for not existing tables.' ) ; if ( ! $ dryRun ) { $ this -> persistenceContext -> deleteLostTables ( $ processedTables ) ; $ this -> delegateLog ( $ delegate , 'info' , 'Removed indexes for not existing tables.' ) ; } } $ this -> callDelegateForEvent ( $ delegate , 'operationHasEnded' ) ; return [ $ errorCount , $ recordCount , $ processedTables ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/shumkov/rediska/blob/220afbfc4095e90aa050a5dfc00ce7413147ce45/library/Rediska/Zend/Profiler/Firebug.php#L55-L86<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function stopCallback ( Rediska_Profiler_Profile $ profile ) { $ commandString = $ profile -> getContext ( ) -> __toString ( ) ; $ matches = array ( ) ; preg_match ( '/^(.+)\((.*)\)$/s' , $ commandString , $ matches ) ; $ row = array ( ( double ) $ profile -> getElapsedTime ( 4 ) ) ; if ( isset ( $ matches [ 1 ] ) ) { $ row [ ] = $ matches [ 1 ] ; $ row [ ] = $ matches [ 2 ] ; } else { $ row [ ] = $ commandString ; } $ this -> getMessage ( ) -> addRow ( $ row ) ; $ placeHolders = array ( '%rediskaName%' => $ profile -> getContext ( ) -> getRediska ( ) -> getName ( ) , '%count%' => $ this -> count ( ) , '%totalElapsedTime%' => $ this -> getTotalElapsedTime ( 4 ) , ) ; $ label = str_replace ( array_keys ( $ placeHolders ) , array_values ( $ placeHolders ) , $ this -> getLabel ( ) ) ; $ this -> getMessage ( ) -> setLabel ( $ label ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Adobe-Marketing-Cloud/marketing-cloud-php-sdk/blob/5471354d522c2a24ea283d0661ee84e88f91c20a/lib/AdobeMarketingCloud/OptionParser.php#L450-L454<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function expectsParameter ( $ flag ) { $ rule = $ this -> getRule ( $ flag ) ; return $ rule && $ rule [ 'required' ] !== self :: PARAM_NOTREQUIRED ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/Session/Handlers/RedisHandler.php#L181-L197<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function read ( $ sessionID ) : string { if ( isset ( $ this -> redis ) && $ this -> lockSession ( $ sessionID ) ) { // Needed by write() to detect session_regenerate_id() calls $ this -> sessionID = $ sessionID ; $ session_data = $ this -> redis -> get ( $ this -> keyPrefix . $ sessionID ) ; is_string ( $ session_data ) ? $ this -> keyExists = true : $ session_data = '' ; $ this -> fingerprint = md5 ( $ session_data ) ; return $ session_data ; } return '' ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Profiler/Provider/ProfilerSwiftMailerBridgeServiceProvider.php#L39-L50<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function extendProfiler ( ContainerInterface $ container , ? ProfilerContract $ profiler = null ) : ? ProfilerContract { if ( $ profiler !== null ) { $ profiler -> addCollector ( new SwiftMailDataCollector ( $ container -> get ( Swift_Mailer :: class ) ) ) ; } return $ profiler ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Helpers/Html.php#L1476-L1479<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function activeHiddenInput ( $ model , $ attribute , $ options = [ ] , $ encoding = null ) { return static :: activeInput ( 'hidden' , $ model , $ attribute , $ options , $ encoding ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ldaptools/ldaptools-bundle/blob/eaa445aa551c321b9689614ac32101c3e3cf0298/Doctrine/Subscriber/LdapObjectSubscriber.php#L145-L162<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function setLdapObjectForProperty ( \ ReflectionProperty $ property , LdapObjectAnnotation $ annotation , $ entity ) { if ( empty ( $ property -> getValue ( $ entity ) ) ) { return ; } $ domain = $ this -> ldap -> getDomainContext ( ) ; $ switchDomain = $ annotation -> domain ? : null ; if ( $ switchDomain ) { $ this -> ldap -> switchDomain ( $ annotation -> domain ) ; } $ results = $ this -> queryLdapForObjects ( $ property , $ annotation , $ entity ) ; $ property -> setValue ( $ entity , $ results ) ; if ( $ switchDomain ) { $ this -> ldap -> switchDomain ( $ domain ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/skillberto/SonataPageMenuBundle/blob/97b6c2797a5cf057e6a327dd6c943d6994cc90b3/Entity/Menu.php#L254-L259<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function addChild ( \ Skillberto \ SonataPageMenuBundle \ Entity \ Menu $ children ) { $ this -> children [ ] = $ children ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/olix21/order-bundle/blob/917c6a70fcd5f9228b54df1fdbc3a14a77874811/Entity/OrderElement.php#L385-L391<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setBeginAt ( \ dateTime $ beginAt = null ) { $ this -> beginAt = $ beginAt ; $ this -> timeInterval ( ) ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/sleeping-owl/admin/blob/eed0001a84e7e6b6e84aa117403ac11b5c7d227b/src/SleepingOwl/Admin/Models/Form/Form.php#L73-L83<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setDefaults ( ) { foreach ( $ this -> items as $ item ) { $ name = $ item -> getName ( ) ; if ( ! is_null ( $ name ) && ! isset ( $ this -> instance -> $ name ) ) { $ this -> instance -> $ name = $ item -> getDefault ( ) ; } } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/activecollab/authentication/blob/ad7feeab769492a8880669fdc41b075c0f316618/src/LoginPolicy/LoginPolicy.php#L95-L104<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function & setUsernameFormat ( $ value ) { if ( in_array ( $ value , self :: VALID_USERNAME_FORMATS ) ) { $ this -> username_format = $ value ; } else { throw new InvalidArgumentException ( 'Username format is not valid' ) ; } return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Rundiz/profiler/blob/86ba865a01e11763591793d607e5a99239ba8691/Rundiz/Profiler/Console.php#L112-L120<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function log ( $ logtype , $ data , $ file = '' , $ line = '' ) { $ data = [ 'logtype' => $ logtype , 'data' => $ data , ] ; $ this -> writeLogSections ( 'Logs' , $ data , $ file , $ line ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Parser/FileLoader.php#L52-L67<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function exists ( string $ file ) : string { $ key = \ str_replace ( \ DIRECTORY_SEPARATOR , '' , $ file ) ; if ( isset ( $ this -> exists [ $ key ] ) ) { return $ this -> exists [ $ key ] ; } $ file = $ this -> getPath ( $ file ) . $ file ; if ( \ file_exists ( $ file ) ) { return $ this -> exists [ $ key ] = $ file ; } throw new FileNotFoundException ( \ sprintf ( 'File [%s] not found.' , $ file ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/3f2707d1d606a59527f74e88808b820a170d3f42/src/Subscriber/PaginateElasticaQuerySubscriber.php#L74-L88<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function setSorting ( ItemsEvent $ event ) { $ options = $ event -> options ; $ sortField = $ this -> getRequest ( ) -> get ( $ options [ 'sortFieldParameterName' ] ) ; if ( ! $ sortField && isset ( $ options [ 'defaultSortFieldName' ] ) ) { $ sortField = $ options [ 'defaultSortFieldName' ] ; } if ( ! empty ( $ sortField ) ) { $ event -> target -> getQuery ( ) -> setSort ( [ $ sortField => $ this -> getSort ( $ sortField , $ options ) , ] ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/EliuFlorez/google-map/blob/b96e3975314a83f806ed86623f7b219d2c96ee9f/src/Places/Autocomplete.php#L87-L94<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setInputId ( $ inputId ) { if ( ! is_string ( $ inputId ) || ( strlen ( $ inputId ) === 0 ) ) { throw PlaceException :: invalidAutocompleteInputId ( ) ; } $ this -> inputId = $ inputId ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/imatic/view-bundle/blob/dd7896fbd9b07bfb3f7a75c7dc0d7dccf2cbf254/Twig/TokenParser/ExampleTokenParser.php#L77-L107<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function removeExtraIndentation ( $ string ) { $ lines = \ preg_split ( '/\\n|\\r\\n?/' , $ string ) ; // determine indentation length $ indentLen = null ; for ( $ i = 0 ; isset ( $ lines [ $ i ] ) ; ++ $ i ) { if ( '' !== \ trim ( $ lines [ $ i ] ) ) { \ preg_match ( '/^\\s*/' , $ lines [ $ i ] , $ match ) ; $ indentLen = \ strlen ( $ match [ 0 ] ) ; break ; } } if ( null !== $ indentLen ) { // cut each line $ out = '' ; for ( ; isset ( $ lines [ $ i ] ) ; ++ $ i ) { if ( \ substr ( $ lines [ $ i ] , 0 , $ indentLen ) === $ match [ 0 ] ) { $ out .= \ substr ( $ lines [ $ i ] , $ indentLen ) ; } else { $ out .= $ lines [ $ i ] ; } $ out .= "\n" ; } return $ out ; } return $ string ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Roave/BetterReflection/blob/173f42ccb0af41b01b3c2dfd5bd185ccd9ead50c/src/Reflection/Adapter/ReflectionMethod.php#L175-L185<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getParameters ( ) { $ parameters = $ this -> betterReflectionMethod -> getParameters ( ) ; $ wrappedParameters = [ ] ; foreach ( $ parameters as $ key => $ parameter ) { $ wrappedParameters [ $ key ] = new ReflectionParameter ( $ parameter ) ; } return $ wrappedParameters ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/shumkov/rediska/blob/220afbfc4095e90aa050a5dfc00ce7413147ce45/library/Rediska/Key/List.php#L156-L165<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function remove ( $ value , $ count = 0 ) { $ result = $ this -> _getRediskaOn ( ) -> deleteFromList ( $ this -> getName ( ) , $ value , $ count ) ; if ( ! is_null ( $ this -> getExpire ( ) ) && $ result ) { $ this -> expire ( $ this -> getExpire ( ) , $ this -> isExpireTimestamp ( ) ) ; } return $ result ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/rabbitcms/modules/blob/fbd0d54918779929f6af2840ba20d88f0ca12d95/src/Managers/Modules.php#L96-L109<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function register ( Application $ app ) { $ this -> enabled ( ) -> each ( function ( Module $ module ) use ( $ app ) { array_map ( function ( $ class ) use ( $ app ) { /* @var ServiceProvider $provider */ $ provider = new $ class ( $ app ) ; if ( $ provider -> isDeferred ( ) ) { $ app -> addDeferredServices ( array_fill_keys ( $ provider -> provides ( ) , $ provider ) ) ; } else { $ app -> register ( $ provider ) ; } } , array_filter ( $ module -> getProviders ( ) , 'class_exists' ) ) ; } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/koolkode/process/blob/f9500482103360c1cbe6a12fe8aa03c25e6aad6a/src/AbstractEngine.php#L140-L149<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function findExecution ( UUID $ id ) { $ ref = ( string ) $ id ; if ( isset ( $ this -> executions [ $ ref ] ) ) { return $ this -> executions [ $ ref ] ; } throw new \ OutOfBoundsException ( sprintf ( 'Execution not found: %s' , $ ref ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wp-cli/package-command/blob/52fea16f3cec0577b9c417a19ebc0f328c38d853/src/Package_Command.php#L662-L684<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function package_index ( ) { static $ package_index ; if ( ! $ package_index ) { $ config_args = [ 'config' => [ 'secure-http' => true , 'home' => dirname ( $ this -> get_composer_json_path ( ) ) , ] , ] ; $ config = new Config ( ) ; $ config -> merge ( $ config_args ) ; $ config -> setConfigSource ( new JsonConfigSource ( $ this -> get_composer_json ( ) ) ) ; try { $ package_index = new ComposerRepository ( [ 'url' => self :: PACKAGE_INDEX_URL ] , new NullIO ( ) , $ config ) ; } catch ( Exception $ e ) { WP_CLI :: error ( $ e -> getMessage ( ) ) ; } } return $ package_index ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Parser/Parser/YamlParser.php#L57-L67<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function parse ( string $ payload ) : array { try { return $ this -> parser -> parse ( \ trim ( \ preg_replace ( '/\t+/' , '' , $ payload ) ) , $ this -> flags ) ; } catch ( YamlParseException $ exception ) { throw new ParseException ( [ 'message' => $ exception -> getMessage ( ) , 'exception' => $ exception , ] ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/stevebauman/maintenance/blob/3a205c7e809da015cbf978aeb7d11af54e65084a/app/Models/Traits/SelectHierarchyTrait.php#L16-L33<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function getSelectHierarchy ( $ belongsTo = null ) { $ query = static :: roots ( ) ; if ( ! is_null ( $ belongsTo ) ) { $ query -> where ( 'belongs_to' , $ belongsTo ) ; } $ roots = $ query -> with ( 'children' ) -> get ( ) ; $ options = [ 0 => 'None' ] ; foreach ( $ roots as $ root ) { $ options = $ options + static :: getRenderedNode ( $ root ) ; } return $ options ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/DripsPHP/Routing/blob/ffdd1505ba6be46e7166c8af003d16ff1316f253/src/Router.php#L359-L377<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function findPlaceholders ( $ route ) { $ url = trim ( $ route [ 'url' ] , '/' ) ; if ( empty ( $ url ) && trim ( $ this -> request_uri , '/' ) != '' ) { return false ; } $ matches = array ( ) ; if ( preg_match_all ( "/\{([\w-]+)\}/" , $ url , $ matches ) && isset ( $ matches [ 1 ] ) ) { foreach ( $ matches [ 1 ] as $ match ) { $ replace = "([\w-]+)?" ; if ( isset ( $ route [ 'options' ] [ 'pattern' ] [ $ match ] ) ) { $ replace = $ route [ 'options' ] [ 'pattern' ] [ $ match ] ; } $ url = str_replace ( '{' . $ match . '}' , $ replace , $ url ) ; } } return $ url ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/droptica/droopler/blob/74a37c5b959f9111589802a30b6a5986cc7c3ef2/modules/custom/d_update/src/UpdateChecklist.php#L155-L169<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function setSuccessfulByHook ( array $ keys , $ status = TRUE ) { foreach ( $ keys as $ key ) { if ( $ update = Update :: load ( $ key ) ) { $ update -> setSuccessfulByHook ( $ status ) -> save ( ) ; } else { Update :: create ( [ 'id' => $ key , 'successful_by_hook' => $ status , ] ) -> save ( ) ; } } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/I18n/I18N.php#L269-L298<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function initComponent ( ) { return resolve ( true ) -> then ( function ( ) { $ promises = [ ] ; foreach ( $ this -> translations as $ category => $ config ) { $ source = $ this -> getMessageSource ( $ category ) ; $ promises [ ] = $ source -> preloadMessages ( $ category , $ this -> languages ) -> otherwise ( function ( $ error ) { echo gettype ( $ error ) ; } ) ; } if ( empty ( $ promises ) ) { return true ; } return all ( $ promises ) ; } ) -> then ( function ( ) { $ initMessage = sprintf ( "%s initialized" , __CLASS__ ) ; if ( ! Reaction :: isConsoleApp ( ) ) { Reaction :: info ( $ initMessage ) ; } return $ this -> _initialized = true ; } ) -> otherwise ( function ( $ error ) { if ( $ error instanceof \ Throwable ) { Reaction :: error ( $ error -> getMessage ( ) ) ; } return reject ( $ error ) ; } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/janhenkgerritsen/codeception-laravel5/blob/d8733d7e20c9ed0db3ce571e9741e6c77f61e776/src/Codeception/Module/Laravel5.php#L169-L189<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function bootApplication ( ) { $ projectDir = explode ( $ this -> config [ 'packages' ] , \ Codeception \ Configuration :: projectDir ( ) ) [ 0 ] ; $ projectDir .= $ this -> config [ 'root' ] ; require $ projectDir . 'vendor' . DIRECTORY_SEPARATOR . 'autoload.php' ; \ Illuminate \ Support \ ClassLoader :: register ( ) ; $ bootstrapFile = $ projectDir . $ this -> config [ 'bootstrap' ] ; if ( ! file_exists ( $ bootstrapFile ) ) { throw new ModuleConfig ( $ this , "Laravel bootstrap file not found in $bootstrapFile.\nPlease provide a valid path to it using 'bootstrap' config param. " ) ; } $ app = require $ bootstrapFile ; $ app -> loadEnvironmentFrom ( $ this -> config [ 'environment_file' ] ) ; return $ app ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/silvershop/silvershop-core/blob/b090e970b06c0fb7e68107360760b6e2d6d184c4/src/Model/Order.php#L553-L567<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function canPay ( $ member = null ) { $ extended = $ this -> extendedCan ( __FUNCTION__ , $ member ) ; if ( $ extended !== null ) { return $ extended ; } if ( ! in_array ( $ this -> Status , self :: config ( ) -> payable_status ) ) { return false ; } if ( $ this -> TotalOutstanding ( true ) > 0 && empty ( $ this -> Paid ) ) { return true ; } return false ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/phalcon-nucleon/framework/blob/f50fe76387bb623497f066c86f58fa70bfa613ef/src/Neutrino/Database/Schema/Builder.php#L81-L86<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function hasColumn ( $ table , $ column ) { $ tableColumns = array_map ( 'strtolower' , $ this -> listColumnsName ( $ table ) ) ; return in_array ( strtolower ( $ column ) , $ tableColumns ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/louislivi/SMProxy/blob/6100521c49b618f4c1d64bd57eefdfb14ca66209/src/MysqlPool/MySQLPool.php#L110-L171<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function fetch ( string $ connName , \ swoole_server $ server , int $ fd ) { if ( ! self :: $ init ) { throw new MySQLException ( 'Should call MySQLPool::init!' ) ; } if ( ! isset ( self :: $ connsConfig [ $ connName ] ) ) { throw new MySQLException ( "Unvalid connName: {$connName}." ) ; } $ connsPool = & self :: $ spareConns [ $ connName ] ; if ( ! empty ( $ connsPool ) && count ( $ connsPool ) > self :: $ resumeFetchCount [ $ connName ] ) { $ conn = array_pop ( $ connsPool ) ; if ( ! $ conn -> client -> isConnected ( ) ) { return self :: reconnect ( $ server , $ fd , $ conn , $ connName ) ; } else { $ conn -> serverFd = $ fd ; $ id = spl_object_hash ( $ conn ) ; self :: $ busyConns [ $ connName ] [ $ id ] = $ conn ; self :: $ lastConnsTime [ $ id ] = microtime ( true ) ; return $ conn ; } } if ( ( count ( self :: $ busyConns [ $ connName ] ) + count ( $ connsPool ) + self :: $ pendingFetchCount [ $ connName ] + self :: $ initConnCount [ $ connName ] ) >= self :: $ connsConfig [ $ connName ] [ 'maxConns' ] ) { if ( ! isset ( self :: $ yieldChannel [ $ connName ] ) ) { self :: $ yieldChannel [ $ connName ] = new \ Swoole \ Coroutine \ Channel ( 1 ) ; } ++ self :: $ pendingFetchCount [ $ connName ] ; $ client = self :: coPop ( self :: $ yieldChannel [ $ connName ] , self :: $ connsConfig [ $ connName ] [ 'serverInfo' ] [ 'timeout' ] ) ; if ( false === $ client ) { -- self :: $ pendingFetchCount [ $ connName ] ; $ message = 'SMProxy@Reach max connections! Cann\'t pending fetch!' ; $ errMessage = self :: writeErrMessage ( 1 , $ message , ErrorCode :: ER_HAS_GONE_AWAY ) ; if ( $ server -> exist ( $ fd ) ) { $ server -> send ( $ fd , getString ( $ errMessage ) ) ; } throw new MySQLException ( $ message ) ; } -- self :: $ resumeFetchCount [ $ connName ] ; if ( ! empty ( $ connsPool ) ) { $ conn = array_pop ( $ connsPool ) ; if ( ! $ conn -> client -> isConnected ( ) ) { $ conn = self :: reconnect ( $ server , $ fd , $ conn , $ connName ) ; -- self :: $ pendingFetchCount [ $ connName ] ; return $ conn ; } else { $ conn -> serverFd = $ fd ; $ id = spl_object_hash ( $ conn ) ; self :: $ busyConns [ $ connName ] [ $ id ] = $ conn ; self :: $ lastConnsTime [ $ id ] = microtime ( true ) ; -- self :: $ pendingFetchCount [ $ connName ] ; return $ conn ; } } else { return false ; //should not happen } } return self :: initConn ( $ server , $ fd , $ connName ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/cnvs/easel/blob/bb2b564432155467944b4a2e719e474fd564b711/src/Helpers/RouteHelper.php#L54-L60<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function getBlogMain ( ) { $ config = ConfigHelper :: getWriter ( ) ; $ val = $ config -> get ( 'blog_path' ) ; return is_null ( $ val ) ? self :: ROUTE_DEFAULT_BLOG_MAIN : $ val ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/lightSAML/lightSAML/blob/377f04d1fb25f2fb2e72dabeff10b336f1cbe4c5/src/LightSaml/Store/Request/AbstractRequestStateArrayStore.php#L37-L53<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function get ( $ id ) { $ result = null ; $ arr = $ this -> getArray ( ) ; if ( false == is_array ( $ arr ) ) { $ arr = array ( ) ; $ this -> setArray ( $ arr ) ; } if ( isset ( $ arr [ $ id ] ) ) { $ result = $ arr [ $ id ] ; } if ( $ result instanceof RequestState ) { return $ result ; } return null ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Solve/Database/blob/4de9027cf6fa9c4c5a61c562a02b87a19dec524e/Adapters/MysqlDBAdapter.php#L66-L76<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function executeQuery ( QC $ query ) { $ type = $ query -> getType ( ) ; $ methodName = 'execute' . ucfirst ( $ type ) ; if ( method_exists ( $ this , $ methodName ) ) { $ result = $ this -> $ methodName ( $ query ) ; } else { throw new MysqlDBAdapterException ( 'Invalid method specified: ' . $ type ) ; } return $ result ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/maniaplanet/manialib/blob/d91491c1614ef3bc3c68fd2928ca370c038dd0ad/libraries/ManiaLib/Gui/Element.php#L223-L232<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>function setImage ( $ image , $ absoluteUrl = false ) { $ this -> setStyle ( null ) ; $ this -> setSubStyle ( null ) ; if ( ! $ absoluteUrl ) { $ this -> image = Manialink :: $ imagesURL . $ image ; } else { $ this -> image = $ image ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wonli/crossphp/blob/258b04ea2240351d33b49716a23391fafd2abf41/src/DB/SQLAssembler/SQLAssembler.php#L162-L186<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function del ( $ table , $ where , $ multi = false ) { $ params = array ( ) ; if ( true === $ multi ) { if ( empty ( $ where [ 'fields' ] ) || empty ( $ where [ 'values' ] ) ) { throw new CoreException ( 'data format error!' ) ; } $ where_condition = array ( ) ; foreach ( $ where [ 'fields' ] as $ d ) { $ where_condition [ ] = "{$d} = ?" ; } $ where_str = implode ( ' AND ' , $ where_condition ) ; foreach ( $ where [ 'values' ] as $ p ) { $ params [ ] = $ p ; } } else { $ where_str = $ this -> parseWhere ( $ where , $ params ) ; } $ this -> setSQL ( "DELETE FROM {$table} WHERE {$where_str}" ) ; $ this -> setParams ( $ params ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/skeeks-cms/cms-shop/blob/506c7f549352c15ddf6f2b15d963df7fd555c489/src/widgets/ShopGlobalWidget.php#L52-L72<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function run ( ) { if ( static :: $ isRegisteredAssets === false ) { ShopAsset :: register ( $ this -> getView ( ) ) ; $ options = ( array ) $ this -> clientOptions ; $ options [ 'cartData' ] = \ Yii :: $ app -> shop -> cart -> shopOrder -> jsonSerialize ( ) ; $ options = Json :: encode ( $ options ) ; $ this -> getView ( ) -> registerJs ( <<<JS     (function(sx, $, _)     {         sx.Shop = new sx.classes.shop.App($options);     })(sx, sx.$, sx._); JS ) ; static :: $ isRegisteredAssets = true ; } return parent :: run ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wobblecode/WobbleCodeManagerBundle/blob/a1c76e80c627d6276e93cd3c1332c160f4d80f02/Traits/Document/Attributable.php#L84-L89<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setAttributeInGroup ( $ group , $ key , $ value ) { $ this -> attributes [ $ group ] [ $ key ] = $ value ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/Database/MySQLi/Forge.php#L234-L268<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function _processIndexes ( string $ table ) : string { $ sql = '' ; for ( $ i = 0 , $ c = count ( $ this -> keys ) ; $ i < $ c ; $ i ++ ) { if ( is_array ( $ this -> keys [ $ i ] ) ) { for ( $ i2 = 0 , $ c2 = count ( $ this -> keys [ $ i ] ) ; $ i2 < $ c2 ; $ i2 ++ ) { if ( ! isset ( $ this -> fields [ $ this -> keys [ $ i ] [ $ i2 ] ] ) ) { unset ( $ this -> keys [ $ i ] [ $ i2 ] ) ; continue ; } } } elseif ( ! isset ( $ this -> fields [ $ this -> keys [ $ i ] ] ) ) { unset ( $ this -> keys [ $ i ] ) ; continue ; } is_array ( $ this -> keys [ $ i ] ) || $ this -> keys [ $ i ] = [ $ this -> keys [ $ i ] ] ; $ unique = in_array ( $ i , $ this -> uniqueKeys ) ? 'UNIQUE ' : '' ; $ sql .= ",\n\t{$unique}KEY " . $ this -> db -> escapeIdentifiers ( implode ( '_' , $ this -> keys [ $ i ] ) ) . ' (' . implode ( ', ' , $ this -> db -> escapeIdentifiers ( $ this -> keys [ $ i ] ) ) . ')' ; } $ this -> keys = [ ] ; return $ sql ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/controlabs/php-jwt-helper/blob/86b0773ceed64c048b968fc5bd927e61623833ff/src/Helper/JWT.php#L111-L114<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function expires ( DateTimeImmutable $ now , string $ expires = null ) { return ! $ expires ? null : $ now -> modify ( $ expires ) -> getTimestamp ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/View/Parser.php#L735-L738<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function registerCompiler ( string $ type , string $ name , string $ tag ) : void { $ this -> compilers [ $ type ] [ $ name ] = $ tag ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wp-papi/papi/blob/444960585ed761447b7886ff4cc31be91b4e8302/src/stores/class-papi-post-store.php#L90-L102<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function prepare_load_value ( Papi_Core_Property $ property , $ value ) { if ( $ property -> overwrite ) { // Clear post cache to solve issue with cached post objects // when selecting post field. clean_post_cache ( $ this -> id ) ; $ slug = $ property -> get_slug ( true ) ; $ context = papi_is_admin ( ) ? 'edit' : 'display' ; $ value = get_post_field ( $ slug , $ this -> id , $ context ) ; } return $ value ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/VitexSoftware/EaseFramework/blob/700693949ee6c858d40365c6d3c3825e8a742397/src/Ease/Logger/ToFile.php#L229-L237<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function renameLogFile ( $ newLogFileName ) { $ newLogFileName = dirname ( $ this -> logFileName ) . '/' . basename ( $ newLogFileName ) ; if ( rename ( $ this -> logFileName , $ newLogFileName ) ) { return realpath ( $ newLogFileName ) ; } else { return realpath ( $ this -> logFileName ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/mremi/UrlShortener/blob/d814c07e27dedd359b865b27e8d01ed0f25b4a40/src/Mremi/UrlShortener/Provider/Wechat/OAuthClient.php#L50-L77<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getAccessToken ( ) { $ client = new Client ( array ( 'base_uri' => 'https://api.weixin.qq.com' , ) ) ; $ apiRawResponse = $ client -> get ( '/cgi-bin/token' , array ( 'query' => array ( 'grant_type' => 'client_credential' , 'appid' => $ this -> appid , 'secret' => $ this -> appsecret , ) , ) ) ; $ response = json_decode ( $ apiRawResponse -> getBody ( ) -> getContents ( ) ) ; if ( null === $ response ) { throw new InvalidApiResponseException ( 'Wechat response is probably mal-formed because cannot be json-decoded.' ) ; } if ( property_exists ( $ response , 'errcode' ) ) { throw new InvalidApiResponseException ( sprintf ( 'Wecaht returned status code "%s" with message "%s".' , property_exists ( $ response , 'errcode' ) ? $ response -> errcode : '' , property_exists ( $ response , 'errmsg' ) ? $ response -> errmsg : '' ) ) ; } return $ response -> access_token ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/nilportugues/php-sql-query-builder/blob/89918711eb1e3e982309aa202b9987c08c6f495b/src/Manipulation/ColumnQuery.php#L194-L210<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function count ( $ columnName = '*' , $ alias = '' ) { $ table = $ this -> select -> getTable ( ) ; $ count = 'COUNT(' ; $ count .= ( $ columnName !== '*' ) ? "$table.{$columnName}" : '*' ; $ count .= ')' ; if ( isset ( $ alias ) && \ strlen ( $ alias ) > 0 ) { $ count .= ' AS "' . $ alias . '"' ; } $ this -> columns = array ( $ count ) ; $ this -> isCount = true ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/tastyigniter/flame/blob/3c922ba1c02b3c14ad4adf91c2f37498045fa92a/src/Database/Attach/Media.php#L648-L656<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getPublicPath ( ) { $ mediaPath = config ( 'system.assets.attachment.path' , '/storage/app/attachments' ) ; $ mediaPath = $ this -> isPublic ( ) ? $ mediaPath . '/public' : $ mediaPath . '/protected' ; return URL :: asset ( $ mediaPath ) . '/' ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/Log/Logger.php#L333-L394<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function log ( $ level , $ message , array $ context = [ ] ) : bool { if ( is_numeric ( $ level ) ) { $ level = array_search ( ( int ) $ level , $ this -> logLevels ) ; } // Is the level a valid level? if ( ! array_key_exists ( $ level , $ this -> logLevels ) ) { throw LogException :: forInvalidLogLevel ( $ level ) ; } // Does the app want to log this right now? if ( ! in_array ( $ level , $ this -> loggableLevels ) ) { return false ; } // Parse our placeholders $ message = $ this -> interpolate ( $ message , $ context ) ; if ( ! is_string ( $ message ) ) { $ message = print_r ( $ message , true ) ; } if ( $ this -> cacheLogs ) { $ this -> logCache [ ] = [ 'level' => $ level , 'msg' => $ message , ] ; } foreach ( $ this -> handlerConfig as $ className => $ config ) { if ( ! array_key_exists ( $ className , $ this -> handlers ) ) { $ this -> handlers [ $ className ] = new $ className ( $ config ) ; } /** 			 * @var \CodeIgniter\Log\Handlers\HandlerInterface 			 */ $ handler = $ this -> handlers [ $ className ] ; if ( ! $ handler -> canHandle ( $ level ) ) { continue ; } // If the handler returns false, then we // don't execute any other handlers. if ( ! $ handler -> setDateFormat ( $ this -> dateFormat ) -> handle ( $ level , $ message ) ) { break ; } } return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/tastyigniter/flame/blob/3c922ba1c02b3c14ad4adf91c2f37498045fa92a/src/Database/Attach/Media.php#L515-L522<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function getThumbFilename ( $ options ) { return 'thumb_' . $ this -> id . '_' . $ options [ 'width' ] . '_' . $ options [ 'height' ] . '_' . $ options [ 'fit' ] . '_' . substr ( md5 ( serialize ( array_except ( $ options , [ 'width' , 'height' , 'fit' ] ) ) ) , 0 , 8 ) . '.' . $ options [ 'extension' ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Filesystem/Encryption/EncryptionWrapper.php#L299-L316<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function encryptStream ( $ resource ) { $ out = \ fopen ( 'php://temp' , 'w+b' ) ; if ( $ resource !== false ) { try { File :: encrypt ( $ resource , $ out , $ this -> key ) ; } catch ( FileAccessDenied $ exception ) { throw new FileAccessDeniedException ( $ exception -> getMessage ( ) , $ exception -> getCode ( ) , $ exception ) ; } catch ( FileModified $ exception ) { throw new FileModifiedException ( $ exception -> getMessage ( ) , $ exception -> getCode ( ) , $ exception ) ; } \ rewind ( $ out ) ; } return $ out ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/xcorp1986/next-think/blob/de3a8fcab31a520d9284aa807ed16de30de31f0c/Think/Cache/Driver/File.php#L176-L193<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function clear ( ) { $ path = $ this -> options [ 'temp' ] ; $ files = scandir ( $ path ) ; if ( $ files ) { foreach ( $ files as $ file ) { if ( $ file != '.' && $ file != '..' && is_dir ( $ path . $ file ) ) { array_map ( 'unlink' , glob ( $ path . $ file . '/*.*' ) ) ; } elseif ( is_file ( $ path . $ file ) ) { @ unlink ( $ path . $ file ) ; } } return true ; } return false ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/BerliozFramework/Config/blob/35a519eef615f50239a26dd179aca43a6e313daa/src/ExtendedJsonConfig.php#L114-L145<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function doInclusions ( & $ value , $ key , string $ baseDirectory ) { if ( ! is_string ( $ value ) ) { return ; } $ matches = [ ] ; if ( preg_match ( sprintf ( '/^\s*%1$s(?<action>include|extends)\:(?<var>[\w\-\.\,\s]+)%1$s\s*$/i' , preg_quote ( self :: TAG ) ) , $ value , $ matches ) != 1 ) { return ; } try { switch ( $ matches [ 'action' ] ) { case 'include' : $ value = $ this -> load ( $ matches [ 'var' ] , true , $ baseDirectory ) ; break ; case 'extends' : $ files = explode ( ',' , $ matches [ 'var' ] ) ; $ files = array_map ( 'trim' , $ files ) ; $ files = array_map ( function ( $ file ) use ( $ baseDirectory ) { return $ this -> load ( $ file , true , $ baseDirectory ) ; } , $ files ) ; $ value = call_user_func_array ( 'b_array_merge_recursive' , $ files ) ; break ; } } catch ( \ Exception $ e ) { throw new ConfigException ( sprintf ( 'Unable to do action of config line "%s"' , $ value ) , 0 , $ e ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/miBadger/miBadger.File/blob/5b681fe3345ab68f0bda151e5f85a33f8bbca24e/src/File.php#L327-L330<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function rename ( $ file , $ override = false ) { return $ this -> move ( $ this -> getDirectory ( ) . static :: DIRECTORY_SEPARATOR . basename ( $ file ) , $ override ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Rundiz/profiler/blob/86ba865a01e11763591793d607e5a99239ba8691/Rundiz/Profiler/Profiler.php#L79-L94<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function display ( $ dbh = '' , $ display_db_function = '' ) { $ this -> gatherAll ( ) ; global $ rundizProfilerBeautifulIndent ; $ rundizProfilerBeautifulIndent = $ this -> beautifulIndent ; // return display views. ob_start ( ) ; require __DIR__ . DIRECTORY_SEPARATOR . 'views' . DIRECTORY_SEPARATOR . 'display.php' ; $ this -> reset ( ) ; $ output = ob_get_contents ( ) ; ob_end_clean ( ) ; return $ output ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Routing/Router.php#L354-L363<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function dispatch ( ServerRequestInterface $ request ) : ResponseInterface { $ dispatcher = $ this -> dispatcher ; if ( $ this -> container !== null && \ method_exists ( $ dispatcher , 'setContainer' ) ) { $ dispatcher -> setContainer ( $ this -> container ) ; } return $ dispatcher -> handle ( $ this -> routes , $ request ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Litecms/Contact/blob/cf8ea54f4553010ac7ea572c68622f8bf8203f4f/src/Http/Controllers/ContactResourceController.php#L90-L98<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function create ( ContactRequest $ request ) { $ contact = $ this -> repository -> newInstance ( [ ] ) ; return $ this -> response -> setMetaTitle ( trans ( 'app.new' ) . ' ' . trans ( 'contact::contact.name' ) ) -> view ( 'contact::contact.create' , true ) -> data ( compact ( 'contact' ) ) -> output ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Session/Store.php#L304-L315<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function migrate ( bool $ destroy = false ) : bool { if ( $ destroy ) { $ this -> handler -> destroy ( $ this -> id ) ; } $ this -> id = $ this -> generateSessionId ( ) ; $ this -> regenerationTrace = $ this -> getTimestamp ( ) ; $ this -> requestsCount = 0 ; return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/marcelog/Ding/blob/aad50c28e99509f22c9cb1ba54acbeced3b30c50/src/mg/Ding/Helpers/Tcp/TcpServerHelper.php#L144-L172<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function open ( ) { $ this -> _open = false ; $ this -> _handler -> beforeOpen ( ) ; $ this -> _socket = socket_create ( AF_INET , SOCK_STREAM , SOL_TCP ) ; if ( $ this -> _socket === false ) { throw new TcpException ( 'Error opening socket: ' . socket_strerror ( socket_last_error ( ) ) ) ; } if ( $ this -> _reuse ) { socket_set_option ( $ this -> _socket , SOL_SOCKET , SO_REUSEADDR , 1 ) ; } if ( ! @ socket_bind ( $ this -> _socket , $ this -> _address , $ this -> _port ) ) { $ error = socket_strerror ( socket_last_error ( $ this -> _socket ) ) ; socket_close ( $ this -> _socket ) ; $ this -> _socket = false ; throw new TcpException ( 'Error binding socket: ' . $ error ) ; } socket_set_nonblock ( $ this -> _socket ) ; $ this -> _handler -> beforeListen ( ) ; if ( ! socket_listen ( $ this -> _socket , $ this -> _backlog ) ) { $ error = socket_strerror ( socket_last_error ( $ this -> _socket ) ) ; socket_close ( $ this -> _socket ) ; $ this -> _socket = false ; throw new TcpException ( 'Error listening socket: ' . $ error ) ; } $ this -> _open = true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/lootils/geo/blob/09cb37680489c167acbe3bbf4ab8235841094674/src/Lootils/Geo/Method/Yee.php#L25-L39<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function distance ( LocationInterface $ location1 , LocationInterface $ location2 ) { $ radLong1 = deg2rad ( $ location1 -> longitude ( ) ) ; $ radLat1 = deg2rad ( $ location1 -> latitude ( ) ) ; $ radLong2 = deg2rad ( $ location2 -> longitude ( ) ) ; $ radLat2 = deg2rad ( $ location2 -> latitude ( ) ) ; $ radius = $ this -> earthRadius ( ( $ location1 -> latitude ( ) + $ location2 -> latitude ( ) ) / 2 ) ; $ cosangle = cos ( $ radLat1 ) * cos ( $ radLat2 ) * ( cos ( $ radLong1 ) * cos ( $ radLong2 ) + sin ( $ radLong1 ) * sin ( $ radLong2 ) ) + sin ( $ radLat1 ) * sin ( $ radLat2 ) ; return acos ( $ cosangle ) * $ radius ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/phalcon-nucleon/framework/blob/f50fe76387bb623497f066c86f58fa70bfa613ef/src/Neutrino/Database/Schema/Blueprint.php#L953-L956<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function bigInteger ( $ column , $ autoIncrement = false , $ unsigned = false ) { return $ this -> addInteger ( __FUNCTION__ , $ column , $ autoIncrement , $ unsigned ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/igorwanbarros/php2html/blob/11022e1a9ef943e187bfcfc0d759ce96862a8dc2/src/Tabs/TabsView.php#L140-L147<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function addTitle ( $ name , $ title = null ) { if ( is_array ( $ name ) ) { return $ this -> setTitles ( $ name ) ; } return $ this -> _preparedTitle ( $ name , $ title ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/yawik/organizations/blob/a5d982212be5f445c067656aeb0aa3ca7daf0251/src/Form/LogoImageFactory.php#L40-L56<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function configureForm ( $ form , AbstractOptions $ options ) { $ size = $ options -> getCompanyLogoMaxSize ( ) ; $ type = $ options -> getCompanyLogoMimeType ( ) ; $ form -> get ( $ this -> fileName ) -> setViewHelper ( 'formImageUpload' ) -> setMaxSize ( $ size ) -> setAllowedTypes ( $ type ) -> setForm ( $ form ) ; $ form -> setIsDescriptionsEnabled ( true ) ; $ form -> setDescription ( /*@translate*/ 'Choose a Logo. This logo will be shown in the job opening and the application form.' ) ; //$form->setHydrator(new ImageHydrator()); }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/mcrumm/phlack/blob/234d85ce564cc80e1c8134c55ca242cd366bc2ee/src/Common/Collection/TypeCollection.php#L28-L35<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function add ( $ value ) { if ( ! $ this -> acceptsType ( $ value ) ) { throw $ this -> doUnexpectedValueError ( $ value ) ; } return parent :: add ( $ value ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/vanilla/garden/blob/ad9af189da98d57dc990eb3e6c0524f32e5e7e01/src/Schema.php#L573-L582<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function validateObject ( & $ value , array $ field , Validation $ validation ) { if ( ! is_array ( $ value ) || isset ( $ value [ 0 ] ) ) { return false ; } elseif ( isset ( $ field [ 'properties' ] ) ) { $ path = array_select ( [ 'path' , 'name' ] , $ field ) ; // Validate the data against the internal schema. $ this -> isValidInternal ( $ value , $ field [ 'properties' ] , $ validation , $ path . '.' ) ; } return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hassankhan/Sonic/blob/8c842343f6bddc063bf6aa9de460d48bc113af64/src/Sonic/Extension/Twig.php#L102-L106<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function link_for ( $ file_name ) { $ sonic = \ Sonic \ Sonic :: instance ( ) ; return $ sonic -> app [ 'helper' ] -> link_for ( $ file_name ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/phalcon-nucleon/framework/blob/f50fe76387bb623497f066c86f58fa70bfa613ef/src/Neutrino/Database/Schema/Dialect/WrapperTrait.php#L298-L301<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function createView ( $ viewName , array $ definition , $ schemaName = null ) { return $ this -> dialect -> createView ( $ viewName , $ definition , $ schemaName ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/intuit/QuickBooks-V3-PHP-SDK/blob/09f9f42e4cf49a7d6e0aa4d2c15e15eba245bfd5/src/XSD2PHP/src/com/mikebevz/xsd2php/Common.php#L200-L228<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function parseDocComments ( $ comments ) { $ comments = explode ( "\n" , $ comments ) ; $ commentsOut = array ( ) ; $ params = array ( ) ; foreach ( $ comments as $ com ) { if ( preg_match ( '/@/' , $ com ) ) { $ com = preg_replace ( '/\* /' , '' , $ com ) ; $ com = preg_replace ( '/@([a-zA-Z]*)( *)(.*)/' , '$1|$3' , $ com ) ; $ com = explode ( '|' , $ com ) ; //$arr = array(); if ( trim ( $ com [ 0 ] ) == 'param' ) { $ com [ 1 ] = $ this -> parseParamDocs ( trim ( $ com [ 1 ] ) ) ; array_push ( $ params , $ com [ 1 ] ) ; $ com [ 1 ] = $ params ; $ com [ 0 ] = "params" ; } if ( trim ( $ com [ 0 ] ) == 'return' ) { $ com [ 1 ] = $ this -> parseReturnDocs ( trim ( $ com [ 1 ] ) ) ; } $ commentsOut [ trim ( $ com [ 0 ] ) ] = trim ( $ com [ 1 ] ) ; //array_push($commentsOut, array($com[0] => $com[1])); } } return $ commentsOut ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Db/Migration.php#L93-L97<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function init ( ) { parent :: init ( ) ; $ this -> db = Instance :: ensure ( $ this -> db , DatabaseInterface :: class ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/orchestral/extension/blob/d461c988ba6ec0200fc8f4e35b515e6710d3ef0a/src/Dispatcher.php#L144-L149<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function deactivating ( string $ name , array $ options ) : void { $ this -> fireEvent ( $ name , $ options , 'deactivating' ) ; $ this -> provider -> writeFreshManifest ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/slickframework/http/blob/9da14b618e0f75d3d565e0ce928a35d992755e75/src/Message/Server/Request.php#L332-L337<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function withAttribute ( $ name , $ value ) { $ request = clone $ this ; $ request -> attributes [ $ name ] = $ value ; return $ request ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/laravie/html/blob/b5428277451b00d54abc6d31307a45c8999e197b/src/Concerns/Selection.php#L215-L228<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function placeholderOption ( string $ display , $ selected ) : Htmlable { $ options = [ 'selected' => $ this -> getSelectedValue ( null , $ selected ) , 'disabled' => true , 'value' => '' , ] ; return $ this -> toHtmlString ( \ sprintf ( '<option%s>%s</option>' , $ this -> getHtmlBuilder ( ) -> attributes ( $ options ) , $ this -> entities ( $ display ) ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/qranio-com/azure-sdk-pear-deps/blob/6609eab8623759b5e23345ded80d832278a7b680/src/PEAR/Registry.php#L472-L503<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>function _assertChannelDir ( ) { if ( ! file_exists ( $ this -> channelsdir ) ) { if ( ! $ this -> hasWriteAccess ( ) ) { return false ; } require_once 'System.php' ; if ( ! System :: mkdir ( array ( '-p' , $ this -> channelsdir ) ) ) { return $ this -> raiseError ( "could not create directory '{$this->channelsdir}'" ) ; } } elseif ( ! is_dir ( $ this -> channelsdir ) ) { return $ this -> raiseError ( "could not create directory '{$this->channelsdir}" . "', it already exists and is not a directory" ) ; } if ( ! file_exists ( $ this -> channelsdir . DIRECTORY_SEPARATOR . '.alias' ) ) { if ( ! $ this -> hasWriteAccess ( ) ) { return false ; } require_once 'System.php' ; if ( ! System :: mkdir ( array ( '-p' , $ this -> channelsdir . DIRECTORY_SEPARATOR . '.alias' ) ) ) { return $ this -> raiseError ( "could not create directory '{$this->channelsdir}/.alias'" ) ; } } elseif ( ! is_dir ( $ this -> channelsdir . DIRECTORY_SEPARATOR . '.alias' ) ) { return $ this -> raiseError ( "could not create directory '{$this->channelsdir}" . "/.alias', it already exists and is not a directory" ) ; } return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/Console/Command.php#L146-L153<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function call ( $ command , array $ arguments = [ ] ) : int { $ arguments [ 'command' ] = $ command ; return $ this -> getApplication ( ) -> find ( $ command ) -> run ( new ArrayInput ( $ arguments ) , $ this -> output ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/blob/04bfa1284ca652e8e9befe82134f440cc31f655d/WordPress/Sniffs/WP/DeprecatedParameterValuesSniff.php#L177-L214<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function process_parameter ( $ matched_content , $ parameter , $ parameter_args ) { $ parameter_position = $ this -> phpcsFile -> findNext ( Tokens :: $ emptyTokens , $ parameter [ 'start' ] , $ parameter [ 'end' ] + 1 , true ) ; if ( false === $ parameter_position ) { return ; } $ matched_parameter = $ this -> strip_quotes ( $ this -> tokens [ $ parameter_position ] [ 'content' ] ) ; if ( ! isset ( $ parameter_args [ $ matched_parameter ] ) ) { return ; } $ message = 'The parameter value "%s" has been deprecated since WordPress version %s.' ; $ data = array ( $ matched_parameter , $ parameter_args [ $ matched_parameter ] [ 'version' ] , ) ; if ( ! empty ( $ parameter_args [ $ matched_parameter ] [ 'alt' ] ) ) { $ message .= ' Use %s instead.' ; $ data [ ] = $ parameter_args [ $ matched_parameter ] [ 'alt' ] ; } $ is_error = version_compare ( $ parameter_args [ $ matched_parameter ] [ 'version' ] , $ this -> minimum_supported_version , '<' ) ; $ this -> addMessage ( $ message , $ parameter_position , $ is_error , $ this -> string_to_errorcode ( 'Found' ) , $ data ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Roave/BetterReflection/blob/173f42ccb0af41b01b3c2dfd5bd185ccd9ead50c/src/Reflection/ReflectionFunctionAbstract.php#L501-L513<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setBodyFromClosure ( Closure $ newBody ) : void { /** @var self $closureReflection */ $ closureReflection = ( new ClosureSourceLocator ( $ newBody , $ this -> loadStaticParser ( ) ) ) -> locateIdentifier ( $ this -> reflector , new Identifier ( self :: CLOSURE_NAME , new IdentifierType ( IdentifierType :: IDENTIFIER_FUNCTION ) ) ) ; /** @var Node\Stmt\Function_ $functionNode */ $ functionNode = $ closureReflection -> getNode ( ) ; $ this -> node -> stmts = $ functionNode -> stmts ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/spiral/migrations/blob/d7ea264874373433bc4e16bb9b86050a4cd28000/src/TableBlueprint.php#L246-L253<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function create ( ) { $ this -> addOperation ( new Operation \ Table \ Create ( $ this -> table ) ) ; $ this -> execute ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/Database/Condition.php#L1373-L1388<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function limit ( int $ offset = 0 , int $ count = 0 ) : self { if ( $ this -> checkFlowControl ( ) ) { return $ this ; } if ( 0 === $ count ) { return $ this -> top ( $ offset ) ; } $ this -> options [ 'limitCount' ] = $ count ; $ this -> options [ 'limitOffset' ] = $ offset ; $ this -> options [ 'limitQuery' ] = true ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/EliuFlorez/google-map/blob/b96e3975314a83f806ed86623f7b219d2c96ee9f/src/Services/DistanceMatrix/DistanceMatrix.php#L215-L224<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function buildDistanceMatrixRows ( $ rows ) { $ results = array ( ) ; foreach ( $ rows as $ row ) { $ results [ ] = $ this -> buildDistanceMatrixRow ( $ row ) ; } return $ results ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/EasyCorp/EasyAdminBundle/blob/2e241936000d347a9e1230d08ccfe5bb27dd357f/src/Form/Type/Configurator/IvoryCKEditorTypeConfigurator.php#L35-L40<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function supports ( $ type , array $ options , array $ metadata ) { $ isCkeditorField = \ in_array ( $ type , [ 'ckeditor' , 'Ivory\\CKEditorBundle\\Form\\Type\\CKEditorType' ] , true ) ; return $ isCkeditorField && ! isset ( $ options [ 'config' ] [ 'toolbar' ] ) && ! isset ( $ options [ 'config_name' ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/joegreen88/zf1-component-filter/blob/c19c3729ad352cb0ece6ae4777921722d46a1711/src/Zend/Filter/Compress/Tar.php#L87-L93<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setArchive ( $ archive ) { $ archive = str_replace ( array ( '/' , '\\' ) , DIRECTORY_SEPARATOR , $ archive ) ; $ this -> _options [ 'archive' ] = ( string ) $ archive ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/googleapis/common-protos-php/blob/d4763ce7c8046ec84534bd3aa61ab606f4b27373/src/Api/Distribution.php#L335-L341<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setBucketCounts ( $ var ) { $ arr = GPBUtil :: checkRepeatedField ( $ var , \ Google \ Protobuf \ Internal \ GPBType :: INT64 ) ; $ this -> bucket_counts = $ arr ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/dreamfactorysoftware/df-aws/blob/6f13ef0757d2228c2c5b59933b8fe520eb1d84bf/src/Resources/SnsEndpoint.php#L265-L289<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function retrieveEndpoint ( $ resource ) { $ request = [ 'EndpointArn' => $ this -> service -> addArnPrefix ( $ resource ) ] ; try { if ( null !== $ result = $ this -> service -> getConnection ( ) -> getEndpointAttributes ( $ request ) ) { $ attributes = array_get ( $ result -> toArray ( ) , 'Attributes' ) ; return [ 'Endpoint' => $ this -> service -> stripArnPrefix ( $ resource ) , 'EndpointArn' => $ this -> service -> addArnPrefix ( $ resource ) , 'Attributes' => $ attributes ] ; } } catch ( \ Exception $ ex ) { if ( null !== $ newEx = Sns :: translateException ( $ ex ) ) { throw $ newEx ; } throw new InternalServerErrorException ( "Failed to retrieve properties for '$resource'.\n{$ex->getMessage()}" , $ ex -> getCode ( ) ) ; } return [ ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/shumkov/rediska/blob/220afbfc4095e90aa050a5dfc00ce7413147ce45/library/Rediska/Connection/Socket.php#L266-L273<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function _getReadBuffer ( ) { if ( $ this -> _readBuffer === null ) { $ this -> _readBuffer = new Rediska_Connection_Socket_ReadBuffer ( $ this ) ; } return $ this -> _readBuffer ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/allebb/executioner/blob/2d3cbc3b402f4dcc7cd1abcab1f3d2e09451abe8/src/Executioner.php#L123-L135<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function compileCommand ( ) { $ command = '' ; if ( $ this -> sudo ) { $ command = 'sudo ' ; } $ command .= escapeshellcmd ( $ this -> applicationPath ) . $ this -> generateArguments ( ) ; if ( $ this -> stdError ) { $ command .= ' 2>&1' ; } return $ command ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/core23/lastfm-php-api/blob/7741ae884b07964d290c6783553437f621c7fe6b/src/Service/TagService.php#L41-L53<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getInfo ( string $ tag , string $ lang = null ) : ? TagInfo { $ response = $ this -> client -> unsignedCall ( 'tag.getInfo' , [ 'tag' => $ tag , 'lang' => $ lang , ] ) ; if ( ! isset ( $ response [ 'tag' ] ) ) { return null ; } return TagInfo :: fromApi ( $ response [ 'tag' ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/DevFactoryCH/media/blob/d30611fe32bc302616eec3e7db1c2df5d3542ba6/src/MediaTrait.php#L472-L478<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function makeDirectory ( $ directory ) { if ( File :: isDirectory ( $ directory ) ) { return TRUE ; } return File :: makeDirectory ( $ directory , 0755 , TRUE ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/contao-community-alliance/dc-general-contao-frontend/blob/0a5c293f90fae42732ce1795f2ccfa26a76effce/src/View/WidgetManager.php#L125-L152<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function renderWidget ( $ property , $ ignoreErrors = false , PropertyValueBag $ valueBag = null ) { $ widget = $ this -> getWidget ( $ property , $ valueBag ) ; if ( ! $ widget ) { throw new DcGeneralRuntimeException ( 'No widget for property ' . $ property ) ; } if ( $ ignoreErrors ) { // Clean the errors array and fix up the CSS class. $ reflection = new \ ReflectionProperty ( get_class ( $ widget ) , 'arrErrors' ) ; $ reflection -> setAccessible ( true ) ; $ reflection -> setValue ( $ widget , [ ] ) ; $ reflection = new \ ReflectionProperty ( get_class ( $ widget ) , 'strClass' ) ; $ reflection -> setAccessible ( true ) ; $ reflection -> setValue ( $ widget , str_replace ( 'error' , '' , $ reflection -> getValue ( $ widget ) ) ) ; } else { if ( $ valueBag && $ valueBag -> hasPropertyValue ( $ property ) && $ valueBag -> isPropertyValueInvalid ( $ property ) ) { foreach ( $ valueBag -> getPropertyValueErrors ( $ property ) as $ error ) { $ widget -> addError ( $ error ) ; } } } return $ widget -> parse ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/sulu/SuluFormBundle/blob/4226e71f3c220f40d75bd289297e4879a3f36f69/Controller/FormController.php#L360-L371<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function deleteAction ( Request $ request , $ id ) { $ locale = $ this -> getLocale ( $ request ) ; $ entity = $ this -> getManager ( ) -> delete ( $ id , $ locale ) ; if ( ! $ entity ) { throw $ this -> createNotFoundException ( sprintf ( 'No form with id "%s" was found!' , $ id ) ) ; } return new Response ( '' , 204 ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/F21/Paradox/blob/d1f47203e743760d8d8d6232bf0ea62920e7eefe/Paradox/Debug.php#L57-L103<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function trace ( $ data ) { if ( $ this -> _debug ) { //Open the tags and output request specific items if ( $ data -> getType ( ) == "request" ) { print '<table style="border-style: solid; border-width: 1px; border-color: #b1b1b1; margin: 5px"><tr><td style="vertical-align: top; padding: 10px; width: 400px">' ; print "<h3>Request to server</h3>" ; print "<p><strong>{$data->getMethod()}</strong> {$data->getRequestUrl()}</p>" ; } //Output response specific items if ( $ data -> getType ( ) == "response" ) { print '<td style="vertical-align: top; padding: 10px; padding-left: 20px; width: 400px"><h3>Response from server</h3>' ; if ( $ data -> getHttpCode ( ) >= 400 ) { print '<p style="color: red"><strong>' . $ data -> getHttpCode ( ) . '</strong> ' . $ data -> getHttpCodeDefinition ( ) . '</p>' ; } else { print '<p style="color: green"><strong>' . $ data -> getHttpCode ( ) . '</strong> ' . $ data -> getHttpCodeDefinition ( ) . '</p>' ; } } //Headers print "<pre>" ; foreach ( $ data -> getHeaders ( ) as $ header => $ value ) { print "$header : $value\n" ; } print "</pre>" ; //Body if ( $ data -> getBody ( ) ) { $ body = json_decode ( $ data -> getBody ( ) ) ; print "<pre>" . json_encode ( $ body , JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES | JSON_UNESCAPED_UNICODE ) . "</pre>" ; } //Close off the tags if ( $ data -> getType ( ) == "request" ) { print '</td>' ; } if ( $ data -> getType ( ) == "response" ) { print '<p>Time taken: ' . $ data -> getTimeTaken ( ) * 1000 . ' ms</pre>' ; print "</td></tr></table>" ; } } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/Database/BaseBuilder.php#L2319-L2333<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function truncate ( bool $ test = false ) { $ table = $ this -> QBFrom [ 0 ] ; $ sql = $ this -> _truncate ( $ table ) ; if ( $ test === true ) { return $ sql ; } $ this -> resetWrite ( ) ; return $ this -> db -> query ( $ sql , null , false ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/FriendsOfSymfony/FOSElasticaBundle/blob/3f2707d1d606a59527f74e88808b820a170d3f42/src/Transformer/ModelToElasticaAutoTransformer.php#L151-L213<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function transformObjectToDocument ( $ object , array $ fields , $ identifier = '' ) { $ document = new Document ( $ identifier , [ ] , '' , $ this -> options [ 'index' ] ) ; if ( $ this -> dispatcher ) { $ event = new TransformEvent ( $ document , $ fields , $ object ) ; $ this -> dispatcher -> dispatch ( TransformEvent :: PRE_TRANSFORM , $ event ) ; $ document = $ event -> getDocument ( ) ; } foreach ( $ fields as $ key => $ mapping ) { if ( '_parent' == $ key ) { $ property = ( null !== $ mapping [ 'property' ] ) ? $ mapping [ 'property' ] : $ mapping [ 'type' ] ; $ value = $ this -> propertyAccessor -> getValue ( $ object , $ property ) ; $ document -> setParent ( $ this -> propertyAccessor -> getValue ( $ value , $ mapping [ 'identifier' ] ) ) ; continue ; } $ path = isset ( $ mapping [ 'property_path' ] ) ? $ mapping [ 'property_path' ] : $ key ; if ( false === $ path ) { continue ; } $ value = $ this -> propertyAccessor -> getValue ( $ object , $ path ) ; if ( isset ( $ mapping [ 'type' ] ) && in_array ( $ mapping [ 'type' ] , [ 'nested' , 'object' ] ) && isset ( $ mapping [ 'properties' ] ) && ! empty ( $ mapping [ 'properties' ] ) ) { /* $value is a nested document or object. Transform $value into                  * an array of documents, respective the mapped properties.                  */ $ document -> set ( $ key , $ this -> transformNested ( $ value , $ mapping [ 'properties' ] ) ) ; continue ; } if ( isset ( $ mapping [ 'type' ] ) && 'attachment' == $ mapping [ 'type' ] ) { // $value is an attachment. Add it to the document. if ( $ value instanceof \ SplFileInfo ) { $ document -> addFile ( $ key , $ value -> getPathName ( ) ) ; } else { $ document -> addFileContent ( $ key , $ value ) ; } continue ; } $ document -> set ( $ key , $ this -> normalizeValue ( $ value ) ) ; } if ( $ this -> dispatcher ) { $ event = new TransformEvent ( $ document , $ fields , $ object ) ; $ this -> dispatcher -> dispatch ( TransformEvent :: POST_TRANSFORM , $ event ) ; $ document = $ event -> getDocument ( ) ; } return $ document ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/phmLabs/Smoke/blob/563d086168f845986071fce1ce58a701916b74a8/src/Extensions/SmokeResponseRetriever/Retriever/ListRetriever/Retriever.php#L65-L80<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function createRequest ( Uri $ uri ) { $ headers = [ 'Accept-Encoding' => 'gzip' , 'Connection' => 'keep-alive' ] ; if ( $ uri -> getSessionIdentifier ( ) ) { $ session = $ this -> sessionContainer -> getSession ( $ uri -> getSessionIdentifier ( ) ) ; foreach ( $ session -> getCookies ( ) as $ key => $ value ) { $ uri -> addCookie ( $ key , $ value ) ; } } $ request = RequestFactory :: getRequest ( $ uri , 'GET' , 'php://memory' , $ headers ) ; return $ request ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/AnonymPHP/Anonym-Crypt/blob/00d379107913bfdc33a347041ebe2d91749ec69b/src/Anonym/Components/AnonymCrypt.php#L142-L148<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function decrypt ( array $ payload ) { $ iv = $ payload [ 'iv' ] ; $ value = $ payload [ 'value' ] ; $ value = trim ( $ value ) ; return mcrypt_decrypt ( $ this -> getAlogirtym ( ) , $ this -> getSecurityKey ( ) , $ value , $ this -> getMode ( ) , $ iv ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/mvqn/rest/blob/2949215a972151fce5c0c03b292f6342b6754a14/src/MVQN/REST/RestClient.php#L402-L429<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function post ( string $ endpoint , array $ data ) : array { /*         // Create the cURL session.         $curl = self::curl($endpoint);          // Set any additional options.         curl_setopt($curl, CURLOPT_POST, true);          // Set the data to be provided to the endpoint.         curl_setopt($curl, CURLOPT_POSTFIELDS, json_encode($data, self::JSON_OPTIONS));          // Execute the request and capture the response.         $response = curl_exec($curl);          // Check to see if there were any errors...         if(!$response)             throw new \Exception("[MVQN\REST\ResClient] The REST request failed with the following error(s): ".curl_error($curl));          // Close the cURL session.         curl_close($curl);         */ $ response = ( string ) self :: client ( ) -> post ( ltrim ( $ endpoint , "/" ) , [ "json" => $ data ] ) -> getBody ( ) ; // Finally, return the resulting associative array! return json_decode ( $ response , true ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/stevebauman/maintenance/blob/3a205c7e809da015cbf978aeb7d11af54e65084a/app/Http/Presenters/Asset/AssetPresenter.php#L23-L54<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function table ( Asset $ asset ) { return $ this -> table -> of ( 'assets' , function ( TableGrid $ table ) use ( $ asset ) { $ table -> with ( $ asset ) -> paginate ( $ this -> perPage ) ; $ table -> attributes ( [ 'class' => 'table table-hover table-striped' , ] ) ; $ table -> column ( 'tag' ) ; $ table -> column ( 'name' , function ( Column $ column ) { $ column -> value = function ( Asset $ asset ) { return link_to_route ( 'maintenance.assets.show' , $ asset -> name , [ $ asset -> getKey ( ) ] ) ; } ; } ) ; $ table -> column ( 'category' , function ( Column $ column ) { $ column -> value = function ( Asset $ asset ) { return $ asset -> category -> trail ; } ; } ) ; $ table -> column ( 'location' , function ( Column $ column ) { $ column -> value = function ( Asset $ asset ) { return $ asset -> location -> trail ; } ; } ) ; $ table -> column ( 'created_at' ) ; } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/yetanotherape/diff-match-patch/blob/ddbf7c0c021b970533a161f8078f675dcd7e5372/src/Diff.php#L793-L842<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function fromDelta ( $ text1 , $ delta ) { $ diffs = array ( ) ; // Cursor in text1 $ pointer = 0 ; $ tokens = explode ( "\t" , $ delta ) ; foreach ( $ tokens as $ token ) { if ( $ token == '' ) { // Blank tokens are ok (from a trailing \t). continue ; } // Each token begins with a one character parameter which specifies the // operation of this token (delete, insert, equality). $ op = mb_substr ( $ token , 0 , 1 ) ; $ param = mb_substr ( $ token , 1 ) ; switch ( $ op ) { case '+' : $ diffs [ ] = array ( self :: INSERT , Utils :: unescapeString ( $ param ) , ) ; break ; case '-' : case '=' : if ( ! is_numeric ( $ param ) ) { throw new \ InvalidArgumentException ( 'Invalid number in delta: ' . $ param ) ; } elseif ( $ param < 0 ) { throw new \ InvalidArgumentException ( 'Negative number in delta: ' . $ param ) ; } else { $ n = ( int ) $ param ; } $ text = mb_substr ( $ text1 , $ pointer , $ n ) ; $ pointer += $ n ; $ diffs [ ] = array ( $ op == '=' ? self :: EQUAL : self :: DELETE , $ text , ) ; break ; default : // Anything else is an error. throw new \ InvalidArgumentException ( 'Invalid diff operation in delta: ' . $ op ) ; } } if ( $ pointer != mb_strlen ( $ text1 ) ) { throw new \ InvalidArgumentException ( 'Delta length (' . $ pointer . ') does not equal source text length (' . mb_strlen ( $ text1 ) . ').' ) ; } $ this -> setChanges ( $ diffs ) ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/FACT-Finder/FACT-Finder-PHP-Library/blob/5c795b94117fa7ac40f5e80d4edc93999a76fc90/src/log4php/appenders/LoggerAppenderSyslog.php#L281-L290<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function parseFacility ( ) { if ( ! empty ( $ this -> facility ) ) { $ constant = "LOG_" . trim ( $ this -> facility ) ; if ( defined ( $ constant ) ) { return constant ( $ constant ) ; } else { trigger_error ( "log4php: Invalid syslog facility provided: {$this->facility}." , E_USER_WARNING ) ; } } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/phpsess/openssl-encryption/blob/a11b355d78cf4f1ffa665472945fad41e22198bb/src/OpenSSLEncryption.php#L59-L62<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function makeSessionIdentifier ( string $ sessionId ) : string { return ( string ) openssl_digest ( $ sessionId . $ this -> appKey , $ this -> hashAlgorithm ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Solve/Database/blob/4de9027cf6fa9c4c5a61c562a02b87a19dec524e/Models/DBOperator.php#L361-L369<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function updateDBFromStructure ( $ structure , $ safeUpdate = true ) { $ diffs = $ this -> getDifferenceSQL ( $ structure ) ; if ( $ diffs [ 'result' ] === true ) { QC :: executeSQL ( 'SET FOREIGN_KEY_CHECKS = 0' ) ; if ( ! empty ( $ diffs [ 'sql' ] [ 'ADD' ] ) ) QC :: executeArrayOfSQL ( $ diffs [ 'sql' ] [ 'ADD' ] ) ; if ( ! empty ( $ diffs [ 'sql' ] [ 'CHANGE' ] ) ) QC :: executeArrayOfSQL ( $ diffs [ 'sql' ] [ 'CHANGE' ] ) ; if ( ! empty ( $ diffs [ 'sql' ] [ 'DROP' ] ) && ! $ safeUpdate ) QC :: executeArrayOfSQL ( $ diffs [ 'sql' ] [ 'DROP' ] ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/FACT-Finder/FACT-Finder-PHP-Library/blob/5c795b94117fa7ac40f5e80d4edc93999a76fc90/src/log4php/appenders/LoggerAppenderPDO.php#L118-L136<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function activateOptions ( ) { try { $ this -> establishConnection ( ) ; } catch ( PDOException $ e ) { $ this -> warn ( "Failed connecting to database. Closing appender. Error: " . $ e -> getMessage ( ) ) ; $ this -> close ( ) ; return ; } // Parse the insert patterns; pattern parts are comma delimited  $ pieces = explode ( ',' , $ this -> insertPattern ) ; $ converterMap = LoggerLayoutPattern :: getDefaultConverterMap ( ) ; foreach ( $ pieces as $ pattern ) { $ parser = new LoggerPatternParser ( $ pattern , $ converterMap ) ; $ this -> converters [ ] = $ parser -> parse ( ) ; } $ this -> closed = false ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Cecilapp/PHPoole/blob/ac921557e4c61ef649bf5c41011f72dc890a2e9f/src/Collection/Collection.php#L76-L87<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function add ( ItemInterface $ item ) { if ( $ this -> has ( $ item -> getId ( ) ) ) { throw new \ DomainException ( sprintf ( 'Failed adding item "%s": an item with that id has already been added.' , $ item -> getId ( ) ) ) ; } $ this -> items [ $ item -> getId ( ) ] = $ item ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/nilportugues/php-sql-query-builder/blob/89918711eb1e3e982309aa202b9987c08c6f495b/src/Builder/Syntax/WhereWriter.php#L72-L91<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function writeWhereMatches ( Where $ where , array & $ whereArray ) { $ matches = [ ] ; foreach ( $ where -> getMatches ( ) as $ values ) { $ columns = SyntaxFactory :: createColumns ( $ values [ 'columns' ] , $ where -> getTable ( ) ) ; $ columnNames = $ this -> getColumnNames ( $ columns ) ; $ columnValues = array ( \ implode ( ' ' , $ values [ 'values' ] ) ) ; $ columnValues = \ implode ( ', ' , $ this -> writer -> writeValues ( $ columnValues ) ) ; $ matches [ ] = \ str_replace ( [ '{{columnNames}}' , '{{columnValues}}' ] , [ $ columnNames , $ columnValues ] , $ this -> matchMode [ $ values [ 'mode' ] ] ) ; } $ whereArray = \ array_merge ( $ whereArray , $ matches ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/valkyrjaio/valkyrja/blob/3b4ad998d96c3ab08e36a11c76ce8d9d48759ffe/src/Valkyrja/Annotations/NativeAnnotations.php#L575-L582<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getPropertyReflection ( string $ class , string $ property ) : ReflectionProperty { $ index = static :: PROPERTY_CACHE . $ class . $ property ; return self :: $ reflections [ $ index ] ?? self :: $ reflections [ $ index ] = new ReflectionProperty ( $ class , $ property ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/dreamfactorysoftware/df-database/blob/ab6d2f0643ab292d1bcce2bc25002db9b0731139/src/Components/DbSchemaExtras.php#L116-L128<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setSchemaTableExtras ( $ extras ) { if ( empty ( $ extras ) ) { return ; } foreach ( $ extras as $ extra ) { if ( ! empty ( $ table = array_get ( $ extra , 'table' ) ) ) { DbTableExtras :: updateOrCreate ( [ 'service_id' => $ this -> getServiceId ( ) , 'table' => $ table ] , array_only ( $ extra , [ 'alias' , 'label' , 'plural' , 'description' , 'name_field' ] ) ) ; } } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/makinacorpus/generated-hydrator/blob/d6a9597548fd3137cebdfa7ae69e763bc5576654/src/GeneratedHydrator/ClassGenerator/PHP5HydratorGenerator.php#L101-L116<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function findAllInstanceProperties ( \ ReflectionClass $ class = null ) { if ( ! $ class ) { return [ ] ; } return \ array_values ( \ array_merge ( $ this -> findAllInstanceProperties ( $ class -> getParentClass ( ) ? : null ) , // of course PHP is shit. \ array_values ( \ array_filter ( $ class -> getProperties ( ) , function ( \ ReflectionProperty $ property ) : bool { return ! $ property -> isStatic ( ) ; } ) ) ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ldaptools/ldaptools-bundle/blob/eaa445aa551c321b9689614ac32101c3e3cf0298/DataCollector/LdapToolsDataCollector.php#L60-L73<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function collect ( Request $ request , Response $ response , \ Exception $ exception = null ) { if ( ! $ this -> ldap ) { return ; } $ this -> data [ 'domains' ] = $ this -> ldap -> getDomains ( ) ; $ this -> data [ 'operations_by_domain' ] = [ ] ; foreach ( $ this -> data [ 'domains' ] as $ domain ) { $ this -> data [ 'operations_by_domain' ] [ $ domain ] = $ this -> addOperationToData ( ... $ this -> logger -> getOperations ( $ domain ) ) ; } $ this -> data [ 'operations' ] = $ this -> addOperationToData ( ... $ this -> logger -> getOperations ( ) ) ; $ this -> data [ 'errors' ] = $ this -> addOperationToData ( ... $ this -> logger -> getErrors ( ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/belgattitude/solublecomponents/blob/f045b3967e42d352d8e70fb2c1f8a427df62599f/src/Soluble/Normalist/Synthetic/Table.php#L723-L737<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getPrimaryKeys ( ) { if ( $ this -> primary_keys === null ) { try { $ this -> primary_keys = $ this -> tableManager -> metadata ( ) -> getPrimaryKeys ( $ this -> prefixed_table ) ; } catch ( \ Soluble \ Schema \ Exception \ NoPrimaryKeyException $ e ) { throw new Exception \ PrimaryKeyNotFoundException ( __METHOD__ . ': ' . $ e -> getMessage ( ) ) ; //@codeCoverageIgnoreStart } catch ( \ Soluble \ Schema \ Exception \ ExceptionInterface $ e ) { throw new Exception \ RuntimeException ( __METHOD__ . ": Cannot determine primary key on table " . $ this -> prefixed_table ) ; } //@codeCoverageIgnoreEnd } return $ this -> primary_keys ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/bradberger/silex-eloquent/blob/f835d97109df64a7cae876376f3cbfb5f3fa1d65/src/BitolaCo/Silex/CapsuleServiceProvider.php#L19-L87<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function register ( Application $ app ) { $ app [ 'capsule.connection_defaults' ] = array ( 'driver' => 'mysql' , 'host' => 'localhost' , 'database' => null , 'username' => 'root' , 'password' => null , 'charset' => 'utf8' , 'collation' => 'utf8_unicode_ci' , 'prefix' => null , 'logging' => false , ) ; $ app [ 'capsule.global' ] = true ; $ app [ 'capsule.eloquent' ] = true ; $ app [ 'capsule.container' ] = $ app -> share ( function ( ) { return new Container ; } ) ; $ app [ 'capsule.dispatcher' ] = $ app -> share ( function ( ) use ( $ app ) { return new Dispatcher ( $ app [ 'capsule.container' ] ) ; } ) ; if ( class_exists ( 'Illuminate\Cache\CacheManager' ) ) { $ app [ 'capsule.cache_manager' ] = $ app -> share ( function ( ) use ( $ app ) { return new CacheManager ( $ app [ 'capsule.container' ] ) ; } ) ; } $ app [ 'capsule' ] = $ app -> share ( function ( $ name ) use ( $ app ) { $ capsule = new Capsule ( $ app [ 'capsule.container' ] ) ; $ capsule -> setEventDispatcher ( $ app [ 'capsule.dispatcher' ] ) ; if ( isset ( $ app [ 'capsule.cache_manager' ] ) && isset ( $ app [ 'capsule.cache' ] ) ) { $ capsule -> setCacheManager ( $ app [ 'capsule.cache_manager' ] ) ; foreach ( $ app [ 'capsule.cache' ] as $ key => $ value ) { $ app [ 'capsule.container' ] -> offsetGet ( 'config' ) -> offsetSet ( 'cache.' . $ key , $ value ) ; } } if ( $ app [ 'capsule.global' ] ) { $ capsule -> setAsGlobal ( ) ; } if ( $ app [ 'capsule.eloquent' ] ) { $ capsule -> bootEloquent ( ) ; } if ( ! isset ( $ app [ 'capsule.connections' ] ) ) { $ app [ 'capsule.connections' ] = array ( 'default' => ( isset ( $ app [ 'capsule.connection' ] ) ? $ app [ 'capsule.connection' ] : array ( ) ) , ) ; } foreach ( $ app [ 'capsule.connections' ] as $ connection => $ options ) { $ options = array_replace ( $ app [ 'capsule.connection_defaults' ] , $ options ) ; $ logging = $ options [ 'logging' ] ; unset ( $ options [ 'logging' ] ) ; $ capsule -> addConnection ( $ options , $ connection ) ; if ( $ logging ) { $ capsule -> connection ( $ connection ) -> enableQueryLog ( ) ; } else { $ capsule -> connection ( $ connection ) -> disableQueryLog ( ) ; } } return $ capsule ; } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/kisphp/markdown-parser/blob/f154e5d49cef05a1569ea21a7db3141b15cf5301/src/MarkdownFactory.php#L114-L127<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getClassNamespace ( $ type ) { $ classNamespaces = $ this -> getAvailableNamespaces ( ) ; foreach ( $ classNamespaces as $ namespace ) { $ className = $ namespace . $ type ; if ( class_exists ( $ className ) ) { return $ className ; } } throw new BlockNotFoundException ( 'Block ' . $ type . ' not found' ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Easy/EasyFormWizard.php#L223-L252<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function commit ( ) { if ( ! $ this -> getDataObj ( ) ) { return true ; } // commit the form input. call SaveRecord()         $ recArr = $ this -> activeRecord ; if ( strtoupper ( $ this -> formType ) == "NEW" ) $ dataRec = new DataRecord ( null , $ this -> getDataObj ( ) ) ; else { //$currentRec = $this->fetchData(); // wrong way to get current data. need to query the old one $ currentRec = array ( ) ; // to get record with "" values $ dataRec = new DataRecord ( $ currentRec , $ this -> getDataObj ( ) ) ; } foreach ( $ recArr as $ k => $ v ) $ dataRec [ $ k ] = $ v ; // or $dataRec->$k = $v; try { $ dataRec -> save ( ) ; } catch ( Openbizx \ Data \ Exception $ e ) { $ this -> processDataException ( $ e ) ; return false ; } return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/RequestApplication.php#L144-L147<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getHomeUrl ( ) { return isset ( $ this -> homeUrl ) ? $ this -> homeUrl : Reaction :: $ app -> urlManager -> getHomeUrl ( ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/qranio-com/azure-sdk-pear-deps/blob/6609eab8623759b5e23345ded80d832278a7b680/src/PEAR/ChannelFile.php#L1064-L1073<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>function getMirror ( $ server ) { foreach ( $ this -> getMirrors ( ) as $ mirror ) { if ( $ mirror [ 'attribs' ] [ 'host' ] == $ server ) { return $ mirror ; } } return false ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/checkdomain/Comodo/blob/e5d4a4d9b0c3bde619d0fe8581747e8b7c10d942/lib/Util.php#L244-L266<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function updateUserEvClickThrough ( array $ params ) { // Send request $ arr = $ this -> communicationAdapter -> sendToApi ( self :: COMODO_UPDATE_USER_EV_CLICK_THROUGH , $ params , CommunicationAdapter :: RESPONSE_URL_ENCODED ) ; // Successful if ( $ arr [ 'errorCode' ] == 0 ) { $ result = new UpdateUserEvClickThroughResult ( ) ; $ result -> setStatus ( $ arr [ 'status' ] ) ; return $ result ; } else { throw $ this -> createException ( $ arr ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/EliuFlorez/google-map/blob/b96e3975314a83f806ed86623f7b219d2c96ee9f/src/Helper/MapHelper.php#L1896-L1912<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function renderMapControls ( Map $ map ) { $ controlNames = array ( 'MapTypeControl' , 'OverviewMapControl' , 'PanControl' , 'RotateControl' , 'ScaleControl' , 'StreetViewControl' , 'ZoomControl' , ) ; foreach ( $ controlNames as $ controlName ) { $ controlHelper = lcfirst ( $ controlName ) . 'Helper' ; $ this -> renderMapControl ( $ map , $ controlName , $ this -> $ controlHelper ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/psiphp/object-agent/blob/56ae8756c2925e5981a6e55b409f649d8dbe7b66/bridge/doctrine-collections/lib/CollectionsAgent.php#L60-L73<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function find ( $ identifier , string $ classFqn = null ) { if ( null === $ classFqn ) { throw BadMethodCallException :: classArgumentIsMandatory ( __CLASS__ ) ; } $ object = $ this -> store -> find ( $ classFqn , $ identifier ) ; if ( null === $ object ) { throw ObjectNotFoundException :: forClassAndIdentifier ( $ classFqn , $ identifier ) ; } return $ object ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/mikecao/flight/blob/c57ee8cb8d8a4479ce7da28df9538eb8265f67be/flight/Engine.php#L109-L158<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function init ( ) { static $ initialized = false ; $ self = $ this ; if ( $ initialized ) { $ this -> vars = array ( ) ; $ this -> loader -> reset ( ) ; $ this -> dispatcher -> reset ( ) ; } // Register default components $ this -> loader -> register ( 'request' , '\flight\net\Request' ) ; $ this -> loader -> register ( 'response' , '\flight\net\Response' ) ; $ this -> loader -> register ( 'router' , '\flight\net\Router' ) ; $ this -> loader -> register ( 'view' , '\flight\template\View' , array ( ) , function ( $ view ) use ( $ self ) { $ view -> path = $ self -> get ( 'flight.views.path' ) ; $ view -> extension = $ self -> get ( 'flight.views.extension' ) ; } ) ; // Register framework methods $ methods = array ( 'start' , 'stop' , 'route' , 'halt' , 'error' , 'notFound' , 'render' , 'redirect' , 'etag' , 'lastModified' , 'json' , 'jsonp' ) ; foreach ( $ methods as $ name ) { $ this -> dispatcher -> set ( $ name , array ( $ this , '_' . $ name ) ) ; } // Default configuration settings $ this -> set ( 'flight.base_url' , null ) ; $ this -> set ( 'flight.case_sensitive' , false ) ; $ this -> set ( 'flight.handle_errors' , true ) ; $ this -> set ( 'flight.log_errors' , false ) ; $ this -> set ( 'flight.views.path' , './views' ) ; $ this -> set ( 'flight.views.extension' , '.php' ) ; // Startup configuration $ this -> before ( 'start' , function ( ) use ( $ self ) { // Enable error handling if ( $ self -> get ( 'flight.handle_errors' ) ) { set_error_handler ( array ( $ self , 'handleError' ) ) ; set_exception_handler ( array ( $ self , 'handleException' ) ) ; } // Set case-sensitivity $ self -> router ( ) -> case_sensitive = $ self -> get ( 'flight.case_sensitive' ) ; } ) ; $ initialized = true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/silverstripe/silverstripe-activedirectory/blob/ffdbe06b6cda42aeab1a1fd1c287b517811efab3/code/services/LDAPService.php#L243-L260<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getNestedGroups ( $ dn , $ attributes = [ ] ) { if ( isset ( self :: $ _cache_nested_groups [ $ dn ] ) ) { return self :: $ _cache_nested_groups [ $ dn ] ; } $ searchLocations = $ this -> config ( ) -> groups_search_locations ? : [ null ] ; $ results = [ ] ; foreach ( $ searchLocations as $ searchLocation ) { $ records = $ this -> gateway -> getNestedGroups ( $ dn , $ searchLocation , Zend \ Ldap \ Ldap :: SEARCH_SCOPE_SUB , $ attributes ) ; foreach ( $ records as $ record ) { $ results [ $ record [ 'dn' ] ] = $ record ; } } self :: $ _cache_nested_groups [ $ dn ] = $ results ; return $ results ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/yeaha/owl-service/blob/2d476f28722a45afca6f865f7c99ede5de31df89/src/Service/DB/Select.php#L567-L582<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function update ( array $ row ) { list ( $ where , $ params ) = $ this -> compileWhere ( ) ; // 不允许没有任何条件的update if ( ! $ where ) { throw new \ LogicException ( 'MUST specify WHERE condition before update' ) ; } // 见delete()方法注释 if ( $ this -> limit or $ this -> offset or $ this -> group_by ) { throw new \ LogicException ( 'CAN NOT UPDATE while specify LIMIT or OFFSET or GROUP BY' ) ; } return $ this -> adapter -> update ( $ this -> table , $ row , $ where , $ params ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/TopShelfCraft/Wordsmith/blob/efe40e9324d2449d431444070e0972fd60aaac37/src/services/EmojiService.php#L201-L219<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function emojify ( $ str , $ nameStartDelimiter = ':' , $ nameEndDelimiter = ":" , $ textStartDelimiter = '' , $ textEndDelimiter = '' ) { $ sets = [ $ this -> getShortNameReplacements ( $ nameStartDelimiter , $ nameEndDelimiter ) , $ this -> getSnakeNameReplacements ( $ nameStartDelimiter , $ nameEndDelimiter ) , $ this -> getConstantNameReplacements ( $ nameStartDelimiter , $ nameEndDelimiter ) , $ this -> getCamelNameReplacements ( $ nameStartDelimiter , $ nameEndDelimiter ) , $ this -> getTextReplacements ( $ textStartDelimiter , $ textEndDelimiter ) , ] ; foreach ( $ sets as $ set ) { $ str = str_replace ( array_keys ( $ set ) , $ set , $ str ) ; } return $ str ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/joegreen88/zf1-component-config/blob/c19901ce03417db5aa354ddb80c5ecfe7f111b59/src/Zend/Config/Xml.php#L189-L295<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function _toArray ( SimpleXMLElement $ xmlObject ) { $ config = array ( ) ; $ nsAttributes = $ xmlObject -> attributes ( self :: XML_NAMESPACE ) ; // Search for parent node values if ( count ( $ xmlObject -> attributes ( ) ) > 0 ) { foreach ( $ xmlObject -> attributes ( ) as $ key => $ value ) { if ( $ key === 'extends' ) { continue ; } $ value = ( string ) $ value ; if ( array_key_exists ( $ key , $ config ) ) { if ( ! is_array ( $ config [ $ key ] ) ) { $ config [ $ key ] = array ( $ config [ $ key ] ) ; } $ config [ $ key ] [ ] = $ value ; } else { $ config [ $ key ] = $ value ; } } } // Search for local 'const' nodes and replace them if ( count ( $ xmlObject -> children ( self :: XML_NAMESPACE ) ) > 0 ) { if ( count ( $ xmlObject -> children ( ) ) > 0 ) { throw new Zend_Config_Exception ( "A node with a 'const' childnode may not have any other children" ) ; } $ dom = dom_import_simplexml ( $ xmlObject ) ; $ namespaceChildNodes = array ( ) ; // We have to store them in an array, as replacing nodes will // confuse the DOMNodeList later foreach ( $ dom -> childNodes as $ node ) { if ( $ node instanceof DOMElement && $ node -> namespaceURI === self :: XML_NAMESPACE ) { $ namespaceChildNodes [ ] = $ node ; } } foreach ( $ namespaceChildNodes as $ node ) { switch ( $ node -> localName ) { case 'const' : if ( ! $ node -> hasAttributeNS ( self :: XML_NAMESPACE , 'name' ) ) { throw new Zend_Config_Exception ( "Misssing 'name' attribute in 'const' node" ) ; } $ constantName = $ node -> getAttributeNS ( self :: XML_NAMESPACE , 'name' ) ; if ( ! defined ( $ constantName ) ) { throw new Zend_Config_Exception ( "Constant with name '$constantName' was not defined" ) ; } $ constantValue = constant ( $ constantName ) ; $ dom -> replaceChild ( $ dom -> ownerDocument -> createTextNode ( $ constantValue ) , $ node ) ; break ; default : throw new Zend_Config_Exception ( "Unknown node with name '$node->localName' found" ) ; } } return ( string ) simplexml_import_dom ( $ dom ) ; } // Search for children if ( count ( $ xmlObject -> children ( ) ) > 0 ) { foreach ( $ xmlObject -> children ( ) as $ key => $ value ) { if ( count ( $ value -> children ( ) ) > 0 || count ( $ value -> children ( self :: XML_NAMESPACE ) ) > 0 ) { $ value = $ this -> _toArray ( $ value ) ; } else if ( count ( $ value -> attributes ( ) ) > 0 ) { $ attributes = $ value -> attributes ( ) ; if ( isset ( $ attributes [ 'value' ] ) ) { $ value = ( string ) $ attributes [ 'value' ] ; } else { $ value = $ this -> _toArray ( $ value ) ; } } else { $ value = ( string ) $ value ; } if ( array_key_exists ( $ key , $ config ) ) { if ( ! is_array ( $ config [ $ key ] ) || ! array_key_exists ( 0 , $ config [ $ key ] ) ) { $ config [ $ key ] = array ( $ config [ $ key ] ) ; } $ config [ $ key ] [ ] = $ value ; } else { $ config [ $ key ] = $ value ; } } } else if ( ! isset ( $ xmlObject [ 'extends' ] ) && ! isset ( $ nsAttributes [ 'extends' ] ) && ( count ( $ config ) === 0 ) ) { // Object has no children nor attributes and doesn't use the extends // attribute: it's a string $ config = ( string ) $ xmlObject ; } return $ config ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Azure/azure-storage-php/blob/9e53aa6e447e2260a29d54b96fab9fe18b665afa/azure-storage-table/src/Table/Models/Filters/Filter.php#L116-L120<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function applyGe ( Filter $ left , Filter $ right ) { $ filter = new BinaryFilter ( $ left , 'ge' , $ right ) ; return $ filter ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/vanilla/garden/blob/ad9af189da98d57dc990eb3e6c0524f32e5e7e01/src/Db/MySqlDb.php#L402-L415<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function bracketList ( $ row , $ quote = "'" ) { switch ( $ quote ) { case "'" : $ row = array_map ( [ $ this -> pdo ( ) , 'quote' ] , $ row ) ; $ quote = '' ; break ; case '`' : $ row = array_map ( [ $ this , 'backtick' ] , $ row ) ; $ quote = '' ; break ; } return "($quote" . implode ( "$quote, $quote" , $ row ) . "$quote)" ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/F21/Paradox/blob/d1f47203e743760d8d8d6232bf0ea62920e7eefe/Paradox/toolbox/PodManager.php#L47-L84<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function dispense ( $ type , $ label = null ) { if ( $ label !== null && ( ! $ this -> _toolbox -> isGraph ( ) || ( $ this -> _toolbox -> isGraph ( ) && strtolower ( $ type ) != "edge" ) ) ) { throw new PodManagerException ( "Only Edge pods can have a label passed into dispense()." ) ; } //Graph pods if ( $ this -> _toolbox -> isGraph ( ) ) { switch ( strtolower ( $ type ) ) { case "vertex" : $ model = $ this -> createVertex ( ) ; break ; case "edge" : $ model = $ this -> createEdge ( ) ; if ( $ label ) { $ model -> set ( '$label' , $ label ) ; } break ; default : throw new PodManagerException ( "When dispensing pods for graphs, only the types 'vertex' and 'edge' are allowed. You provided '$type'." ) ; } //Document pods } else { $ model = $ this -> createDocument ( $ type ) ; } //Signal here $ this -> notify ( "after_dispense" , $ model -> getPod ( ) ) ; return $ model ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/miBadger/miBadger.Http/blob/b82b72a6e7d645cae0e1976f5e0bfa080cd015ce/src/URI.php#L370-L379<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function setPort ( $ port = null ) { if ( $ port !== null && ( 1 > $ port || 0xffff < $ port ) ) { throw new \ InvalidArgumentException ( 'Invalid port' ) ; } $ this -> port = $ port ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/skeetr/skeetr/blob/eb4ae5f7a6d3fed322041bbce830961e81ed6e20/src/Skeetr/Client/HTTP/Response.php#L295-L303<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function toArray ( $ default = true ) { if ( $ default ) $ this -> setDefaults ( ) ; return array ( 'responseCode' => $ this -> getResponseCode ( ) , 'body' => $ this -> getBody ( ) -> toString ( ) , 'headers' => $ this -> getHeaders ( ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/MichaelRShelton/middleman/blob/b67140be2f39a32a27f5a0a9b2498ab3444835ba/src/Caller.php#L217-L224<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function reset ( ) { $ this -> clear ( ) ; $ this -> called = false ; $ this -> catchHalt = true ; $ this -> haltEvent = MiddlewareHalted :: class ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/silvershop/silvershop-core/blob/b090e970b06c0fb7e68107360760b6e2d6d184c4/src/ShopUserInfo.php#L38-L48<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getAddress ( ) { $ address = null ; if ( $ data = $ this -> getLocationData ( ) ) { $ address = Address :: create ( ) ; $ address -> update ( $ data ) ; $ address -> ID = 0 ; //ensure not in db } return $ address ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/sinpe/cache/blob/5640d5b64470fe23fff87b35c784dc40c96c84a2/src/Psr16Manager.php#L402-L422<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function deleteMultiple ( array $ keys ) { $ keysNormalized = [ ] ; foreach ( $ keys as $ key ) { $ keysNormalized [ ] = $ this -> normalized ( $ key ) ; } $ result = static :: $ handler -> deleteMultiple ( $ keysNormalized ) ; if ( $ result ) { if ( $ this -> assistant ) { foreach ( $ keysNormalized as $ key ) { $ this -> assistant -> remove ( $ key ) ; } $ this -> assistant -> save ( ) ; } } return $ result ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Saritasa/php-dingo-api-custom/blob/8347778070433674ae2ff9e6ff683623726fbe0d/src/Exceptions/ApiExceptionHandler.php#L78-L82<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function handleValidation ( ValidationException $ e ) { $ e = new CustomValidationException ( $ e -> validator -> getMessageBag ( ) , $ e -> getMessage ( ) , $ e , [ ] , $ e -> getCode ( ) ) ; return $ this -> handle ( $ e ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Payum/Payum/blob/cf4be4f91d9bf24069153aceeb44b4f5b3d4f011/src/Payum/Core/Bridge/Symfony/Security/TokenFactory.php#L34-L37<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function generateUrl ( $ path , array $ parameters = array ( ) ) { return $ this -> urlGenerator -> generate ( $ path , $ parameters , UrlGeneratorInterface :: ABSOLUTE_URL ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/Http/ApiResponse.php#L102-L116<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function accepted ( ? string $ location = null , $ content = '' ) : IResponse { if ( $ this -> checkFlowControl ( ) ) { return $ this ; } $ this -> setData ( $ content ) ; $ this -> setStatusCode ( static :: HTTP_ACCEPTED ) ; if ( null !== $ location ) { $ this -> setHeader ( 'Location' , $ location ) ; } return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/shokohsc/TwitchApiBundle/blob/9ee6d2e1609d5dee4c083188a8ef5d916965eb64/Repository/StreamRepository.php#L37-L44<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getStreams ( $ params = array ( ) ) { $ params = 0 < count ( $ params ) ? '?' . http_build_query ( $ params ) : '' ; $ response = $ this -> getClient ( ) -> get ( self :: ENDPOINT . $ params ) ; $ data = $ this -> jsonResponse ( $ response ) ; return $ this -> getFactory ( ) -> createList ( $ data ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/strike101/di/blob/8da60bb2d71dd18fc1ae35da28c43e5e53ac4d93/src/Container.php#L60-L95<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function get ( $ id ) { $ id = strtolower ( $ id ) ; $ isAlias = false ; if ( array_key_exists ( $ id , $ this -> aliases ) ) { $ id = $ this -> aliases [ $ id ] ; $ isAlias = true ; } if ( ! array_key_exists ( $ id , $ this -> serviceDefinitions ) ) { if ( array_key_exists ( $ id , $ this -> services ) ) { return $ this -> services [ $ id ] ; } throw new \ InvalidArgumentException ( 'service is not defined' ) ; } $ definition = $ this -> serviceDefinitions [ $ id ] ; if ( false === $ definition -> getPublic ( ) && false === $ isAlias ) { throw new \ InvalidArgumentException ( 'cannot access service directly' ) ; } if ( array_key_exists ( $ id , $ this -> services ) ) { return $ this -> services [ $ id ] ; } $ service = $ this -> generateService ( $ definition ) ; if ( $ definition -> getShare ( ) ) { $ this -> services [ $ id ] = $ service ; } return $ service ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wpsharks/core/blob/7a086f144d15ba2587c348744b75f811b9dd6625/src/includes/classes/Core/Utils/UrlCurrent.php#L155-L161<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function rootPort ( ) : string { if ( ( $ port = & $ this -> cacheKey ( __FUNCTION__ ) ) !== null ) { return $ port ; // Cached this already. } return $ port = ( explode ( ':' , $ this -> rootHost ( ) , 2 ) + [ '' , '' ] ) [ 1 ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/lightSAML/lightSAML/blob/377f04d1fb25f2fb2e72dabeff10b336f1cbe4c5/src/LightSaml/Action/Assertion/Inbound/AssertionSignatureValidatorAction.php#L51-L88<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function doExecute ( AssertionContext $ context ) { $ signature = $ context -> getAssertion ( ) -> getSignature ( ) ; if ( null === $ signature ) { if ( $ this -> requireSignature ) { $ message = 'Assertions must be signed' ; $ this -> logger -> critical ( $ message , LogHelper :: getActionErrorContext ( $ context , $ this ) ) ; throw new LightSamlContextException ( $ context , $ message ) ; } else { $ this -> logger -> debug ( 'Assertion is not signed' , LogHelper :: getActionContext ( $ context , $ this ) ) ; return ; } } if ( $ signature instanceof AbstractSignatureReader ) { $ metadataType = ProfileContext :: ROLE_IDP === $ context -> getProfileContext ( ) -> getOwnRole ( ) ? MetadataCriteria :: TYPE_SP : MetadataCriteria :: TYPE_IDP ; $ credential = $ this -> signatureValidator -> validate ( $ signature , $ context -> getAssertion ( ) -> getIssuer ( ) -> getValue ( ) , $ metadataType ) ; if ( $ credential ) { $ keyNames = $ credential -> getKeyNames ( ) ; $ this -> logger -> debug ( sprintf ( 'Assertion signature validated with key "%s"' , implode ( ', ' , $ keyNames ) ) , LogHelper :: getActionContext ( $ context , $ this , array ( 'credential' => $ credential , ) ) ) ; } else { $ this -> logger -> warning ( 'Assertion signature verification was not performed' , LogHelper :: getActionContext ( $ context , $ this ) ) ; } } else { $ message = 'Expected AbstractSignatureReader' ; $ this -> logger -> critical ( $ message , LogHelper :: getActionErrorContext ( $ context , $ this ) ) ; throw new LightSamlModelException ( $ message ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/thecodingmachine/database.doctrine-orm-wrapper/blob/588424666367338157acd540df9009fcae4c292f/src/ResetableEntityManager.php#L207-L217<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function createQuery ( $ dql = '' ) { try { return $ this -> entityManager -> createQuery ( $ dql ) ; } catch ( ORMException $ e ) { if ( ! $ this -> entityManager -> isOpen ( ) ) { $ this -> resetEntityManager ( ) ; } throw $ e ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/auth0/laravel-auth0/blob/36b49690420ca38805416467d4b13e86f790c9b4/src/Auth0/Login/Auth0Service.php#L65-L79<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getUser ( ) { // Get the user info from auth0 $ auth0 = $ this -> getSDK ( ) ; $ user = $ auth0 -> getUser ( ) ; if ( $ user === null ) { return ; } return [ 'profile' => $ user , 'accessToken' => $ auth0 -> getAccessToken ( ) , ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/crevillo/payum-redsys/blob/c256c4796424efb9212408177525c3a8b971b44e/Api.php#L302-L314<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function sign ( array $ params ) { $ base64DecodedKey = base64_decode ( $ this -> options [ 'secret_key' ] ) ; $ key = $ this -> encrypt_3DES ( $ params [ 'Ds_Merchant_Order' ] , $ base64DecodedKey ) ; $ res = $ this -> mac256 ( $ this -> createMerchantParameters ( $ params ) , $ key ) ; return base64_encode ( $ res ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/Database/Connect.php#L918-L929<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function pdoException ( PDOException $ e ) : void { $ message = $ e -> getMessage ( ) ; // 模拟数据库 replace if ( '23000' === $ e -> getCode ( ) && false !== strpos ( $ message , 'Duplicate entry' ) ) { throw new ReplaceException ( $ message ) ; } throw $ e ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/jdmaymeow/cake-taxonomy/blob/56065053787b12ad42ea60d772041edafbff3a24/src/Controller/AbstractTagsController.php#L34-L42<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function view ( $ id = null ) { $ tag = $ this -> Tags -> get ( $ id , [ 'contain' => [ ] ] ) ; $ this -> set ( 'tag' , $ tag ) ; $ this -> set ( '_serialize' , [ 'tag' ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/qranio-com/azure-sdk-pear-deps/blob/6609eab8623759b5e23345ded80d832278a7b680/src/HTTP/Request2/Adapter/Mock.php#L107-L119<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function addResponse ( $ response , $ url = null ) { if ( is_string ( $ response ) ) { $ response = self :: createResponseFromString ( $ response ) ; } elseif ( is_resource ( $ response ) ) { $ response = self :: createResponseFromFile ( $ response ) ; } elseif ( ! $ response instanceof HTTP_Request2_Response && ! $ response instanceof Exception ) { throw new HTTP_Request2_Exception ( 'Parameter is not a valid response' ) ; } $ this -> responses [ ] = array ( $ response , $ url ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hugodias/cakegallery/blob/5289c7babadaf0981cbbd71825f42f46cbbd7650/Controller/AlbumsController.php#L45-L68<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function upload ( $ model = null , $ model_id = null ) { ini_set ( "memory_limit" , "10000M" ) ; if ( isset ( $ this -> params [ 'gallery_id' ] ) && ! empty ( $ this -> params [ 'gallery_id' ] ) ) { $ album = $ this -> Album -> findById ( $ this -> params [ 'gallery_id' ] ) ; } else { # If the gallery doesnt exists, create a new one and redirect back to this page with the # gallery_id $ album = $ this -> Album -> init ( $ model , $ model_id ) ; # Redirect back to this page with an album ID $ this -> redirect ( array ( 'action' => 'upload' , 'gallery_id' => $ album [ 'Album' ] [ 'id' ] ) ) ; } $ files = $ album [ 'Picture' ] ; $ this -> set ( compact ( 'model' , 'model_id' , 'album' , 'files' ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ElfSundae/laravel-api/blob/bb9f771cdd324855c6d7b18ad4c0b74c59b67bd6/src/ApiServiceProvider.php#L72-L82<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function registerForConsole ( ) { $ this -> publishes ( [ __DIR__ . '/../config/api.php' => base_path ( 'config/api.php' ) , ] , 'laravel-api' ) ; $ this -> commands ( [ Console \ GenerateClientCommand :: class , Console \ GenerateTokenCommand :: class , ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/cleverage/process-bundle/blob/d03bfe390a9d94d4d51752e463abd0b6323bf4f7/Task/Validation/ValidatorTask.php#L85-L105<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function configureOptions ( OptionsResolver $ resolver ) { $ resolver -> setDefault ( 'log_errors' , true ) ; $ resolver -> addAllowedTypes ( 'log_errors' , [ 'bool' ] ) ; $ resolver -> setDefault ( 'groups' , null ) ; $ resolver -> addAllowedTypes ( 'groups' , [ 'NULL' , 'array' ] ) ; $ resolver -> setDefault ( 'constraints' , null ) ; $ resolver -> addAllowedTypes ( 'constraints' , [ 'NULL' , 'array' ] ) ; $ resolver -> setNormalizer ( 'constraints' , function ( Options $ options , $ constraints ) { if ( null === $ constraints ) { return null ; } return ( new BaseLoader ( ) ) -> loadCustomConstraints ( $ constraints ) ; } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/shokohsc/TwitchApiBundle/blob/9ee6d2e1609d5dee4c083188a8ef5d916965eb64/Repository/StreamRepository.php#L89-L96<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getStreamsSummary ( $ params = array ( ) ) { $ params = 0 < count ( $ params ) ? '?' . http_build_query ( $ params ) : '' ; $ response = $ this -> getClient ( ) -> get ( self :: ENDPOINT . 'summary' . $ params ) ; $ data = $ this -> jsonResponse ( $ response ) ; return $ this -> setFactory ( ( new RankFactory ( ) ) ) -> getFactory ( ) -> createEntity ( $ data ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/yawik/organizations/blob/a5d982212be5f445c067656aeb0aa3ca7daf0251/src/Repository/Organization.php#L114-L141<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function findByUser ( $ userOrId ) { $ userId = $ userOrId instanceof \ Auth \ Entity \ UserInterface ? $ userOrId -> getId ( ) : $ userOrId ; $ qb = $ this -> createQueryBuilder ( ) ; /*          * HiringOrganizations also could be associated to the user, but we          * do not want them to be queried here, so the query needs to check the          * "parent" field, too.          */ //        $qb->addAnd( //           $qb->expr()->field('user')->equals($userId) //                      ->addOr( //                            $qb->expr()->addOr($qb->expr()->field('parent')->exists(false)) //                                       ->addOr($qb->expr()->field('parent')->equals(null)) //           ) //        ); $ qb -> addAnd ( $ qb -> expr ( ) -> field ( 'user' ) -> equals ( $ userId ) ) -> addAnd ( $ qb -> expr ( ) -> addOr ( $ qb -> expr ( ) -> field ( 'parent' ) -> exists ( false ) ) -> addOr ( $ qb -> expr ( ) -> field ( 'parent' ) -> equals ( null ) ) ) ; $ q = $ qb -> getQuery ( ) ; $ entity = $ q -> getSingleResult ( ) ; return $ entity ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/youshido-php/GraphQL/blob/d392a5e7eea498b0434c1f0460f0b1f44fe38713/src/Execution/Processor.php#L133-L146<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function unpackDeferredResults ( $ result ) { while ( $ result instanceof DeferredResult ) { $ result = $ result -> result ; } if ( is_array ( $ result ) ) { foreach ( $ result as $ key => $ value ) { $ result [ $ key ] = static :: unpackDeferredResults ( $ value ) ; } } return $ result ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Payum/Payum/blob/cf4be4f91d9bf24069153aceeb44b4f5b3d4f011/src/Payum/Core/Bridge/Symfony/ReplyToSymfonyResponseConverter.php#L17-L35<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function convert ( ReplyInterface $ reply ) { if ( $ reply instanceof SymfonyHttpResponse ) { return $ reply -> getResponse ( ) ; } elseif ( $ reply instanceof HttpResponse ) { $ headers = $ reply -> getHeaders ( ) ; $ headers [ 'X-Status-Code' ] = $ reply -> getStatusCode ( ) ; return new Response ( $ reply -> getContent ( ) , $ reply -> getStatusCode ( ) , $ headers ) ; } $ ro = new \ ReflectionObject ( $ reply ) ; throw new LogicException ( sprintf ( 'Cannot convert reply %s to http response.' , $ ro -> getShortName ( ) ) , null , $ reply ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj.php#L726-L742<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function _runDOTrigger ( $ triggerType ) { // locate the trigger metadata file BOName_Trigger.xml $ triggerServiceName = $ this -> objectName . "_Trigger" ; $ xmlFile = ObjectFactoryHelper :: getXmlFileWithPath ( $ triggerServiceName ) ; if ( ! $ xmlFile ) { return ; } $ triggerService = Openbizx :: getObject ( $ triggerServiceName ) ; if ( $ triggerService == null ) { return ; } // invoke trigger service ExecuteTrigger($triggerType, $currentRecord) $ triggerService -> execute ( $ this , $ triggerType ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/maniaplanet/manialive-plugins/blob/f3f37da6836fe3d06fed32e75880caa6e9c0496b/Standard/TeamSpeak/TeamSpeak3/Node/Servergroup.php#L127-L130<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function permAssignByName ( $ permname , $ permvalue , $ permnegated = FALSE , $ permskip = FALSE ) { return $ this -> permAssign ( $ permname , $ permvalue , $ permnegated , $ permskip ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/Database/Ddd/Select.php#L498-L517<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function conversionToEntitys ( $ result ) : array { $ type = '' ; if ( $ result instanceof Collection ) { $ arr = [ ] ; foreach ( $ result as $ entity ) { $ arr [ ] = $ entity ; } $ result = $ arr ; $ type = 'collection' ; } elseif ( is_object ( $ result ) && $ result instanceof IEntity ) { $ result = [ $ result ] ; $ type = 'entity' ; } return [ $ result , $ type ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wj008t/php-beacon/blob/eeebfe8a26958dcf43bc6a5d693e946bc0ce4210/core/View.php#L113-L117<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function context ( Controller $ controller ) { $ this -> template -> context = $ controller ; $ this -> assign ( 'this' , $ controller ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/techdivision/import/blob/66d3eb967cbbd2d248942044fa8ede1192e48fd4/src/Assembler/CategoryAssembler.php#L119-L153<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getCategoriesWithResolvedPathByStoreView ( $ storeViewId ) { // prepare the categories $ categories = array ( ) ; // load the categories from the database $ availableCategories = $ this -> categoryRepository -> findAllByStoreView ( $ storeViewId ) ; // create the array with the resolved category path as keys foreach ( $ availableCategories as $ category ) { // expload the entity IDs from the category path $ entityIds = explode ( '/' , $ category [ MemberNames :: PATH ] ) ; // cut-off the root category array_shift ( $ entityIds ) ; // continue with the next category if no entity IDs are available if ( sizeof ( $ entityIds ) === 0 ) { continue ; } // initialize the array for the path elements $ path = array ( ) ; foreach ( $ entityIds as $ entityId ) { $ cat = $ this -> categoryVarcharRepository -> findByEntityId ( $ entityId ) ; $ path [ ] = $ cat [ MemberNames :: VALUE ] ; } // append the catogory with the string path as key $ categories [ implode ( '/' , $ path ) ] = $ category ; } // return array with the categories return $ categories ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/nilportugues/php-sql-query-builder/blob/89918711eb1e3e982309aa202b9987c08c6f495b/src/Builder/Syntax/SelectWriter.php#L176-L193<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function writeSelectAggrupation ( Select $ select , $ writer , $ getMethod , $ writeMethod , $ glue , $ prepend = '' ) { $ str = '' ; $ joins = $ select -> $ getMethod ( ) ; if ( ! empty ( $ joins ) ) { \ array_walk ( $ joins , function ( & $ join ) use ( $ writer , $ writeMethod ) { $ join = $ writer -> $ writeMethod ( $ join ) ; } ) ; $ str = $ prepend . implode ( $ glue , $ joins ) ; } return $ str ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/tomahawkphp/framework/blob/087ee2d362fe70a9020d32c00f7a48cb11b9c04f/src/Tomahawk/Bundle/DoctrineBundle/Mapping/DisconnectedMetadataFactory.php#L55-L69<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getBundleMetadata ( BundleInterface $ bundle ) { $ namespace = $ bundle -> getNamespace ( ) ; $ metadata = $ this -> getMetadataForNamespace ( $ namespace ) ; if ( ! $ metadata -> getMetadata ( ) ) { throw new \ RuntimeException ( sprintf ( 'Bundle "%s" does not contain any mapped entities.' , $ bundle -> getName ( ) ) ) ; } $ path = $ this -> getBasePathForClass ( $ bundle -> getName ( ) , $ bundle -> getNamespace ( ) , $ bundle -> getPath ( ) ) ; $ metadata -> setPath ( $ path ) ; $ metadata -> setNamespace ( $ bundle -> getNamespace ( ) ) ; return $ metadata ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/shumkov/rediska/blob/220afbfc4095e90aa050a5dfc00ce7413147ce45/library/Rediska/Command/ShiftFromListBlocking.php#L76-L85<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function parseResponse ( $ response ) { if ( ! is_array ( $ this -> keyOrKeys ) && ! empty ( $ response ) ) { $ result = $ this -> _rediska -> getSerializer ( ) -> unserialize ( $ response [ 1 ] ) ; } else { $ result = Rediska_Command_Response_ListNameAndValue :: factory ( $ this -> _rediska , $ response ) ; } return $ result ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/AeonDigital/PHP-DataModel/blob/57d546000b5628667f16eb7d3e55ac38ac67c61e/src/Abstracts/aField.php#L1087-L1096<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function validateValue ( $ v ) : bool { $ iCV = $ this -> internal_CheckValue ( $ v ) ; $ this -> fieldState_ValidateState = $ iCV [ "state" ] ; $ this -> fieldState_ValidateStateCanSet = $ iCV [ "canSet" ] ; $ this -> fieldState_CollectionValidateState = $ iCV [ "cState" ] ; return ( $ iCV [ "canSet" ] === true && $ iCV [ "valid" ] === true ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/bytic/omnipay-common/blob/a6d446b02671b79dddc9c19570ab59a208c16565/src/Library/Signer.php#L30-L49<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function sealContentWithRSA ( $ content ) { $ key = $ this -> getCertificateData ( ) ; $ encData = null ; $ envKeys = null ; try { $ result = openssl_seal ( $ content , $ encData , $ envKeys , [ $ key ] ) ; if ( $ result === false ) { throw new Exception ( ) ; } } catch ( Exception $ exception ) { $ this -> throwExceptionOpenssl ( "Error while sealing data!" , self :: ERROR_ENCRYPT_DATA , $ exception ) ; } return [ $ encData , $ envKeys ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/SkinnyBot/Skinny/blob/422cd89306c6ac0eb14d911c97ba20dc97c3c0b1/src/Core/Plugin.php#L124-L141<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected static function loadConfig ( ) { if ( Configure :: check ( 'plugins' ) ) { return ; } $ vendorFile = dirname ( dirname ( __DIR__ ) ) . DIRECTORY_SEPARATOR . 'skinny-plugins.php' ; if ( ! file_exists ( $ vendorFile ) ) { $ vendorFile = dirname ( dirname ( dirname ( dirname ( __DIR__ ) ) ) ) . DIRECTORY_SEPARATOR . 'skinny-plugins.php' ; if ( ! file_exists ( $ vendorFile ) ) { Configure :: write ( [ 'plugins' => [ ] ] ) ; return ; } } $ config = require $ vendorFile ; Configure :: write ( $ config ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/silverstripe/silverstripe-activedirectory/blob/ffdbe06b6cda42aeab1a1fd1c287b517811efab3/code/services/LDAPService.php#L1035-L1038<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function move ( $ fromDn , $ toDn , $ recursively = false ) { $ this -> gateway -> move ( $ fromDn , $ toDn , $ recursively ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/locomotivemtl/charcoal-object/blob/11c459d0e1519de215ca1c18301ee8f5e8d1e09b/src/Charcoal/Object/Content.php#L201-L214<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function preUpdate ( array $ properties = null ) { parent :: preUpdate ( $ properties ) ; // Content is revisionable if ( $ this -> revisionEnabled ( ) ) { $ this -> generateRevision ( ) ; } // Timestampable propertiees $ this -> setLastModified ( 'now' ) ; return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/qranio-com/azure-sdk-pear-deps/blob/6609eab8623759b5e23345ded80d832278a7b680/src/Archive/Tar.php#L992-L1051<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>function _addFile ( $ p_filename , & $ p_header , $ p_add_dir , $ p_remove_dir ) { if ( ! $ this -> _file ) { $ this -> _error ( 'Invalid file descriptor' ) ; return false ; } if ( $ p_filename == '' ) { $ this -> _error ( 'Invalid file name' ) ; return false ; } // ----- Calculate the stored filename $ p_filename = $ this -> _translateWinPath ( $ p_filename , false ) ; ; $ v_stored_filename = $ p_filename ; if ( strcmp ( $ p_filename , $ p_remove_dir ) == 0 ) { return true ; } if ( $ p_remove_dir != '' ) { if ( substr ( $ p_remove_dir , - 1 ) != '/' ) $ p_remove_dir .= '/' ; if ( substr ( $ p_filename , 0 , strlen ( $ p_remove_dir ) ) == $ p_remove_dir ) $ v_stored_filename = substr ( $ p_filename , strlen ( $ p_remove_dir ) ) ; } $ v_stored_filename = $ this -> _translateWinPath ( $ v_stored_filename ) ; if ( $ p_add_dir != '' ) { if ( substr ( $ p_add_dir , - 1 ) == '/' ) $ v_stored_filename = $ p_add_dir . $ v_stored_filename ; else $ v_stored_filename = $ p_add_dir . '/' . $ v_stored_filename ; } $ v_stored_filename = $ this -> _pathReduction ( $ v_stored_filename ) ; if ( $ this -> _isArchive ( $ p_filename ) ) { if ( ( $ v_file = @ fopen ( $ p_filename , "rb" ) ) == 0 ) { $ this -> _warning ( "Unable to open file '" . $ p_filename . "' in binary read mode" ) ; return true ; } if ( ! $ this -> _writeHeader ( $ p_filename , $ v_stored_filename ) ) return false ; while ( ( $ v_buffer = fread ( $ v_file , 512 ) ) != '' ) { $ v_binary_data = pack ( "a512" , "$v_buffer" ) ; $ this -> _writeBlock ( $ v_binary_data ) ; } fclose ( $ v_file ) ; } else { // ----- Only header for dir if ( ! $ this -> _writeHeader ( $ p_filename , $ v_stored_filename ) ) return false ; } return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Azure/azure-storage-php/blob/9e53aa6e447e2260a29d54b96fab9fe18b665afa/azure-storage-table/src/Table/Models/QueryTablesResult.php#L56-L80<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function create ( array $ headers , array $ entries ) { $ result = new QueryTablesResult ( ) ; $ headers = array_change_key_case ( $ headers ) ; $ result -> setTables ( $ entries ) ; $ nextTableName = Utilities :: tryGetValue ( $ headers , Resources :: X_MS_CONTINUATION_NEXTTABLENAME ) ; if ( $ nextTableName != null ) { $ result -> setContinuationToken ( new TableContinuationToken ( $ nextTableName , '' , '' , Utilities :: getLocationFromHeaders ( $ headers ) ) ) ; } return $ result ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/corpsee/nameless-source/blob/bb080d78e5796124f8178cd181437279b70d2f26/src/Core/Template.php#L142-L152<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function bindData ( $ name , & $ value , $ filter = null ) { $ this -> data [ $ name ] = $ value ; if ( ! is_null ( $ filter ) ) { $ this -> filters [ $ name ] = $ filter ; } if ( ! $ name && ! $ value ) { throw new \ InvalidArgumentException ( 'Invalid argument for bind template data' ) ; } return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/sminnee/phpcrawl/blob/025c2ce86e5056c09de5a0eb4d76e8cf775dae36/libs/PHPCrawlerDNSCache.class.php#L26-L41<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getIP ( $ hostname ) { // If host already was queried  if ( isset ( $ this -> host_ip_array [ $ hostname ] ) ) { return $ this -> host_ip_array [ $ hostname ] ; } // Else do DNS-query  else { $ ip = gethostbyname ( $ hostname ) ; $ this -> host_ip_array [ $ hostname ] = $ ip ; return $ ip ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/VitexSoftware/EaseFramework/blob/700693949ee6c858d40365c6d3c3825e8a742397/src/Ease/User.php#L363-L373<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function encryptPassword ( $ plainTextPassword ) { $ encryptedPassword = '' ; for ( $ i = 0 ; $ i < 10 ; ++ $ i ) { $ encryptedPassword .= $ this -> randomNumber ( ) ; } $ passwordSalt = substr ( md5 ( $ encryptedPassword ) , 0 , 2 ) ; $ encryptedPassword = md5 ( $ passwordSalt . $ plainTextPassword ) . ':' . $ passwordSalt ; return $ encryptedPassword ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/lightSAML/lightSAML/blob/377f04d1fb25f2fb2e72dabeff10b336f1cbe4c5/src/LightSaml/State/Sso/SsoSessionState.php#L277-L291<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getOtherPartyId ( $ partyId ) { if ( $ partyId == $ this -> idpEntityId ) { return $ this -> spEntityId ; } elseif ( $ partyId == $ this -> spEntityId ) { return $ this -> idpEntityId ; } throw new LightSamlException ( sprintf ( 'Party "%s" is not included in sso session between "%s" and "%s"' , $ partyId , $ this -> idpEntityId , $ this -> spEntityId ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/youshido-php/GraphQLBundle/blob/e74a5449656643610dc407a293fbb3ce497ef0ec/Controller/GraphQLController.php#L27-L56<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function defaultAction ( ) { try { $ this -> initializeSchemaService ( ) ; } catch ( UnableToInitializeSchemaServiceException $ e ) { return new JsonResponse ( [ [ 'message' => 'Schema class ' . $ this -> getSchemaClass ( ) . ' does not exist' ] ] , 200 , $ this -> getResponseHeaders ( ) ) ; } if ( $ this -> get ( 'request_stack' ) -> getCurrentRequest ( ) -> getMethod ( ) == 'OPTIONS' ) { return $ this -> createEmptyResponse ( ) ; } list ( $ queries , $ isMultiQueryRequest ) = $ this -> getPayload ( ) ; $ queryResponses = array_map ( function ( $ queryData ) { return $ this -> executeQuery ( $ queryData [ 'query' ] , $ queryData [ 'variables' ] ) ; } , $ queries ) ; $ response = new JsonResponse ( $ isMultiQueryRequest ? $ queryResponses : $ queryResponses [ 0 ] , 200 , $ this -> getParameter ( 'graphql.response.headers' ) ) ; if ( $ this -> getParameter ( 'graphql.response.json_pretty' ) ) { $ response -> setEncodingOptions ( $ response -> getEncodingOptions ( ) | JSON_PRETTY_PRINT ) ; } return $ response ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/slickframework/http/blob/9da14b618e0f75d3d565e0ce928a35d992755e75/src/Message/Uri.php#L197-L204<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function withScheme ( $ scheme ) { $ this -> validateCharacters ( $ scheme ) ; $ uri = clone $ this ; $ uri -> scheme = $ scheme ; return $ uri ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/qranio-com/azure-sdk-pear-deps/blob/6609eab8623759b5e23345ded80d832278a7b680/src/Mail/mime.php#L397-L454<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>function addAttachment ( $ file , $ c_type = 'application/octet-stream' , $ name = '' , $ isfile = true , $ encoding = 'base64' , $ disposition = 'attachment' , $ charset = '' , $ language = '' , $ location = '' , $ n_encoding = null , $ f_encoding = null , $ description = '' , $ h_charset = null , $ add_headers = array ( ) ) { $ bodyfile = null ; if ( $ isfile ) { // Don't load file into memory if ( $ this -> _build_params [ 'delay_file_io' ] ) { $ filedata = null ; $ bodyfile = $ file ; } else { if ( $ this -> _isError ( $ filedata = $ this -> _file2str ( $ file ) ) ) { return $ filedata ; } } // Force the name the user supplied, otherwise use $file $ filename = ( $ name ? $ name : $ this -> _basename ( $ file ) ) ; } else { $ filedata = $ file ; $ filename = $ name ; } if ( ! strlen ( $ filename ) ) { $ msg = "The supplied filename for the attachment can't be empty" ; return $ this -> _raiseError ( $ msg ) ; } $ this -> _parts [ ] = array ( 'body' => $ filedata , 'body_file' => $ bodyfile , 'name' => $ filename , 'c_type' => $ c_type , 'charset' => $ charset , 'encoding' => $ encoding , 'language' => $ language , 'location' => $ location , 'disposition' => $ disposition , 'description' => $ description , 'add_headers' => $ add_headers , 'name_encoding' => $ n_encoding , 'filename_encoding' => $ f_encoding , 'headers_charset' => $ h_charset , ) ; return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/vanilla/garden/blob/ad9af189da98d57dc990eb3e6c0524f32e5e7e01/src/Addons.php#L402-L418<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected static function scanAddons ( $ dir = null , $ enabled = null , & $ addons = null ) { if ( ! $ dir ) { $ dir = static :: $ baseDir ; } if ( $ addons === null ) { $ addons = array ( ) ; } /* @var \DirectoryIterator */ foreach ( new \ DirectoryIterator ( $ dir ) as $ subdir ) { if ( $ subdir -> isDir ( ) && ! $ subdir -> isDot ( ) ) { //                echo $subdir->getPathname().$subdir->isDir().$subdir->isDot().'<br />'; static :: scanAddonRecursive ( $ subdir -> getPathname ( ) , $ addons , $ enabled ) ; } } return $ addons ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/qranio-com/azure-sdk-pear-deps/blob/6609eab8623759b5e23345ded80d832278a7b680/src/HTTP2.php#L157-L180<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function negotiateCharset ( $ supported , $ default = 'ISO-8859-1' ) { $ supp = array ( ) ; foreach ( $ supported as $ charset ) { $ supp [ strtolower ( $ charset ) ] = $ charset ; } if ( ! count ( $ supp ) ) { return $ default ; } if ( isset ( $ _SERVER [ 'HTTP_ACCEPT_CHARSET' ] ) ) { $ match = $ this -> matchAccept ( $ _SERVER [ 'HTTP_ACCEPT_CHARSET' ] , $ supp ) ; if ( ! is_null ( $ match ) ) { return $ match ; } } return $ default ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/phalcon-nucleon/framework/blob/f50fe76387bb623497f066c86f58fa70bfa613ef/src/Neutrino/Auth/Middleware/Authenticate.php#L28-L37<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function before ( Event $ event , $ source , $ data = null ) { if ( $ this -> { Services :: AUTH } -> check ( ) ) { return true ; } $ this -> response -> setStatusCode ( 401 , 'Unauthorized' ) ; return false ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Evaneos/Burrow/blob/98b4761ba68cfedd62a8cc0b064809a0fc6cc928/src/Driver/PhpAmqpLibDriver.php#L56-L64<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function declareSimpleQueue ( $ queueName = '' , $ type = self :: QUEUE_DURABLE ) { $ durable = ( $ type === self :: QUEUE_DURABLE ) ; $ exclusive = ( $ type === self :: QUEUE_EXCLUSIVE ) ; list ( $ name , , ) = $ this -> getChannel ( ) -> queue_declare ( $ queueName , false , $ durable , $ exclusive , false ) ; return $ name ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/qranio-com/azure-sdk-pear-deps/blob/6609eab8623759b5e23345ded80d832278a7b680/src/HTTP/Request2/SOCKS5.php#L92-L104<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function performAuthentication ( $ username , $ password ) { $ request = pack ( 'C2' , 1 , strlen ( $ username ) ) . $ username . pack ( 'C' , strlen ( $ password ) ) . $ password ; $ this -> write ( $ request ) ; $ response = unpack ( 'Cvn/Cstatus' , $ this -> read ( 3 ) ) ; if ( 1 != $ response [ 'vn' ] || 0 != $ response [ 'status' ] ) { throw new HTTP_Request2_ConnectionException ( 'Connection rejected by proxy due to invalid username and/or password' ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/AeonDigital/PHP-DataModel/blob/57d546000b5628667f16eb7d3e55ac38ac67c61e/src/Abstracts/aModel.php#L38-L46<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function checkIfValueIsModel ( $ v ) : bool { $ r = false ; if ( is_object ( $ v ) === true ) { $ interfaces = class_implements ( $ v ) ; $ r = ( in_array ( iModel :: class , $ interfaces ) === true ) ; } return $ r ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/mareg/php-option/blob/edc2931a62a173b7e59136179793564503fb8a7f/src/PlasmaConduit/option/Some.php#L147-L158<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function flatMap ( $ flatMapper ) { if ( ! is_callable ( $ flatMapper ) ) { throw new Exception ( "Can't call Some#flatMap with a non callable." ) ; } $ flatMapped = $ flatMapper ( $ this -> _value ) ; if ( ! ( $ flatMapped instanceof Option ) ) { throw new Exception ( "Function passed to Some#flatMap must retrun Option" ) ; } return $ flatMapped ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/Config/DotEnv.php#L189-L233<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function sanitizeValue ( string $ value ) : string { if ( ! $ value ) { return $ value ; } // Does it begin with a quote? if ( strpbrk ( $ value [ 0 ] , '"\'' ) !== false ) { // value starts with a quote $ quote = $ value [ 0 ] ; $ regexPattern = sprintf ( '/^ 					%1$s          # match a quote at the start of the value 					(             # capturing sub-pattern used 								  (?:          # we do not need to capture this 								   [^%1$s\\\\] # any character other than a quote or backslash 								   |\\\\\\\\   # or two backslashes together 								   |\\\\%1$s   # or an escaped quote e.g \" 								  )*           # as many characters that match the previous rules 					)             # end of the capturing sub-pattern 					%1$s          # and the closing quote 					.*$           # and discard any string after the closing quote 					/mx' , $ quote ) ; $ value = preg_replace ( $ regexPattern , '$1' , $ value ) ; $ value = str_replace ( "\\$quote" , $ quote , $ value ) ; $ value = str_replace ( '\\\\' , '\\' , $ value ) ; } else { $ parts = explode ( ' #' , $ value , 2 ) ; $ value = trim ( $ parts [ 0 ] ) ; // Unquoted values cannot contain whitespace if ( preg_match ( '/\s+/' , $ value ) > 0 ) { throw new \ InvalidArgumentException ( '.env values containing spaces must be surrounded by quotes.' ) ; } } return $ value ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Azure/azure-storage-php/blob/9e53aa6e447e2260a29d54b96fab9fe18b665afa/azure-storage-table/src/Table/Models/Filters/Filter.php#L88-L92<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function applyEq ( Filter $ left , Filter $ right ) { $ filter = new BinaryFilter ( $ left , 'eq' , $ right ) ; return $ filter ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/sulu/SuluFormBundle/blob/4226e71f3c220f40d75bd289297e4879a3f36f69/Controller/FormWebsiteController.php#L181-L212<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function tokenAction ( Request $ request ) { $ formName = $ request -> get ( 'form' ) ; $ csrfToken = $ this -> get ( 'security.csrf.token_manager' ) -> getToken ( $ request -> get ( 'form' ) ) -> getValue ( ) ; $ content = $ csrfToken ; // this should be the default behaviour in future because for varnish its needed if ( $ request -> get ( 'html' ) ) { $ content = sprintf ( '<input type="hidden" id="%s__token" name="%s[_token]" value="%s" />' , $ formName , $ formName , $ csrfToken ) ; } $ response = new Response ( $ content ) ; /* Deactivate Cache for this token action */ $ response -> setSharedMaxAge ( 0 ) ; $ response -> setMaxAge ( 0 ) ; // set shared will set the request to public so it need to be done after shared max set to 0 $ response -> setPrivate ( ) ; $ response -> headers -> addCacheControlDirective ( 'no-cache' , true ) ; $ response -> headers -> addCacheControlDirective ( 'must-revalidate' , true ) ; $ response -> headers -> addCacheControlDirective ( 'no-store' , true ) ; return $ response ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/blob/04bfa1284ca652e8e9befe82134f440cc31f655d/WordPress/Sniffs/NamingConventions/ValidHookNameSniff.php#L171-L178<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function prepare_regex ( ) { $ extra = '' ; if ( '' !== $ this -> additionalWordDelimiters && \ is_string ( $ this -> additionalWordDelimiters ) ) { $ extra = preg_quote ( $ this -> additionalWordDelimiters , '`' ) ; } return sprintf ( $ this -> punctuation_regex , $ extra ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/gordonbanderson/silverstripe-notifier/blob/707b5620452ce171955c3b7d08e68af1ac4f5cbd/src/Notify.php#L136-L183<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private static function sendSlackMessage ( $ message , $ channel ) { // do not send Slack messages in test mode for now // @todo Trap these for testing if ( Director :: isTest ( ) ) { return ; } $ hooksFromConfig = Config :: inst ( ) -> get ( 'Suilven\Notifier\Notify' , 'slack_webhooks' ) ; // optionally override the channel $ channelOverride = Config :: inst ( ) -> get ( 'Suilven\Notifier\Notify' , 'channel_override' ) ; if ( ! empty ( $ channelOverride ) ) { $ channel = $ channelOverride ; } // get the appropriate webhook $ url = null ; if ( ! empty ( $ hooksFromConfig ) ) { foreach ( $ hooksFromConfig as $ hook ) { // stick with the default webhook but allow overriding on a per channel basis if ( $ hook [ 'name' ] == $ channel ) { $ url = $ hook [ 'url' ] ; } elseif ( empty ( $ url ) && $ hook [ 'name' ] == 'default' ) { $ url = $ hook [ 'url' ] ; } } } // Log an error if Slack config misconfigured if ( empty ( $ url ) ) { Injector :: inst ( ) -> get ( LoggerInterface :: class ) -> error ( 'The slack channel ' . $ channel . ' has no webhook' ) ; return ; } // create job $ job = new NotifyViaSlackJob ( ) ; $ job -> webhookURL = $ url ; $ job -> message = $ message ; $ job -> channel = $ channel ; // place on queue singleton ( QueuedJobService :: class ) -> queueJob ( $ job ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/sasedev/commons-shared-bundle/blob/c9fe125df0345b6f448342750effa5f166831d5f/src/Sasedev/Commons/SharedBundle/Controller/BaseController.php#L623-L632<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function addHeadStyle ( Style $ head_style ) { $ this -> head_styles [ ] = $ head_style ; $ this -> twig_vars [ 'head_styles' ] = $ this -> head_styles ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/Http/Response.php#L267-L294<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setContent ( $ content ) : IResponse { if ( $ this -> checkFlowControl ( ) ) { return $ this ; } $ this -> original = $ content ; if ( $ this -> contentShouldJson ( $ content ) ) { $ this -> setHeader ( 'Content-Type' , 'application/json' ) ; $ this -> isJson = true ; $ content = $ this -> contentToJson ( $ content ) ; } if ( null !== $ content && ! is_scalar ( $ content ) && ! is_callable ( [ $ content , '__toString' ] ) ) { $ e = sprintf ( 'The Response content must be a scalar or object implementing __toString(), %s given.' , gettype ( $ content ) ) ; throw new UnexpectedValueException ( $ e ) ; } $ this -> content = ( string ) $ content ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/neo4j-contrib/neo4j-symfony/blob/9334e51599b7cb4b698d15d962029260f186df80/DependencyInjection/Neo4jExtension.php#L83-L118<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function handleClients ( array & $ config , ContainerBuilder $ container ) : array { if ( empty ( $ config [ 'clients' ] ) ) { // Add default entity manager if none set. $ config [ 'clients' ] [ 'default' ] = [ 'connections' => [ 'default' ] ] ; } $ serviceIds = [ ] ; foreach ( $ config [ 'clients' ] as $ name => $ data ) { $ connections = [ ] ; $ serviceIds [ $ name ] = $ serviceId = sprintf ( 'neo4j.client.%s' , $ name ) ; foreach ( $ data [ 'connections' ] as $ connectionName ) { if ( empty ( $ config [ 'connections' ] [ $ connectionName ] ) ) { throw new InvalidConfigurationException ( sprintf ( 'Client "%s" is configured to use connection named "%s" but there is no such connection' , $ name , $ connectionName ) ) ; } $ connections [ ] = $ connectionName ; } if ( empty ( $ connections ) ) { $ connections [ ] = 'default' ; } $ definition = class_exists ( ChildDefinition :: class ) ? new ChildDefinition ( 'neo4j.client.abstract' ) : new DefinitionDecorator ( 'neo4j.client.abstract' ) ; $ container -> setDefinition ( $ serviceId , $ definition ) -> setArguments ( [ $ connections ] ) ; } return $ serviceIds ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/mamasu/mama-framework/blob/105a4980b56f1fdaad095a32189ee47d39203a7a/src/Controller/FrontController.php#L310-L319<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function setAndAppLibraries ( ) { //Get the  libraries and application libraries $ this -> appLibraries = $ this -> config -> get ( 'app' ) [ 'paths' ] ; //Get the Structure $ this -> Structure = $ this -> config -> get ( 'Structure' ) [ 'filesystem' ] ; //Set to Autoloader the internal Structure $ this -> autoload -> setStructure ( $ this -> Structure ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/edineibauer/email-control/blob/e24856a5a04cfe90bc8850eee45c414f8121266c/public/src/EmailControl/Email.php#L232-L238<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getEmailContent ( ) : string { if ( ! empty ( $ this -> assunto ) && ! empty ( $ this -> destinatarioEmail ) && ! empty ( $ this -> mensagem ) ) return $ this -> getTemplateHtml ( ) ; return "" ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/sulu/SuluFormBundle/blob/4226e71f3c220f40d75bd289297e4879a3f36f69/Form/Builder.php#L232-L258<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function createForm ( $ name , $ type , $ typeId , $ locale , $ formEntity , $ webspaceKey ) { $ defaults = $ this -> getDefaults ( $ formEntity , $ locale ) ; $ typeName = $ this -> titleProviderPool -> get ( $ type ) -> getTitle ( $ typeId ) ; $ recaptchaFields = $ formEntity -> getFieldsByType ( 'recaptcha' ) ; $ csrfTokenProtection = true ; if ( count ( $ recaptchaFields ) ) { $ csrfTokenProtection = false ; } return $ this -> formFactory -> createNamed ( 'dynamic_' . $ name . $ formEntity -> getId ( ) , DynamicFormType :: class , new Dynamic ( $ type , $ typeId , $ locale , $ formEntity , $ defaults , $ webspaceKey , $ typeName ) , [ 'formEntity' => $ formEntity , 'locale' => $ locale , 'type' => $ type , 'typeId' => $ typeId , 'csrf_protection' => $ csrfTokenProtection , 'name' => $ name , 'block_name' => 'dynamic_' . $ name , ] ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/valkyrjaio/valkyrja/blob/3b4ad998d96c3ab08e36a11c76ce8d9d48759ffe/src/Valkyrja/ORM/Repositories/PDORepository.php#L682-L736<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function saveCreateDelete ( string $ type , Entity $ entity ) : int { if ( ! $ this -> store -> inTransaction ( ) ) { $ this -> store -> beginTransaction ( ) ; } // Create a new query $ query = $ this -> entityManager -> getQueryBuilder ( ) -> table ( $ this -> table ) -> { $ type } ( ) ; $ idField = $ entity :: getIdField ( ) ; $ properties = $ entity -> forDataStore ( ) ; /* @var QueryBuilder $query */ // If this is an insert if ( $ type === 'insert' ) { // Ensure all the required properties are set $ this -> ensureRequiredProperties ( $ entity , $ properties ) ; } // If this type isn't an insert if ( $ type !== 'insert' ) { // Set the id for the where clause $ query -> where ( $ idField . ' = ' . $ this -> criterionParam ( $ idField ) ) ; } if ( $ type !== 'delete' ) { // Set the properties $ this -> setPropertiesForSaveCreateDeleteQuery ( $ query , $ properties ) ; } // Prepare a PDO statement with the query $ stmt = $ this -> store -> prepare ( $ query -> getQuery ( ) ) ; // If this type isn't an insert if ( $ type !== 'insert' ) { // Set the id value for the where clause $ stmt -> bindValue ( $ this -> criterionParam ( $ idField ) , $ properties [ $ idField ] ) ; } if ( $ type !== 'delete' ) { // Set the properties. $ this -> setPropertiesForSaveCreateDeleteStatement ( $ stmt , $ properties ) ; } // If the execute failed if ( ! $ executeResult = $ stmt -> execute ( ) ) { // Throw a fail exception throw new ExecuteException ( $ stmt -> errorInfo ( ) [ 2 ] ) ; } return $ executeResult ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/orchestral/extension/blob/d461c988ba6ec0200fc8f4e35b515e6710d3ef0a/src/ExtensionServiceProvider.php#L70-L81<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function registerExtensionFinder ( ) : void { $ this -> app -> singleton ( 'orchestra.extension.finder' , function ( Application $ app ) { $ config = [ 'path.app' => $ app -> path ( ) , 'path.base' => $ app -> basePath ( ) , 'path.composer' => $ app -> basePath ( '/composer.lock' ) , ] ; return new Finder ( $ app -> make ( 'files' ) , $ config ) ; } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/fsi-open/reflection/blob/8adeddd83add02942d40824ac99b554fa669e8e3/lib/FSi/Component/Reflection/ReflectionClass.php#L70-L77<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getParentClass ( ) { $ parentClass = parent :: getParentClass ( ) ; if ( $ parentClass ) { return ReflectionClass :: factory ( $ parentClass -> getName ( ) ) ; } return false ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wazsmwazsm/WorkerF/blob/5982934d6beb59b3e3e4071be9bbbd4e16247dba/src/WorkerF/DB/Drivers/PDODriver.php#L1214-L1220<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function fromSub ( Closure $ callback ) { $ sub_attr = $ this -> _subBuilder ( $ callback ) ; $ this -> _table .= ' ( ' . $ sub_attr [ '_prepare_sql' ] . ' ) AS tb_' . uniqid ( ) . ' ' ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/imatic/view-bundle/blob/dd7896fbd9b07bfb3f7a75c7dc0d7dccf2cbf254/EventListener/KernelSubscriber.php#L54-L76<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function onKernelResponse ( FilterResponseEvent $ event ) { if ( $ event -> isMasterRequest ( ) ) { $ request = $ event -> getRequest ( ) ; $ response = $ event -> getResponse ( ) ; if ( $ request -> isXmlHttpRequest ( ) && ! $ response -> isRedirection ( ) ) { // flash messages if ( $ request -> hasSession ( ) && ! $ response -> headers -> has ( 'X-Flash-Messages' ) ) { $ this -> setFlashMessageHeader ( $ response , $ request -> getSession ( ) ) ; } // title, fullTitle $ this -> setTitleHeaders ( $ response ) ; // exception info (debug only) if ( $ this -> debug && $ this -> lastException ) { $ this -> setExceptionHeader ( $ response , $ this -> lastException ) ; $ this -> lastException = null ; } } } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/narrowspark/framework/blob/6b45d64668f8551c1c3116bd4526a7060e121795/src/Viserio/Component/Profiler/DataCollector/AjaxRequestsDataCollector.php#L60-L66<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getAssets ( ) : array { return [ 'css' => \ dirname ( __DIR__ ) . \ DIRECTORY_SEPARATOR . 'Resource' . \ DIRECTORY_SEPARATOR . 'css' . \ DIRECTORY_SEPARATOR . 'ajax-requests.css' , 'js' => \ dirname ( __DIR__ ) . \ DIRECTORY_SEPARATOR . 'Resource' . \ DIRECTORY_SEPARATOR . 'js' . \ DIRECTORY_SEPARATOR . 'ajaxHandler.js' , ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Db/Command.php#L1187-L1195<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function checkQueryByPattern ( $ pattern , $ sql = null ) { if ( ! isset ( $ sql ) ) { $ sql = $ this -> getSql ( ) ; } if ( $ sql === "" ) { return false ; } return preg_match ( $ pattern , $ sql ) > 0 ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/cscfa/CacheSystemBundle/blob/781d36bab6e013b44f0a82aad22121a5cc60b95f/Object/Element/CacheCollection.php#L192-L207<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function serialize ( ) { $ dateTime = new \ DateTime ( ) ; $ dateTime -> setTimestamp ( $ dateTime -> getTimestamp ( ) + $ this -> timestampOffset ) ; foreach ( $ this -> elements as $ element ) { if ( $ element instanceof CacheElement ) { $ element -> setTimeOver ( $ dateTime ) ; } } return serialize ( array ( "id" => $ this -> id , "elements" => $ this -> elements ) ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/lightSAML/lightSAML/blob/377f04d1fb25f2fb2e72dabeff10b336f1cbe4c5/src/LightSaml/Model/Metadata/RoleDescriptor.php#L311-L322<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function serialize ( \ DOMNode $ parent , SerializationContext $ context ) { $ this -> attributesToXml ( array ( 'protocolSupportEnumeration' , 'ID' , 'validUntil' , 'cacheDuration' , 'errorURL' ) , $ parent ) ; $ this -> manyElementsToXml ( $ this -> getAllSignatures ( ) , $ parent , $ context , null ) ; $ this -> manyElementsToXml ( $ this -> getAllKeyDescriptors ( ) , $ parent , $ context , null ) ; $ this -> manyElementsToXml ( $ this -> getAllOrganizations ( ) , $ parent , $ context , null ) ; $ this -> manyElementsToXml ( $ this -> getAllContactPersons ( ) , $ parent , $ context , null ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/View/Parser.php#L175-L184<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function registerCompilers ( ) : IParser { foreach ( $ this -> compiler -> getCompilers ( ) as $ compiler ) { foreach ( ( array ) $ compiler [ 1 ] as $ name ) { $ this -> registerCompiler ( $ compiler [ 0 ] , $ name , $ compiler [ 2 ] ) ; } } return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/extendsframework/extends-validator/blob/1fb5b26d9f3fc8102d658a20d070fd0f72247a03/src/Object/PropertiesValidator.php#L145-L153<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function addProperty ( string $ property , ValidatorInterface $ validator , bool $ optional = null ) : PropertiesValidator { $ this -> properties [ $ property ] = new Property ( $ property , $ validator , $ optional ) ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/blob/04bfa1284ca652e8e9befe82134f440cc31f655d/WordPress/Sniffs/PHP/PregQuoteDelimiterSniff.php#L57-L67<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function process_parameters ( $ stackPtr , $ group_name , $ matched_content , $ parameters ) { if ( \ count ( $ parameters ) > 1 ) { return ; } $ this -> phpcsFile -> addWarning ( 'Passing the $delimiter as the second parameter to preg_quote() is strongly recommended.' , $ stackPtr , 'Missing' ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/codeigniter4/CodeIgniter4/blob/a31039291ff627150b0e3304d191b2a51b16271d/system/Files/File.php#L96-L112<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getSize ( string $ unit = 'b' ) { if ( is_null ( $ this -> size ) ) { $ this -> size = filesize ( $ this -> getPathname ( ) ) ; } switch ( strtolower ( $ unit ) ) { case 'kb' : return number_format ( $ this -> size / 1024 , 3 ) ; case 'mb' : return number_format ( ( $ this -> size / 1024 ) / 1024 , 3 ) ; } return ( int ) $ this -> size ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Db/Pgsql/PgConnection.php#L425-L455<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function handleMessage ( ParserInterface $ message ) { $ this -> debug ( 'Handling ' . get_class ( $ message ) ) ; if ( $ message instanceof DataRow ) { $ this -> handleDataRow ( $ message ) ; } elseif ( $ message instanceof Authentication ) { $ this -> handleAuthentication ( $ message ) ; } elseif ( $ message instanceof BackendKeyData ) { $ this -> handleBackendKeyData ( $ message ) ; } elseif ( $ message instanceof CommandComplete ) { $ this -> handleCommandComplete ( $ message ) ; } elseif ( $ message instanceof CopyInResponse ) { $ this -> handleCopyInResponse ( $ message ) ; } elseif ( $ message instanceof CopyOutResponse ) { $ this -> handleCopyOutResponse ( $ message ) ; } elseif ( $ message instanceof EmptyQueryResponse ) { $ this -> handleEmptyQueryResponse ( $ message ) ; } elseif ( $ message instanceof ErrorResponse ) { $ this -> handleErrorResponse ( $ message ) ; } elseif ( $ message instanceof NoticeResponse ) { $ this -> handleNoticeResponse ( $ message ) ; } elseif ( $ message instanceof ParameterStatus ) { $ this -> handleParameterStatus ( $ message ) ; } elseif ( $ message instanceof ParseComplete ) { $ this -> handleParseComplete ( $ message ) ; } elseif ( $ message instanceof ReadyForQuery ) { $ this -> handleReadyForQuery ( $ message ) ; } elseif ( $ message instanceof RowDescription ) { $ this -> handleRowDescription ( $ message ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/valkyrjaio/valkyrja/blob/3b4ad998d96c3ab08e36a11c76ce8d9d48759ffe/src/Valkyrja/Http/NativeRequest.php#L626-L633<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function setHeaders ( array $ headers = [ ] ) : Request { $ headers = $ headers ? : $ this -> server ( ) -> getHeaders ( ) ; $ this -> headers = new Headers ( $ headers ) ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/wpsharks/core/blob/7a086f144d15ba2587c348744b75f811b9dd6625/src/includes/classes/Core/Utils/DirPath.php#L38-L69<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function normalize ( $ value , bool $ allow_trailing_slash = false ) { if ( is_array ( $ value ) || is_object ( $ value ) ) { foreach ( $ value as $ _key => & $ _value ) { $ _value = $ this -> normalize ( $ _value ) ; } // unset($_key, $_value); return $ value ; } if ( ! ( $ string = ( string ) $ value ) ) { return $ string ; // Nothing to do. } $ stream_wrapper_regex = '/^(?<stream_wrapper>' . $ this :: FS_REGEX_FRAG_STREAM_WRAPPER . ')/uS' ; $ drive_prefix_regex = '/^(?<drive_letter>' . $ this :: FS_REGEX_FRAG_DRIVE_PREFIX . ')/uS' ; if ( mb_strpos ( $ string , '://' ) !== false && preg_match ( $ stream_wrapper_regex , $ string , $ stream_wrapper ) ) { $ string = preg_replace ( $ stream_wrapper_regex , '' , $ string ) ; } if ( mb_strpos ( $ string , ':' ) !== false && preg_match ( $ drive_prefix_regex , $ stringm , $ drive_prefix ) ) { $ string = preg_replace ( $ stream_wrapper_regex , '' , $ string ) ; } $ string = str_replace ( [ DIRECTORY_SEPARATOR , '\\' , '/' ] , '/' , $ string ) ; $ string = preg_replace ( '/\/+/u' , '/' , $ string ) ; // Remove extra slashes. $ string = $ allow_trailing_slash ? $ string : $ this -> c :: mbRTrim ( $ string , '/' ) ; if ( ! empty ( $ drive_prefix [ 0 ] ) ) { $ string = mb_strtoupper ( $ drive_prefix [ 0 ] ) . $ string ; } if ( ! empty ( $ stream_wrapper [ 0 ] ) ) { $ string = mb_strtolower ( $ stream_wrapper [ 0 ] ) . $ string ; } return $ string ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/louislivi/SMProxy/blob/6100521c49b618f4c1d64bd57eefdfb14ca66209/src/SMProxyServer.php#L202-L237<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function onWorkerStart ( \ swoole_server $ server , int $ worker_id ) { self :: go ( function ( ) use ( $ server , $ worker_id ) { if ( $ worker_id >= CONFIG [ 'server' ] [ 'swoole' ] [ 'worker_num' ] ) { ProcessHelper :: setProcessTitle ( 'SMProxy task    process' ) ; } else { ProcessHelper :: setProcessTitle ( 'SMProxy worker  process' ) ; } try { $ this -> dbConfig = $ this -> parseDbConfig ( initConfig ( CONFIG_PATH ) ) ; //初始化链接 MySQLPool :: init ( $ this -> dbConfig ) ; } catch ( MySQLException $ exception ) { self :: writeErrorMessage ( $ exception , 'mysql' ) ; $ server -> shutdown ( ) ; return ; } catch ( SMProxyException $ exception ) { self :: writeErrorMessage ( $ exception , 'system' ) ; $ server -> shutdown ( ) ; return ; } if ( $ worker_id === ( CONFIG [ 'server' ] [ 'swoole' ] [ 'worker_num' ] - 1 ) ) { try { Coroutine :: sleep ( 0.1 ) ; $ this -> setStartConns ( ) ; } catch ( MySQLException $ exception ) { self :: writeErrorMessage ( $ exception , 'mysql' ) ; $ server -> shutdown ( ) ; return ; } $ system_log = Log :: getLogger ( 'system' ) ; $ system_log -> info ( 'Worker started!' ) ; echo 'Worker started!' , PHP_EOL ; } } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/Litecms/Contact/blob/cf8ea54f4553010ac7ea572c68622f8bf8203f4f/src/Policies/ContactPolicy.php#L62-L67<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function destroy ( User $ user , Contact $ contact ) { if ( $ user -> canDo ( 'contact.contact.delete' ) && $ user -> isAdmin ( ) ) { return true ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/FACT-Finder/FACT-Finder-PHP-Library/blob/5c795b94117fa7ac40f5e80d4edc93999a76fc90/src/log4php/LoggerNDC.php#L197-L202<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function setMaxDepth ( $ maxDepth ) { $ maxDepth = ( int ) $ maxDepth ; if ( LoggerNDC :: getDepth ( ) > $ maxDepth ) { self :: $ stack = array_slice ( self :: $ stack , 0 , $ maxDepth ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/activecollab/databaseobject/blob/93ebbc26fdcd82e8effa15fea46432dafbfa5e83/src/Entity/Entity.php#L703-L751<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function & setFieldValue ( $ field , $ value ) { if ( $ this -> fieldExists ( $ field ) ) { if ( $ field === 'id' ) { $ value = $ value === null ? null : ( int ) $ value ; } if ( $ value === null && array_key_exists ( $ field , $ this -> default_field_values ) ) { throw new InvalidArgumentException ( "Value of '$field' can't be null" ) ; } if ( ! $ this -> isLoading ( ) ) { $ this -> triggerEvent ( 'on_prepare_field_value_before_set' , [ $ field , & $ value ] ) ; } if ( ! array_key_exists ( $ field , $ this -> values ) || ( $ this -> values [ $ field ] !== $ value ) ) { // If we are loading object there is no need to remember if this field // was modified, if PK has been updated and old value. We just skip that if ( ! $ this -> isLoading ( ) ) { if ( isset ( $ this -> values [ $ field ] ) ) { $ old_value = $ this -> values [ $ field ] ; // Remember old value } // Save primary key value. Also make sure that only the first PK value is // saved as old. Not to save second value on third modification ;) if ( $ this -> isPrimaryKey ( $ field ) && ! $ this -> primary_key_modified ) { $ this -> primary_key_modified = true ; } // Save old value if we haven't done that already if ( isset ( $ old_value ) && ! isset ( $ this -> old_values [ $ field ] ) ) { $ this -> old_values [ $ field ] = $ old_value ; } // Remember that this field is modified if ( ! in_array ( $ field , $ this -> modified_fields ) ) { $ this -> modified_fields [ ] = $ field ; } } $ this -> values [ $ field ] = $ value ; } } else { throw new InvalidArgumentException ( "Field '$field' does not exist" ) ; } return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/Database/Select.php#L888-L897<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function pageCount ( string $ cols = '*' ) : int { $ this -> backupPageArgs ( ) ; $ count = $ this -> findCount ( $ cols ) ; $ this -> restorePageArgs ( ) ; return $ count ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/Http/Request.php#L1129-L1134<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getQueryString ( ) : ? string { $ queryString = $ this -> normalizeQueryString ( $ this -> server -> get ( 'QUERY_STRING' ) ) ; return '' === $ queryString && '0' !== $ queryString ? null : $ queryString ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/qranio-com/azure-sdk-pear-deps/blob/6609eab8623759b5e23345ded80d832278a7b680/src/PEAR/DependencyDB.php#L135-L154<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>function hasWriteAccess ( ) { if ( ! file_exists ( $ this -> _depdb ) ) { $ dir = $ this -> _depdb ; while ( $ dir && $ dir != '.' ) { $ dir = dirname ( $ dir ) ; // cd .. if ( $ dir != '.' && file_exists ( $ dir ) ) { if ( is_writeable ( $ dir ) ) { return true ; } return false ; } } return false ; } return is_writeable ( $ this -> _depdb ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/techdivision/import/blob/66d3eb967cbbd2d248942044fa8ede1192e48fd4/src/Subjects/AbstractSubject.php#L1098-L1119<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function resolveOriginalColumnName ( $ columnName ) { // try to load the original data $ originalData = $ this -> getOriginalData ( ) ; // query whether or not original data is available if ( isset ( $ originalData [ ColumnKeys :: ORIGINAL_COLUMN_NAMES ] ) ) { // query whether or not the original column name is available if ( isset ( $ originalData [ ColumnKeys :: ORIGINAL_COLUMN_NAMES ] [ $ columnName ] ) ) { return $ originalData [ ColumnKeys :: ORIGINAL_COLUMN_NAMES ] [ $ columnName ] ; } // query whether or a wildcard column name is available if ( isset ( $ originalData [ ColumnKeys :: ORIGINAL_COLUMN_NAMES ] [ '*' ] ) ) { return $ originalData [ ColumnKeys :: ORIGINAL_COLUMN_NAMES ] [ '*' ] ; } } // return the original column name return $ columnName ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/miladrahimi/phprouter/blob/7036181516b1cfa77bdd323cc3f2a6a8af95cee8/src/Router.php#L158-L191<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function map ( ? string $ method , string $ route , $ controller , $ middleware = [ ] , string $ domain = null , string $ name = null ) : Router { $ name = $ name ? : $ this -> currentName ; $ uri = $ this -> currentPrefix . $ route ; $ middleware = is_array ( $ middleware ) ? $ middleware : [ $ middleware ] ; if ( is_string ( $ controller ) && is_callable ( $ controller ) == false ) { $ controller = $ this -> currentNamespace . "\\" . $ controller ; } $ route = new Route ( $ name , $ uri , $ method , $ controller , array_merge ( $ this -> currentMiddleware , $ middleware ) , $ domain ? : $ this -> currentDomain ) ; $ this -> routes [ ] = $ route ; if ( $ name ) { $ this -> names [ $ name ] = $ route ; $ this -> currentName = null ; } return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Lite.php#L95-L106<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function saveStatefullVars ( $ sessionContext ) { if ( $ this -> stateless == "Y" ) return ; $ sessionContext -> saveObjVar ( $ this -> objectName , "RecordId" , $ this -> recordId ) ; $ sessionContext -> saveObjVar ( $ this -> objectName , "SearchRule" , $ this -> searchRule ) ; $ sessionContext -> saveObjVar ( $ this -> objectName , "SortRule" , $ this -> sortRule ) ; $ sessionContext -> saveObjVar ( $ this -> objectName , "OtherSqlRule" , $ this -> otherSQLRule ) ; if ( is_array ( $ this -> association ) ) { $ sessionContext -> saveObjVar ( $ this -> objectName , "Association" , $ this -> association ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/velkuns/eureka-package-money/blob/6a7954ebd228b400c8922f66fbd390711f27c23b/src/Money/DataMapper/Mapper/Money/AccountMapper.php#L33-L49<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function findAllAccountByUserId ( $ userId , $ excludeVirtual = true ) { $ this -> addWhere ( 'user_id' , $ userId ) ; if ( $ excludeVirtual ) { $ this -> addWhere ( 'account_id_parent' , 0 ) ; } $ query = 'SELECT ' . $ this -> getQueryFields ( ) . ' FROM ' . $ this -> getTable ( ) . ' ' . ' INNER JOIN money_account_user USING(account_id) ' . $ this -> getQueryWhere ( ) . ' ' . $ this -> getQueryOrderBy ( ) . ' ' . $ this -> getQueryLimit ( ) ; return $ this -> query ( $ query ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/digit-soft/re-action/blob/13b79b5778b8bb841af8be458552b4c52f451a29/src/Rbac/DbManager.php#L773-L797<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getAssignments ( $ userId ) { if ( $ this -> isEmptyUserId ( $ userId ) ) { return resolve ( [ ] ) ; } return ( new Query ( ) ) -> from ( $ this -> assignmentTable ) -> where ( [ 'user_id' => ( string ) $ userId ] ) -> all ( $ this -> db ) -> then ( function ( $ rows ) { $ assignments = [ ] ; foreach ( $ rows as $ row ) { $ assignments [ $ row [ 'item_name' ] ] = new Assignment ( [ 'userId' => $ row [ 'user_id' ] , 'roleName' => $ row [ 'item_name' ] , 'createdAt' => $ row [ 'created_at' ] , ] ) ; } return $ assignments ; } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/theiconic/php-ga-measurement-protocol/blob/cef87787f96d774ac9469a537a32d06b93f2bf72/src/Parameters/CompoundParameter.php#L95-L118<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function saveCompoundParameterData ( array $ compoundData ) { foreach ( $ compoundData as $ name => $ value ) { $ matchExists = false ; foreach ( $ this -> parameterNameMapper as $ regex => $ parameterName ) { if ( preg_match ( $ regex , $ name , $ matches ) === 1 ) { $ parameterLastIndex = '' ; if ( isset ( $ matches [ 1 ] ) ) { $ parameterLastIndex = $ matches [ 1 ] ; } $ matchExists = true ; $ this -> parameters [ $ parameterName . $ parameterLastIndex ] = $ value ; break ; } } if ( ! $ matchExists ) { throw new \ InvalidArgumentException ( "Unknown parameter $name for " . get_class ( $ this ) . ' data' ) ; } } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/nails/module-admin/blob/2ed8a91b5f05c86fcde21feb621cfafe391ee0c3/admin/controllers/AdminRouter.php#L530-L560<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function routeRequest ( ) { //  What are we trying to access? $ oUri = Factory :: service ( 'Uri' ) ; $ sModule = $ oUri -> rsegment ( 3 ) ? $ oUri -> rsegment ( 3 ) : '' ; $ sController = ucfirst ( $ oUri -> rsegment ( 4 ) ? $ oUri -> rsegment ( 4 ) : $ sModule ) ; $ sMethod = $ oUri -> rsegment ( 5 ) ? $ oUri -> rsegment ( 5 ) : 'index' ; if ( empty ( $ sModule ) ) { $ oSession = Factory :: service ( 'Session' , 'nails/module-auth' ) ; $ oSession -> keepFlashData ( ) ; redirect ( 'admin/admin/dashboard' ) ; } elseif ( isset ( $ this -> adminControllers [ $ sModule ] -> controllers [ $ sController ] ) ) { $ aRequestController = $ this -> adminControllers [ $ sModule ] -> controllers [ $ sController ] ; $ this -> data [ 'currentRequest' ] = $ aRequestController ; $ sControllerName = $ aRequestController [ 'className' ] ; if ( is_callable ( [ $ sControllerName , $ sMethod ] ) ) { $ oController = new $ sControllerName ( ) ; $ oController -> $ sMethod ( ) ; } else { show404 ( ) ; } } else { show404 ( ) ; } }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/hunzhiwange/framework/blob/53c6571593a85e800197815532f66b1891432995/src/Leevel/Database/Ddd/Entity.php#L837-L845<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function hasMany ( string $ relatedEntityClass , string $ targetKey , string $ sourceKey ) : HasMany { $ entity = new $ relatedEntityClass ( ) ; $ this -> validateRelationField ( $ entity , $ targetKey ) ; $ this -> validateRelationField ( $ this , $ sourceKey ) ; return new HasMany ( $ entity , $ this , $ targetKey , $ sourceKey ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/shumkov/rediska/blob/220afbfc4095e90aa050a5dfc00ce7413147ce45/library/Rediska/Key/List.php#L130-L133<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function insertBefore ( $ referenceValue , $ value ) { return $ this -> _getRediskaOn ( ) -> insertToListBefore ( $ this -> getName ( ) , $ referenceValue , $ value ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/api-platform/schema-generator/blob/7aa2d23018541f14cbc46e27d540d6ab79344c5b/src/CardinalitiesExtractor.php#L73-L104<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>private function extractForProperty ( \ EasyRdf_Resource $ property ) : string { $ localName = $ property -> localName ( ) ; $ fromGoodRelations = $ this -> goodRelationsBridge -> extractCardinality ( $ localName ) ; if ( false !== $ fromGoodRelations ) { return $ fromGoodRelations ; } $ comment = $ property -> get ( 'rdfs:comment' ) -> getValue ( ) ; if ( // http://schema.org/acceptedOffer, http://schema.org/acceptedPaymentMethod, http://schema.org/exerciseType preg_match ( '/\(s\)/' , $ comment ) || // http://schema.org/follows preg_match ( '/^The most generic uni-directional social relation./' , $ comment ) || preg_match ( '/one or more/i' , $ comment ) ) { return self :: CARDINALITY_0_N ; } if ( preg_match ( '/^is/' , $ localName ) || preg_match ( '/^The /' , $ comment ) ) { return self :: CARDINALITY_0_1 ; } return self :: CARDINALITY_UNKNOWN ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/pickles2/px-fw-2.x/blob/e055d2709276ea02b48d9cda16c6e51402ad70fc/px-files/_sys/php/processors/autoindex.php#L26-L35<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public static function exec ( $ px ) { $ autoindex = new self ( $ px ) ; //  autoindex  if ( strlen ( $ autoindex -> func_data_memos ) ) { $ px -> bowl ( ) -> each ( array ( $ autoindex , 'apply_autoindex' ) ) ; } return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/tastyigniter/flame/blob/3c922ba1c02b3c14ad4adf91c2f37498045fa92a/src/Pagic/Concerns/HasEvents.php#L130-L167<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function bootNicerEvents ( ) { $ class = get_called_class ( ) ; if ( isset ( static :: $ eventsBooted [ $ class ] ) ) { return ; } $ radicals = [ 'creat' , 'sav' , 'updat' , 'delet' , 'retriev' ] ; $ hooks = [ 'before' => 'ing' , 'after' => 'ed' ] ; foreach ( $ radicals as $ radical ) { foreach ( $ hooks as $ hook => $ event ) { $ eventMethod = $ radical . $ event ; // saving / saved $ method = $ hook . ucfirst ( $ radical ) ; // beforeSave / afterSave if ( $ radical != 'fetch' ) $ method .= 'e' ; self :: $ eventMethod ( function ( $ model ) use ( $ method ) { $ model -> fireEvent ( 'model.' . $ method ) ; if ( $ model -> methodExists ( $ method ) ) return $ model -> $ method ( ) ; } ) ; } } /*          * Hook to boot events          */ static :: registerModelEvent ( 'booted' , function ( $ model ) { $ model -> fireEvent ( 'model.afterBoot' ) ; if ( $ model -> methodExists ( 'afterBoot' ) ) return $ model -> afterBoot ( ) ; } ) ; static :: $ eventsBooted [ $ class ] = TRUE ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/ddvphp/ddv-util/blob/6d6532b8769f94eb657b9579d8476f6639a34c54/src/DdvUtil/Laravel/EloquentBuilder.php#L27-L38<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function firstHump ( $ columns = array ( '*' ) , $ isColumnsAutoHumpToUnderline = true ) { if ( $ isColumnsAutoHumpToUnderline ) { foreach ( $ columns as $ index => $ key ) { $ columns [ $ index ] = Conversion :: humpToUnderline ( $ key ) ; } } $ res = $ this -> first ( $ columns ) ; if ( $ res instanceof EloquentModel ) { $ res -> toHump ( ) ; } return $ res ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/silverstripe/silverstripe-activedirectory/blob/ffdbe06b6cda42aeab1a1fd1c287b517811efab3/code/services/LDAPService.php#L138-L173<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function authenticate ( $ username , $ password ) { $ result = $ this -> gateway -> authenticate ( $ username , $ password ) ; $ messages = $ result -> getMessages ( ) ; // all messages beyond the first one are for debugging and // not suitable to display to the user. foreach ( $ messages as $ i => $ message ) { if ( $ i > 0 ) { SS_Log :: log ( str_replace ( "\n" , "\n  " , $ message ) , SS_Log :: DEBUG ) ; } } $ message = $ messages [ 0 ] ; // first message is user readable, suitable for showing on login form // show better errors than the defaults for various status codes returned by LDAP if ( ! empty ( $ messages [ 1 ] ) && strpos ( $ messages [ 1 ] , 'NT_STATUS_ACCOUNT_LOCKED_OUT' ) !== false ) { $ message = _t ( 'LDAPService.ACCOUNTLOCKEDOUT' , 'Your account has been temporarily locked because of too many failed login attempts. ' . 'Please try again later.' ) ; } if ( ! empty ( $ messages [ 1 ] ) && strpos ( $ messages [ 1 ] , 'NT_STATUS_LOGON_FAILURE' ) !== false ) { $ message = _t ( 'LDAPService.INVALIDCREDENTIALS' , 'The provided details don\'t seem to be correct. Please try again.' ) ; } return [ 'success' => $ result -> getCode ( ) === 1 , 'identity' => $ result -> getIdentity ( ) , 'message' => $ message ] ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/rezakho/khayyam/blob/ed149aed1292f869176cf3310ba7ca2e5f319226/src/Khayyam/Khayyam.php#L1103-L1108<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function min ( Carbon $ dt = null ) { $ dt = ( $ dt === null ) ? static :: now ( $ this -> tz ) : $ dt ; return $ this -> lt ( $ dt ) ? $ this : $ dt ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/zumba/swivel/blob/e9d0a2b345bf4fbaa4ceeca8b0b27b1dab6e6a21/src/Map.php#L220-L230<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function reduceToBitmask ( $ list ) { $ this -> logger -> debug ( 'Swivel - reducing to bitmask.' , compact ( 'list' ) ) ; return ! is_array ( $ list ) ? $ list : array_reduce ( $ list , function ( $ mask , $ index ) { if ( ( int ) $ index == 0 ) { return $ mask ; } return $ mask | ( 1 << ( $ index - 1 ) ) ; } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/polyfractal/sherlock/blob/24ca42c9a60fdc93552f52ea39cb121ec13e9b4e/src/Sherlock/common/tmp/RollingCurl/RollingCurl.php#L413-L421<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function addOptions ( $ options ) { if ( ! is_array ( $ options ) ) { throw new \ InvalidArgumentException ( "options must be an array" ) ; } $ this -> options = $ options + $ this -> options ; return $ this ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/valkyrjaio/valkyrja/blob/3b4ad998d96c3ab08e36a11c76ce8d9d48759ffe/src/Valkyrja/Path/NativePathParser.php#L312-L316<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>protected function getParamReplacement ( string $ key , array $ params ) : string { return config ( ) [ 'app' ] [ 'pathRegexMap' ] [ $ params [ 2 ] [ $ key ] ] ?? '(' . ( $ params [ 2 ] [ $ key ] ? : $ params [ 1 ] [ $ key ] ) . ')' ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/louislivi/SMProxy/blob/6100521c49b618f4c1d64bd57eefdfb14ca66209/src/SMProxyServer.php#L67-L130<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function onReceive ( \ swoole_server $ server , int $ fd , int $ reactor_id , string $ data ) { self :: go ( function ( ) use ( $ server , $ fd , $ reactor_id , $ data ) { if ( ! isset ( $ this -> source [ $ fd ] -> auth ) ) { throw new SMProxyException ( 'Must be connected before sending data!' ) ; } if ( ! isset ( $ this -> halfPack [ $ fd ] ) ) { $ this -> halfPack [ $ fd ] = '' ; } if ( $ this -> source [ $ fd ] -> auth ) { $ headerLength = 4 ; } else { $ headerLength = 3 ; } $ packages = packageSplit ( $ data , $ this -> source [ $ fd ] -> auth ? : false , $ headerLength , false , $ this -> halfPack [ $ fd ] ) ; foreach ( $ packages as $ package ) { $ data = $ package ; self :: go ( function ( ) use ( $ server , $ fd , $ reactor_id , $ data ) { $ bin = ( new MySqlPacketDecoder ( ) ) -> decode ( $ data ) ; if ( ! $ this -> source [ $ fd ] -> auth ) { $ this -> auth ( $ bin , $ server , $ fd ) ; } else { $ this -> query ( $ bin , $ data , $ fd ) ; if ( isset ( $ this -> connectReadState [ $ fd ] ) && true === $ this -> connectReadState [ $ fd ] ) { $ model = 'read' ; } else { $ model = 'write' ; } $ key = $ this -> compareModel ( $ model , $ server , $ fd ) ; if ( $ data ) { if ( isset ( $ this -> mysqlClient [ $ fd ] [ $ key ] ) ) { $ this -> mysqlClient [ $ fd ] [ $ key ] -> send ( $ data ) ; } else { $ client = MySQLPool :: fetch ( $ key , $ server , $ fd ) ; $ result = $ client -> send ( $ data ) ; if ( $ result ) { $ this -> mysqlClient [ $ fd ] [ $ key ] = $ client ; } } } //预处理语句id记录 if ( isset ( $ this -> mysqlClient [ $ fd ] [ $ key ] ) ) { $ clientId = spl_object_hash ( $ this -> mysqlClient [ $ fd ] [ $ key ] ) ; switch ( $ bin -> data [ 4 ] ) { case MysqlPacket :: $ COM_STMT_PREPARE : if ( isset ( $ this -> stmtId [ $ clientId ] ) ) { $ this -> stmtId [ $ clientId ] ++ ; } else { $ this -> stmtId [ $ clientId ] = 1 ; } $ this -> stmtPrepare [ $ clientId ] [ $ this -> stmtId [ $ clientId ] ] = $ this -> stmtId [ $ clientId ] ; break ; case MySQLPacket :: $ COM_STMT_CLOSE : $ closeStmtId = getPackageLength ( $ data , 5 , 4 ) - 4 ; unset ( $ this -> stmtPrepare [ $ clientId ] [ $ closeStmtId ] ) ; break ; } unset ( $ clientId ) ; } } } ) ; } } ) ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/consolibyte/quickbooks-php/blob/3df0d35e2fc04c1fe04c63dbdb3c11a501c305a1/QuickBooks/Driver.php#L1539-L1557<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>final protected function _callHook ( $ hook , $ ticket , & $ err , $ hook_data ) { $ user = '' ; if ( $ ticket ) { $ user = ( string ) $ this -> _authResolve ( $ ticket ) ; } // Call the hook QuickBooks_Callbacks :: callHook ( $ this , $ this -> _hooks , $ hook , null , $ user , $ ticket , $ err , $ hook_data , null , __FILE__ , __LINE__ ) ; if ( $ err ) { // Log errors reporting by hooks $ this -> errorLog ( $ ticket , QUICKBOOKS_ERROR_HOOK , $ err ) ; } return true ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/praxigento/mobi_mod_accounting/blob/87ebe278cb3f89387ee6c88a1ee902b4dd7fe68f/Repo/Dao/Account.php#L97-L106<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function getAssetTypeId ( $ accountId ) { $ result = null ; /** @var Entity $entity */ $ entity = $ this -> getById ( $ accountId ) ; if ( $ entity ) { $ result = $ entity -> getAssetTypeId ( ) ; } return $ result ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/neos/imagine/blob/1d1c4d974e5d7d7d088ff9b99e6f97d0b4fb5b90/Classes/ImagineFactory.php#L44-L65<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function create ( $ className = 'Imagine' ) { $ this -> configureDriverSpecificSettings ( ) ; $ className = 'Imagine\\' . $ this -> settings [ 'driver' ] . '\\' . $ className ; $ arguments = array_slice ( func_get_args ( ) , 1 ) ; switch ( count ( $ arguments ) ) { case 0 : $ object = new $ className ( ) ; break ; case 1 : $ object = new $ className ( $ arguments [ 0 ] ) ; break ; case 2 : $ object = new $ className ( $ arguments [ 0 ] , $ arguments [ 1 ] ) ; break ; case 3 : $ object = new $ className ( $ arguments [ 0 ] , $ arguments [ 1 ] , $ arguments [ 2 ] ) ; break ; case 4 : $ object = new $ className ( $ arguments [ 0 ] , $ arguments [ 1 ] , $ arguments [ 2 ] , $ arguments [ 3 ] ) ; break ; case 5 : $ object = new $ className ( $ arguments [ 0 ] , $ arguments [ 1 ] , $ arguments [ 2 ] , $ arguments [ 3 ] , $ arguments [ 4 ] ) ; break ; case 6 : $ object = new $ className ( $ arguments [ 0 ] , $ arguments [ 1 ] , $ arguments [ 2 ] , $ arguments [ 3 ] , $ arguments [ 4 ] , $ arguments [ 5 ] ) ; break ; default : $ class = new \ ReflectionClass ( $ className ) ; $ object = $ class -> newInstanceArgs ( $ arguments ) ; } return $ object ; }

1<CODESPLIT>https://github.com/openbizx/openbizx/blob/573dcaf9664e16b1f6f17091e4623cd9f2eb4bdc/src/Data/BizDataObj_Abstract.php#L520-L540<CODESPLIT>https://github.com/skeeks-cms/cms-shop/blob/506c7f549352c15ddf6f2b15d963df7fd555c489/src/console/controllers/FlushController.php#L26-L40<CODESPLIT>Get the property of the object . Used in expression language<CODESPLIT>public function actionPriceChanges ( $ countDay = 30 ) { if ( $ count = ShopProductPriceChange :: find ( ) -> where ( [ '<=' , 'created_at' , time ( ) - 3600 * 24 * $ countDay , ] ) -> count ( ) ) { $ this -> stdout ( "Total price changes for delete: {$count}\n" , Console :: BOLD ) ; $ totalDeleted = ShopProductPriceChange :: deleteAll ( [ '<=' , 'created_at' , time ( ) - 3600 * 24 * $ countDay ] ) ; $ this -> stdout ( "Total deleted: {$totalDeleted}\n" ) ; } else { $ this -> stdout ( "Нечего удалять\n", Console::BO L );     } }

