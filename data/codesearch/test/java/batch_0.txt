1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static ExceptionUtil instance ( ) { if ( ExceptionUtil . instance == null ) { ExceptionUtil . instance = new ExceptionUtil ( ) ; } return ExceptionUtil . instance ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-cluster/src/main/java/io/aeron/cluster/ClusterMember.java#L917-L926<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void validateMemberEndpoints ( final ClusterMember member , final String memberEndpoints ) { final ClusterMember endpointMember = ClusterMember . parseEndpoints ( Aeron . NULL_VALUE , memberEndpoints ) ; if ( ! areSameEndpoints ( member , endpointMember ) ) { throw new ClusterException ( "clusterMembers and memberEndpoints differ: " + member . endpointsDetail ( ) + " != " + memberEndpoints ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/ConfigurationUtility.java#L737-L752<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private static void addSkipCellToListInTheRegion ( final List < String > skipCellList , final CellRangeAddress caddress ) { for ( int col = caddress . getFirstColumn ( ) ; col <= caddress . getLastColumn ( ) ; col ++ ) { for ( int row = caddress . getFirstRow ( ) ; row <= caddress . getLastRow ( ) ; row ++ ) { if ( ( col == caddress . getFirstColumn ( ) ) && ( row == caddress . getFirstRow ( ) ) ) { continue ; } skipCellList . add ( CellUtility . getCellIndexNumberKey ( col , row ) ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/dschulten/hydra-java/blob/21f2ec64ed8f8294dcd7705a55477a4f85ed9d0a/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/spring/uber/AbstractUberNode.java#L88-L101<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public UberNode getFirstByRel ( String rel ) { // TODO consider less naive impl for ( UberNode node : data ) { List < String > myRels = node . getRel ( ) ; if ( myRels != null ) { for ( String myRel : myRels ) { if ( rel . equals ( myRel ) ) { return node ; } } } } return null ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/OpenImmo/src/main/jaxb/org/openestate/io/openimmo/xml/ObjectFactory.java#L3318-L3321<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ XmlElementDecl ( namespace = "" , name = "weitergabe_negativ" ) public JAXBElement < String > createWeitergabeNegativ ( String value ) { return new JAXBElement < String > ( _WeitergabeNegativ_QNAME , String . class , null , value ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/user/UserClient.java#L285-L304<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public User getUserWhereUsername ( String usernameParam ) { User userToGetInfoFor = new User ( ) ; userToGetInfoFor . setUsername ( usernameParam ) ; if ( this . serviceTicket != null ) { userToGetInfoFor . setServiceTicket ( this . serviceTicket ) ; } try { return new User ( this . postJson ( userToGetInfoFor , WS . Path . User . Version1 . getByUsername ( ) ) ) ; } // catch ( JSONException jsonExcept ) { throw new FluidClientException ( jsonExcept . getMessage ( ) , FluidClientException . ErrorCode . JSON_PARSING ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/agentsoz/jill/blob/13126fc78350465b477386132465f84cad719426/jill/src/main/java/io/github/agentsoz/jill/lang/PlanBindings.java#L153-L172<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Plan selectPlan ( PlanSelectionPolicy policy ) { Plan plan = null ; int index = 0 ; switch ( policy ) { case FIRST : case LAST : Plan [ ] plans = bindings . keySet ( ) . toArray ( new Plan [ 0 ] ) ; plan = ( policy == PlanSelectionPolicy . FIRST ) ? plans [ 0 ] : plans [ plans . length - 1 ] ; index = ( policy == PlanSelectionPolicy . FIRST ) ? 0 : plans . length - 1 ; setPlanVariables ( plan . getAgent ( ) , plan , bindings . get ( plan ) , index ) ; break ; case RANDOM : plan = selectPlanAtRandom ( ) ; break ; default : // TODO: ignore remaining polic break ; } return plan ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/httpservices/src/main/java/ucar/httpservices/HTTPMethod.java#L277-L312<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public synchronized void close ( ) { if ( closed ) return ; // recursive calls ok closed = true ; // mark as closed to prevent recursive calls if ( methodstream != null ) { try { this . methodstream . close ( ) ; // May recursr } catch ( IOException ioe ) { /*failure is ok*/ } this . methodstream = null ; } // Force release underlying connection back to the connection manager if ( this . lastresponse != null ) { if ( false ) { try { try { // Attempt to keep connection alive by consuming its remaining content EntityUtils . consume ( this . lastresponse . getEntity ( ) ) ; } finally { HttpClientUtils . closeQuietly ( this . lastresponse ) ; // Paranoia } } catch ( IOException ignore ) { /*ignore*/ } } else HttpClientUtils . closeQuietly ( this . lastresponse ) ; this . lastresponse = null ; } if ( session != null ) { session . removeMethod ( this ) ; if ( localsession ) { session . close ( ) ; session = null ; } } this . lastrequest = null ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/snakerflow/snakerflow/blob/9c8cb3148a76702f1eda22f1d113053cb44b1eff/snaker-core/src/main/java/org/snaker/engine/core/OrderService.java#L202-L217<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Order resume ( String orderId ) { HistoryOrder historyOrder = access ( ) . getHistOrder ( orderId ) ; Order order = historyOrder . undo ( ) ; access ( ) . saveOrder ( order ) ; historyOrder . setOrderState ( STATE_ACTIVE ) ; access ( ) . updateHistory ( historyOrder ) ; SnakerEngine engine = ServiceContext . getEngine ( ) ; List < HistoryTask > histTasks = access ( ) . getHistoryTasks ( null , new QueryFilter ( ) . setOrderId ( orderId ) ) ; if ( histTasks != null && ! histTasks . isEmpty ( ) ) { HistoryTask histTask = histTasks . get ( 0 ) ; engine . task ( ) . resume ( histTask . getId ( ) , histTask . getOperator ( ) ) ; } return order ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/spring-projects/spring-security/blob/98a8467e4c2ae05b3e09c67ece856944fa48ed23/oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/web/reactive/function/client/ServerOAuth2AuthorizedClientExchangeFilterFunction.java#L157-L159<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Consumer < Map < String , Object > > serverWebExchange ( ServerWebExchange serverWebExchange ) { return attributes -> attributes . put ( SERVER_WEB_EXCHANGE_ATTR_NAME , serverWebExchange ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/algolia/algoliasearch-client-android/blob/3293ba6e6116a4f6c1face2cc606bc047d6d4a3c/algoliasearch/src/main/java/com/algolia/search/saas/Searchable.java#L81-L83<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Request searchForFacetValuesAsync ( @ NonNull String facetName , @ NonNull String facetText , @ Nullable Query query , @ Nullable final RequestOptions requestOptions , @ NonNull final CompletionHandler handler ) { throw new UnsupportedOperationException ( "make sure to override searchForFacetValuesAsync for custom backend" ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/configuration/EachCommand.java#L198-L235<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ SuppressWarnings ( { "rawtypes" , "unchecked" } ) @ Override public final int buildAt ( String fullName , final ConfigBuildRef configBuildRef , final int atRow , final Map < String , Object > context , final List < RowsMapping > currentRowsMappingList ) { fullName = fullName + ":" + this . getCommandName ( ) ; Collection itemsCollection = ConfigurationUtility . transformToCollectionObject ( configBuildRef . getEngine ( ) , this . getItems ( ) , context ) ; String objClassName = this . getClassName ( ) ; if ( objClassName == null ) { objClassName = configBuildRef . getCollectionObjNameMap ( ) . get ( this . getVar ( ) ) ; } if ( configBuildRef . isAddMode ( ) && itemsCollection . isEmpty ( ) ) { // do something here to insert one empty object  try { itemsCollection . add ( Class . forName ( objClassName ) . newInstance ( ) ) ; } catch ( Exception ex ) { LOG . log ( Level . SEVERE , "canot insert empty object in itemCollections error = " + ex . getLocalizedMessage ( ) , ex ) ; return 0 ; } } int insertPosition = buildEachObjects ( fullName , configBuildRef , atRow , context , currentRowsMappingList , itemsCollection , objClassName ) ; return insertPosition - atRow ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/ejb3/src/main/java/org/jboss/as/ejb3/iiop/stub/IIOPStubCompiler.java#L353-L362<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static ClassFile compile ( Class < ? > intf , String stubClassName ) { InterfaceAnalysis interfaceAnalysis = null ; try { interfaceAnalysis = InterfaceAnalysis . getInterfaceAnalysis ( intf ) ; } catch ( RMIIIOPViolationException e ) { throw EjbLogger . ROOT_LOGGER . rmiIiopVoliation ( e . getLocalizedMessage ( ) ) ; } return makeCode ( interfaceAnalysis , DynamicIIOPStub . class , stubClassName ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/common/src/main/java/org/mobicents/slee/runtime/facilities/TraceFacilityImpl.java#L170-L173<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Level getTraceLevel ( ComponentID componentId ) throws NullPointerException , UnrecognizedComponentException , FacilityException { checkComponentID ( componentId ) ; return this . traceLevelTable . get ( componentId ) . getLevel ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/service/DateTimeCustomConverter.java#L86-L98<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private Locale getLocale ( final FacesContext context , final UIComponent component ) { String localeStr = ( String ) component . getAttributes ( ) . get ( TieConstants . COMPONENT_ATTR_LOCALE ) ; if ( localeStr == null ) { return context . getViewRoot ( ) . getLocale ( ) ; } return Locale . forLanguageTag ( localeStr ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/opendap/src/main/java/opendap/dap/BytePrimitiveVector.java#L219-L231<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void externalize ( DataOutputStream sink , int start , int stop , int stride ) throws IOException { int count = 0 ; for ( int i = start ; i <= stop ; i += stride ) { sink . writeByte ( vals [ i ] ) ; count ++ ; } // pad out to a multiple of four bytes  int modFour = count % 4 ; int pad = ( modFour != 0 ) ? ( 4 - modFour ) : 0 ; for ( int i = 0 ; i < pad ; i ++ ) sink . writeByte ( 0 ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jbundle/util/blob/5af0f2292f56f29f70cbc26d0bfa72f89ae31be0/muffinmanager/src/main/java/org/jbundle/util/muffinmanager/MuffinManager.java#L76-L86<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void init ( Object applet ) { try { m_ps = ( PersistenceService ) ServiceManager . lookup ( "javax.jnlp.PersistenceService" ) ; m_bs = ( BasicService ) ServiceManager . lookup ( "javax.jnlp.BasicService" ) ; m_strCodeBase = m_bs . getCodeBase ( ) . toString ( ) ; } catch ( UnavailableServiceException e ) { m_ps = null ; m_bs = null ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/metric/Intersection2D_I32.java#L39-L41<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static boolean intersects ( Rectangle2D_I32 a , Rectangle2D_I32 b ) { return ( a . x0 < b . x1 && a . x1 > b . x0 && a . y0 < b . y1 && a . y1 > b . y0 ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/spring-email/src/main/java/com/xiongyingqi/email/service/impl/EmailService.java#L179-L281<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private Collection < Inline > handlerInlineImages ( EmailVo emailVo , MimeMessageHelper msgHelper ) throws MessagingException { Collection < Inline > inlines = null ; if ( emailVo . getInlineImageVos ( ) != null && emailVo . getInlineImageVos ( ) . size ( ) > 0 ) { inlines = new HashSet < Inline > ( ) ; String html = emailVo . getHtml ( ) ; if ( html == null || html . trim ( ) . equals ( "" ) ) { // 如果内容空或者不是 html则直接跳过 return inlines ; } //  ------------------------------------------- 查找带数字的标记 ${数字} ------------------------------------------- Matcher matcherIndexTag = PATTERN_FIND_TAG_AND_INDEX . matcher ( html ) ; int contentIdIndex = 0 ; while ( matcherIndexTag . find ( ) ) { String htmlTag = matcherIndexTag . group ( ) ; // 查找到<img src="${1}" /> 的内容 Matcher matcherDollar = PATTERN_DOLLAR_VARIABLE_INDEX . matcher ( htmlTag ) ; if ( matcherDollar . find ( ) ) { String dollarFind = matcherDollar . group ( ) ; // 查找到${1}内容 String indexStr = dollarFind . replace ( "$" , "" ) . replace ( "{" , "" ) . replace ( "}" , "" ) . trim ( ) ; // 移除外面的$符号和大括号 int index = Integer . parseInt ( indexStr ) ; try { InlineImageVo inlineImageVo = emailVo . getInlineImageVos ( ) . get ( index ) ; File file = inlineImageVo . getFile ( ) ; String contentId = "file" + contentIdIndex ++ ; // 生成contentId //                        msgHelper.addInline(contentId, file);// 将附件内容传送给MimeMessageHelper Inline inline = new Inline ( ) ; inline . setFile ( file ) ; inline . setContentId ( contentId ) ; inlines . add ( inline ) ; htmlTag = matcherDollar . replaceAll ( "cid:" + contentId ) ; //                        System.out.println("indexStr ====== " + indexStr); //                        System.out.println("htmlTag ====== " + htmlTag); html = matcherIndexTag . replaceFirst ( htmlTag ) ; matcherIndexTag = PATTERN_FIND_TAG_AND_INDEX . matcher ( html ) ; //                        System.out.println("html ====== " + html); } catch ( Exception e ) { e . printStackTrace ( ) ; } } } //  ------------------------------------------- 查找带字母变量的标记 ${variable} ------------------------------------------- Matcher matcherTag = PATTERN_FIND_TAG . matcher ( html ) ; while ( matcherTag . find ( ) ) { String htmlTag = matcherTag . group ( ) ; // 查找到<img src="${1}" /> 的内容 Matcher matcherDollar = PATTERN_DOLLAR_VARIABLE_SELF_DEFINE . matcher ( htmlTag ) ; if ( matcherDollar . find ( ) ) { String dollarFind = matcherDollar . group ( ) ; // 查找到${1}内容 String dollarVariable = dollarFind . replace ( "$" , "" ) . replace ( "{" , "" ) . replace ( "}" , "" ) . trim ( ) ; // 移除外面的$符号和大括号 try { InlineImageVo inlineImageVo = null ; for ( InlineImageVo imageVo : emailVo . getInlineImageVos ( ) ) { if ( imageVo . getContentId ( ) != null && imageVo . getContentId ( ) . equals ( dollarVariable ) ) { inlineImageVo = imageVo ; } } if ( inlineImageVo == null ) { continue ; } File file = inlineImageVo . getFile ( ) ; //                        String contentId = "file" + contentIdIndex++; // 生成contentId //                        msgHelper.addInline(contentId, file);// 将附件内容传送给MimeMessageHelper Inline inline = new Inline ( ) ; inline . setFile ( file ) ; inline . setContentId ( inlineImageVo . getContentId ( ) ) ; inlines . add ( inline ) ; htmlTag = matcherDollar . replaceAll ( "cid:" + inlineImageVo . getContentId ( ) ) ; //                        System.out.println("htmlTag ====== " + htmlTag); html = matcherTag . replaceFirst ( htmlTag ) ; matcherTag = PATTERN_FIND_TAG . matcher ( html ) ; //                        System.out.println("html ====== " + html); } catch ( Exception e ) { e . printStackTrace ( ) ; } } } emailVo . setHtml ( html ) ; if ( inlines != null && inlines . size ( ) > 0 ) { emailVo . setHtml ( true ) ; } } return inlines ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-extensions/src/main/java/ro/isdc/wro/extensions/processor/js/EmberJsProcessor.java#L34-L38<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override protected String getArgument ( final Resource resource ) { final String name = resource == null ? "" : FilenameUtils . getBaseName ( resource . getUri ( ) ) ; return String . format ( "'%s'" , name ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/artclarke/humble-video/blob/aa349ae2d7ef74160b7074feac8d298cf90394d1/humble-video-noarch/src/main/java/io/humble/video/PixelFormat.java#L126-L128<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static PixelFormat . Type getFormat ( String name ) { return PixelFormat . Type . swigToEnum ( VideoJNI . PixelFormat_getFormat ( name ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ft/fmrc/Fmrc.java#L62-L76<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Fmrc open ( String collection , Formatter errlog ) throws IOException { if ( collection . startsWith ( MFileCollectionManager . CATALOG ) ) { CollectionManagerCatalog manager = new CollectionManagerCatalog ( collection , collection , null , errlog ) ; return new Fmrc ( manager , new FeatureCollectionConfig ( ) ) ; } else if ( collection . endsWith ( ".ncml" ) ) { NcmlCollectionReader ncmlCollection = NcmlCollectionReader . open ( collection , errlog ) ; if ( ncmlCollection == null ) return null ; Fmrc fmrc = new Fmrc ( ncmlCollection . getCollectionManager ( ) , new FeatureCollectionConfig ( ) ) ; fmrc . setNcml ( ncmlCollection . getNcmlOuter ( ) , ncmlCollection . getNcmlInner ( ) ) ; return fmrc ; } return new Fmrc ( collection , errlog ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/jmh/java/jodd/cache/TypeCacheBenchmark.java#L115-L122<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Benchmark public Object map ( ) { final FastCharBuffer sb = new FastCharBuffer ( ) ; for ( final int index : indexes ) { sb . append ( map . get ( TYPES [ index ] ) ) ; } return sb ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/undertow/src/main/java/org/wildfly/extension/undertow/security/jaspi/JASPICSecurityContext.java#L192-L198<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private Subject getAuthenticatedSubject ( ) { Subject subject = null ; org . jboss . security . SecurityContext picketBoxContext = SecurityActions . getSecurityContext ( ) ; if ( picketBoxContext != null && picketBoxContext . getSubjectInfo ( ) != null ) subject = picketBoxContext . getSubjectInfo ( ) . getAuthenticatedSubject ( ) ; return subject != null ? subject : new Subject ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/collection/LazyList.java#L48-L53<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private List < T > createImplementation ( ) { if ( delegate instanceof ArrayList == false ) return new ArrayList < T > ( delegate ) ; return delegate ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Flowable.java#L13754-L13761<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ CheckReturnValue @ NonNull @ BackpressureSupport ( BackpressureKind . ERROR ) @ SchedulerSupport ( SchedulerSupport . NONE ) public final < U > Flowable < T > sample ( Publisher < U > sampler ) { ObjectHelper . requireNonNull ( sampler , "sampler is null" ) ; return RxJavaPlugins . onAssembly ( new FlowableSamplePublisher < T > ( this , sampler , false ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/iosp/hdf4/HdfEos.java#L667-L677<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private Group findGroupNested ( Group parent , String name ) { for ( Group g : parent . getGroups ( ) ) { if ( g . getShortName ( ) . equals ( name ) ) { return g ; } } for ( Group g : parent . getGroups ( ) ) { Group result = findGroupNested ( g , name ) ; if ( result != null ) { return result ; } } return null ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/fabric8io/fabric8-maven-plugin/blob/b0e7ad860a5bbe4ab71be3d0613862a1f14a8be3/core/src/main/java/io/fabric8/maven/core/config/ProcessorConfig.java#L84-L88<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Map < String , String > getConfigMap ( String name ) { return config . containsKey ( name ) ? Collections . unmodifiableMap ( config . get ( name ) ) : Collections . < String , String > emptyMap ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ArpNetworking/logback-steno/blob/abd5c68ce7d42c39f80ffbad6d162d5fed3a346e/src/main/java/com/arpnetworking/logback/StenoEncoder.java#L210-L220<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void setRedactEnabled ( final boolean redactEnabled ) { final SimpleFilterProvider simpleFilterProvider = new SimpleFilterProvider ( ) ; if ( redactEnabled ) { simpleFilterProvider . addFilter ( RedactionFilter . REDACTION_FILTER_ID , new RedactionFilter ( ! _redactNull ) ) ; } else { simpleFilterProvider . addFilter ( RedactionFilter . REDACTION_FILTER_ID , SimpleBeanPropertyFilter . serializeAllExcept ( Collections . < String > emptySet ( ) ) ) ; } _objectMapper . setFilterProvider ( simpleFilterProvider ) ; _redactEnabled = redactEnabled ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/util/FutureHelper.java#L42-L52<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void unwrapAndThrow ( Throwable ex ) { if ( ex instanceof RuntimeException ) throw ( RuntimeException ) ex ; else if ( ex instanceof Error ) throw ( Error ) ex ; else if ( ex instanceof ExecutionException ) unwrapAndThrow ( ex . getCause ( ) ) ; else throw new UndeclaredThrowableException ( ex ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/db/tool/ODatabaseRepair.java#L131-L147<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected boolean fixLink ( final Object fieldValue ) { if ( fieldValue instanceof OIdentifiable ) { final ORID id = ( ( OIdentifiable ) fieldValue ) . getIdentity ( ) ; if ( id . getClusterId ( ) == 0 && id . getClusterPosition ( ) == 0 ) return true ; if ( id . isValid ( ) ) if ( id . isPersistent ( ) ) { final ORecord connected = ( ( OIdentifiable ) fieldValue ) . getRecord ( ) ; if ( connected == null ) return true ; } else return true ; } return false ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/time/TimeUtil.java#L102-L105<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String formatHttpDate ( final long millis ) { final Date date = new Date ( millis ) ; return HTTP_DATE_FORMAT . format ( date ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/services/src/main/java/org/mobicents/slee/container/management/jmx/ServiceManagementMBeanImpl.java#L64-L85<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void activate ( ServiceID serviceID ) throws NullPointerException , UnrecognizedServiceException , InvalidStateException , InvalidLinkNameBindingStateException , ManagementException { try { serviceManagement . activate ( serviceID ) ; } catch ( NullPointerException e ) { throw e ; } catch ( UnrecognizedServiceException e ) { throw e ; } catch ( InvalidLinkNameBindingStateException e ) { throw e ; } catch ( InvalidStateException e ) { throw e ; } catch ( Throwable e ) { throw new ManagementException ( e . getMessage ( ) , e ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/distributed-v2/src/main/java/com/orientechnologies/orient/distributed/impl/OConflictResolverDatabaseRepairer.java#L145-L161<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void enqueueRepairRecord ( final ORecordId rid ) { if ( ! active ) return ; if ( rid == null || ! rid . isPersistent ( ) ) return ; if ( rid . getClusterPosition ( ) < - 1 ) // SKIP TRANSACTIONAL RIDS return ; recordProcessed . incrementAndGet ( ) ; // ADD RECORD TO REPAIR records . put ( rid , Boolean . TRUE ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Trovit/src/main/java/org/openestate/io/trovit/TrovitUtils.java#L566-L574<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String printContentValue ( String value ) { value = StringUtils . trimToNull ( value ) ; if ( value == null ) throw new IllegalArgumentException ( "Can't print empty content value!" ) ; if ( value . length ( ) < 30 ) throw new IllegalArgumentException ( "Can't print content value '" + value + "' because it is shorter than 30 characters!" ) ; return value ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/weld/subsystem/src/main/java/org/jboss/as/weld/WeldSubsystem10Parser.java#L46-L52<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void readElement ( final XMLExtendedStreamReader reader , final List < ModelNode > list ) throws XMLStreamException { // Require no attributes or content requireNoAttributes ( reader ) ; requireNoContent ( reader ) ; list . add ( Util . createAddOperation ( PathAddress . pathAddress ( WeldExtension . PATH_SUBSYSTEM ) ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/nyla-solutions/gedi-geode/blob/3dd71d6e66e941ce350b306b70677ee95a7d9eee/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/util/GemFireInspector.java#L154-L179<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Set < String > listHosts ( JMX jmx ) { Set < ObjectName > memberObjects = jmx . searchObjectNames ( "GemFire:type=Member,member=*" ) ; if ( memberObjects == null || memberObjects . isEmpty ( ) ) { return null ; } HashSet < String > hostList = new HashSet < String > ( memberObjects . size ( ) ) ; MemberMXBean bean = null ; for ( ObjectName objectName : memberObjects ) { bean = jmx . newBean ( MemberMXBean . class , objectName ) ; try { hostList . add ( bean . getHost ( ) ) ; } catch ( UndeclaredThrowableException e ) { //will not be added } } return hostList ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/basis-technology-corp/tcl-regex-java/blob/de0d5eaccf9a61b694cb8793f234cc229c395b43/src/main/java/com/basistech/tclre/Nfa.java#L453-L462<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>void dumparcs ( State s , StringBuilder sb ) { int pos ; assert s . nouts > 0 ; /* printing arcs in reverse order is usually clearer */ pos = dumprarcs ( s . outs , s , 1 , sb ) ; if ( pos != 1 ) { //sb.append("\n"); } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/spring-projects/spring-security/blob/98a8467e4c2ae05b3e09c67ece856944fa48ed23/config/src/main/java/org/springframework/security/config/method/GlobalMethodSecurityBeanDefinitionParser.java#L325-L350<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ SuppressWarnings ( { "unchecked" , "rawtypes" } ) private String registerAccessManager ( ParserContext pc , boolean jsr250Enabled , BeanDefinition expressionVoter ) { BeanDefinitionBuilder accessMgrBuilder = BeanDefinitionBuilder . rootBeanDefinition ( AffirmativeBased . class ) ; ManagedList voters = new ManagedList ( 4 ) ; if ( expressionVoter != null ) { voters . add ( expressionVoter ) ; } voters . add ( new RootBeanDefinition ( RoleVoter . class ) ) ; voters . add ( new RootBeanDefinition ( AuthenticatedVoter . class ) ) ; if ( jsr250Enabled ) { voters . add ( new RootBeanDefinition ( Jsr250Voter . class ) ) ; } accessMgrBuilder . addConstructorArgValue ( voters ) ; BeanDefinition accessManager = accessMgrBuilder . getBeanDefinition ( ) ; String id = pc . getReaderContext ( ) . generateBeanName ( accessManager ) ; pc . registerBeanComponent ( new BeanComponentDefinition ( accessManager , id ) ) ; return id ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/awslabs/aws-hal-client-java/blob/bbbb67326f6f1ff6e583d6fa95a7768a0c60b62b/src/main/java/com/amazonaws/hal/client/ConvertingMap.java#L74-L111<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public Object get ( Object key ) { Object value = backingMap . get ( key ) ; // When a value is accessed, it's intended type can either be a // class or some other type (like a ParameterizedType). // // If the target type is a class and the value is of that type, // we return it.  If the value is not of that type, we convert // it and store the converted value (trusting it was converted // properly) back to the backing store. // // If the target type is not a class, it may be ParameterizedType // like List<T> or Map<K, V>.  We check if the value is already // a converting type and if so, we return it.  If the value is // not, we convert it and if it's now a converting type, we store // the new value in the backing store. if ( type instanceof Class ) { if ( ! ( ( Class ) type ) . isInstance ( value ) ) { value = convert ( type , value ) ; //noinspection unchecked backingMap . put ( key , value ) ; } } else { if ( ! ( value instanceof ConvertingMap ) && ! ( value instanceof ConvertingList ) ) { value = convert ( type , value ) ; if ( value instanceof ConvertingMap || value instanceof ConvertingList ) { //noinspection unchecked backingMap . put ( key , value ) ; } } } return value ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/opendap/src/main/java/opendap/servlet/www/wwwOutPut.java#L271-L295<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void writeVariableAttributes ( BaseType bt , DAS das ) { try { AttributeTable attr = das . getAttributeTable ( bt . getEncodedName ( ) ) ; if ( attr != null ) { pWrt . print ( "<textarea name=\"" + bt . getLongName ( ) . replace ( ' ' , ' ' ) + "_attr" + "\" rows=" + _attrRows + " cols=" + _attrCols + ">\n" ) ; writeAttributes ( attr ) ; pWrt . print ( "</textarea>\n\n" ) ; } } catch ( NoSuchAttributeException nsae ) { } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/catalog/CatalogManager.java#L712-L727<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Catalog getCatalog ( ) { Catalog catalog = staticCatalog ; if ( useStaticCatalog == null ) { useStaticCatalog = new Boolean ( getUseStaticCatalog ( ) ) ; } if ( catalog == null || ! useStaticCatalog . booleanValue ( ) ) { catalog = getPrivateCatalog ( ) ; if ( useStaticCatalog . booleanValue ( ) ) { staticCatalog = catalog ; } } return catalog ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/OpenImmo/src/main/jaxb/org/openestate/io/openimmo/xml/ObjectFactory.java#L2192-L2196<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ XmlElementDecl ( namespace = "" , name = "gastroflaeche" ) @ XmlJavaTypeAdapter ( Adapter2 . class ) public JAXBElement < BigDecimal > createGastroflaeche ( BigDecimal value ) { return new JAXBElement < BigDecimal > ( _Gastroflaeche_QNAME , BigDecimal . class , null , value ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/ejb3/src/main/java/org/jboss/as/ejb3/timerservice/TimerServiceImpl.java#L702-L769<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void restoreTimers ( final List < ScheduleTimer > autoTimers ) { // get the persisted timers which are considered active List < TimerImpl > restorableTimers = this . getActivePersistentTimers ( ) ; //timers are removed from the list as they are loaded final List < ScheduleTimer > newAutoTimers = new LinkedList < ScheduleTimer > ( autoTimers ) ; if ( EJB3_TIMER_LOGGER . isDebugEnabled ( ) ) { EJB3_TIMER_LOGGER . debug ( "Found " + restorableTimers . size ( ) + " active persistentTimers for timedObjectId: " + getInvoker ( ) . getTimedObjectId ( ) ) ; } // now "start" each of the restorable timer. This involves, moving the timer to an ACTIVE state // and scheduling the timer task for ( final TimerImpl activeTimer : restorableTimers ) { if ( activeTimer . isAutoTimer ( ) ) { CalendarTimer calendarTimer = ( CalendarTimer ) activeTimer ; boolean found = false ; //so we know we have an auto timer. We need to try and match it up with the auto timers. ListIterator < ScheduleTimer > it = newAutoTimers . listIterator ( ) ; while ( it . hasNext ( ) ) { ScheduleTimer timer = it . next ( ) ; final String methodName = timer . getMethod ( ) . getName ( ) ; final String [ ] params = new String [ timer . getMethod ( ) . getParameterTypes ( ) . length ] ; for ( int i = 0 ; i < timer . getMethod ( ) . getParameterTypes ( ) . length ; ++ i ) { params [ i ] = timer . getMethod ( ) . getParameterTypes ( ) [ i ] . getName ( ) ; } if ( doesTimeoutMethodMatch ( calendarTimer . getTimeoutMethod ( ) , methodName , params ) ) { //the timers have the same method. //now lets make sure the schedule is the same // and the timer does not change the persistence if ( this . doesScheduleMatch ( calendarTimer . getScheduleExpression ( ) , timer . getScheduleExpression ( ) ) && timer . getTimerConfig ( ) . isPersistent ( ) ) { it . remove ( ) ; found = true ; break ; } } } if ( ! found ) { activeTimer . setTimerState ( TimerState . CANCELED , null ) ; } else { // ensure state switch to active if was TIMEOUT in the DB // if the persistence is shared it must be ensured to not update // timers of other nodes in the cluster activeTimer . setTimerState ( TimerState . ACTIVE , null ) ; calendarTimer . handleRestorationCalculation ( ) ; } try { this . persistTimer ( activeTimer , false ) ; } catch ( Exception e ) { EJB3_TIMER_LOGGER . failedToPersistTimerOnStartup ( activeTimer , e ) ; } if ( found ) { startTimer ( activeTimer ) ; EJB3_TIMER_LOGGER . debugv ( "Started existing auto timer: {0}" , activeTimer ) ; } } else if ( ! ineligibleTimerStates . contains ( activeTimer . getState ( ) ) ) { startTimer ( activeTimer ) ; } EJB3_TIMER_LOGGER . debugv ( "Started timer: {0}" , activeTimer ) ; } for ( ScheduleTimer timer : newAutoTimers ) { this . loadAutoTimer ( timer . getScheduleExpression ( ) , timer . getTimerConfig ( ) , timer . getMethod ( ) ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/rest-assured/src/main/java/io/restassured/RestAssured.java#L515-L521<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void filters ( Filter filter , Filter ... additionalFilters ) { Validate . notNull ( filter , "Filter cannot be null" ) ; RestAssured . filters . add ( filter ) ; if ( additionalFilters != null ) { Collections . addAll ( RestAssured . filters , additionalFilters ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.kie.eclipse.navigator/src/main/java/org/kie/eclipse/navigator/view/actions/dialogs/AbstractKieRequestDialog.java#L68-L77<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override protected Control createDialogArea ( Composite parent ) { Composite parentComposite = ( Composite ) super . createDialogArea ( parent ) ; Composite composite = new Composite ( parentComposite , SWT . NONE ) ; composite . setLayoutData ( new GridData ( SWT . FILL , SWT . FILL , true , true ) ) ; composite . setLayout ( new GridLayout ( 3 , false ) ) ; composite . setFont ( parent . getFont ( ) ) ; createFields ( composite ) ; return parentComposite ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/TypeConverter.java#L373-L380<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static MultiTypeData getMultiTypeData ( Object o ) { // Convert the value to a String and return the set of types that that String can be converted to. MultiTypeData result = getMultiTypeData ( o . toString ( ) ) ; result . nativeType = OBJECT ; return result ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/groupon/Novie/blob/dc0a96652499c8abfc2b990b864a378d794a5234/novie-core/src/main/java/com/groupon/novie/internal/controllers/ApiController.java#L211-L262<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ SuppressWarnings ( "unchecked" ) private Report processRequest ( String schema , HttpServletRequest request ) throws ServiceException , InvalidParameterException , InvalidSchemaException { long begin = System . currentTimeMillis ( ) ; SchemaDefinition config = schemaRepository . getStarSchemaConfig ( schema ) ; if ( config == null ) { LOG . warn ( "Invalid endpoint \"" + schema + "\"" ) ; throw new InvalidSchemaException ( "Invalid endpoint" ) ; } Map < String , String [ ] > params = request . getParameterMap ( ) ; for ( String mandatory : MANDATORY_FIELDS ) { if ( ! params . containsKey ( mandatory ) ) { // mandatory fields are case sensitive LOG . error ( "Mandatory field \"" + mandatory + "\" missing" ) ; throw new InvalidParameterException ( "Missing mandatory field " + mandatory ) ; } } QueryParameterEnvelope queryParameterDto = new QueryParameterEnvelope ( ) ; for ( String key : params . keySet ( ) ) { if ( DOMAIN_PARAMETERS . contains ( key ) ) { String domainParameter = params . get ( key ) [ 0 ] ; final DomainParserAware systemParameter = SystemParameter . valueOf ( key ) ; systemParameter . parseValue ( domainParameter , config , queryParameterDto ) ; } else { Pair < String , String > pair = splitKey ( key ) ; if ( ! config . isValidDimension ( pair . getLeft ( ) , pair . getRight ( ) ) ) { LOG . warn ( "Invalid parameter \"" + key + "\" for endpoint \"" + schema + "\"." ) ; throw new InvalidParameterException ( "Invalid parameter " + key + " for endpoint " + schema + "" ) ; } String [ ] multiParam = request . getParameterValues ( key ) ; for ( String param : multiParam ) { queryParameterDto . addConstraints ( new HttpQueryConstraint ( config , key , param ) ) ; } } } final Report report = schemaService . generateReport ( config , queryParameterDto ) ; report . setRecords ( inMemoryPagination ( report . getRecords ( ) , queryParameterDto ) ) ; if ( LOG . isInfoEnabled ( ) ) { LOG . info ( "Query successfully processed for schema " + schema + " in " + ( System . currentTimeMillis ( ) - begin ) + "s." ) ; } return report ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/core/reflection/Reflection.java#L157-L169<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>static Context context ( ) { if ( _context != null ) { return _context ; } else { Context context = weakContext . get ( ) ; if ( context == null ) { context = new Context ( ) ; weakContext = new WeakReference <> ( context ) ; } return context ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/arnohaase/a-foundation/blob/f3eef2ca89d67775f202a4c28140230a6229291e/a-foundation-benchmark/src/main/java/com/ajjpj/afoundation/concurrent/jdk/j9new/ForkJoinPool.java#L2856-L2867<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public long getStealCount ( ) { AtomicLong sc = stealCounter ; long count = ( sc == null ) ? 0L : sc . get ( ) ; WorkQueue [ ] ws ; WorkQueue w ; if ( ( ws = workQueues ) != null ) { for ( int i = 1 ; i < ws . length ; i += 2 ) { if ( ( w = ws [ i ] ) != null ) count += w . nsteals ; } } return count ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/weld/subsystem/src/main/java/org/jboss/as/weld/WeldExtension.java#L66-L74<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void initialize ( final ExtensionContext context ) { WeldLogger . ROOT_LOGGER . debug ( "Activating Weld Extension" ) ; final SubsystemRegistration subsystem = context . registerSubsystem ( SUBSYSTEM_NAME , CURRENT_MODEL_VERSION ) ; final ManagementResourceRegistration registration = subsystem . registerSubsystemModel ( WeldResourceDefinition . INSTANCE ) ; registration . registerOperationHandler ( GenericSubsystemDescribeHandler . DEFINITION , GenericSubsystemDescribeHandler . INSTANCE ) ; subsystem . registerXMLElementWriter ( WeldSubsystem40Parser . INSTANCE ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-db/src/main/java/jodd/db/type/BigDecimalSqlType.java#L45-L48<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void set ( final PreparedStatement st , final int index , final BigDecimal value , final int dbSqlType ) throws SQLException { st . setBigDecimal ( index , value ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/IS24-XML/src/main/java/org/openestate/io/is24_xml/Is24XmlUtils.java#L182-L185<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public synchronized static JAXBContext getContext ( ) throws JAXBException { if ( JAXB == null ) initContext ( Thread . currentThread ( ) . getContextClassLoader ( ) ) ; return JAXB ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/grib/src/main/java/ucar/nc2/grib/grib1/Grib1ParamTime.java#L433-L439<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public String getTimeCoord ( ) { if ( isInterval ( ) ) { int [ ] intv = getInterval ( ) ; return intv [ 0 ] + "-" + intv [ 1 ] ; } return Integer . toString ( getForecastTime ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/struct/shapes/Polygon2D_F64.java#L101-L106<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public double getSideLength ( int index ) { Point2D_F64 a = vertexes . get ( index ) ; Point2D_F64 b = vertexes . get ( ( index + 1 ) % vertexes . size ) ; return ( double ) a . distance ( b ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/ImmoXML/src/main/jaxb/org/openestate/io/immoxml/xml/ObjectFactory.java#L2372-L2375<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ XmlElementDecl ( namespace = "http://www.immoxml.de" , name = "als_ferien" ) public JAXBElement < Boolean > createAlsFerien ( Boolean value ) { return new JAXBElement < Boolean > ( _AlsFerien_QNAME , Boolean . class , null , value ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/ReteViewer.java#L91-L98<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected void configureGraphicalViewer ( ) { super . configureGraphicalViewer ( ) ; GraphicalViewer viewer = getGraphicalViewer ( ) ; viewer . getControl ( ) . setBackground ( ColorConstants . white ) ; viewer . setEditPartFactory ( new VertexEditPartFactory ( ) ) ; viewer . setRootEditPart ( rootEditPart ) ; viewer . setKeyHandler ( new GraphicalViewerKeyHandler ( viewer ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/webservices/server-integration/src/main/java/org/jboss/as/webservices/tomcat/WebMetaDataModifier.java#L125-L129<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private String getTransportClassName ( final Deployment dep ) { String transportClassName = ( String ) dep . getProperty ( WSConstants . STACK_TRANSPORT_CLASS ) ; if ( transportClassName == null ) throw WSLogger . ROOT_LOGGER . missingDeploymentProperty ( WSConstants . STACK_TRANSPORT_CLASS ) ; return transportClassName ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4core/src/main/java/dap4/core/util/Slice.java#L279-L287<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public long getCount ( ) { assert this . first != UNDEFINED && this . stride != UNDEFINED && this . stop != UNDEFINED ; long count = ( this . stop ) - this . first ; count = ( count + this . stride - 1 ) ; count /= this . stride ; return count ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/snakerflow/snakerflow/blob/9c8cb3148a76702f1eda22f1d113053cb44b1eff/snaker-core/src/main/java/org/snaker/engine/core/TaskService.java#L440-L453<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private String [ ] getTaskActors ( TaskModel model , Execution execution ) { Object assigneeObject = null ; AssignmentHandler handler = model . getAssignmentHandlerObject ( ) ; if ( StringHelper . isNotEmpty ( model . getAssignee ( ) ) ) { assigneeObject = execution . getArgs ( ) . get ( model . getAssignee ( ) ) ; } else if ( handler != null ) { if ( handler instanceof Assignment ) { assigneeObject = ( ( Assignment ) handler ) . assign ( model , execution ) ; } else { assigneeObject = handler . assign ( execution ) ; } } return getTaskActors ( assigneeObject == null ? model . getAssignee ( ) : assigneeObject ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/unidata/geoloc/projection/AlbersEqualArea.java#L697-L705<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void main ( String [ ] args ) { AlbersEqualArea a = new AlbersEqualArea ( 23 , - 96 , 29.5 , 45.5 ) ; System . out . printf ( "name=%s%n" , a . getName ( ) ) ; System . out . println ( "ll = 35N 75W" ) ; ProjectionPoint p = a . latLonToProj ( 35 , - 75 ) ; System . out . println ( "proj point = " + p ) ; LatLonPoint ll = a . projToLatLon ( p ) ; System . out . println ( "ll = " + ll ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/activities/src/main/java/org/mobicents/slee/runtime/activity/ActivityContextImpl.java#L354-L368<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public boolean attachSbbEntity ( SbbEntityID sbbEntityId ) { boolean attached = cacheData . attachSbbEntity ( sbbEntityId ) ; if ( attached ) { if ( acReferencesHandler != null ) { acReferencesHandler . sbbeReferenceCreated ( false ) ; } } if ( logger . isTraceEnabled ( ) ) { logger . trace ( "Attachement from sbb entity " + sbbEntityId + " to AC " + getActivityContextHandle ( ) + " result: " + attached ) ; } return attached ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/image/PicturePane.java#L315-L323<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void scrollUp ( ) { // if the bottom edge of the picture is visible, do not scroll if ( ( ( sclPic . getOriginalHeight ( ) - focusPoint . y ) * sclPic . getScaleFactor ( ) ) + getSize ( ) . height / 2 > getSize ( ) . height ) { focusPoint . y = focusPoint . y + ( int ) ( getSize ( ) . height * 0.1 / sclPic . getScaleFactor ( ) ) ; repaint ( ) ; } else { Tools . log ( "Scrollup rejected because bottom of picture is already showing." ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/DDTH/ddth-cql-utils/blob/debd5d86f64fe06e43d6f0f58cb2f7f0f6a84489/src/main/java/com/github/ddth/cql/SessionManager.java#L1158-L1161<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Row executeOne ( String cql , ConsistencyLevel consistencyLevel , Map < String , Object > bindValues ) { return CqlUtils . executeOne ( getSession ( ) , cql , consistencyLevel , bindValues ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/inex/InExRules.java#L376-L379<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public boolean accept ( final V value , final R rule , final boolean include ) { return value . equals ( rule ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/gempak/AbstractGempakStationFileReader.java#L518-L536<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public String getFileType ( ) { String type = "Unknown" ; switch ( dmLabel . kftype ) { case MFSN : type = "Sounding" ; break ; case MFSF : type = "Surface" ; break ; default : } if ( ! subType . equals ( "" ) ) { type = type + " (" + subType + ")" ; } return type ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/Attribute.java#L460-L478<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void setStringValue ( String val ) { if ( val == null ) throw new IllegalArgumentException ( "Attribute value cannot be null" ) ; // get rid of trailing nul characters int len = val . length ( ) ; while ( ( len > 0 ) && ( val . charAt ( len - 1 ) == 0 ) ) len -- ; if ( len != val . length ( ) ) val = val . substring ( 0 , len ) ; this . svalue = val ; this . nelems = 1 ; this . dataType = DataType . STRING ; //values = Array.factory(String.class, new int[]{1}); //values.setObject(values.getIndex(), val); //setValues(values); }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/prolificinteractive/ParallaxPager/blob/1e76f85cf20e7cf9fa36247a3ebedd60495f057e/parallaxpager/src/main/java/com/prolificinteractive/parallaxpager/ParallaxLayoutInflater.java#L166-L196<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private View createCustomViewInternal ( View parent , View view , String name , Context context , AttributeSet attrs ) { // I by no means advise anyone to do this normally, but Google have locked down access to // the createView() method, so we never get a callback with attributes at the end of the // createViewFromTag chain (which would solve all this unnecessary rubbish). // We at the very least try to optimise this as much as possible. // We only call for customViews (As they are the ones that never go through onCreateView(...)). // We also maintain the Field reference and make it accessible which will make a pretty // significant difference to performance on Android 4.0+. // If CustomViewCreation is off skip this. if ( view == null && name . indexOf ( ' ' ) > - 1 ) { if ( mConstructorArgs == null ) { mConstructorArgs = ReflectionUtils . getField ( LayoutInflater . class , "mConstructorArgs" ) ; } final Object [ ] mConstructorArgsArr = ( Object [ ] ) ReflectionUtils . getValue ( mConstructorArgs , this ) ; final Object lastContext = mConstructorArgsArr [ 0 ] ; mConstructorArgsArr [ 0 ] = parent != null ? parent . getContext ( ) : context ; ReflectionUtils . setValue ( mConstructorArgs , this , mConstructorArgsArr ) ; try { view = createView ( name , null , attrs ) ; } catch ( ClassNotFoundException ignored ) { } finally { mConstructorArgsArr [ 0 ] = lastContext ; ReflectionUtils . setValue ( mConstructorArgs , this , mConstructorArgsArr ) ; } } return view ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/GlenKPeterson/Paguro/blob/eac0d64b2eb9496967334f635cdb270cffb2197b/src/main/java/org/organicdesign/fp/collections/PersistentVector.java#L468-L479<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private static Node doAssoc ( int level , Node node , int i , Object val ) { Node ret = new Node ( node . edit , node . array . clone ( ) ) ; if ( level == 0 ) { ret . array [ i & LOW_BITS ] = val ; } else { int subidx = ( i >>> level ) & LOW_BITS ; ret . array [ subidx ] = doAssoc ( level - NODE_LENGTH_POW_2 , ( Node ) node . array [ subidx ] , i , val ) ; } return ret ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/common/jna/ONative.java#L153-L231<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public MemoryLimitResult getMemoryLimit ( final boolean printSteps ) { //Perform several steps here: //1. Fetch physical size available on machine //2. Fetch soft limit //3. Fetch cgroup soft limit //4. Fetch cgroup hard limit //5. Return the minimal value from the list of results long memoryLimit = getPhysicalMemorySize ( ) ; boolean insideContainer = false ; if ( printSteps ) { OLogManager . instance ( ) . infoNoDb ( this , "%d B/%d MB/%d GB of physical memory were detected on machine" , memoryLimit , convertToMB ( memoryLimit ) , convertToGB ( memoryLimit ) ) ; } if ( Platform . isLinux ( ) ) { final OCLibrary . Rlimit rlimit = new OCLibrary . Rlimit ( ) ; final int result = C_LIBRARY . getrlimit ( OCLibrary . RLIMIT_AS , rlimit ) ; //no errors during the call if ( result == 0 ) { if ( printSteps ) OLogManager . instance ( ) . infoNoDb ( this , "Soft memory limit for this process is set to %d B/%d MB/%d GB" , rlimit . rlim_cur , convertToMB ( rlimit . rlim_cur ) , convertToGB ( rlimit . rlim_cur ) ) ; memoryLimit = updateMemoryLimit ( memoryLimit , rlimit . rlim_cur ) ; if ( printSteps ) OLogManager . instance ( ) . infoNoDb ( this , "Hard memory limit for this process is set to %d B/%d MB/%d GB" , rlimit . rlim_max , convertToMB ( rlimit . rlim_max ) , convertToGB ( rlimit . rlim_max ) ) ; memoryLimit = updateMemoryLimit ( memoryLimit , rlimit . rlim_max ) ; } final String memoryCGroupPath = findMemoryGCGroupPath ( ) ; if ( memoryCGroupPath != null ) { if ( printSteps ) OLogManager . instance ( ) . infoNoDb ( this , "Path to 'memory' cgroup is '%s'" , memoryCGroupPath ) ; final String memoryCGroupRoot = findMemoryGCRoot ( ) ; if ( printSteps ) OLogManager . instance ( ) . infoNoDb ( this , "Mounting path for memory cgroup controller is '%s'" , memoryCGroupRoot ) ; File memoryCGroup = new File ( memoryCGroupRoot , memoryCGroupPath ) ; if ( ! memoryCGroup . exists ( ) ) { if ( printSteps ) OLogManager . instance ( ) . infoNoDb ( this , "Can not find '%s' path for memory cgroup, it is supposed that " + "process is running in container, will try to read root '%s' memory cgroup data" , memoryCGroup , memoryCGroupRoot ) ; memoryCGroup = new File ( memoryCGroupRoot ) ; insideContainer = true ; } final long softMemoryLimit = fetchCGroupSoftMemoryLimit ( memoryCGroup , printSteps ) ; memoryLimit = updateMemoryLimit ( memoryLimit , softMemoryLimit ) ; final long hardMemoryLimit = fetchCGroupHardMemoryLimit ( memoryCGroup , printSteps ) ; memoryLimit = updateMemoryLimit ( memoryLimit , hardMemoryLimit ) ; } } if ( printSteps ) { if ( memoryLimit > 0 ) OLogManager . instance ( ) . infoNoDb ( this , "Detected memory limit for current process is %d B/%d MB/%d GB" , memoryLimit , convertToMB ( memoryLimit ) , convertToGB ( memoryLimit ) ) ; else OLogManager . instance ( ) . infoNoDb ( this , "Memory limit for current process is not set" ) ; } if ( memoryLimit <= 0 ) return null ; return new MemoryLimitResult ( memoryLimit , insideContainer ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/alipay/sofa-bolt/blob/0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046/src/main/java/com/alipay/remoting/Connection.java#L299-L323<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void close ( ) { if ( closed . compareAndSet ( false , true ) ) { try { if ( this . getChannel ( ) != null ) { this . getChannel ( ) . close ( ) . addListener ( new ChannelFutureListener ( ) { @ Override public void operationComplete ( ChannelFuture future ) throws Exception { if ( logger . isInfoEnabled ( ) ) { logger . info ( "Close the connection to remote address={}, result={}, cause={}" , RemotingUtil . parseRemoteAddress ( Connection . this . getChannel ( ) ) , future . isSuccess ( ) , future . cause ( ) ) ; } } } ) ; } } catch ( Exception e ) { logger . warn ( "Exception caught when closing connection {}" , RemotingUtil . parseRemoteAddress ( Connection . this . getChannel ( ) ) , e ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/nyla-solutions/gedi-geode/blob/3dd71d6e66e941ce350b306b70677ee95a7d9eee/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/qa/GUnit.java#L77-L96<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void startCluster ( ) throws Exception { IO . mkdir ( Paths . get ( runtimeDir + "/locator" ) . toFile ( ) ) ; IO . mkdir ( Paths . get ( runtimeDir + "/server" ) . toFile ( ) ) ; Shell shell = new Shell ( ) ; ProcessInfo pi = shell . execute ( location + "/gfsh" , "-e" , "start locator  --dir=runtime/locator --bind-address=localhost --J=-D=gemfire.jmx-manager-hostname-for-clients=localhost --J=-D=gemfire.jmx-manager-bind-address=localhost --J=-D=gemfire.http-service-bind-address=localhost --http-service-port=0  --name=locator  --port=10334" ) ; System . out . println ( pi . exitValue ) ; System . out . println ( pi . output ) ; System . out . println ( pi . error ) ; pi = shell . execute ( location + "/gfsh" , "-e" , "start server --name=server --dir=" + runtimeDir + "/server --bind-address=localhost  --server-bind-address=localhost --locators=localhost[10334]" ) ; System . out . println ( pi . exitValue ) ; System . out . println ( "OUTPUT:" + pi . output ) ; System . out . println ( "ERROR:" + pi . error ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/sialcasa/mvvmFX/blob/240566a358a8e01c94c0bbb99228140a69690d02/mvvmfx/src/main/java/de/saxsys/mvvmfx/internal/viewloader/ViewLoaderReflectionUtils.java#L454-L472<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>static void addSceneLifecycleHooks ( ViewModel viewModel , ObservableBooleanValue viewInSceneProperty ) { if ( viewModel != null ) { if ( viewModel instanceof SceneLifecycle ) { SceneLifecycle lifecycleViewModel = ( SceneLifecycle ) viewModel ; PreventGarbageCollectionStore . getInstance ( ) . put ( viewInSceneProperty ) ; viewInSceneProperty . addListener ( ( observable , oldValue , newValue ) -> { if ( newValue ) { lifecycleViewModel . onViewAdded ( ) ; } else { lifecycleViewModel . onViewRemoved ( ) ; PreventGarbageCollectionStore . getInstance ( ) . remove ( viewInSceneProperty ) ; } } ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/TimedCachePolicy.java#L432-L436<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public TimedEntry peekEntry ( Object key ) { TimedEntry entry = ( TimedEntry ) entryMap . get ( key ) ; return entry ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/jdbc-protolib/src/main/java/com/streamsets/pipeline/lib/jdbc/multithread/JdbcBaseRunnable.java#L465-L473<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private static void initTableEvalContextForProduce ( TableJdbcELEvalContext tableJdbcELEvalContext , TableRuntimeContext tableContext , Calendar calendar ) { tableJdbcELEvalContext . setCalendar ( calendar ) ; tableJdbcELEvalContext . setTime ( calendar . getTime ( ) ) ; tableJdbcELEvalContext . setTableContext ( tableContext ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/alipay/sofa-bolt/blob/0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046/src/main/java/com/alipay/remoting/rpc/RpcResponseResolver.java#L52-L68<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Object resolveResponseObject ( ResponseCommand responseCommand , String addr ) throws RemotingException { preProcess ( responseCommand , addr ) ; if ( responseCommand . getResponseStatus ( ) == ResponseStatus . SUCCESS ) { return toResponseObject ( responseCommand ) ; } else { String msg = String . format ( "Rpc invocation exception: %s, the address is %s, id=%s" , responseCommand . getResponseStatus ( ) , addr , responseCommand . getId ( ) ) ; logger . warn ( msg ) ; if ( responseCommand . getCause ( ) != null ) { throw new InvokeException ( msg , responseCommand . getCause ( ) ) ; } else { throw new InvokeException ( msg + ", please check the server log for more." ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.eclipse.equinox.jsp.jasper/src/org/eclipse/equinox/internal/jsp/jasper/JSPContextFinder.java#L80-L87<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private boolean checkClassLoader ( ClassLoader classloader ) { if ( classloader == null || classloader == getParent ( ) ) return false ; for ( ClassLoader parent = classloader . getParent ( ) ; parent != null ; parent = parent . getParent ( ) ) if ( parent == this ) return false ; return true ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/media/crop/CropImageActivity.java#L194-L229<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private Bitmap getBitmap ( String path ) { Uri uri = MediaUtils . createFileUri ( path ) ; InputStream in = null ; try { in = getContentResolver ( ) . openInputStream ( uri ) ; // Decode image size BitmapFactory . Options options = new BitmapFactory . Options ( ) ; options . inJustDecodeBounds = true ; BitmapFactory . decodeStream ( in , null , options ) ; Helper . closeQuietly ( in ) ; // compute scale factor to ensure that the image is smaller than // IMAGE_MAX_SIZE float maxSize = Math . max ( options . outWidth , options . outHeight ) ; float scale = maxSize > IMAGE_MAX_SIZE ? maxSize / IMAGE_MAX_SIZE : 1.0f ; while ( ( maxSize / scale ) > 8 ) { try { return getBitmap ( in , uri , scale ) ; } catch ( Throwable e ) { Log . w ( getClass ( ) . getSimpleName ( ) , "bitmap could not be created (probably out of memory), decreasing size and retrying" ) ; scale *= 2f ; } } } catch ( IOException e ) { Log . e ( getClass ( ) . getSimpleName ( ) , "file " + path + " not found" ) ; } catch ( Exception e ) { Log . e ( getClass ( ) . getSimpleName ( ) , "error while opening image" , e ) ; } finally { Helper . closeQuietly ( in ) ; } return null ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jkuhnert/ognl/blob/53d51a30c8c299b750dede779d05cb84beee73c3/src/main/java/ognl/OgnlContext.java#L306-L312<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Class getCurrentType ( ) { if ( _typeStack . isEmpty ( ) ) return null ; return ( Class ) _typeStack . get ( _typeStack . size ( ) - 1 ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/deliveredtechnologies/rulebook/blob/253738f6bc1e7804bb8649863e969956075a19ae/rulebook-core/src/main/java/com/deliveredtechnologies/rulebook/StandardRule.java#L147-L155<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override @ SuppressWarnings ( "unchecked" ) public Rule < T > given ( Fact < T > ... facts ) { for ( Fact f : facts ) { _facts . put ( f . getName ( ) , f ) ; } return this ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-lagarto/src/main/java/jodd/lagarto/dom/Node.java#L405-L411<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public String getAttribute ( final String name ) { Attribute attribute = getAttributeInstance ( name ) ; if ( attribute == null ) { return null ; } return attribute . getValue ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.eclipse.packagedrone.repo.channel/src/org/eclipse/packagedrone/repo/channel/servlet/AbstractChannelServiceServlet.java#L121-L131<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected boolean authenticate ( final By by , final HttpServletRequest request , final HttpServletResponse response ) throws IOException { if ( isAuthenticated ( by , request ) ) { return true ; } BasicAuthentication . request ( response , "channel" , "Please authenticate" ) ; return false ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/remote/src/main/java/org/mobicents/slee/connector/local/SleeConnectionServiceImpl.java#L191-L208<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public EventTypeID getEventTypeID ( String name , String vendor , String version ) throws UnrecognizedEventException , ResourceException { if ( sleeContainer == null ) { throw new ResourceException ( "Connection is in closed state" ) ; } if ( sleeContainer . getSleeState ( ) != SleeState . RUNNING ) { throw new ResourceException ( "Container is not in running state." ) ; } EventTypeID eventTypeID = new EventTypeID ( name , vendor , version ) ; EventTypeComponent eventTypeComponent = sleeContainer . getComponentRepository ( ) . getComponentByID ( eventTypeID ) ; if ( eventTypeComponent == null ) { throw new UnrecognizedEventException ( "event type not installed" ) ; } else { return eventTypeID ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/messaging-activemq/src/main/java/org/wildfly/extension/messaging/activemq/deployment/JMSConnectionFactoryDefinitionInjectionSource.java#L396-L404<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>static boolean targetsExternalPooledConnectionFactory ( String resourceAdapter , ServiceRegistry serviceRegistry ) { // if the resourceAdapter is not defined, the default behaviour is to create a pooled-connection-factory. if ( resourceAdapter == null || resourceAdapter . isEmpty ( ) ) { return false ; } //let's look into the external-pooled-connection-factory ServiceName pcfName = JMSServices . getPooledConnectionFactoryBaseServiceName ( MessagingServices . getActiveMQServiceName ( "" ) ) . append ( resourceAdapter ) ; return serviceRegistry . getServiceNames ( ) . contains ( pcfName ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ieb/sparsemapcontent/blob/0570fdf868adbbf7734790cbc09fe66480e5f2dc/extensions/memory/src/main/java/uk/co/tfd/sm/memory/ehcache/CacheImpl.java#L87-L93<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public V get ( String key ) { Element e = cache . get ( key ) ; if ( e == null ) { return stats ( null ) ; } return stats ( e . getObjectValue ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dataset/conv/CF1Convention.java#L77-L89<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String getZisPositive ( String zaxisName , String vertCoordUnits ) { if ( vertCoordUnits == null ) return CF . POSITIVE_UP ; if ( vertCoordUnits . isEmpty ( ) ) return CF . POSITIVE_UP ; if ( SimpleUnit . isCompatible ( "millibar" , vertCoordUnits ) ) return CF . POSITIVE_DOWN ; if ( SimpleUnit . isCompatible ( "m" , vertCoordUnits ) ) return CF . POSITIVE_UP ; // dunno - make it up  return CF . POSITIVE_UP ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/common_helper/src/main/java/com/xiongyingqi/util/EntityHelper.java#L306-L313<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Method getMethodOfBeanByField ( Class < ? > clazz , Field field ) { Method method = prefixMethodOfBeanByField ( "get" , clazz , field ) ; if ( method == null && ( field . getType ( ) . equals ( Boolean . class ) || field . getType ( ) . equals ( boolean . class ) ) ) { method = prefixMethodOfBeanByField ( "is" , clazz , field ) ; } return method ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RuedigerMoeller/fast-serialization/blob/59f8f800b79479d0b9c80901cf55903d9b027f26/src/main/java/org/nustaq/serialization/coders/FSTStreamEncoder.java#L329-L340<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>void writeStringAsc ( String name ) throws IOException { int len = name . length ( ) ; if ( len >= 127 ) { throw new RuntimeException ( "Ascii String too long" ) ; } writeFByte ( ( byte ) len ) ; buffout . ensureFree ( len ) ; if ( ascStringCache == null || ascStringCache . length < len ) ascStringCache = new byte [ len ] ; name . getBytes ( 0 , len , ascStringCache , 0 ) ; writeRawBytes ( ascStringCache , 0 , len ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/artclarke/humble-video/blob/aa349ae2d7ef74160b7074feac8d298cf90394d1/humble-video-noarch/src/main/java/io/humble/video/MuxerStream.java#L139-L142<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Coder getCoder ( ) { long cPtr = VideoJNI . MuxerStream_getCoder ( swigCPtr , this ) ; return ( cPtr == 0 ) ? null : new Coder ( cPtr , false ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/braintree/braintree_android/blob/07b32e6fad73f9fb8432971b0e79fc8c94b11873/Braintree/src/main/java/com/braintreepayments/api/DataCollector.java#L40-L42<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void collectDeviceData ( BraintreeFragment fragment , BraintreeResponseListener < String > listener ) { collectDeviceData ( fragment , null , listener ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/artclarke/humble-video/blob/aa349ae2d7ef74160b7074feac8d298cf90394d1/humble-video-noarch/src/main/java/io/humble/video/customio/HumbleIO.java#L396-L400<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String map ( InputStream in ) { return map ( generateUniqueName ( in ) , in , null , DEFAULT_UNMAP_URL_ON_OPEN , DEFAULT_CLOSE_STREAM_ON_CLOSE ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/grib/src/main/java/ucar/nc2/grib/collection/Grib.java#L27-L32<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void setDebugFlags ( ucar . nc2 . util . DebugFlags debugFlag ) { debugRead = debugFlag . isSet ( "Grib/showRead" ) ; debugIndexOnly = debugFlag . isSet ( "Grib/indexOnly" ) ; debugIndexOnlyShow = debugFlag . isSet ( "Grib/indexOnlyShow" ) ; debugGbxIndexOnly = debugFlag . isSet ( "Grib/debugGbxIndexOnly" ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/util/prefs/ui/LayoutM.java#L139-L162<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void layoutContainer ( Container target ) { synchronized ( target . getTreeLock ( ) ) { if ( debug ) System . out . println ( name + " layoutContainer " ) ; // first layout any nested LayoutM components // it seems that generally Swing laysout from outer to inner ??? int n = target . getComponentCount ( ) ; for ( int i = 0 ; i < n ; i ++ ) { Component comp = target . getComponent ( i ) ; if ( comp instanceof Container ) { Container c = ( Container ) comp ; LayoutManager m = c . getLayout ( ) ; if ( m instanceof LayoutM ) m . layoutContainer ( c ) ; } } // now layout this container reset ( target ) ; globalBounds = new Rectangle ( 0 , 0 , 0 , 0 ) ; while ( ! layoutPass ( target ) ) target . setPreferredSize ( globalBounds . getSize ( ) ) ; // ?? } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/distributed-v2/src/main/java/com/orientechnologies/orient/distributed/impl/ODistributedAbstractPlugin.java#L624-L633<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public int getAvailableNodes ( final Collection < String > iNodes , final String databaseName ) { for ( Iterator < String > it = iNodes . iterator ( ) ; it . hasNext ( ) ; ) { final String node = it . next ( ) ; if ( ! isNodeAvailable ( node , databaseName ) ) it . remove ( ) ; } return iNodes . size ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/proxetta/ProxettaFactory.java#L316-L323<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Object newInstance ( ) { Class type = define ( ) ; try { return ClassUtil . newInstance ( type ) ; } catch ( Exception ex ) { throw new ProxettaException ( "Invalid Proxetta class" , ex ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-api/src/main/java/com/fluidbpm/program/api/vo/form/Form.java#L623-L627<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ XmlTransient public Long getFieldValueAsLong ( String fieldNameParam ) { Field fieldWithName = this . getField ( fieldNameParam ) ; return ( fieldWithName == null ) ? null : fieldWithName . getFieldValueAsLong ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-madvoc/src/main/java/jodd/madvoc/config/Targets.java#L74-L88<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void forEachTargetAndIn ( final MadvocScope scope , final BiConsumer < Target , InjectionPoint > biConsumer ) { for ( final Target target : targets ) { final ScopeData scopeData = target . scopeData ( ) ; if ( scopeData . in ( ) == null ) { continue ; } for ( final InjectionPoint in : scopeData . in ( ) ) { if ( in . scope ( ) != scope ) { continue ; } biConsumer . accept ( target , in ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/opendap/src/main/java/opendap/dap/DAP2Exception.java#L305-L318<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public final boolean parse ( InputStream stream ) { Dap2Parser parser = new Dap2Parser ( new DefaultFactory ( ) ) ; String text ; try { text = DConnect2 . captureStream ( stream ) ; if ( parser . errparse ( text , this ) != Dap2Parser . DapERR ) return false ; } catch ( ParseException pe ) { this . initCause ( pe ) ; } catch ( IOException pe ) { this . initCause ( pe ) ; } return true ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/messages/MessageUtils.java#L87-L105<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String createLabelWithNameSpace ( final String namespace , final String fieldName , final ResourceBundle bundle ) { String label ; try { try { /** Look for name-space + . + fieldName, e.g., Employee.firstName. */ label = bundle . getString ( namespace + ' ' + fieldName ) ; } catch ( MissingResourceException mre ) { /** Look for fieldName only, e.g., firstName. */ label = bundle . getString ( fieldName ) ; } } catch ( MissingResourceException mre ) { /** If you can't find the label, generate it thus, "firstName" becomes "First Name".*/ label = generateLabelValue ( fieldName ) ; } return label ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/attachment/AttachmentClient.java#L83-L97<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Attachment getAttachmentById ( Long attachmentIdParam , boolean includeAttachmentDataParam ) { Attachment attachment = new Attachment ( attachmentIdParam ) ; if ( this . serviceTicket != null ) { attachment . setServiceTicket ( this . serviceTicket ) ; } return new Attachment ( this . postJson ( attachment , WS . Path . Attachment . Version1 . getById ( includeAttachmentDataParam ) ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/opendap/src/main/java/opendap/dap/Alias.java#L359-L367<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public DAPNode cloneDAG ( CloneMap map ) throws CloneNotSupportedException { Alias a = ( Alias ) super . cloneDAG ( map ) ; a . aliasedToAttributeNamed = this . aliasedToAttributeNamed ; a . targetAttribute = ( Attribute ) cloneDAG ( map , this . targetAttribute ) ; a . targetVariable = ( BaseType ) cloneDAG ( map , this . targetVariable ) ; return a ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/mcidas/McIDASLookup.java#L174-L204<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public final boolean isVerticalCoordinate ( GridRecord gr ) { if ( cust != null ) { return cust . isVerticalCoordinate ( gr . getLevelType1 ( ) ) ; } int type = gr . getLevelType1 ( ) ; if ( ( ( McIDASGridRecord ) gr ) . hasGribInfo ( ) ) { if ( type == 20 ) { return true ; } if ( type == 100 ) { return true ; } if ( type == 101 ) { return true ; } if ( ( type >= 103 ) && ( type <= 128 ) ) { return true ; } if ( type == 141 ) { return true ; } if ( type == 160 ) { return true ; } } else if ( getLevelUnit ( gr ) . equals ( "hPa" ) ) { return true ; } return false ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/workplacesystems/utilsj/blob/1b638be51997eafac4d368c14f62a16624a08d3e/src/main/java/com/workplacesystems/utilsj/collections/TransactionalHashMap.java#L959-L963<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>void createEntry ( int hash , K key , V value , int bucketIndex ) { table [ bucketIndex ] = new Entry < K , V > ( hash , key , value , table [ bucketIndex ] ) ; size ++ ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/markhobson/microbrowser/blob/732d2dadc1c3eaad688de31dc09f360df580faf1/tck/src/main/java/org/hobsoft/microbrowser/tck/LinkTck.java#L73-L85<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Test public void getHrefWhenAnchorAndAbsoluteHrefReturnsUrl ( ) throws MalformedURLException { server ( ) . enqueue ( new MockResponse ( ) . setBody ( "<html><body>" + "<a rel='r' href='http://x/'/>" + "</body></html>" ) ) ; URL actual = newBrowser ( ) . get ( url ( server ( ) ) ) . getLink ( "r" ) . getHref ( ) ; assertThat ( "link href" , actual , is ( new URL ( "http://x/" ) ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Completable.java#L640-L652<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ CheckReturnValue @ NonNull @ SchedulerSupport ( SchedulerSupport . NONE ) public static Completable mergeArray ( CompletableSource ... sources ) { ObjectHelper . requireNonNull ( sources , "sources is null" ) ; if ( sources . length == 0 ) { return complete ( ) ; } else if ( sources . length == 1 ) { return wrap ( sources [ 0 ] ) ; } return RxJavaPlugins . onAssembly ( new CompletableMergeArray ( sources ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/rest-assured/src/main/java/io/restassured/RestAssured.java#L1166-L1168<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Response request ( String method , URL url ) { return given ( ) . request ( method , url ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/asm7/Attribute.java#L167-L175<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>final int getAttributeCount ( ) { int count = 0 ; Attribute attribute = this ; while ( attribute != null ) { count += 1 ; attribute = attribute . nextAttribute ; } return count ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rackerlabs/blueflood/blob/4722a3449b1a7f8e88889ea8c340c6f24396b5b0/blueflood-elasticsearch/src/main/java/com/rackspacecloud/blueflood/io/AbstractElasticIO.java#L232-L241<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private String getMetricNamesFromES ( final String tenant , final String regexMetricName ) throws IOException { String metricNamesFromElasticsearchQueryString = String . format ( queryToFetchMetricNamesFromElasticsearchFormat , tenant , regexMetricName , regexMetricName ) ; return elasticsearchRestHelper . fetchDocuments ( ELASTICSEARCH_INDEX_NAME_READ , ELASTICSEARCH_DOCUMENT_TYPE , tenant , metricNamesFromElasticsearchQueryString ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/propertyeditor/PropertyEditors.java#L219-L228<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void registerEditor ( final String typeName , final String editorTypeName ) throws ClassNotFoundException { ClassLoader loader = Thread . currentThread ( ) . getContextClassLoader ( ) ; Class < ? > type = loader . loadClass ( typeName ) ; Class < ? > editorType = loader . loadClass ( editorTypeName ) ; PropertyEditorManager . registerEditor ( type , editorType ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/sqlutil/SQLUtilWebSocketGetDescendantsClient.java#L138-L229<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public List < FormListing > getDescendantsSynchronized ( Form ... formToGetDescendantsForParam ) { if ( formToGetDescendantsForParam == null || formToGetDescendantsForParam . length == 0 ) { return null ; } //Start a new request... String uniqueReqId = this . initNewRequest ( ) ; //Mass data fetch... int numberOfSentForms = 0 ; if ( this . massFetch ) { FormListing listingToSend = new FormListing ( ) ; List < Form > listOfValidForms = new ArrayList ( ) ; for ( Form formToSend : formToGetDescendantsForParam ) { if ( formToSend == null ) { throw new FluidClientException ( "Cannot provide 'null' for Form." , FluidClientException . ErrorCode . ILLEGAL_STATE_ERROR ) ; } listOfValidForms . add ( new Form ( formToSend . getId ( ) ) ) ; } listingToSend . setEcho ( UUID . randomUUID ( ) . toString ( ) ) ; listingToSend . setListing ( listOfValidForms ) ; //Send the actual message... this . sendMessage ( listingToSend , uniqueReqId ) ; numberOfSentForms ++ ; } else { //Single... //Send all the messages... for ( Form formToSend : formToGetDescendantsForParam ) { this . setEchoIfNotSet ( formToSend ) ; //Send the actual message... this . sendMessage ( formToSend , uniqueReqId ) ; numberOfSentForms ++ ; } } try { List < FormListing > returnValue = this . getHandler ( uniqueReqId ) . getCF ( ) . get ( this . getTimeoutInMillis ( ) , TimeUnit . MILLISECONDS ) ; //Connection was closed.. this is a problem.... if ( this . getHandler ( uniqueReqId ) . isConnectionClosed ( ) ) { throw new FluidClientException ( "SQLUtil-WebSocket-GetDescendants: " + "The connection was closed by the server prior to the response received." , FluidClientException . ErrorCode . IO_ERROR ) ; } return returnValue ; } catch ( InterruptedException exceptParam ) { //Interrupted... throw new FluidClientException ( "SQLUtil-WebSocket-Interrupted-GetDescendants: " + exceptParam . getMessage ( ) , exceptParam , FluidClientException . ErrorCode . STATEMENT_EXECUTION_ERROR ) ; } catch ( ExecutionException executeProblem ) { //Error on the web-socket... Throwable cause = executeProblem . getCause ( ) ; //Fluid client exception... if ( cause instanceof FluidClientException ) { throw ( FluidClientException ) cause ; } else { throw new FluidClientException ( "SQLUtil-WebSocket-GetDescendants: " + cause . getMessage ( ) , cause , FluidClientException . ErrorCode . STATEMENT_EXECUTION_ERROR ) ; } } catch ( TimeoutException eParam ) { //Timeout... String errMessage = this . getExceptionMessageVerbose ( "SQLUtil-WebSocket-GetDescendants" , uniqueReqId , numberOfSentForms ) ; throw new FluidClientException ( errMessage , FluidClientException . ErrorCode . IO_ERROR ) ; } finally { this . removeHandler ( uniqueReqId ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ft/point/standard/TableAnalyzer.java#L746-L752<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>static void doit ( String filename ) throws IOException { System . out . println ( filename ) ; NetcdfDataset ncd = ucar . nc2 . dataset . NetcdfDataset . openDataset ( filename ) ; TableAnalyzer csa = TableAnalyzer . factory ( null , null , ncd ) ; csa . getDetailInfo ( new Formatter ( System . out ) ) ; System . out . println ( "%n-----------------" ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/DeployableUnitImpl.java#L264-L274<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Set < SleeComponent > getDeployableUnitComponents ( ) { Set < SleeComponent > result = new HashSet < SleeComponent > ( ) ; result . addAll ( getEventTypeComponents ( ) . values ( ) ) ; result . addAll ( getLibraryComponents ( ) . values ( ) ) ; result . addAll ( getProfileSpecificationComponents ( ) . values ( ) ) ; result . addAll ( getResourceAdaptorComponents ( ) . values ( ) ) ; result . addAll ( getResourceAdaptorTypeComponents ( ) . values ( ) ) ; result . addAll ( getSbbComponents ( ) . values ( ) ) ; result . addAll ( getServiceComponents ( ) . values ( ) ) ; return Collections . unmodifiableSet ( result ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/dir-spooler-protolib/src/main/java/com/streamsets/pipeline/lib/dirspooler/SpoolDirRunnable.java#L550-L554<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void initGaugeIfNeeded ( ) { gaugeMap . put ( THREAD_NAME , Thread . currentThread ( ) . getName ( ) ) ; gaugeMap . put ( STATUS , "" ) ; gaugeMap . put ( CURRENT_FILE , "" ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-mail/src/main/java/jodd/mail/ReceiveMailSession.java#L261-L265<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public ReceivedEmail [ ] receiveEmailAndMarkSeen ( final EmailFilter filter ) { final Flags flagsToSet = new Flags ( ) ; flagsToSet . add ( Flags . Flag . SEEN ) ; return receiveMessages ( filter , flagsToSet , null , false , null ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-decora/src/main/java/jodd/decora/parser/DecoraParser.java#L68-L72<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected void parsePage ( final char [ ] pageContent , final DecoraTag [ ] decoraTags ) { LagartoParser lagartoParser = new LagartoParser ( pageContent ) ; PageRegionExtractor writer = new PageRegionExtractor ( decoraTags ) ; lagartoParser . parse ( writer ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/opendap/src/main/java/opendap/servlet/AbstractServlet.java#L1021-L1074<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void doGetASC ( ReqState rs ) throws Exception { if ( Debug . isSet ( "showResponse" ) ) { log . debug ( "doGetASC For: " + rs . getDataSet ( ) ) ; } GuardedDataset ds = null ; try { ds = getDataset ( rs ) ; if ( ds == null ) return ; rs . getResponse ( ) . setHeader ( "XDODS-Server" , getServerVersion ( ) ) ; rs . getResponse ( ) . setContentType ( "text/plain" ) ; rs . getResponse ( ) . setHeader ( "Content-Description" , "dods-ascii" ) ; if ( debug ) log . debug ( "Sending OPeNDAP ASCII Data For: " + rs + "  CE: '" + rs . getConstraintExpression ( ) + "'" ) ; ServerDDS dds = ds . getDDS ( ) ; //dds = url.getData(ce, null, new asciiFactory());  previous way // Instantiate the CEEvaluator and parse the constraint expression CEEvaluator ce = new CEEvaluator ( dds ) ; // i think this makes the dds constrained ce . parseConstraint ( rs ) ; PrintWriter pw = new PrintWriter ( new OutputStreamWriter ( rs . getResponse ( ) . getOutputStream ( ) , Util . UTF8 ) ) ; dds . printConstrained ( pw ) ; pw . println ( "---------------------------------------------" ) ; AsciiWriter writer = new AsciiWriter ( ) ; // could be static writer . toASCII ( pw , dds , ds ) ; // the way that getDAP2Data works // DataOutputStream sink = new DataOutputStream(bOut); // ce.send(myDDS.getName(), sink, ds); pw . flush ( ) ; rs . getResponse ( ) . setStatus ( HttpServletResponse . SC_OK ) ; } catch ( ParseException pe ) { parseExceptionHandler ( pe , rs . getResponse ( ) ) ; } catch ( DAP2Exception de ) { dap2ExceptionHandler ( de , rs . getResponse ( ) ) ; } catch ( Throwable t ) { anyExceptionHandler ( t , rs ) ; } finally { // release lock if needed if ( ds != null ) ds . release ( ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/algolia/algoliasearch-client-android/blob/3293ba6e6116a4f6c1face2cc606bc047d6d4a3c/algoliasearch/src/main/java/com/algolia/search/saas/AbstractQuery.java#L215-L230<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void parseFrom ( @ NonNull String queryParameters ) { try { String [ ] parameters = queryParameters . split ( "&" ) ; for ( String parameter : parameters ) { String [ ] components = parameter . split ( "=" ) ; if ( components . length < 1 || components . length > 2 ) continue ; // ignore invalid values String name = URLDecoder . decode ( components [ 0 ] , "UTF-8" ) ; String value = components . length >= 2 ? URLDecoder . decode ( components [ 1 ] , "UTF-8" ) : null ; set ( name , value ) ; } // for each parameter } catch ( UnsupportedEncodingException e ) { // Should never happen since UTF-8 is one of the default encodings. throw new RuntimeException ( e ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Netflix/hollow/blob/43ca100034a01050fb764170bd32b085ac9a3c22/hollow/src/main/java/com/netflix/hollow/core/memory/SegmentedByteArray.java#L176-L193<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void orderedCopy ( SegmentedByteArray src , long srcPos , long destPos , long length ) { int segmentLength = 1 << log2OfSegmentSize ; int currentSegment = ( int ) ( destPos >>> log2OfSegmentSize ) ; int segmentStartPos = ( int ) ( destPos & bitmask ) ; int remainingBytesInSegment = segmentLength - segmentStartPos ; while ( length > 0 ) { int bytesToCopyFromSegment = ( int ) Math . min ( remainingBytesInSegment , length ) ; ensureCapacity ( currentSegment ) ; int copiedBytes = src . orderedCopy ( srcPos , segments [ currentSegment ] , segmentStartPos , bytesToCopyFromSegment ) ; srcPos += copiedBytes ; length -= copiedBytes ; segmentStartPos = 0 ; remainingBytesInSegment = segmentLength ; currentSegment ++ ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/abmargb/jamppa/blob/76f253239923df40904c462e3b88e7278b36b282/src/main/java/org/jivesoftware/smack/util/PacketParserUtils.java#L128-L156<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static PacketExtension parsePacketExtension ( String elementName , String namespace , XmlPullParser parser ) throws Exception { DefaultPacketExtension extension = new DefaultPacketExtension ( elementName , namespace ) ; boolean done = false ; while ( ! done ) { int eventType = parser . next ( ) ; if ( eventType == XmlPullParser . START_TAG ) { String name = parser . getName ( ) ; // If an empty element, set the value with the empty string. if ( parser . isEmptyElementTag ( ) ) { extension . setValue ( name , "" ) ; } // Otherwise, get the the element text. else { eventType = parser . next ( ) ; if ( eventType == XmlPullParser . TEXT ) { String value = parser . getText ( ) ; extension . setValue ( name , value ) ; } } } else if ( eventType == XmlPullParser . END_TAG ) { if ( parser . getName ( ) . equals ( elementName ) ) { done = true ; } } } return extension ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/logic/src/main/com/thesett/aima/logic/fol/OpSymbol.java#L231-L235<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public boolean isInfix ( ) { return ( ( associativity == Associativity . XFY ) || ( associativity == Associativity . YFX ) || ( associativity == Associativity . XFX ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/liveontologies/elk-reasoner/blob/cfbe5279a57e0433d45c1676c7658ddb6e29b9eb/elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/indexing/classes/DifferentialIndex.java#L477-L483<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void clearDeletedRules ( ) { for ( CachedIndexedObject < ? > deletion : todoDeletions_ ) { LOGGER_ . trace ( "{}: comitting removal" , deletion ) ; super . remove ( deletion ) ; } initDeletions ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/dom/PropFind.java#L149-L160<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void setIsAllProp ( boolean isAllProp ) { Element child = getFirstChild ( root , childNames ) ; boolean isAlreadyAllProp = isDAVElement ( child , "allprop" ) ; //$NON-NLS-1$ if ( isAllProp ) { if ( ! isAlreadyAllProp ) { if ( child != null ) root . removeChild ( child ) ; appendChild ( root , "allprop" ) ; //$NON-NLS-1$ } } else if ( isAlreadyAllProp ) root . removeChild ( child ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/JBossEntityResolver.java#L292-L353<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public InputSource resolveEntity ( String publicId , String systemId ) throws SAXException , IOException { entityResolved . set ( Boolean . FALSE ) ; // nothing to resolve if ( publicId == null && systemId == null ) return null ; boolean trace = log . isTraceEnabled ( ) ; boolean resolvePublicIdFirst = true ; if ( publicId != null && systemId != null ) { String registeredSystemId = null ; if ( localEntities != null ) registeredSystemId = ( String ) localEntities . get ( publicId ) ; if ( registeredSystemId == null ) registeredSystemId = ( String ) entities . get ( publicId ) ; if ( registeredSystemId != null && ! registeredSystemId . equals ( systemId ) ) { resolvePublicIdFirst = false ; if ( trace ) log . trace ( "systemId argument '" + systemId + "' for publicId '" + publicId + "' is different from the registered systemId '" + registeredSystemId + "', resolution will be based on the argument" ) ; } } InputSource inputSource = null ; if ( resolvePublicIdFirst ) { // Look for a registered publicID inputSource = resolvePublicID ( publicId , trace ) ; } if ( inputSource == null ) { // Try to resolve the systemID from the registry inputSource = resolveSystemID ( systemId , trace ) ; } if ( inputSource == null ) { // Try to resolve the systemID as a classpath reference under dtd or schema inputSource = resolveClasspathName ( systemId , trace ) ; } if ( inputSource == null ) { // Try to resolve the systemID as a absolute URL inputSource = resolveSystemIDasURL ( systemId , trace ) ; } entityResolved . set ( new Boolean ( inputSource != null ) ) ; if ( inputSource == null ) log . debug ( "Cannot resolve [publicID=" + publicId + ",systemID=" + systemId + "]" ) ; return inputSource ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/glytching/junit-extensions/blob/ad687cb3a5db38db3ae1a0a7129fe94a7494b0e1/src/main/java/io/github/glytching/junit/extension/random/RandomBeansExtension.java#L186-L193<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public Object resolveParameter ( ParameterContext parameterContext , ExtensionContext extensionContext ) throws ParameterResolutionException { return resolve ( parameterContext . getParameter ( ) . getType ( ) , parameterContext . getParameter ( ) . getAnnotation ( Random . class ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/factory/Broadcast.java#L249-L257<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static INDArray amin ( INDArray x , INDArray y , INDArray z , int ... dimensions ) { if ( dimensions == null ) { Preconditions . checkArgument ( Arrays . equals ( x . shape ( ) , y . shape ( ) ) , getFormattedShapeErrorMessageXy ( x , y ) ) ; Preconditions . checkArgument ( Arrays . equals ( x . shape ( ) , z . shape ( ) ) , getFormattedShapeErrorMessageXResult ( x , z ) ) ; return Nd4j . getExecutioner ( ) . execAndReturn ( new AMin ( x , y , z , x . length ( ) ) ) . z ( ) ; } return Nd4j . getExecutioner ( ) . execAndReturn ( new BroadcastAMin ( x , y , z , dimensions ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.tukani.xz/src/org/tukaani/xz/lz/LZEncoder.java#L355-L364<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public int getMatchLen ( int forward , int dist , int lenLimit ) { int curPos = readPos + forward ; int backPos = curPos - dist - 1 ; int len = 0 ; while ( len < lenLimit && buf [ curPos + len ] == buf [ backPos + len ] ) ++ len ; return len ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/GlenKPeterson/Paguro/blob/eac0d64b2eb9496967334f635cdb270cffb2197b/src/main/java/org/organicdesign/fp/collections/Cowry.java#L207-L234<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static < T > Tuple2 < T [ ] , T [ ] > splitArray ( T [ ] orig , int splitIndex ) { //, Class<T> tClass) { //        if (splitIndex < 1) { //            throw new IllegalArgumentException("Called split when splitIndex < 1"); //        } //        if (splitIndex > orig.length - 1) { //            throw new IllegalArgumentException("Called split when splitIndex > orig.length - 1"); //        } // NOTE: // I sort of suspect that generic 2D array creation where the two arrays are of a different // length is not possible in Java, or if it is, it's not likely to be much faster than // what we have here.  I'd just copy the Arrays.copyOf code everywhere this function is used // if you want more speed. //        int rightLength = orig.length - splitIndex; //        Class<T> tClass = (Class<T>) orig.getClass().getComponentType(); //        Tuple2<T[],T[]> split = Tuple2.of((T[]) Array.newInstance(tClass, splitIndex), //                                          (T[]) Array.newInstance(tClass, rightLength)); // // Tuple2<T[],T[]> split = return Tuple2 . of ( Arrays . copyOf ( orig , splitIndex ) , Arrays . copyOfRange ( orig , splitIndex , orig . length ) ) ; //        // original array, offset, newArray, offset, length //        System.arraycopy(orig, 0, split._1(), 0, splitIndex); // //        System.arraycopy(orig, splitIndex, split._2(), 0, rightLength); //        return split; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/ReteViewer.java#L119-L197<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public ReteGraph loadReteModel ( IProgressMonitor monitor , String contents ) throws Throwable { if ( relayoutRequired == false ) { return diagram ; } ReteGraph newDiagram = new ReteGraph ( ) ; try { monitor . beginTask ( "Loading RETE Tree" , 100 ) ; monitor . subTask ( "Loading Rule Base" ) ; InternalKnowledgeBase ruleBase = null ; try { IResource resource = drlEditor . getResource ( ) ; ClassLoader newLoader = DroolsBuilder . class . getClassLoader ( ) ; if ( resource . getProject ( ) . getNature ( "org.eclipse.jdt.core.javanature" ) != null ) { IJavaProject project = JavaCore . create ( resource . getProject ( ) ) ; newLoader = ProjectClassLoader . getProjectClassLoader ( project ) ; } DRLInfo drlInfo = DroolsEclipsePlugin . getDefault ( ) . parseResource ( drlEditor , true , true ) ; if ( drlInfo == null ) { throw new Exception ( "Could not find DRL info" ) ; } if ( drlInfo . getBuilderErrors ( ) . length > 0 ) { throw new Exception ( drlInfo . getBuilderErrors ( ) . length + " build errors" ) ; } if ( drlInfo . getParserErrors ( ) . size ( ) > 0 ) { throw new Exception ( drlInfo . getParserErrors ( ) . size ( ) + " parser errors" ) ; } InternalKnowledgePackage pkg = drlInfo . getPackage ( ) ; RuleBaseConfiguration config = new RuleBaseConfiguration ( ) ; config . setClassLoader ( newLoader ) ; ruleBase = KnowledgeBaseFactory . newKnowledgeBase ( config ) ; if ( pkg != null ) { ruleBase . addPackage ( pkg ) ; } } catch ( Throwable t ) { DroolsEclipsePlugin . log ( t ) ; throw new Exception ( MSG_PARSE_ERROR + " " + t . getMessage ( ) ) ; } monitor . worked ( 50 ) ; if ( monitor . isCanceled ( ) ) { throw new InterruptedException ( ) ; } monitor . subTask ( "Building RETE Tree" ) ; final ReteooVisitor visitor = new ReteooVisitor ( newDiagram ) ; visitor . visitInternalKnowledgeBase ( ruleBase ) ; monitor . worked ( 30 ) ; if ( monitor . isCanceled ( ) ) { throw new InterruptedException ( ) ; } monitor . subTask ( "Calculating RETE Tree Layout" ) ; BaseVertex rootVertex = visitor . getRootVertex ( ) ; RowList rowList = ReteooLayoutFactory . calculateReteRows ( rootVertex ) ; ReteooLayoutFactory . layoutRowList ( newDiagram , rowList ) ; zeroBaseDiagram ( newDiagram ) ; monitor . worked ( 20 ) ; if ( monitor . isCanceled ( ) ) { throw new InterruptedException ( ) ; } monitor . done ( ) ; } catch ( Throwable t ) { if ( ! ( t instanceof InterruptedException ) ) { DroolsEclipsePlugin . log ( t ) ; } throw t ; } relayoutRequired = false ; return newDiagram ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/http/client/Message.java#L76-L83<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public long getContentLength ( ) { long contentLength = context . getContentLength ( ) ; if ( contentLength != - 1 ) return contentLength ; if ( is instanceof ByteArrayInputStream ) return ( ( ByteArrayInputStream ) is ) . available ( ) ; return - 1 ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/completion/DSLTree.java#L327-L367<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Node [ ] getChildren ( String obj , String text ) { Node thenode = this . rootCond . getChild ( obj ) ; if ( thenode == null ) { for ( Node child : this . rootCond . getChildren ( ) ) { String tokenText = child . getToken ( ) ; if ( tokenText != null ) { int index = tokenText . indexOf ( "{" ) ; if ( index != - 1 ) { String substring = tokenText . substring ( 0 , index ) ; if ( obj != null && obj . startsWith ( substring ) ) { thenode = child ; } } } } } if ( thenode != null && text . length ( ) > 0 ) { StringTokenizer tokenz = new StringTokenizer ( text ) ; this . last = this . current ; while ( tokenz . hasMoreTokens ( ) ) { String strtk = tokenz . nextToken ( ) ; Node ch = thenode . getChild ( strtk ) ; // if a child is found, we set thenode to the child Node if ( ch != null ) { thenode = ch ; } else { break ; } } if ( thenode != this . rootCond ) { this . current = thenode ; } } if ( thenode == null ) { return null ; // thenode = this.rootCond; } Collection < Node > children = thenode . getChildren ( ) ; Node [ ] nchild = new Node [ children . size ( ) ] ; return children . toArray ( nchild ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/net/sourceforge/jaad/aac/sbr/SBR.java#L571-L640<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private int sbr_single_channel_element ( IBitStream ld ) throws AACException { int result ; if ( ld . readBool ( ) ) { ld . readBits ( 4 ) ; //reserved } if ( ( result = sbr_grid ( ld , 0 ) ) > 0 ) return result ; sbr_dtdf ( ld , 0 ) ; invf_mode ( ld , 0 ) ; sbr_envelope ( ld , 0 ) ; sbr_noise ( ld , 0 ) ; NoiseEnvelope . dequantChannel ( this , 0 ) ; Arrays . fill ( bs_add_harmonic [ 0 ] , 0 , 64 , 0 ) ; Arrays . fill ( bs_add_harmonic [ 1 ] , 0 , 64 , 0 ) ; this . bs_add_harmonic_flag [ 0 ] = ld . readBool ( ) ; if ( this . bs_add_harmonic_flag [ 0 ] ) sinusoidal_coding ( ld , 0 ) ; this . bs_extended_data = ld . readBool ( ) ; if ( this . bs_extended_data ) { int nr_bits_left ; int ps_ext_read = 0 ; int cnt = ld . readBits ( 4 ) ; if ( cnt == 15 ) { cnt += ld . readBits ( 8 ) ; } nr_bits_left = 8 * cnt ; while ( nr_bits_left > 7 ) { int tmp_nr_bits = 0 ; this . bs_extension_id = ld . readBits ( 2 ) ; tmp_nr_bits += 2 ; /* allow only 1 PS extension element per extension data */ if ( this . bs_extension_id == EXTENSION_ID_PS ) { if ( ps_ext_read == 0 ) { ps_ext_read = 1 ; } else { /* to be safe make it 3, will switch to "default" 						 * in sbr_extension() */ this . bs_extension_id = 3 ; } } tmp_nr_bits += sbr_extension ( ld , this . bs_extension_id , nr_bits_left ) ; /* check if the data read is bigger than the number of available bits */ if ( tmp_nr_bits > nr_bits_left ) return 1 ; nr_bits_left -= tmp_nr_bits ; } /* Corrigendum */ if ( nr_bits_left > 0 ) { ld . readBits ( nr_bits_left ) ; } } return 0 ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/httpservices/src/main/java/ucar/httpservices/HTTPAuthUtil.java#L109-L114<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>static AuthScope uriToAuthScope ( URI uri ) { assert ( uri != null ) ; return new AuthScope ( uri . getHost ( ) , uri . getPort ( ) , AuthScope . ANY_REALM , uri . getScheme ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/distributed/src/main/java/com/orientechnologies/orient/server/distributed/sql/OCommandExecutorSQLHAStatus.java#L72-L108<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Object execute ( final Map < Object , Object > iArgs ) { final ODatabaseDocumentInternal database = getDatabase ( ) ; database . checkSecurity ( ORule . ResourceGeneric . SERVER , "status" , ORole . PERMISSION_READ ) ; if ( ! ( database instanceof ODatabaseDocumentDistributed ) ) { throw new OCommandExecutionException ( "OrientDB is not started in distributed mode" ) ; } final OHazelcastPlugin dManager = ( OHazelcastPlugin ) ( ( ODatabaseDocumentDistributed ) database ) . getDistributedManager ( ) ; if ( dManager == null || ! dManager . isEnabled ( ) ) throw new OCommandExecutionException ( "OrientDB is not started in distributed mode" ) ; final String databaseName = database . getName ( ) ; final ODistributedConfiguration cfg = dManager . getDatabaseConfiguration ( databaseName ) ; if ( parsedStatement . outputText ) { final StringBuilder output = new StringBuilder ( ) ; if ( parsedStatement . servers ) output . append ( ODistributedOutput . formatServerStatus ( dManager , dManager . getClusterConfiguration ( ) ) ) ; if ( parsedStatement . db ) output . append ( ODistributedOutput . formatClusterTable ( dManager , databaseName , cfg , dManager . getTotalNodes ( databaseName ) ) ) ; if ( parsedStatement . latency ) output . append ( ODistributedOutput . formatLatency ( dManager , dManager . getClusterConfiguration ( ) ) ) ; if ( parsedStatement . messages ) output . append ( ODistributedOutput . formatMessages ( dManager , dManager . getClusterConfiguration ( ) ) ) ; return output . toString ( ) ; } final ODocument output = new ODocument ( ) ; if ( parsedStatement . servers ) output . field ( "servers" , dManager . getClusterConfiguration ( ) , OType . EMBEDDED ) ; if ( parsedStatement . db ) output . field ( "database" , cfg . getDocument ( ) , OType . EMBEDDED ) ; return output ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/struct/GeoTuple4D_F64.java#L156-L161<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void timesIP ( double scalar ) { x *= scalar ; y *= scalar ; z *= scalar ; w *= scalar ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/struts-tools/src/main/com/thesett/common/webapp/tags/DebugTag.java#L361-L377<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private String toHTMLTable ( String propName , Map values ) { StringBuffer tableSB = new StringBuffer ( ) ; tableSB . append ( "<tr class=\"debug\"><th class=\"debug\">" ) . append ( propName ) . append ( "</th></tr>" ) ; for ( Iterator it = values . keySet ( ) . iterator ( ) ; it . hasNext ( ) ; ) { Object o = it . next ( ) ; String key = ( String ) o ; tableSB . append ( "<tr class=\"debug\"><td class=\"debug\">" ) . append ( key ) . append ( "</td><td>" ) . append ( values . get ( key ) ) . append ( "</td></tr>" ) ; } return tableSB . toString ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/slumberdb/slumberdb-service-model/src/main/java/org/boon/slumberdb/stores/log/CollectorManager.java#L253-L269<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void queueEmptyMaybeFlush ( ) { if ( PERIODIC_FORCE_FLUSH ) { long currentTime = time . get ( ) ; /* Try not to flush more than once every x times per mili-seconds time period. */ if ( ( currentTime - lastFlushTime ) > FORCE_FLUSH_AFTER_THIS_MANY_MILI_SECONDS ) { /* If the writer had things to flush, and we flushed then                 increment the number of flushes.                  */ if ( writer . syncToDisk ( ) ) { //could take 100 ms to 1 second this . numberOfFlushesTotal . incrementAndGet ( ) ; } /* We update the flush time no matter what. */ lastFlushTime = time . get ( ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/snakerflow/snakerflow/blob/9c8cb3148a76702f1eda22f1d113053cb44b1eff/snaker-core/src/main/java/org/snaker/engine/access/dialect/OracleDialect.java#L28-L38<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public String getPageSql ( String sql , Page < ? > page ) { StringBuffer pageSql = new StringBuffer ( sql . length ( ) + 100 ) ; pageSql . append ( "select * from ( select row_.*, rownum rownum_ from ( " ) ; pageSql . append ( sql ) ; long start = ( page . getPageNo ( ) - 1 ) * page . getPageSize ( ) + 1 ; pageSql . append ( " ) row_ where rownum < " ) ; pageSql . append ( start + page . getPageSize ( ) ) ; pageSql . append ( " ) where rownum_ >= " ) ; pageSql . append ( start ) ; return pageSql . toString ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/fabric8io/fabric8-maven-plugin/blob/b0e7ad860a5bbe4ab71be3d0613862a1f14a8be3/core/src/main/java/io/fabric8/maven/core/util/MapUtil.java#L69-L73<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void putAllIfNotNull ( Map < String , String > ret , Map < String , String > toPut ) { if ( toPut != null ) { ret . putAll ( toPut ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/util/SwingUtils.java#L216-L221<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static < T extends JComponent > T getDescendantOfClass ( Class < T > clazz , Container container , String property , Object value , boolean nested ) throws IllegalArgumentException { List < T > list = getDescendantsOfClass ( clazz , container , nested ) ; return getComponentFromList ( clazz , list , property , value ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Observable.java#L14021-L14026<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ CheckReturnValue @ SchedulerSupport ( SchedulerSupport . NONE ) public final < U extends Collection < ? super T > > Single < U > toList ( Callable < U > collectionSupplier ) { ObjectHelper . requireNonNull ( collectionSupplier , "collectionSupplier is null" ) ; return RxJavaPlugins . onAssembly ( new ObservableToListSingle < T , U > ( this , collectionSupplier ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/index/OIndexAbstract.java#L411-L478<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public long rebuild ( final OProgressListener iProgressListener ) { long documentIndexed ; final boolean intentInstalled = getDatabase ( ) . declareIntent ( new OIntentMassiveInsert ( ) ) ; acquireExclusiveLock ( ) ; try { // DO NOT REORDER 2 assignments bellow // see #getRebuildVersion() rebuilding = true ; rebuildVersion . incrementAndGet ( ) ; try { if ( indexId >= 0 ) { storage . deleteIndexEngine ( indexId ) ; } } catch ( Exception e ) { OLogManager . instance ( ) . error ( this , "Error during index '%s' delete" , e , name ) ; } removeValuesContainer ( ) ; indexId = storage . addIndexEngine ( name , algorithm , type , indexDefinition , determineValueSerializer ( ) , isAutomatic ( ) , true , version , 1 , this instanceof OIndexMultiValues , getEngineProperties ( ) , clustersToIndex , metadata ) ; apiVersion = OAbstractPaginatedStorage . extractEngineAPIVersion ( indexId ) ; onIndexEngineChange ( indexId ) ; } catch ( Exception e ) { try { if ( indexId >= 0 ) storage . clearIndex ( indexId ) ; } catch ( Exception e2 ) { OLogManager . instance ( ) . error ( this , "Error during index rebuild" , e2 ) ; // IGNORE EXCEPTION: IF THE REBUILD WAS LAUNCHED IN CASE OF RID INVALID CLEAR ALWAYS GOES IN ERROR } rebuilding = false ; throw OException . wrapException ( new OIndexException ( "Error on rebuilding the index for clusters: " + clustersToIndex ) , e ) ; } finally { releaseExclusiveLock ( ) ; } acquireSharedLock ( ) ; try { documentIndexed = fillIndex ( iProgressListener , true ) ; } catch ( final Exception e ) { OLogManager . instance ( ) . error ( this , "Error during index rebuild" , e ) ; try { if ( indexId >= 0 ) storage . clearIndex ( indexId ) ; } catch ( Exception e2 ) { OLogManager . instance ( ) . error ( this , "Error during index rebuild" , e2 ) ; // IGNORE EXCEPTION: IF THE REBUILD WAS LAUNCHED IN CASE OF RID INVALID CLEAR ALWAYS GOES IN ERROR } throw OException . wrapException ( new OIndexException ( "Error on rebuilding the index for clusters: " + clustersToIndex ) , e ) ; } finally { rebuilding = false ; if ( intentInstalled ) getDatabase ( ) . declareIntent ( null ) ; releaseSharedLock ( ) ; } return documentIndexed ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/DigitalPebble/storm-crawler/blob/5d0465192ab8fbd89a90db32cb20960a282411ea/core/src/main/java/com/digitalpebble/stormcrawler/util/ConfUtils.java#L117-L125<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Map extractConfigElement ( Map conf ) { if ( conf . size ( ) == 1 ) { Object confNode = conf . get ( "config" ) ; if ( confNode != null && confNode instanceof Map ) { conf = ( Map ) confNode ; } } return conf ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Flowable.java#L1388-L1399<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ CheckReturnValue @ BackpressureSupport ( BackpressureKind . FULL ) @ SchedulerSupport ( SchedulerSupport . NONE ) public static < T > Flowable < T > concatArray ( Publisher < ? extends T > ... sources ) { if ( sources . length == 0 ) { return empty ( ) ; } else if ( sources . length == 1 ) { return fromPublisher ( sources [ 0 ] ) ; } return RxJavaPlugins . onAssembly ( new FlowableConcatArray < T > ( sources , false ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/retrieval/PassageFromRelation.java#L74-L77<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Triple getSourceRelation ( ) { if ( PassageFromRelation_Type . featOkTst && ( ( PassageFromRelation_Type ) jcasType ) . casFeat_sourceRelation == null ) jcasType . jcas . throwFeatMissing ( "sourceRelation" , "edu.cmu.lti.oaqa.type.retrieval.PassageFromRelation" ) ; return ( Triple ) ( jcasType . ll_cas . ll_getFSForRef ( jcasType . ll_cas . ll_getRefValue ( addr , ( ( PassageFromRelation_Type ) jcasType ) . casFeatCode_sourceRelation ) ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/form/FormContainerClient.java#L88-L96<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public TableRecord createTableRecord ( TableRecord tableRecordParam ) { if ( tableRecordParam != null && this . serviceTicket != null ) { tableRecordParam . setServiceTicket ( this . serviceTicket ) ; } return new TableRecord ( this . putJson ( tableRecordParam , WS . Path . FormContainerTableRecord . Version1 . formContainerTableRecordCreate ( ) ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/clcommon/src/main/java/ucar/nc2/iosp/fysat/Fysatiosp.java#L269-L298<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private byte [ ] getGiniLine ( int nx , int ny , long doff , int lineNumber , int len , int stride ) throws IOException { byte [ ] data = new byte [ len ] ; /*     ** checking image file and set location of first line in file     */ raf . seek ( doff ) ; if ( lineNumber >= ny ) throw new IOException ( "Try to access the file at line number= " + lineNumber + " larger then last line number = " + ny ) ; /*     ** Read in the requested line     */ int offset = lineNumber * nx + ( int ) doff ; //myRaf.seek ( offset ); for ( int i = 0 ; i < len ; i ++ ) { raf . seek ( offset ) ; data [ i ] = raf . readByte ( ) ; offset = offset + stride ; //myRaf.seek(offset); } //myRaf.read( data, 0, len); return data ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-madvoc/src/main/java/jodd/madvoc/component/ActionsManager.java#L105-L111<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Method resolveActionMethod ( final Class < ? > actionClass , final String methodName ) { MethodDescriptor methodDescriptor = ClassIntrospector . get ( ) . lookup ( actionClass ) . getMethodDescriptor ( methodName , false ) ; if ( methodDescriptor == null ) { throw new MadvocException ( "Public method not found: " + actionClass . getSimpleName ( ) + "#" + methodName ) ; } return methodDescriptor . getMethod ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/tiles/features/FeatureTiles.java#L1477-L1486<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected Paint getPolygonPaint ( FeatureStyle featureStyle ) { Paint paint = getFeatureStylePaint ( featureStyle , FeatureDrawType . STROKE ) ; if ( paint == null ) { paint = polygonPaint ; } return paint ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-mail/src/main/java/jodd/mail/EmailAttachment.java#L273-L288<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void writeToFile ( final File destination ) { InputStream input = null ; final OutputStream output ; try { input = getDataSource ( ) . getInputStream ( ) ; output = new FileOutputStream ( destination ) ; StreamUtil . copy ( input , output ) ; } catch ( final IOException ioex ) { throw new MailException ( ioex ) ; } finally { StreamUtil . close ( input ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/storage/impl/local/OAbstractPaginatedStorage.java#L1068-L1181<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public OBackgroundDelta recordsChangedAfterLSN ( final OLogSequenceNumber lsn , final OCommandOutputListener outputListener ) { final OLogSequenceNumber endLsn ; // container of rids of changed records final SortedSet < ORID > sortedRids = new TreeSet <> ( ) ; try { if ( ! configuration . getContextConfiguration ( ) . getValueAsBoolean ( OGlobalConfiguration . STORAGE_TRACK_CHANGED_RECORDS_IN_WAL ) ) { throw new IllegalStateException ( "Cannot find records which were changed starting from provided LSN because tracking of rids of changed records in WAL is switched off, " + "to switch it on please set property " + OGlobalConfiguration . STORAGE_TRACK_CHANGED_RECORDS_IN_WAL . getKey ( ) + " to the true value, please note that only records" + " which are stored after this property was set will be retrieved" ) ; } stateLock . acquireReadLock ( ) ; try { if ( writeAheadLog == null ) { return null ; } // we iterate till the last record is contained in wal at the moment when we call this method endLsn = writeAheadLog . end ( ) ; if ( endLsn == null || lsn . compareTo ( endLsn ) > 0 ) { OLogManager . instance ( ) . warn ( this , "Cannot find requested LSN=%s for database sync operation. Last available LSN is %s" , lsn , endLsn ) ; return null ; } if ( lsn . equals ( endLsn ) ) { // nothing has changed return new OBackgroundDelta ( endLsn ) ; } List < OWriteableWALRecord > records = writeAheadLog . next ( lsn , 1 ) ; if ( records . isEmpty ( ) ) { OLogManager . instance ( ) . info ( this , "Cannot find requested LSN=%s for database sync operation (last available LSN is %s)" , lsn , endLsn ) ; return null ; } final OLogSequenceNumber freezeLsn = records . get ( 0 ) . getLsn ( ) ; writeAheadLog . addCutTillLimit ( freezeLsn ) ; try { records = writeAheadLog . next ( lsn , 1_000 ) ; if ( records . isEmpty ( ) ) { OLogManager . instance ( ) . info ( this , "Cannot find requested LSN=%s for database sync operation (last available LSN is %s)" , lsn , endLsn ) ; return null ; } // all information about changed records is contained in atomic operation metadata long read = 0 ; readLoop : while ( ! records . isEmpty ( ) ) { for ( final OWALRecord record : records ) { final OLogSequenceNumber recordLSN = record . getLsn ( ) ; if ( endLsn . compareTo ( recordLSN ) >= 0 ) { if ( record instanceof OFileCreatedWALRecord ) { throw new ODatabaseException ( "Cannot execute delta-sync because a new file has been added. Filename: '" + ( ( OFileCreatedWALRecord ) record ) . getFileName ( ) + "' (id=" + ( ( OFileCreatedWALRecord ) record ) . getFileId ( ) + ")" ) ; } if ( record instanceof OFileDeletedWALRecord ) { throw new ODatabaseException ( "Cannot execute delta-sync because a file has been deleted. File id: " + ( ( OFileDeletedWALRecord ) record ) . getFileId ( ) ) ; } if ( record instanceof OAtomicUnitEndRecord ) { final OAtomicUnitEndRecord atomicUnitEndRecord = ( OAtomicUnitEndRecord ) record ; if ( atomicUnitEndRecord . getAtomicOperationMetadata ( ) . containsKey ( ORecordOperationMetadata . RID_METADATA_KEY ) ) { final ORecordOperationMetadata recordOperationMetadata = ( ORecordOperationMetadata ) atomicUnitEndRecord . getAtomicOperationMetadata ( ) . get ( ORecordOperationMetadata . RID_METADATA_KEY ) ; final Set < ORID > rids = recordOperationMetadata . getValue ( ) ; sortedRids . addAll ( rids ) ; } } read ++ ; if ( outputListener != null ) { outputListener . onMessage ( "read " + read + " records from WAL and collected " + sortedRids . size ( ) + " records" ) ; } } else { break readLoop ; } } records = writeAheadLog . next ( records . get ( records . size ( ) - 1 ) . getLsn ( ) , 1_000 ) ; } } finally { writeAheadLog . removeCutTillLimit ( freezeLsn ) ; } } catch ( final IOException e ) { throw OException . wrapException ( new OStorageException ( "Error of reading of records changed after LSN " + lsn ) , e ) ; } finally { stateLock . releaseReadLock ( ) ; } OBackgroundDelta b = new OBackgroundDelta ( this , outputListener , sortedRids , lsn , endLsn ) ; return b ; } catch ( final RuntimeException e ) { throw logAndPrepareForRethrow ( e ) ; } catch ( final Error e ) { throw logAndPrepareForRethrow ( e ) ; } catch ( final Throwable t ) { throw logAndPrepareForRethrow ( t ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kolotyluk/java-file-utilities/blob/58838ddb759f7ded8d54e55abfc67b3ba1561c58/src/main/java/net/kolotyluk/java/files/Files.java#L66-L138<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Boolean contentEquals ( Path file1 , Path file2 ) throws IOException { if ( ! java . nio . file . Files . isRegularFile ( file1 ) ) throw new IllegalArgumentException ( file1 + "is not a regular file" ) ; if ( ! java . nio . file . Files . isRegularFile ( file2 ) ) throw new IllegalArgumentException ( file2 + "is not a regular file" ) ; FileChannel channel1 = null ; FileChannel channel2 = null ; MappedByteBuffer buffer1 = null ; MappedByteBuffer buffer2 = null ; try { long size1 = java . nio . file . Files . size ( file1 ) ; long size2 = java . nio . file . Files . size ( file2 ) ; if ( size1 != size2 ) return false ; long position = 0 ; long length = Math . min ( Integer . MAX_VALUE , size1 - position ) ; channel1 = FileChannel . open ( file1 ) ; channel2 = FileChannel . open ( file2 ) ; // Cannot map files larger than Integer.MAX_VALUE, // so we have to do it in pieces. while ( length > 0 ) { buffer1 = channel1 . map ( MapMode . READ_ONLY , position , length ) ; buffer2 = channel2 . map ( MapMode . READ_ONLY , position , length ) ; // if (!buffer1.equals(buffer2)) return false; // The line above is much slower than the line below. // It should not be, but it is, possibly because it is // loading the entire buffer into memory before comparing // the contents. See the corresponding unit test. EK for ( int i = 0 ; i < length ; i ++ ) if ( buffer1 . get ( ) != buffer2 . get ( ) ) return false ; position += length ; length = Math . min ( Integer . MAX_VALUE , size1 - position ) ; cleanDirectByteBuffer ( buffer1 ) ; buffer1 = null ; cleanDirectByteBuffer ( buffer2 ) ; buffer2 = null ; } } finally { // Is is important to clean up so we do not hold any // file locks, in case the caller wants to do something // else with the files. // In terms of functional programming, holding a lock after // returning to the caller would be an unwelcome side-effect. cleanDirectByteBuffer ( buffer1 ) ; cleanDirectByteBuffer ( buffer2 ) ; if ( channel1 != null ) try { channel1 . close ( ) ; } catch ( IOException e ) { if ( channel2 != null ) channel2 . close ( ) ; throw e ; } if ( channel2 != null ) channel2 . close ( ) ; } return true ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/storage/fs/OFileClassic.java#L165-L188<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void shrink ( final long size ) throws IOException { int attempts = 0 ; while ( true ) { try { acquireWriteLock ( ) ; try { //noinspection resource channel . truncate ( HEADER_SIZE + size ) ; this . size = size ; assert this . size >= 0 ; break ; } finally { releaseWriteLock ( ) ; attempts ++ ; } } catch ( final IOException e ) { OLogManager . instance ( ) . error ( this , "Error during file shrink for file '" + getName ( ) + "' " + attempts + "-th attempt" , e ) ; reopenFile ( attempts , e ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/amedia/meteo/blob/cbb59e1c2f889d15c24f3625d1769b543d4af595/meteo-jaxb/src/main/java/no/api/meteo/jaxb/locationforecast/v1_9/ObjectFactory.java#L438-L441<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ XmlElementDecl ( namespace = "" , name = "humidity" , scope = LocationType . class ) public JAXBElement < UnitValue > createLocationTypeHumidity ( UnitValue value ) { return new JAXBElement < UnitValue > ( _LocationTypeHumidity_QNAME , UnitValue . class , LocationType . class , value ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/jpa/subsystem/src/main/java/org/jboss/as/jpa/service/PhaseOnePersistenceUnitServiceImpl.java#L250-L262<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private EntityManagerFactoryBuilder createContainerEntityManagerFactoryBuilder ( ) { persistenceProviderAdaptor . beforeCreateContainerEntityManagerFactory ( pu ) ; try { TwoPhaseBootstrapCapable twoPhaseBootstrapCapable = ( TwoPhaseBootstrapCapable ) persistenceProviderAdaptor ; return twoPhaseBootstrapCapable . getBootstrap ( pu , properties . getValue ( ) ) ; } finally { try { persistenceProviderAdaptor . afterCreateContainerEntityManagerFactory ( pu ) ; } finally { pu . setAnnotationIndex ( null ) ; // close reference to Annotation Index (only needed during call to createContainerEntityManagerFactory) } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/common/src/main/java/org/mobicents/slee/container/management/jmx/DeploymentMBeanImpl.java#L709-L721<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public ResourceAdaptorTypeID [ ] getResourceAdaptorTypes ( ) throws ManagementException { try { if ( logger . isDebugEnabled ( ) ) { logger . debug ( "getResourceAdaptorTypes()" ) ; } return getSleeContainer ( ) . getComponentRepository ( ) . getResourceAdaptorTypeIDs ( ) . toArray ( new ResourceAdaptorTypeID [ 0 ] ) ; } catch ( Throwable ex ) { throw new ManagementException ( ex . getMessage ( ) , ex ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/nidi3/graphviz-java/blob/b7c45ac6c3c28ff7938426f480cdfa5a446a2c47/graphviz-java/src/main/java/guru/nidi/graphviz/attribute/Label.java#L130-L140<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Label markdown ( String value ) { return html ( replaceMd ( replaceMd ( replaceMd ( replaceMd ( replaceMd ( replaceMd ( replaceMd ( value . replace ( "\n" , "<br/>" ) , "\\*\\*" , "b" ) , "\\*" , "i" ) , "~~" , "s" ) , "__" , "sub" ) , "_" , "u" ) , "\\^\\^" , "sup" ) , "\\^" , "o" ) . replaceAll ( "\\\\([*~_^])" , "$1" ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/util/FutureHelper.java#L25-L36<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static < T > T quietGet ( Future < T > future ) { try { return future . get ( ) ; } catch ( Exception ex ) { unwrapAndThrow ( ex ) ; return null ; // just to make the compiler happy  } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/spring-projects/spring-security/blob/98a8467e4c2ae05b3e09c67ece856944fa48ed23/core/src/main/java/org/springframework/security/util/FieldUtils.java#L69-L88<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Object getFieldValue ( Object bean , String fieldName ) throws IllegalAccessException { Assert . notNull ( bean , "Bean cannot be null" ) ; Assert . hasText ( fieldName , "Field name required" ) ; String [ ] nestedFields = StringUtils . tokenizeToStringArray ( fieldName , "." ) ; Class < ? > componentClass = bean . getClass ( ) ; Object value = bean ; for ( String nestedField : nestedFields ) { Field field = getField ( componentClass , nestedField ) ; field . setAccessible ( true ) ; value = field . get ( value ) ; if ( value != null ) { componentClass = value . getClass ( ) ; } } return value ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-tools/src/main/java/org/apache/parquet/tools/command/MergeCommand.java#L142-L155<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void checkParquetFiles ( List < Path > inputFiles ) throws IOException { if ( inputFiles == null || inputFiles . size ( ) <= 1 ) { throw new IllegalArgumentException ( "Not enough files to merge" ) ; } for ( Path inputFile : inputFiles ) { FileSystem fs = inputFile . getFileSystem ( conf ) ; FileStatus status = fs . getFileStatus ( inputFile ) ; if ( status . isDir ( ) ) { throw new IllegalArgumentException ( "Illegal parquet file: " + inputFile . toUri ( ) ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/Classpaths.java#L130-L144<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static List < String > listFromClassLoader ( ClassLoader loader , String resource ) { final List < URL > resourceURLs = Classpaths . classpathResources ( loader , resource ) ; final List < String > resourcePaths = Lists . list ( String . class ) ; final Map < URI , FileSystem > pathToZipFileSystems = new HashMap <> ( ) ; //So you don't have to keep loading the same jar/zip file. for ( URL resourceURL : resourceURLs ) { if ( resourceURL . getProtocol ( ) . equals ( "jar" ) ) { resourcesFromJar ( resourcePaths , resourceURL , pathToZipFileSystems ) ; } else { resourcesFromFileSystem ( resourcePaths , resourceURL ) ; } } return resourcePaths ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4cdm/src/main/java/dap4/cdm/nc2/CDMArrayStructure.java#L131-L138<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>void add ( long recno , int fieldno , Array field ) { FieldArrays fs = records [ ( int ) recno ] ; if ( fs == null ) records [ ( int ) recno ] = ( fs = new FieldArrays ( this . nmembers ) ) ; fs . fields [ fieldno ] = field ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-extensions/src/main/java/ro/isdc/wro/extensions/processor/PathPatternProcessorDecorator.java#L95-L135<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void process ( final Resource resource , final Reader reader , final Writer writer ) throws IOException { if ( resource != null ) { final String uri = resource . getUri ( ) ; LOG . debug ( "matching uri: {}" , uri ) ; if ( includes ) { // Match (p1 OR p2 OR .. pn) for ( String pattern : patterns ) { if ( matcher . match ( pattern , uri ) ) { LOG . debug ( "Processing resource: {}. Match found: {}" , uri , toString ( ) ) ; getDecoratedObject ( ) . process ( resource , reader , writer ) ; return ; } } } else { boolean process = true ; // Match !(p1 AND p2 AND .. pn) for ( String pattern : patterns ) { if ( matcher . match ( pattern , uri ) ) { process = false ; break ; } } if ( process ) { LOG . debug ( "Processing resource: {}. Match found: {}" , uri , toString ( ) ) ; getDecoratedObject ( ) . process ( resource , reader , writer ) ; return ; } } LOG . debug ( "Skipping {} from {}. No match found: {}" , new Object [ ] { uri , getDecoratedObject ( ) , toString ( ) } ) ; WroUtil . safeCopy ( reader , writer ) ; } else { throw new WroRuntimeException ( "Wrong usage of " + toString ( ) + ". Please use it as a pre-processor." ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-extensions/src/main/java/ro/isdc/wro/extensions/support/lint/ReportXmlFormatter.java#L168-L176<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override protected void buildDocument ( ) { final Element rootElement = getDocument ( ) . createElement ( formatterType . rootElementName ) ; getDocument ( ) . appendChild ( rootElement ) ; for ( final ResourceLintReport < LintItem > resourceErrors : getLintReport ( ) . getReports ( ) ) { rootElement . appendChild ( createFileElement ( resourceErrors ) ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/common/src/main/java/org/mobicents/slee/container/security/Utility.java#L178-L205<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Object makeSafeProxyCall ( final Object proxy , final String methodToCallname , final Class [ ] signature , final Object [ ] values ) throws PrivilegedActionException { //Here we execute in sbb/profile or any other slee component domain // so no security calls can be made try { //AccessControlContext acc = new AccessControlContext(new ProtectionDomain[]{proxy.getClass().getProtectionDomain()}); return AccessController . doPrivileged ( new PrivilegedExceptionAction ( ) { public Object run ( ) throws Exception { final Method m = proxy . getClass ( ) . getMethod ( methodToCallname , signature ) ; //Here we cross to org.mobicents domain, with all perms, once m.invoke is called, we go into proxy object domain, effective rightsd are cross section of All + proxy object domain permissions //This is used when isolate security permissions is set to true; return m . invoke ( proxy , values ) ; //}},acc); } } ) ; } catch ( SecurityException e ) { // TODO Auto-generated catch block e . printStackTrace ( ) ; } catch ( PrivilegedActionException e ) { e . printStackTrace ( ) ; } return null ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/api/blas/impl/BaseLevel3.java#L287-L306<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void gemm ( char Order , char TransA , char TransB , IComplexNumber alpha , IComplexNDArray A , IComplexNDArray B , IComplexNumber beta , IComplexNDArray C ) { if ( Nd4j . getExecutioner ( ) . getProfilingMode ( ) == OpExecutioner . ProfilingMode . ALL ) OpProfiler . getInstance ( ) . processBlasCall ( true , A , B , C ) ; GemmParams params = new GemmParams ( A , B , C ) ; if ( A . data ( ) . dataType ( ) == DataBuffer . Type . DOUBLE ) { zgemm ( Order , TransA , TransB , params . getM ( ) , params . getN ( ) , params . getK ( ) , alpha . asDouble ( ) , A . ordering ( ) == NDArrayFactory . C ? B : A , params . getLda ( ) , B . ordering ( ) == NDArrayFactory . C ? A : B , params . getLdb ( ) , beta . asDouble ( ) , C , params . getLdc ( ) ) ; } else cgemm ( Order , TransA , TransB , params . getM ( ) , params . getN ( ) , params . getK ( ) , alpha . asFloat ( ) , A . ordering ( ) == NDArrayFactory . C ? B : A , params . getLda ( ) , B . ordering ( ) == NDArrayFactory . C ? A : B , params . getLdb ( ) , beta . asFloat ( ) , C , params . getLdc ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/metadata/security/OSecurityShared.java#L441-L475<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public OUser createMetadata ( ) { final ODatabaseDocument database = getDatabase ( ) ; OClass identityClass = database . getMetadata ( ) . getSchema ( ) . getClass ( OIdentity . CLASS_NAME ) ; // SINCE 1.2.0 if ( identityClass == null ) identityClass = database . getMetadata ( ) . getSchema ( ) . createAbstractClass ( OIdentity . CLASS_NAME ) ; OClass roleClass = createOrUpdateORoleClass ( database , identityClass ) ; createOrUpdateOUserClass ( database , identityClass , roleClass ) ; // CREATE ROLES AND USERS ORole adminRole = getRole ( ORole . ADMIN ) ; if ( adminRole == null ) { adminRole = createRole ( ORole . ADMIN , ORole . ALLOW_MODES . ALLOW_ALL_BUT ) ; adminRole . addRule ( ORule . ResourceGeneric . BYPASS_RESTRICTED , null , ORole . PERMISSION_ALL ) . save ( ) ; } OUser adminUser = getUser ( OUser . ADMIN ) ; if ( adminUser == null ) { // This will return the global value if a local storage context configuration value does not exist. boolean createDefUsers = getDatabase ( ) . getStorage ( ) . getConfiguration ( ) . getContextConfiguration ( ) . getValueAsBoolean ( OGlobalConfiguration . CREATE_DEFAULT_USERS ) ; if ( createDefUsers ) { adminUser = createUser ( OUser . ADMIN , OUser . ADMIN , adminRole ) ; } } // SINCE 1.2.0 createOrUpdateORestrictedClass ( database ) ; return adminUser ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/tony19/logback-android/blob/028489c11ccfc1237a53923db06f22a90b41809c/logback-android/src/main/java/ch/qos/logback/classic/Logger.java#L792-L795<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void log ( org . slf4j . event . LoggingEvent slf4jEvent ) { Level level = Level . fromLocationAwareLoggerInteger ( slf4jEvent . getLevel ( ) . toInt ( ) ) ; filterAndLog_0_Or3Plus ( FQCN , slf4jEvent . getMarker ( ) , level , slf4jEvent . getMessage ( ) , slf4jEvent . getArgumentArray ( ) , slf4jEvent . getThrowable ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RuedigerMoeller/fast-serialization/blob/59f8f800b79479d0b9c80901cf55903d9b027f26/src/main/java/org/nustaq/serialization/FSTObjectOutput.java#L351-L355<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected void objectWillBeWritten ( Object obj , int streamPosition ) { if ( listener != null ) { listener . objectWillBeWritten ( obj , streamPosition ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/net-commonlib/src/main/java/com/streamsets/pipeline/lib/parser/net/netflow/NetflowCommonDecoder.java#L87-L113<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void decodeStandaloneBuffer ( ByteBuf buf , List < BaseNetflowMessage > resultMessages , InetSocketAddress sender , InetSocketAddress recipient ) throws OnRecordErrorException { final List < Object > results = new LinkedList <> ( ) ; try { decode ( null , buf , results , sender , recipient , true ) ; for ( Object result : results ) { if ( result == null ) { LOG . warn ( "null result found from decoding standalone Netflow buffer; skipping" ) ; continue ; } if ( result instanceof BaseNetflowMessage ) { resultMessages . add ( ( BaseNetflowMessage ) result ) ; } else { throw new IllegalStateException ( String . format ( "Found unexpected object type in results: %s" , result . getClass ( ) . getName ( ) ) ) ; } } } finally { resetStateVariables ( ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Flowable.java#L12737-L12742<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ CheckReturnValue @ BackpressureSupport ( BackpressureKind . FULL ) @ SchedulerSupport ( SchedulerSupport . NONE ) public final ConnectableFlowable < T > replay ( ) { return FlowableReplay . createFrom ( this ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.kie.eclipse.navigator/src/main/java/org/kie/eclipse/navigator/preferences/JsonPreferenceStore.java#L40-L43<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public boolean contains ( String name ) { JsonValue value = object . get ( name ) ; return value != null ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/grib/src/main/java/ucar/nc2/grib/grib2/table/NwsMetDevTables.java#L66-L80<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public double getForecastTimeIntervalSizeInHours ( Grib2Pds pds ) { Grib2Pds . PdsInterval pdsIntv = ( Grib2Pds . PdsInterval ) pds ; // override here only if timeRangeUnit = 255 boolean needOverride = false ; for ( Grib2Pds . TimeInterval ti : pdsIntv . getTimeIntervals ( ) ) { needOverride = ( ti . timeRangeUnit == 255 ) ; } if ( ! needOverride ) return super . getForecastTimeIntervalSizeInHours ( pds ) ; return 12.0 ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-common/src/main/java/org/nd4j/util/StringUtils.java#L298-L308<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String getFormattedTimeWithDiff ( String formattedFinishTime , long finishTime , long startTime ) { StringBuilder buf = new StringBuilder ( ) ; if ( 0 != finishTime ) { buf . append ( formattedFinishTime ) ; if ( 0 != startTime ) { buf . append ( " (" + formatTimeDiff ( finishTime , startTime ) + ")" ) ; } } return buf . toString ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/repackaged/gentyref/GenericTypeReflector.java#L369-L376<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Type getExactFieldType ( Field f , Type type ) { Type returnType = f . getGenericType ( ) ; Type exactDeclaringType = getExactSuperType ( capture ( type ) , f . getDeclaringClass ( ) ) ; if ( exactDeclaringType == null ) { // capture(type) is not a subtype of f.getDeclaringClass() throw new IllegalArgumentException ( "The field " + f + " is not a member of type " + type ) ; } return mapTypeParameters ( returnType , exactDeclaringType ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Observable.java#L9076-L9081<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ CheckReturnValue @ SchedulerSupport ( SchedulerSupport . NONE ) public final < R > Observable < R > flatMapSingle ( Function < ? super T , ? extends SingleSource < ? extends R > > mapper , boolean delayErrors ) { ObjectHelper . requireNonNull ( mapper , "mapper is null" ) ; return RxJavaPlugins . onAssembly ( new ObservableFlatMapSingle < T , R > ( this , mapper , delayErrors ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/ImmobilieBaseTyp.java#L553-L560<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Generated ( value = "com.sun.tools.xjc.Driver" , date = "2018-10-12T02:52:47+02:00" , comments = "JAXB RI v2.2.11" ) public AktionsTyp getImportmodus ( ) { if ( importmodus == null ) { return AktionsTyp . IMPORTIEREN ; } else { return importmodus ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-db/src/main/java/jodd/db/type/ByteSqlType.java#L37-L40<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public Byte get ( final ResultSet rs , final int index , final int dbSqlType ) throws SQLException { return Byte . valueOf ( rs . getByte ( index ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dt/radial/RadialCoordSys.java#L47-L64<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static RadialCoordSys makeRadialCoordSys ( Formatter parseInfo , CoordinateSystem cs , VariableEnhanced v ) { if ( parseInfo != null ) { parseInfo . format ( " " ) ; v . getNameAndDimensions ( parseInfo , true , false ) ; parseInfo . format ( " check CS " + cs . getName ( ) ) ; } if ( isRadialCoordSys ( parseInfo , cs ) ) { RadialCoordSys rcs = new RadialCoordSys ( cs ) ; if ( cs . isComplete ( v ) ) { if ( parseInfo != null ) parseInfo . format ( " OK%n" ) ; return rcs ; } else { if ( parseInfo != null ) parseInfo . format ( " NOT complete%n" ) ; } } return null ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/debugger/wam_debugger/src/main/com/thesett/aima/logic/fol/wam/debugger/controller/TopLevelStandaloneController.java#L78-L106<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void open ( ) { // Set up colors. componentFactory . setColorScheme ( new DarkColorScheme ( componentFactory . getColorFactory ( ) ) ) ; // Build the main window frame. mainWindow = componentFactory . createMainWindow ( ) ; mainWindow . showMainWindow ( ) ; // Create and initialize the register monitor. registerMonitorController = new RegisterMonitorController ( componentFactory , mainWindow ) ; registerMonitorController . open ( ) ; // Create and initialize the memory layout monitor. memoryLayoutMonitorController = new MemoryLayoutMonitorController ( componentFactory , mainWindow ) ; memoryLayoutMonitorController . open ( ) ; // Create and initialize the byte code view and breakpoint monitor. codeStepController = new CodeStepController ( componentFactory , mainWindow ) ; codeStepController . open ( ) ; // Build the top-level machine monitor, hooking it up to the child components. RegisterSetMonitor registerMonitor = registerMonitorController . getRegisterMonitor ( ) ; MemoryLayoutMonitor layoutMonitor = memoryLayoutMonitorController . getLayoutMonitor ( ) ; BreakpointMonitor breakpointMonitor = codeStepController . getBreakpointMonitor ( ) ; ByteCodeMonitor byteCodeMonitor = codeStepController . getByteCodeMonitor ( ) ; machineMonitor = new MachineMonitor ( registerMonitor , layoutMonitor , breakpointMonitor , byteCodeMonitor ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/security/subsystem/src/main/java/org/jboss/as/security/service/SecurityManagementService.java#L80-L96<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void start ( StartContext context ) throws StartException { SecurityLogger . ROOT_LOGGER . debugf ( "Starting SecurityManagementService" ) ; // set properties of JNDIBasedSecurityManagement JNDIBasedSecurityManagement securityManagement = new JNDIBasedSecurityManagement ( serviceModuleLoaderValue . getValue ( ) ) ; securityManagement . setAuthenticationManagerClassName ( authenticationManagerClassName ) ; securityManagement . setDeepCopySubjectMode ( deepCopySubjectMode ) ; securityManagement . setCallbackHandlerClassName ( callbackHandlerClassName ) ; securityManagement . setAuthorizationManagerClassName ( authorizationManagerClassName ) ; securityManagement . setAuditManagerClassName ( auditManagerClassName ) ; securityManagement . setIdentityTrustManagerClassName ( identityTrustManagerClassName ) ; securityManagement . setMappingManagerClassName ( mappingManagerClassName ) ; this . securityManagement = securityManagement ; previousSecurityManagement = SecurityFactory . getSecurityManagement ( ) ; SecurityFactory . setSecurityManagement ( securityManagement ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetFileWriter.java#L822-L830<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void end ( Map < String , String > extraMetaData ) throws IOException { state = state . end ( ) ; serializeColumnIndexes ( columnIndexes , blocks , out ) ; serializeOffsetIndexes ( offsetIndexes , blocks , out ) ; LOG . debug ( "{}: end" , out . getPos ( ) ) ; this . footer = new ParquetMetadata ( new FileMetaData ( schema , extraMetaData , Version . FULL_VERSION ) , blocks ) ; serializeFooter ( footer , out ) ; out . close ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/metadata/security/OUser.java#L224-L233<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public boolean isRuleDefined ( final ORule . ResourceGeneric resourceGeneric , String resourceSpecific ) { for ( ORole r : roles ) if ( r == null ) OLogManager . instance ( ) . warn ( this , "User '%s' has a null role, bypass it. Consider to fix this user roles before to continue" , getName ( ) ) ; else if ( r . hasRule ( resourceGeneric , resourceSpecific ) ) return true ; return false ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4cdm/src/main/java/dap4/cdm/dsp/CDMDSP.java#L206-L212<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected void recordVar ( Variable cdm , DapVariable dap ) { cdm = CDMUtil . unwrap ( cdm ) ; assert varmap . get ( cdm ) == null && varmap . get ( dap ) == null ; varmap . put ( cdm , dap ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/ma2/ArrayObject.java#L17-L19<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>static ArrayObject factory ( DataType dtype , Class elemType , boolean isVlen , Index index ) { return ArrayObject . factory ( dtype , elemType , isVlen , index , null ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Observable.java#L1332-L1336<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ CheckReturnValue @ SchedulerSupport ( SchedulerSupport . NONE ) public static < T > Observable < T > concatArrayEager ( ObservableSource < ? extends T > ... sources ) { return concatArrayEager ( bufferSize ( ) , bufferSize ( ) , sources ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/TieWebSheetBean.java#L519-L535<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void reCalcMaxColCounts ( ) { if ( ( this . getSheetConfigMap ( ) == null ) || ( this . getSheetConfigMap ( ) . isEmpty ( ) ) ) { this . maxColCounts = 0 ; return ; } int maxColumns = 0 ; for ( SheetConfiguration sheetConfig : this . getSheetConfigMap ( ) . values ( ) ) { int counts = sheetConfig . getHeaderCellRange ( ) . getRightCol ( ) - sheetConfig . getHeaderCellRange ( ) . getLeftCol ( ) + 1 ; if ( maxColumns < counts ) { maxColumns = counts ; } } this . maxColCounts = maxColumns ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/hawkular/hawkular-metrics/blob/6b9ab00d00c3d6d51e30c2c08c4ee48da7237e6c/containers/hawkular-openshift-security-filter/src/main/java/org/hawkular/openshift/auth/TokenAuthenticator.java#L274-L286<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private String getVerb ( HttpServerExchange serverExchange ) { // if its a query type verb, then treat as a GET type call. if ( isQuery ( serverExchange ) ) { return VERBS . get ( GET ) ; } else { String verb = VERBS . get ( serverExchange . getRequestMethod ( ) ) ; if ( verb == null ) { log . debugf ( "Unhandled http method '%s'. Checking for read access." , serverExchange . getRequestMethod ( ) ) ; verb = VERBS_DEFAULT ; } return verb ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-madvoc/src/main/java/jodd/madvoc/MadvocUtil.java#L45-L60<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static int lastIndexOfSlashDot ( final String str ) { int slashNdx = str . lastIndexOf ( ' ' ) ; int dotNdx = StringUtil . lastIndexOf ( str , ' ' , str . length ( ) , slashNdx ) ; if ( dotNdx == - 1 ) { if ( slashNdx == - 1 ) { return - 1 ; } slashNdx ++ ; if ( slashNdx < str . length ( ) - 1 ) { dotNdx = slashNdx ; } else { dotNdx = - 1 ; } } return dotNdx ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/internal/authentication/AuthorizationAuthority.java#L325-L329<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected String md5 ( String s ) throws NoSuchAlgorithmException , UnsupportedEncodingException { MessageDigest md5 = MessageDigest . getInstance ( "MD5" ) ; //$NON-NLS-1$ byte [ ] hash = md5 . digest ( s . getBytes ( "UTF8" ) ) ; //$NON-NLS-1$ return HexConverter . toHex ( hash ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/persistence/play-java-jpa/src/main/java/play/db/jpa/DefaultJPAApi.java#L274-L285<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Deprecated public void withTransaction ( final Runnable block ) { try { withTransaction ( ( ) -> { block . run ( ) ; return null ; } ) ; } catch ( Throwable t ) { throw new RuntimeException ( "JPA transaction failed" , t ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/mvc/Results.java#L2262-L2264<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Result notFound ( File content , boolean inline ) { return notFound ( content , inline , StaticFileMimeTypes . fileMimeTypes ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/Group.java#L332-L344<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public String getNameAndAttributes ( ) { StringBuilder sbuff = new StringBuilder ( ) ; sbuff . append ( "Group " ) ; sbuff . append ( getShortName ( ) ) ; sbuff . append ( "\n" ) ; for ( Attribute att : attributes . getAttributes ( ) ) { sbuff . append ( "  " ) . append ( getShortName ( ) ) . append ( ":" ) ; sbuff . append ( att . toString ( ) ) ; sbuff . append ( ";" ) ; sbuff . append ( "\n" ) ; } return sbuff . toString ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/StringUtil.java#L199-L204<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static StringUtil instance ( ) { if ( StringUtil . instance == null ) { StringUtil . instance = new StringUtil ( ) ; } return StringUtil . instance ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/Parser.java#L750-L758<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void restartablyPop ( ) throws SAXException { Element popped = theStack ; pop ( ) ; if ( restartElements && ( popped . flags ( ) & Schema . F_RESTART ) != 0 ) { popped . anonymize ( ) ; popped . setNext ( theSaved ) ; theSaved = popped ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentAbstract.java#L2251-L2257<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public ODatabaseDocumentAbstract activateOnCurrentThread ( ) { final ODatabaseRecordThreadLocal tl = ODatabaseRecordThreadLocal . instance ( ) ; if ( tl != null ) tl . set ( this ) ; return this ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/iosp/grads/GradsDataDescriptorFile.java#L715-L724<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public int [ ] getTimeStepsPerFile ( String filename ) { if ( chsubs != null ) { for ( Chsub ch : chsubs ) { if ( filename . contains ( ch . subString ) ) { return new int [ ] { ch . numTimes , ch . startTimeIndex } ; } } } return new int [ ] { timeStepsPerFile , 0 } ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/PistoiaHELM/HELMNotationParser/blob/685d7ab7886e9b5cc15fb904025fe6eee703f8f6/src/main/java/org/helm/notation2/parser/StateMachineParser.java#L103-L116<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public boolean checkPolymerId ( String polymerId ) { LOG . debug ( "Validation of polymerID: " + polymerId ) ; String pattern = "PEPTIDE[1-9][0-9]*|RNA[1-9][0-9]*|CHEM[1-9][0-9]*|BLOB[1-9][0-9]*" ; Pattern p = Pattern . compile ( pattern , Pattern . CASE_INSENSITIVE ) ; Matcher m = p . matcher ( polymerId ) ; if ( m . matches ( ) ) { LOG . debug ( "PolymerID is valid: " + polymerId ) ; return true ; } LOG . debug ( "PolymerID is not valid: " + polymerId ) ; return false ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/sialcasa/mvvmFX/blob/240566a358a8e01c94c0bbb99228140a69690d02/mvvmfx/src/main/java/de/saxsys/mvvmfx/utils/itemlist/ListTransformation.java#L120-L129<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void processAddEvent ( ListChangeListener . Change < ? extends SourceType > listEvent ) { final List < TargetType > toAdd = new ArrayList <> ( ) ; for ( int index = listEvent . getFrom ( ) ; index < listEvent . getTo ( ) ; index ++ ) { final SourceType item = listEvent . getList ( ) . get ( index ) ; toAdd . add ( function . apply ( item ) ) ; } viewModelList . addAll ( listEvent . getFrom ( ) , toAdd ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/input/Question.java#L139-L142<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void setQuestionType ( String v ) { if ( Question_Type . featOkTst && ( ( Question_Type ) jcasType ) . casFeat_questionType == null ) jcasType . jcas . throwFeatMissing ( "questionType" , "edu.cmu.lti.oaqa.type.input.Question" ) ; jcasType . ll_cas . ll_setStringValue ( addr , ( ( Question_Type ) jcasType ) . casFeatCode_questionType , v ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-column/src/main/java/org/apache/parquet/internal/column/columnindex/OffsetIndexBuilder.java#L130-L137<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void add ( long offset , int compressedPageSize , long firstRowIndex ) { previousOffset = offset ; offsets . add ( offset ) ; previousPageSize = compressedPageSize ; compressedPageSizes . add ( compressedPageSize ) ; previousRowIndex = firstRowIndex ; firstRowIndexes . add ( firstRowIndex ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Maybe.java#L2689-L2693<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ CheckReturnValue @ SchedulerSupport ( SchedulerSupport . CUSTOM ) public final Maybe < T > delaySubscription ( long delay , TimeUnit unit , Scheduler scheduler ) { return delaySubscription ( Flowable . timer ( delay , unit , scheduler ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/waterml/src/main/java/ucar/nc2/ogc/erddap/util/ErddapEDUnits.java#L370-L498<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String ucumToUdunits ( String ucum ) { if ( ucum == null ) { return null ; } StringBuilder udunits = new StringBuilder ( ) ; int ucLength = ucum . length ( ) ; if ( ucLength == 0 ) { return "" ; } //is it a time point?  e.g., s{since 1970-01-01T00:00:00T} if ( ucum . charAt ( ucLength - 1 ) == ' ' && //quick reject ucum . indexOf ( ' ' ) == ucLength - 1 ) { //reasonably quick reject int sincePo = ucum . indexOf ( "{since " ) ; if ( sincePo > 0 ) { //is first part an atomic ucum unit? String tUdunits = ucHashMap . get ( ucum . substring ( 0 , sincePo ) ) ; if ( tUdunits != null ) { return tUdunits + " " + ucum . substring ( sincePo + 1 , ucLength - 1 ) ; } } } //parse ucum and build udunits, till done         int po = 0 ; //po is next position to be read while ( po < ucLength ) { char ch = ucum . charAt ( po ) ; //letter   if ( isUcumLetter ( ch ) ) { //includes [, ], {, }, 'µ' and "'" //find contiguous letters|_|digit (no '-')  int po2 = po + 1 ; while ( po2 < ucLength && ( isUcumLetter ( ucum . charAt ( po2 ) ) || ucum . charAt ( po2 ) == ' ' || ErddapString2 . isDigit ( ucum . charAt ( po2 ) ) ) ) { po2 ++ ; } String tUcum = ucum . substring ( po , po2 ) ; po = po2 ; //some ucum have internal digits, but none end in digits  //if it ends in digits, treat as exponent //find contiguous digits at end int firstDigit = tUcum . length ( ) ; while ( firstDigit >= 1 && ErddapString2 . isDigit ( tUcum . charAt ( firstDigit - 1 ) ) ) { firstDigit -- ; } String exponent = tUcum . substring ( firstDigit ) ; tUcum = tUcum . substring ( 0 , firstDigit ) ; String tUdunits = oneUcumToUdunits ( tUcum ) ; //deal with PER -> /  if ( tUdunits . equals ( "/" ) ) { char lastUdunits = udunits . length ( ) == 0 ? ' ' : udunits . charAt ( udunits . length ( ) - 1 ) ; if ( lastUdunits == ' ' ) { udunits . setCharAt ( udunits . length ( ) - 1 , ' ' ) ; //2 '/' cancel out } else if ( lastUdunits == ' ' ) { udunits . setCharAt ( udunits . length ( ) - 1 , ' ' ) ; //  '/' replaces '.' } else { udunits . append ( ' ' ) ; } } else { udunits . append ( tUdunits ) ; } //add the exponent udunits . append ( exponent ) ; //catch -exponent as a number below continue ; } //number if ( ch == ' ' || ErddapString2 . isDigit ( ch ) ) { //find contiguous digits int po2 = po + 1 ; while ( po2 < ucLength && ErddapString2 . isDigit ( ucum . charAt ( po2 ) ) ) { po2 ++ ; } // ^-  or ^{digit} if ( po2 < ucLength - 1 && Character . toLowerCase ( ucum . charAt ( po2 ) ) == ' ' && ( ucum . charAt ( po2 + 1 ) == ' ' || ErddapString2 . isDigit ( ucum . charAt ( po2 + 1 ) ) ) ) { po2 += 2 ; while ( po2 < ucLength && ErddapString2 . isDigit ( ucum . charAt ( po2 ) ) ) { po2 ++ ; } } String num = ucum . substring ( po , po2 ) ; po = po2 ; udunits . append ( num ) ; continue ; } // . if ( ch == ' ' ) { po ++ ; udunits . append ( ' ' ) ; // ' ' is more common than '.' in udunits continue ; } // * if ( ch == ' ' ) { po ++ ; udunits . append ( ' ' ) ; continue ; } // '  '' if ( ch == ' ' ) { po ++ ; if ( po < ucLength && ucum . charAt ( po ) == ' ' ) { udunits . append ( "arc_second" ) ; po ++ ; } else { udunits . append ( "arc_minute" ) ; } continue ; } //otherwise, punctuation.   copy it //  / (division), " doesn't occur, udunits . append ( ch ) ; po ++ ; } return udunits . toString ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/jdbc-protolib/src/main/java/com/streamsets/pipeline/lib/jdbc/schemawriter/H2SchemaWriter.java#L50-L81<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override protected String makeAlterTableSqlString ( String schema , String tableName , LinkedHashMap < String , JdbcTypeInfo > columnDiff ) { String tableSchema = ( schema == null ) ? getDefaultSchema ( ) : schema ; StringBuilder sqlString = new StringBuilder ( ) ; boolean first = true ; for ( Map . Entry < String , JdbcTypeInfo > entry : columnDiff . entrySet ( ) ) { if ( first ) { first = false ; } else { sqlString . append ( "\n" ) ; } sqlString . append ( ALTER_TABLE ) . append ( " " ) ; if ( tableSchema != null ) { sqlString . append ( tableSchema ) ; sqlString . append ( "." ) ; } sqlString . append ( tableName ) . append ( " " ) . append ( "ADD COLUMN" ) . append ( " " ) . append ( entry . getKey ( ) ) . append ( " " ) . append ( entry . getValue ( ) . toString ( ) ) . append ( ";" ) ; } return sqlString . toString ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/opendap/src/main/java/opendap/dap/Attribute.java#L625-L637<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private static final boolean checkInt ( String s ) { try { //Coverity[FB.DLS_DEAD_LOCAL_STORE] int val = Integer . parseInt ( s ) ; if ( DebugValueChecking ) { DAPNode . log . debug ( "Attribute.checkInt() - string: '" + s + "'   value: " + val ) ; } return true ; } catch ( NumberFormatException e ) { return false ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ozlerhakan/poiji/blob/3d27d7ae586d8cdac46a5403a030198937c28fe6/src/main/java/com/poiji/bind/Poiji.java#L166-L169<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static synchronized < T > void fromExcel ( final File file , final Class < T > type , final PoijiOptions options , final Consumer < ? super T > consumer ) { final Unmarshaller unmarshaller = deserializer ( file , options ) ; unmarshaller . unmarshal ( type , consumer ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/rmi/Util.java#L179-L200<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void insertAnyPrimitive ( Any any , Object primitive ) { Class type = primitive . getClass ( ) ; if ( type == Boolean . class ) any . insert_boolean ( ( ( Boolean ) primitive ) . booleanValue ( ) ) ; else if ( type == Character . class ) any . insert_wchar ( ( ( Character ) primitive ) . charValue ( ) ) ; else if ( type == Byte . class ) any . insert_octet ( ( ( Byte ) primitive ) . byteValue ( ) ) ; else if ( type == Short . class ) any . insert_short ( ( ( Short ) primitive ) . shortValue ( ) ) ; else if ( type == Integer . class ) any . insert_long ( ( ( Integer ) primitive ) . intValue ( ) ) ; else if ( type == Long . class ) any . insert_longlong ( ( ( Long ) primitive ) . longValue ( ) ) ; else if ( type == Float . class ) any . insert_float ( ( ( Float ) primitive ) . floatValue ( ) ) ; else if ( type == Double . class ) any . insert_double ( ( ( Double ) primitive ) . doubleValue ( ) ) ; else throw IIOPLogger . ROOT_LOGGER . notAPrimitive ( type . getName ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/subchen/jetbrick-all-1x/blob/abe54629a508592287afe5ca4ffc93bf8bf4940c/jetbrick-commons/src/main/java/jetbrick/web/servlet/RequestUtils.java#L32-L43<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String getPathInfo ( HttpServletRequest request ) { String path = request . getPathInfo ( ) ; if ( path == null ) { path = request . getServletPath ( ) ; } else { path = request . getServletPath ( ) + path ; } if ( path == null || path . length ( ) == 0 ) { path = "/" ; } return path ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Examples/src/main/java/org/openestate/io/examples/KyeroWritingExample.java#L70-L117<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ SuppressWarnings ( "Duplicates" ) public static void main ( String [ ] args ) { // init logging PropertyConfigurator . configure ( KyeroWritingExample . class . getResource ( PACKAGE + "/log4j.properties" ) ) ; // create a Root object with some example data // this object corresponds to the <root> element in XML Root root = FACTORY . createRoot ( ) ; root . setKyero ( createKyero ( ) ) ; root . setAgent ( createAgent ( ) ) ; root . getProperty ( ) . add ( createProperty ( ) ) ; root . getProperty ( ) . add ( createProperty ( ) ) ; root . getProperty ( ) . add ( createProperty ( ) ) ; // convert the Root object into a XML document KyeroDocument doc = null ; try { doc = KyeroDocument . newDocument ( root ) ; } catch ( Exception ex ) { LOGGER . error ( "Can't create XML document!" ) ; LOGGER . error ( "> " + ex . getLocalizedMessage ( ) , ex ) ; System . exit ( 1 ) ; } // write XML document into a java.io.File try { write ( doc , File . createTempFile ( "output-" , ".xml" ) ) ; } catch ( IOException ex ) { LOGGER . error ( "Can't create temporary file!" ) ; LOGGER . error ( "> " + ex . getLocalizedMessage ( ) , ex ) ; System . exit ( 1 ) ; } // write XML document into a java.io.OutputStream write ( doc , new NullOutputStream ( ) ) ; // write XML document into a java.io.Writer write ( doc , new NullWriter ( ) ) ; // write XML document into a string and send it to the console writeToConsole ( doc ) ; // downgrade XML document to an earlier version // and write it to the console doc . downgrade ( KyeroVersion . V2_1 ) ; writeToConsole ( doc ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-db/src/main/java/jodd/db/oom/sqlgen/TemplateData.java#L105-L110<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Object getObjectReference ( final String name ) { if ( objectRefs == null ) { return null ; } return objectRefs . get ( name ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/felipecsl/GifImageView/blob/d2af6a5210c1872f4c627b63b93f3aba7f0a3bb9/library/src/main/java/com/felipecsl/gifimageview/library/GifDecoder.java#L525-L655<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private Bitmap setPixels ( GifFrame currentFrame , GifFrame previousFrame ) { // Final location of blended pixels. final int [ ] dest = mainScratch ; // clear all pixels when meet first frame if ( previousFrame == null ) { Arrays . fill ( dest , 0 ) ; } // fill in starting image contents based on last image's dispose code if ( previousFrame != null && previousFrame . dispose > DISPOSAL_UNSPECIFIED ) { // We don't need to do anything for DISPOSAL_NONE, if it has the correct pixels so will our // mainScratch and therefore so will our dest array. if ( previousFrame . dispose == DISPOSAL_BACKGROUND ) { // Start with a canvas filled with the background color int c = 0 ; if ( ! currentFrame . transparency ) { c = header . bgColor ; if ( currentFrame . lct != null && header . bgIndex == currentFrame . transIndex ) { c = 0 ; } } else if ( framePointer == 0 ) { // TODO: We should check and see if all individual pixels are replaced. If they are, the // first frame isn't actually transparent. For now, it's simpler and safer to assume // drawing a transparent background means the GIF contains transparency. isFirstFrameTransparent = true ; } fillRect ( dest , previousFrame , c ) ; } else if ( previousFrame . dispose == DISPOSAL_PREVIOUS ) { if ( previousImage == null ) { fillRect ( dest , previousFrame , 0 ) ; } else { // Start with the previous frame int downsampledIH = previousFrame . ih / sampleSize ; int downsampledIY = previousFrame . iy / sampleSize ; int downsampledIW = previousFrame . iw / sampleSize ; int downsampledIX = previousFrame . ix / sampleSize ; int topLeft = downsampledIY * downsampledWidth + downsampledIX ; previousImage . getPixels ( dest , topLeft , downsampledWidth , downsampledIX , downsampledIY , downsampledIW , downsampledIH ) ; } } } // Decode pixels for this frame into the global pixels[] scratch. decodeBitmapData ( currentFrame ) ; int downsampledIH = currentFrame . ih / sampleSize ; int downsampledIY = currentFrame . iy / sampleSize ; int downsampledIW = currentFrame . iw / sampleSize ; int downsampledIX = currentFrame . ix / sampleSize ; // Copy each source line to the appropriate place in the destination. int pass = 1 ; int inc = 8 ; int iline = 0 ; boolean isFirstFrame = framePointer == 0 ; for ( int i = 0 ; i < downsampledIH ; i ++ ) { int line = i ; if ( currentFrame . interlace ) { if ( iline >= downsampledIH ) { pass ++ ; switch ( pass ) { case 2 : iline = 4 ; break ; case 3 : iline = 2 ; inc = 4 ; break ; case 4 : iline = 1 ; inc = 2 ; break ; default : break ; } } line = iline ; iline += inc ; } line += downsampledIY ; if ( line < downsampledHeight ) { int k = line * downsampledWidth ; // Start of line in dest. int dx = k + downsampledIX ; // End of dest line. int dlim = dx + downsampledIW ; if ( k + downsampledWidth < dlim ) { // Past dest edge. dlim = k + downsampledWidth ; } // Start of line in source. int sx = i * sampleSize * currentFrame . iw ; int maxPositionInSource = sx + ( ( dlim - dx ) * sampleSize ) ; while ( dx < dlim ) { // Map color and insert in destination. int averageColor ; if ( sampleSize == 1 ) { int currentColorIndex = ( ( int ) mainPixels [ sx ] ) & 0x000000ff ; averageColor = act [ currentColorIndex ] ; } else { // TODO: This is substantially slower (up to 50ms per frame) than just grabbing the // current color index above, even with a sample size of 1. averageColor = averageColorsNear ( sx , maxPositionInSource , currentFrame . iw ) ; } if ( averageColor != 0 ) { dest [ dx ] = averageColor ; } else if ( ! isFirstFrameTransparent && isFirstFrame ) { isFirstFrameTransparent = true ; } sx += sampleSize ; dx ++ ; } } } // Copy pixels into previous image if ( savePrevious && ( currentFrame . dispose == DISPOSAL_UNSPECIFIED || currentFrame . dispose == DISPOSAL_NONE ) ) { if ( previousImage == null ) { previousImage = getNextBitmap ( ) ; } previousImage . setPixels ( dest , 0 , downsampledWidth , 0 , 0 , downsampledWidth , downsampledHeight ) ; } // Set pixels for current image. Bitmap result = getNextBitmap ( ) ; result . setPixels ( dest , 0 , downsampledWidth , 0 , 0 , downsampledWidth , downsampledHeight ) ; return result ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jcuda/jcublas/blob/80875235d24562073f4d66651dd17263f306427d/JCublasJava/src/main/java/jcuda/jcublas/JCublas.java#L1974-L1978<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void cublasCsscal ( int n , float alpha , Pointer x , int incx ) { cublasCsscalNative ( n , alpha , x , incx ) ; checkResultBLAS ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/api/blas/impl/SparseBaseLevel1.java#L128-L143<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public int iamax ( INDArray arr ) { switch ( arr . data ( ) . dataType ( ) ) { case DOUBLE : DefaultOpExecutioner . validateDataType ( DataBuffer . Type . DOUBLE , arr ) ; return idamax ( arr . length ( ) , arr , 1 ) ; case FLOAT : DefaultOpExecutioner . validateDataType ( DataBuffer . Type . FLOAT , arr ) ; return isamax ( arr . length ( ) , arr , 1 ) ; case HALF : DefaultOpExecutioner . validateDataType ( DataBuffer . Type . HALF , arr ) ; return ihamax ( arr . length ( ) , arr , 1 ) ; default : } throw new UnsupportedOperationException ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/dataset/NetcdfDataset.java#L1512-L1532<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>void dumpClasses ( Group g , PrintWriter out ) { out . println ( "Dimensions:" ) ; for ( Dimension ds : g . getDimensions ( ) ) { out . println ( "  " + ds . getShortName ( ) + " " + ds . getClass ( ) . getName ( ) ) ; } out . println ( "Atributes:" ) ; for ( Attribute a : g . getAttributes ( ) ) { out . println ( "  " + a . getShortName ( ) + " " + a . getClass ( ) . getName ( ) ) ; } out . println ( "Variables:" ) ; dumpVariables ( g . getVariables ( ) , out ) ; out . println ( "Groups:" ) ; for ( Group nested : g . getGroups ( ) ) { out . println ( "  " + nested . getFullName ( ) + " " + nested . getClass ( ) . getName ( ) ) ; dumpClasses ( nested , out ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/GlenKPeterson/Paguro/blob/eac0d64b2eb9496967334f635cdb270cffb2197b/src/main/java/org/organicdesign/fp/collections/RrbTree.java#L2615-L2631<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private static StringBuilder showSubNodes ( StringBuilder sB , Object [ ] items , int nextIndent ) { boolean isFirst = true ; for ( Object n : items ) { if ( isFirst ) { isFirst = false ; } else { //                sB.append(" "); if ( items [ 0 ] instanceof Leaf ) { sB . append ( " " ) ; } else { sB . append ( "\n" ) . append ( indentSpace ( nextIndent ) ) ; } } sB . append ( ( ( Node ) n ) . indentedStr ( nextIndent ) ) ; } return sB ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/thredds/client/catalog/builder/CatalogBuilder.java#L851-L869<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected Documentation readDocumentation ( Element s ) { String href = s . getAttributeValue ( "href" , Catalog . xlinkNS ) ; String title = s . getAttributeValue ( "title" , Catalog . xlinkNS ) ; String type = s . getAttributeValue ( "type" ) ; // not XLink type String content = s . getTextNormalize ( ) ; URI uri = null ; if ( href != null ) { try { uri = Catalog . resolveUri ( baseURI , href ) ; } catch ( Exception e ) { errlog . format ( " ** Invalid documentation href = '%s' err='%s'%n" , href , e . getMessage ( ) ) ; logger . debug ( " ** Invalid documentation href = '{}' err='{}'" , href , e . getMessage ( ) ) ; } } return new Documentation ( href , uri , title , type , content ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/Str.java#L341-L343<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String compact ( String str ) { return FastStringUtils . noCopyStringFromChars ( Chr . compact ( FastStringUtils . toCharArray ( str ) ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/google/guice/blob/a0552a16d813ead98fe73737fb001db336650251/extensions/struts2/src/com/google/inject/struts2/Struts2Factory.java#L241-L248<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private static boolean hasScope ( Class < ? extends Interceptor > interceptorClass ) { for ( Annotation annotation : interceptorClass . getAnnotations ( ) ) { if ( Annotations . isScopeAnnotation ( annotation . annotationType ( ) ) ) { return true ; } } return false ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java#L978-L982<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void setFeatureStyles ( FeatureRow featureRow , FeatureStyles featureStyles ) { setFeatureStyles ( featureRow . getTable ( ) . getTableName ( ) , featureRow . getId ( ) , featureStyles ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-servlet/src/main/java/jodd/servlet/tag/TagUtil.java#L85-L88<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String renderBodyToString ( final JspFragment body ) throws JspException { char [ ] result = renderBody ( body ) ; return new String ( result ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/patrickfav/slf4j-timber/blob/bb6be99a0ee7c6d764c58b00e7d46f94d5b86160/slf4j-timber/src/main/java/org/slf4j/impl/TimberAndroidLoggerAdapter.java#L428-L430<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void error ( String format , Object arg ) { formatAndLog ( Log . ERROR , format , arg ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/IS24-XML/src/main/jaxb/org/openestate/io/is24_xml/xml/BueroPraxisTyp.java#L258-L265<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Generated ( value = "com.sun.tools.xjc.Driver" , date = "2018-10-12T02:52:47+02:00" , comments = "JAXB RI v2.2.11" ) public JaNeinVereinbarungTyp getKlimaanlage ( ) { if ( klimaanlage == null ) { return JaNeinVereinbarungTyp . KEINE_ANGABE ; } else { return klimaanlage ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/index/OIndexChangesWrapper.java#L93-L104<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public Set < Map . Entry < Object , OIdentifiable > > toEntries ( ) { if ( source . isRebuilding ( ) ) throwRebuildException ( ) ; final Set < Map . Entry < Object , OIdentifiable > > entries = delegate . toEntries ( ) ; if ( source . getRebuildVersion ( ) != indexRebuildVersion ) throwRebuildException ( ) ; return entries ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/naming/jndi/CNCtx.java#L275-L317<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private String initUsingIiopUrl ( ORB defOrb , String url , Hashtable env ) throws NamingException { try { IiopUrl parsedUrl = new IiopUrl ( url ) ; Vector addrs = parsedUrl . getAddresses ( ) ; IiopUrl . Address addr ; NamingException savedException = null ; for ( int i = 0 ; i < addrs . size ( ) ; i ++ ) { addr = ( IiopUrl . Address ) addrs . elementAt ( i ) ; try { if ( defOrb != null ) { try { String tmpUrl = "corbaloc:iiop:" + addr . host + ":" + addr . port + "/NameService" ; org . omg . CORBA . Object rootCtx = defOrb . string_to_object ( tmpUrl ) ; setOrbAndRootContext ( defOrb , rootCtx ) ; return parsedUrl . getStringName ( ) ; } catch ( Exception e ) { } // keep going } // Get ORB ORB orb = CorbaUtils . getOrb ( addr . host , addr . port , env ) ; // Assign to fields setOrbAndRootContext ( orb , ( String ) null ) ; return parsedUrl . getStringName ( ) ; } catch ( NamingException ne ) { savedException = ne ; } } if ( savedException != null ) { throw savedException ; } else { throw IIOPLogger . ROOT_LOGGER . invalidURLOrIOR ( url ) ; } } catch ( MalformedURLException e ) { throw new ConfigurationException ( e . getMessage ( ) ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/internal/subscribers/BasicFuseableSubscriber.java#L55-L73<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ SuppressWarnings ( "unchecked" ) @ Override public final void onSubscribe ( Subscription s ) { if ( SubscriptionHelper . validate ( this . upstream , s ) ) { this . upstream = s ; if ( s instanceof QueueSubscription ) { this . qs = ( QueueSubscription < T > ) s ; } if ( beforeDownstream ( ) ) { downstream . onSubscribe ( this ) ; afterDownstream ( ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.eclipse.packagedrone.repo.channel/src/org/eclipse/packagedrone/repo/channel/util/RepositoryLinks.java#L97-L117<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void fillRepoLinks ( final ChannelInformation channel , final List < MenuEntry > links , final String baseName , final int basePriority , final String prefix , final int priorityOffset , final Function < String , LinkTarget > targetFunction ) { Objects . requireNonNull ( channel , "'channel' must not be null" ) ; Objects . requireNonNull ( links , "'links' must not be null" ) ; Objects . requireNonNull ( baseName , "'baseName' must not be null" ) ; Objects . requireNonNull ( prefix , "'prefix' must not be null" ) ; Objects . requireNonNull ( targetFunction , "'targetFunction' must not be null" ) ; links . add ( new MenuEntry ( baseName , basePriority , prefix + " (by ID)" , priorityOffset , targetFunction . apply ( channel . getId ( ) ) , Modifier . LINK , null ) ) ; int i = 1 ; for ( final String name : channel . getNames ( ) ) { final LinkTarget target = targetFunction . apply ( name ) ; if ( target != null ) { links . add ( new MenuEntry ( baseName , basePriority , String . format ( "%s (name: %s)" , prefix , name ) , priorityOffset + i , target , Modifier . LINK , null ) ) ; } i ++ ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ArpNetworking/logback-steno/blob/abd5c68ce7d42c39f80ffbad6d162d5fed3a346e/src/main/java/com/arpnetworking/steno/Logger.java#L604-L618<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void debug ( @ Nullable final String event , @ Nullable final String message , @ Nullable final String dataKey1 , @ Nullable final Object dataValue1 , @ Nullable final Throwable throwable ) { if ( getSlf4jLogger ( ) . isDebugEnabled ( ) ) { LogLevel . DEBUG . log ( getSlf4jLogger ( ) , event , createKeysFromArgs ( MESSAGE_DATA_KEY , dataKey1 ) , createValuesFromArgs ( message , dataValue1 ) , throwable ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-proxetta/src/main/java/jodd/proxetta/ProxyTargetReplacement.java#L149-L201<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void info ( final MethodVisitor mv , final MethodInfo methodInfo , final int argsOff ) { mv . visitTypeInsn ( Opcodes . NEW , PROXY_TARGET_INFO ) ; mv . visitInsn ( DUP ) ; mv . visitMethodInsn ( Opcodes . INVOKESPECIAL , PROXY_TARGET_INFO , "<init>" , "()V" , false ) ; //		int argsOff = methodInfo.getAllArgumentsSize(); //		argsOff++; mv . visitVarInsn ( Opcodes . ASTORE , argsOff ) ; // argument count mv . visitVarInsn ( Opcodes . ALOAD , argsOff ) ; argumentsCount ( mv , methodInfo ) ; mv . visitFieldInsn ( Opcodes . PUTFIELD , PROXY_TARGET_INFO , "argumentCount" , "I" ) ; // arguments class mv . visitVarInsn ( Opcodes . ALOAD , argsOff ) ; createArgumentsClassArray ( mv , methodInfo ) ; mv . visitFieldInsn ( Opcodes . PUTFIELD , PROXY_TARGET_INFO , "argumentsClasses" , "[Ljava/lang/Class;" ) ; // arguments mv . visitVarInsn ( Opcodes . ALOAD , argsOff ) ; createArgumentsArray ( mv , methodInfo ) ; mv . visitFieldInsn ( Opcodes . PUTFIELD , PROXY_TARGET_INFO , "arguments" , "[Ljava/lang/Object;" ) ; // return type mv . visitVarInsn ( Opcodes . ALOAD , argsOff ) ; returnType ( mv , methodInfo ) ; mv . visitFieldInsn ( Opcodes . PUTFIELD , PROXY_TARGET_INFO , "returnType" , AsmUtil . L_SIGNATURE_JAVA_LANG_CLASS ) ; // target method name mv . visitVarInsn ( Opcodes . ALOAD , argsOff ) ; targetMethodName ( mv , methodInfo ) ; mv . visitFieldInsn ( Opcodes . PUTFIELD , PROXY_TARGET_INFO , "targetMethodName" , AsmUtil . L_SIGNATURE_JAVA_LANG_STRING ) ; // target method name mv . visitVarInsn ( Opcodes . ALOAD , argsOff ) ; targetMethodDescription ( mv , methodInfo ) ; mv . visitFieldInsn ( Opcodes . PUTFIELD , PROXY_TARGET_INFO , "targetMethodDescription" , AsmUtil . L_SIGNATURE_JAVA_LANG_STRING ) ; // target method name mv . visitVarInsn ( Opcodes . ALOAD , argsOff ) ; targetMethodSignature ( mv , methodInfo ) ; mv . visitFieldInsn ( Opcodes . PUTFIELD , PROXY_TARGET_INFO , "targetMethodSignature" , AsmUtil . L_SIGNATURE_JAVA_LANG_STRING ) ; // target class mv . visitVarInsn ( Opcodes . ALOAD , argsOff ) ; targetClass ( mv , methodInfo ) ; mv . visitFieldInsn ( Opcodes . PUTFIELD , PROXY_TARGET_INFO , "targetClass" , AsmUtil . L_SIGNATURE_JAVA_LANG_CLASS ) ; // the end mv . visitVarInsn ( Opcodes . ALOAD , argsOff ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/rest-assured/src/main/java/io/restassured/internal/MultiValueEntity.java#L91-L98<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public String getValue ( String entityName ) { notNull ( entityName , "Entity name" ) ; final T entity = get ( entityName ) ; if ( entity == null ) { return null ; } return entity . getValue ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4lib/src/main/java/dap4/dap4lib/DMRPrinter.java#L158-L290<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void printNode ( DapNode node ) throws IOException { if ( node == null ) return ; DapSort sort = node . getSort ( ) ; String dmrname = sort . getName ( ) ; switch ( sort ) { case DATASET : // treat like group case GROUP : if ( ! this . ce . references ( node ) ) break ; DapGroup group = ( DapGroup ) node ; printer . marginPrint ( "<" + dmrname ) ; int flags = ( sort == DapSort . DATASET ? PERLINE : NILFLAGS ) ; printXMLAttributes ( node , ce , flags ) ; printer . println ( ">" ) ; printer . indent ( ) ; // Make the output order conform to the spec if ( group . getDimensions ( ) . size ( ) > 0 ) { for ( DapNode subnode : group . getDimensions ( ) ) { if ( ! this . ce . references ( subnode ) ) continue ; printNode ( subnode ) ; printer . eol ( ) ; } } if ( group . getEnums ( ) . size ( ) > 0 ) { for ( DapNode subnode : group . getEnums ( ) ) { if ( ! this . ce . references ( subnode ) ) continue ; printNode ( subnode ) ; printer . eol ( ) ; } } if ( group . getVariables ( ) . size ( ) > 0 ) for ( DapNode subnode : group . getVariables ( ) ) { if ( ! this . ce . references ( subnode ) ) continue ; printNode ( subnode ) ; printer . eol ( ) ; } printMetadata ( node ) ; if ( group . getGroups ( ) . size ( ) > 0 ) for ( DapNode subnode : group . getGroups ( ) ) { if ( ! this . ce . references ( subnode ) ) continue ; printNode ( subnode ) ; printer . eol ( ) ; } printer . outdent ( ) ; printer . marginPrint ( "</" + dmrname + ">" ) ; break ; case DIMENSION : if ( ! this . ce . references ( node ) ) break ; DapDimension dim = ( DapDimension ) node ; if ( ! dim . isShared ( ) ) break ; // ignore, here, anonymous dimensions printer . marginPrint ( "<" + dmrname ) ; printXMLAttributes ( node , ce , NILFLAGS ) ; if ( dim . isUnlimited ( ) ) printXMLAttribute ( AbstractDSP . UCARTAGUNLIMITED , "1" , NILFLAGS ) ; if ( hasMetadata ( node ) ) { printer . println ( ">" ) ; printMetadata ( node ) ; printer . marginPrint ( "</" + dmrname + ">" ) ; } else { printer . print ( "/>" ) ; } break ; case ENUMERATION : if ( ! this . ce . references ( node ) ) break ; DapEnumeration en = ( DapEnumeration ) node ; printer . marginPrint ( "<" + dmrname ) ; printXMLAttributes ( en , ce , NILFLAGS ) ; printer . println ( ">" ) ; printer . indent ( ) ; List < String > econstnames = en . getNames ( ) ; for ( String econst : econstnames ) { DapEnumConst value = en . lookup ( econst ) ; assert ( value != null ) ; printer . marginPrintln ( String . format ( "<EnumConst name=\"%s\" value=\"%d\"/>" , Escape . entityEscape ( econst , null ) , value . getValue ( ) ) ) ; } printMetadata ( node ) ; printer . outdent ( ) ; printer . marginPrint ( "</" + dmrname + ">" ) ; break ; case VARIABLE : if ( ! this . ce . references ( node ) ) break ; DapVariable var = ( DapVariable ) node ; DapType type = var . getBaseType ( ) ; printer . marginPrint ( "<" + type . getTypeSort ( ) . name ( ) ) ; printXMLAttributes ( node , ce , NILFLAGS ) ; if ( type . isAtomic ( ) ) { if ( ( hasMetadata ( node ) || hasDimensions ( var ) || hasMaps ( var ) ) ) { printer . println ( ">" ) ; printer . indent ( ) ; if ( hasDimensions ( var ) ) printDimrefs ( var ) ; if ( hasMetadata ( var ) ) printMetadata ( var ) ; if ( hasMaps ( var ) ) printMaps ( var ) ; printer . outdent ( ) ; printer . marginPrint ( "</" + type . getTypeSort ( ) . name ( ) + ">" ) ; } else printer . print ( "/>" ) ; } else if ( type . getTypeSort ( ) . isCompound ( ) ) { DapStructure struct = ( DapStructure ) type ; printer . println ( ">" ) ; printer . indent ( ) ; for ( DapVariable field : struct . getFields ( ) ) { if ( ! this . ce . references ( field ) ) continue ; printNode ( field ) ; printer . eol ( ) ; } printDimrefs ( var ) ; printMetadata ( var ) ; printMaps ( var ) ; printer . outdent ( ) ; printer . marginPrint ( "</" + type . getTypeSort ( ) . name ( ) + ">" ) ; } else assert false : "Illegal variable base type" ; break ; default : assert ( false ) : "Unexpected sort: " + sort . name ( ) ; break ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-archive/src/main/java/io/aeron/archive/client/ReplayMerge.java#L181-L185<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public int poll ( final FragmentHandler fragmentHandler , final int fragmentLimit ) { doWork ( ) ; return null == image ? 0 : image . poll ( fragmentHandler , fragmentLimit ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/js-lib-com/tiny-container/blob/ef68deb9ec40b217b4cd2df56d9c5a213dd6b89e/src/main/java/js/servlet/SessionScopeFactory.java#L56-L67<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public Object getInstance ( InstanceKey instanceKey ) { // at this point managed instance key is guaranteed to be non null  // SESSION instances are stored on current HTTP session as named attribute value, using provided instance key  // HTTP session is created on the fly if necessary  // if HTTP session exists and possesses an attribute with instance key, simply returns stored instance  // when HTTP session expires attribute values are removed and SESSION instances are garbage collected  HttpSession httpSession = getSession ( instanceKey ) ; return httpSession . getAttribute ( instanceKey . getValue ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/google/guice/blob/a0552a16d813ead98fe73737fb001db336650251/core/src/com/google/inject/internal/ConstructorInjector.java#L62-L105<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>Object construct ( final InternalContext context , Dependency < ? > dependency , /* @Nullable */ ProvisionListenerStackCallback < T > provisionCallback ) throws InternalProvisionException { final ConstructionContext < T > constructionContext = context . getConstructionContext ( this ) ; // We have a circular reference between constructors. Return a proxy. if ( constructionContext . isConstructing ( ) ) { // TODO (crazybob): if we can't proxy this object, can we proxy the other object? return constructionContext . createProxy ( context . getInjectorOptions ( ) , dependency . getKey ( ) . getTypeLiteral ( ) . getRawType ( ) ) ; } // If we're re-entering this factory while injecting fields or methods, // return the same instance. This prevents infinite loops. T t = constructionContext . getCurrentReference ( ) ; if ( t != null ) { if ( context . getInjectorOptions ( ) . disableCircularProxies ) { throw InternalProvisionException . circularDependenciesDisabled ( dependency . getKey ( ) . getTypeLiteral ( ) . getRawType ( ) ) ; } else { return t ; } } constructionContext . startConstruction ( ) ; try { // Optimization: Don't go through the callback stack if we have no listeners. if ( provisionCallback == null ) { return provision ( context , constructionContext ) ; } else { return provisionCallback . provision ( context , new ProvisionCallback < T > ( ) { @ Override public T call ( ) throws InternalProvisionException { return provision ( context , constructionContext ) ; } } ) ; } } finally { constructionContext . finishConstruction ( ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/artclarke/humble-video/blob/aa349ae2d7ef74160b7074feac8d298cf90394d1/humble-video-noarch/src/main/java/io/humble/video/KeyValueBag.java#L154-L166<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public java . util . Collection < String > getKeys ( ) { int numKeys = getNumKeys ( ) ; java . util . List < String > retval = new java . util . ArrayList < String > ( numKeys ) ; for ( int i = 0 ; i < getNumKeys ( ) ; i ++ ) { String key = getKey ( i ) ; if ( key != null && key . length ( ) > 0 ) retval . add ( key ) ; } return retval ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Netflix/hollow/blob/43ca100034a01050fb764170bd32b085ac9a3c22/hollow/src/main/java/com/netflix/hollow/api/codegen/HollowCodeGenerationUtils.java#L337-L351<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String generateAccessortMethodName ( String fieldName , Class < ? > clazz ) { String prefix = "get" ; if ( boolean . class . equals ( clazz ) || Boolean . class . equals ( clazz ) ) { for ( String booleanPrefix : booleanMethodPrefixes ) { if ( fieldName . startsWith ( booleanPrefix ) && fieldName . length ( ) > booleanPrefix . length ( ) ) { char firstCharAfterBooleanPrefix = fieldName . charAt ( booleanPrefix . length ( ) ) ; if ( Character . isUpperCase ( firstCharAfterBooleanPrefix ) ) { return fieldName ; } } } } return substituteInvalidChars ( prefix + uppercase ( fieldName ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Flowable.java#L8762-L8768<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ SuppressWarnings ( { "rawtypes" , "unchecked" } ) @ CheckReturnValue @ BackpressureSupport ( BackpressureKind . FULL ) @ SchedulerSupport ( SchedulerSupport . NONE ) public final Flowable < T > distinct ( ) { return distinct ( ( Function ) Functions . identity ( ) , Functions . < T > createHashSet ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/objectify/objectify/blob/4bf325d2e49b400326416977c7d9bbdf5380175b/src/main/java/com/googlecode/objectify/impl/KeyMetadata.java#L195-L202<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public com . google . cloud . datastore . Key getCompleteKey ( final P pojo ) { final com . google . cloud . datastore . IncompleteKey key = getIncompleteKey ( pojo ) ; if ( key instanceof com . google . cloud . datastore . Key ) return ( com . google . cloud . datastore . Key ) key ; else throw new IllegalArgumentException ( "You cannot create a Key for an object with a null @Id. Object was " + pojo ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/tds/src/main/java/thredds/server/ncss/controller/AbstractNcssController.java#L117-L123<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ ExceptionHandler ( NcssException . class ) public ResponseEntity < String > handle ( NcssException e ) { HttpHeaders responseHeaders = new HttpHeaders ( ) ; responseHeaders . setContentType ( MediaType . TEXT_PLAIN ) ; return new ResponseEntity <> ( e . getMessage ( ) , responseHeaders , HttpStatus . BAD_REQUEST ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/images/src/main/java/com/stanfy/enroscar/images/ImageRequestsBuilder.java#L78-L81<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public ImageRequestsBuilder add ( final String url ) { requests . add ( new ImageRequest ( manager , url , defaultAllowedSize ) ) ; return this ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ieb/sparsemapcontent/blob/0570fdf868adbbf7734790cbc09fe66480e5f2dc/core/src/main/java/org/sakaiproject/nakamura/lite/OSGiStoreListener.java#L81-L96<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void onUpdate ( String zone , String path , String user , String resourceType , boolean isNew , Map < String , Object > beforeEvent , String ... attributes ) { String topic = DEFAULT_UPDATE_TOPIC ; if ( isNew ) { topic = DEFAULT_CREATE_TOPIC ; if ( deleteTopics . containsKey ( zone ) ) { topic = createTopics . get ( zone ) ; } } else { if ( deleteTopics . containsKey ( zone ) ) { topic = updateTopics . get ( zone ) ; } } postEvent ( topic , path , user , resourceType , beforeEvent , attributes ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/cloudbees/extensibility-api/blob/10f508fdaaba1eda0fd44f70c457dbea74ffaac7/src/main/java/com/cloudbees/sdk/extensibility/ExtensionList.java#L79-L89<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public List < T > list ( Injector injector ) { List < T > r = new ArrayList < T > ( ) ; for ( Injector i = injector ; i != null ; i = i . getParent ( ) ) { for ( Entry < Key < ? > , Binding < ? > > e : i . getBindings ( ) . entrySet ( ) ) { if ( e . getKey ( ) . getTypeLiteral ( ) . equals ( type ) ) r . add ( ( T ) e . getValue ( ) . getProvider ( ) . get ( ) ) ; } } return r ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/metric/Intersection3D_F64.java#L50-L68<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static boolean intersect ( PlaneNormal3D_F64 plane , LineParametric3D_F64 line , Point3D_F64 intersection ) { double dx = plane . p . x - line . p . x ; double dy = plane . p . y - line . p . y ; double dz = plane . p . z - line . p . z ; double top = dx * plane . n . x + dy * plane . n . y + dz * plane . n . z ; double bottom = line . slope . dot ( plane . n ) ; if ( bottom == 0 ) return false ; double d = top / bottom ; intersection . x = line . p . x + d * line . slope . x ; intersection . y = line . p . y + d * line . slope . y ; intersection . z = line . p . z + d * line . slope . z ; return true ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/CommandLineParser.java#L208-L225<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public String getErrors ( ) { // Return the empty string if there are no errors. if ( parsingErrors . isEmpty ( ) ) { return "" ; } // Concatenate all the parsing errors together. String result = "" ; for ( String s : parsingErrors ) { result += s ; } return result ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/StringUtils.java#L81-L91<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String arrayToList ( String [ ] array , String delim ) { String result = "" ; for ( int i = 0 ; i < array . length ; i ++ ) { result += array [ i ] + ( ( i == ( array . length - 1 ) ) ? "" : delim ) ; } return result ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/abmargb/jamppa/blob/76f253239923df40904c462e3b88e7278b36b282/src/main/java/org/jivesoftware/smack/util/DNSUtil.java#L115-L122<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static List < HostAddress > resolveXMPPServerDomain ( final String domain ) { if ( dnsResolver == null ) { List < HostAddress > addresses = new ArrayList < HostAddress > ( 1 ) ; addresses . add ( new HostAddress ( domain , 5269 ) ) ; return addresses ; } return resolveDomain ( domain , ' ' ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ft/point/standard/TableConfigurerImpl.java#L68-L77<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected String matchAxisTypeAndDimension ( NetcdfDataset ds , AxisType type , final Dimension outer , final Dimension inner ) { Variable var = CoordSysEvaluator . findCoordByType ( ds , type , new CoordSysEvaluator . Predicate ( ) { @ Override public boolean match ( CoordinateAxis axis ) { return ( ( axis . getRank ( ) == 2 ) && outer . equals ( axis . getDimension ( 0 ) ) && inner . equals ( axis . getDimension ( 1 ) ) ) ; } } ) ; if ( var == null ) return null ; return var . getShortName ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-common/src/main/java/org/nd4j/linalg/util/BigDecimalMath.java#L726-L792<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>static public BigDecimal sin ( final BigDecimal x ) { if ( x . compareTo ( BigDecimal . ZERO ) < 0 ) { return sin ( x . negate ( ) ) . negate ( ) ; } else if ( x . compareTo ( BigDecimal . ZERO ) == 0 ) { return BigDecimal . ZERO ; } else { /* reduce modulo 2pi              */ BigDecimal res = mod2pi ( x ) ; double errpi = 0.5 * Math . abs ( x . ulp ( ) . doubleValue ( ) ) ; int val = 2 + err2prec ( FastMath . PI , errpi ) ; MathContext mc = new MathContext ( val ) ; BigDecimal p = pi ( mc ) ; mc = new MathContext ( x . precision ( ) ) ; if ( res . compareTo ( p ) > 0 ) { /* pi<x<=2pi: sin(x)= - sin(x-pi)                  */ return sin ( subtractRound ( res , p ) ) . negate ( ) ; } else if ( res . multiply ( new BigDecimal ( 2 ) ) . compareTo ( p ) > 0 ) { /* pi/2<x<=pi: sin(x)= sin(pi-x)                  */ return sin ( subtractRound ( p , res ) ) ; } else { /* for the range 0<=x<Pi/2 one could use sin(2x)=2sin(x)cos(x)                  * to split this further. Here, use the sine up to pi/4 and the cosine higher up.                  */ if ( res . multiply ( new BigDecimal ( 4 ) ) . compareTo ( p ) > 0 ) { /* x>pi/4: sin(x) = cos(pi/2-x)                      */ return cos ( subtractRound ( p . divide ( new BigDecimal ( 2 ) ) , res ) ) ; } else { /* Simple Taylor expansion, sum_{i=1..infinity} (-1)^(..)res^(2i+1)/(2i+1)! */ BigDecimal resul = res ; /* x^i */ BigDecimal xpowi = res ; /* 2i+1 factorial */ BigInteger ifac = BigInteger . ONE ; /* The error in the result is set by the error in x itself.                      */ double xUlpDbl = res . ulp ( ) . doubleValue ( ) ; /* The error in the result is set by the error in x itself.                      * We need at most k terms to squeeze x^(2k+1)/(2k+1)! below this value.                      * x^(2k+1) < x.ulp; (2k+1)*log10(x) < -x.precision; 2k*log10(x)< -x.precision;                      * 2k*(-log10(x)) > x.precision; 2k*log10(1/x) > x.precision                      */ int k = ( int ) ( res . precision ( ) / Math . log10 ( 1.0 / res . doubleValue ( ) ) ) / 2 ; MathContext mcTay = new MathContext ( err2prec ( res . doubleValue ( ) , xUlpDbl / k ) ) ; for ( int i = 1 ; ; i ++ ) { /* TBD: at which precision will 2*i or 2*i+1 overflow?                          */ ifac = ifac . multiply ( BigInteger . valueOf ( 2 * i ) ) ; ifac = ifac . multiply ( BigInteger . valueOf ( 2 * i + 1 ) ) ; xpowi = xpowi . multiply ( res ) . multiply ( res ) . negate ( ) ; BigDecimal corr = xpowi . divide ( new BigDecimal ( ifac ) , mcTay ) ; resul = resul . add ( corr ) ; if ( corr . abs ( ) . doubleValue ( ) < 0.5 * xUlpDbl ) { break ; } } /* The error in the result is set by the error in x itself.                      */ mc = new MathContext ( res . precision ( ) ) ; return resul . round ( mc ) ; } } } /* sin */ }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-api/src/main/java/com/fluidbpm/program/api/vo/ws/auth/AuthResponse.java#L228-L264<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public JSONObject toJsonObject ( ) throws JSONException { JSONObject returnVal = super . toJsonObject ( ) ; //Salt... if ( this . getSalt ( ) != null ) { returnVal . put ( JSONMapping . SALT , this . getSalt ( ) ) ; } //Encrypted Data Base 64... if ( this . getEncryptedDataBase64 ( ) != null ) { returnVal . put ( JSONMapping . ENCRYPTED_DATA_BASE_64 , this . getEncryptedDataBase64 ( ) ) ; } //Encrypted Data HMAC Base 64... if ( this . getEncryptedDataHmacBase64 ( ) != null ) { returnVal . put ( JSONMapping . ENCRYPTED_DATA_HMAC_BASE_64 , this . getEncryptedDataHmacBase64 ( ) ) ; } //IV Base 64... if ( this . getIvBase64 ( ) != null ) { returnVal . put ( JSONMapping . IV_BASE_64 , this . getIvBase64 ( ) ) ; } //Seed Base 64... if ( this . getSeedBase64 ( ) != null ) { returnVal . put ( JSONMapping . SEED_BASE_64 , this . getSeedBase64 ( ) ) ; } //Service Ticket Base 64... if ( this . getServiceTicketBase64 ( ) != null ) { returnVal . put ( JSONMapping . SERVICE_TICKET_BASE_64 , this . getServiceTicketBase64 ( ) ) ; } return returnVal ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-hive/parquet-hive-binding/parquet-hive-binding-factory/src/main/java/org/apache/parquet/hive/HiveBindingFactory.java#L64-L77<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ SuppressWarnings ( "rawtypes" ) Class < ? extends HiveBinding > create ( ClassLoader classLoader ) { // HiveVersionInfo was added in 0.11, if the class does // not exist then return the hive binding for 0.10 Class hiveVersionInfo ; try { hiveVersionInfo = Class . forName ( HIVE_VERSION_CLASS_NAME , true , classLoader ) ; } catch ( ClassNotFoundException e ) { LOG . debug ( "Class " + HIVE_VERSION_CLASS_NAME + ", not found, returning {}" , Hive010Binding . class . getSimpleName ( ) ) ; return Hive010Binding . class ; } return createInternal ( hiveVersionInfo ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/yunify/qingstor-sdk-java/blob/b44a228a99e60e4d6e5a450b7c05972552ab9962/src/main/java/com/qingstor/sdk/upload/UploadManager.java#L86-L111<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void put ( File file , String objectKey , String fileName , String eTag ) throws QSException { // Check the file does exist or not. if ( ! file . exists ( ) || file . isDirectory ( ) ) throw new QSException ( "File does not exist or it is a directory." ) ; // Check file's length. long length = file . length ( ) ; if ( length < 1 ) throw new QSException ( "The size of file cannot be smaller than 1 byte." ) ; if ( length <= partSize ) { partCounts = 1 ; putFile ( file , objectKey , fileName , length ) ; } else { // Do multi uploads. // Calculate part counts. if ( length / partSize > MAX_PART_COUNTS ) { partSize = length / MAX_PART_COUNTS ; partCounts = MAX_PART_COUNTS ; // Check every part's size(max 5GB). if ( partSize > 5 * 1024 * 1024 * 1024L ) throw new QSException ( "The size of file is too large." ) ; } else { partCounts = ( int ) ( length / partSize ) ; if ( length % partSize > 0 ) partCounts += 1 ; } putFileMulti ( file , objectKey , fileName , eTag , length ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/abmargb/jamppa/blob/76f253239923df40904c462e3b88e7278b36b282/src/main/java/org/jamppa/component/utils/RSMUtils.java#L40-L55<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void appendRSMElement ( Element queryElement , RSM rsm ) { Element setElement = queryElement . addElement ( "set" , RSM . NAMESPACE ) ; if ( rsm . getFirst ( ) != null ) { Element firstElement = setElement . addElement ( "first" ) ; firstElement . addAttribute ( "index" , rsm . getIndex ( ) . toString ( ) ) ; firstElement . setText ( rsm . getFirst ( ) ) ; } if ( rsm . getLast ( ) != null ) { Element lastElement = setElement . addElement ( "last" ) ; lastElement . setText ( rsm . getLast ( ) ) ; } setElement . addElement ( "count" ) . setText ( String . valueOf ( rsm . getCount ( ) ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/configuration/ConfigurationHandler.java#L453-L464<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void matchParentCommand ( final List < ConfigCommand > commandList ) { if ( commandList == null ) { return ; } for ( int i = 0 ; i < commandList . size ( ) ; i ++ ) { ConfigCommand child = commandList . get ( i ) ; if ( ! child . getCommandTypeName ( ) . equalsIgnoreCase ( TieConstants . COMMAND_FORM ) ) { setParentForChildCommand ( commandList , i , child ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/ma2/ArrayStructure.java#L859-L871<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public String getScalarString ( int recnum , StructureMembers . Member m ) { if ( m . getDataType ( ) == DataType . CHAR ) { ArrayChar data = ( ArrayChar ) m . getDataArray ( ) ; return data . getString ( recnum ) ; } if ( m . getDataType ( ) == DataType . STRING ) { Array data = m . getDataArray ( ) ; return ( String ) data . getObject ( recnum ) ; } throw new IllegalArgumentException ( "Type is " + m . getDataType ( ) + ", must be String or char" ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/ee/src/main/java/org/jboss/as/ee/component/ComponentConfiguration.java#L327-L329<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void addAroundConstructInterceptor ( InterceptorFactory interceptorFactory , int priority ) { aroundConstructInterceptors . add ( Collections . singletonList ( interceptorFactory ) , priority ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/sdk/src/main/java/com/streamsets/pipeline/sdk/ProtoRunner.java#L81-L97<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private boolean isConfigurationActive ( ConfigDef configDef , Map < String , Object > configuration ) { String dependsOn = configDef . dependsOn ( ) ; if ( ! dependsOn . isEmpty ( ) ) { Object dependsOnValue = configuration . get ( dependsOn ) ; if ( dependsOnValue != null ) { String valueStr = dependsOnValue . toString ( ) ; for ( String trigger : configDef . triggeredByValue ( ) ) { if ( valueStr . equals ( trigger ) ) { return true ; } } return false ; } return false ; } return true ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/rete/part/VertexEditPart.java#L152-L161<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void propertyChange ( PropertyChangeEvent evt ) { String prop = evt . getPropertyName ( ) ; if ( GraphicalVertex . SIZE_PROP . equals ( prop ) || GraphicalVertex . LOCATION_PROP . equals ( prop ) ) { refreshVisuals ( ) ; } else if ( GraphicalVertex . SOURCE_CONNECTIONS_PROP . equals ( prop ) ) { refreshSourceConnections ( ) ; } else if ( GraphicalVertex . TARGET_CONNECTIONS_PROP . equals ( prop ) ) { refreshTargetConnections ( ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/org/jcodec/common/dct/FfmpegIntDct.java#L73-L454<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private final static void pass1 ( ShortBuffer data ) { int z1 ; int tmp2 ; int tmp3 ; int tmp0 ; int tmp1 ; int tmp10 ; int tmp13 ; int tmp11 ; int tmp12 ; int z2 ; int z3 ; int z4 ; int z5 ; ShortBuffer dataptr = data . duplicate ( ) ; for ( int rowctr = DCTSIZE - 1 ; rowctr >= 0 ; rowctr -- ) { /*              * Due to quantization, we will usually find that many of the input              * coefficients are zero, especially the AC terms. We can exploit              * this by short-circuiting the IDCT calculation for any row in              * which all the AC terms are zero. In that case each output is              * equal to the DC coefficient (with scale factor as needed). With              * typical images and quantization tables, half or more of the row              * DCT calculations can be simplified this way.              */ // register int *idataptr = (int*)dataptr; /*              * WARNING: we do the same permutation as MMX idct to simplify the              * video core              */ int d0 = dataptr . get ( 0 ) ; int d2 = dataptr . get ( 1 ) ; int d4 = dataptr . get ( 2 ) ; int d6 = dataptr . get ( 3 ) ; int d1 = dataptr . get ( 4 ) ; int d3 = dataptr . get ( 5 ) ; int d5 = dataptr . get ( 6 ) ; int d7 = dataptr . get ( 7 ) ; if ( ( d1 | d2 | d3 | d4 | d5 | d6 | d7 ) == 0 ) { /* AC terms all zero */ if ( d0 != 0 ) { /* Compute a 32 bit value to assign. */ int dcval = ( int ) ( d0 << PASS1_BITS ) ; for ( int i = 0 ; i < 8 ; i ++ ) { dataptr . put ( i , ( short ) dcval ) ; } } /*                  * advance pointer to next row                  */ dataptr = advance ( dataptr , DCTSIZE ) ; continue ; } /* Even part: reverse the even part of the forward DCT. */ /* The rotator is sqrt(2)c(-6). */ if ( d6 != 0 ) { if ( d2 != 0 ) { /* d0 != 0, d2 != 0, d4 != 0, d6 != 0 */ z1 = MULTIPLY ( d2 + d6 , FIX_0_541196100 ) ; tmp2 = z1 + MULTIPLY ( - d6 , FIX_1_847759065 ) ; tmp3 = z1 + MULTIPLY ( d2 , FIX_0_765366865 ) ; tmp0 = ( d0 + d4 ) << CONST_BITS ; tmp1 = ( d0 - d4 ) << CONST_BITS ; tmp10 = tmp0 + tmp3 ; tmp13 = tmp0 - tmp3 ; tmp11 = tmp1 + tmp2 ; tmp12 = tmp1 - tmp2 ; } else { /* d0 != 0, d2 == 0, d4 != 0, d6 != 0 */ tmp2 = MULTIPLY ( - d6 , FIX_1_306562965 ) ; tmp3 = MULTIPLY ( d6 , FIX_0_541196100 ) ; tmp0 = ( d0 + d4 ) << CONST_BITS ; tmp1 = ( d0 - d4 ) << CONST_BITS ; tmp10 = tmp0 + tmp3 ; tmp13 = tmp0 - tmp3 ; tmp11 = tmp1 + tmp2 ; tmp12 = tmp1 - tmp2 ; } } else { if ( d2 != 0 ) { /* d0 != 0, d2 != 0, d4 != 0, d6 == 0 */ tmp2 = MULTIPLY ( d2 , FIX_0_541196100 ) ; tmp3 = MULTIPLY ( d2 , FIX_1_306562965 ) ; tmp0 = ( d0 + d4 ) << CONST_BITS ; tmp1 = ( d0 - d4 ) << CONST_BITS ; tmp10 = tmp0 + tmp3 ; tmp13 = tmp0 - tmp3 ; tmp11 = tmp1 + tmp2 ; tmp12 = tmp1 - tmp2 ; } else { /* d0 != 0, d2 == 0, d4 != 0, d6 == 0 */ tmp10 = tmp13 = ( d0 + d4 ) << CONST_BITS ; tmp11 = tmp12 = ( d0 - d4 ) << CONST_BITS ; } } /*              * Odd part per figure 8; the matrix is unitary and hence its              * transpose is its inverse. i0..i3 are y7,y5,y3,y1 respectively.              */ if ( d7 != 0 ) { if ( d5 != 0 ) { if ( d3 != 0 ) { if ( d1 != 0 ) { /* d1 != 0, d3 != 0, d5 != 0, d7 != 0 */ z1 = d7 + d1 ; z2 = d5 + d3 ; z3 = d7 + d3 ; z4 = d5 + d1 ; z5 = MULTIPLY ( z3 + z4 , FIX_1_175875602 ) ; tmp0 = MULTIPLY ( d7 , FIX_0_298631336 ) ; tmp1 = MULTIPLY ( d5 , FIX_2_053119869 ) ; tmp2 = MULTIPLY ( d3 , FIX_3_072711026 ) ; tmp3 = MULTIPLY ( d1 , FIX_1_501321110 ) ; z1 = MULTIPLY ( - z1 , FIX_0_899976223 ) ; z2 = MULTIPLY ( - z2 , FIX_2_562915447 ) ; z3 = MULTIPLY ( - z3 , FIX_1_961570560 ) ; z4 = MULTIPLY ( - z4 , FIX_0_390180644 ) ; z3 += z5 ; z4 += z5 ; tmp0 += z1 + z3 ; tmp1 += z2 + z4 ; tmp2 += z2 + z3 ; tmp3 += z1 + z4 ; } else { /* d1 == 0, d3 != 0, d5 != 0, d7 != 0 */ z2 = d5 + d3 ; z3 = d7 + d3 ; z5 = MULTIPLY ( z3 + d5 , FIX_1_175875602 ) ; tmp0 = MULTIPLY ( d7 , FIX_0_298631336 ) ; tmp1 = MULTIPLY ( d5 , FIX_2_053119869 ) ; tmp2 = MULTIPLY ( d3 , FIX_3_072711026 ) ; z1 = MULTIPLY ( - d7 , FIX_0_899976223 ) ; z2 = MULTIPLY ( - z2 , FIX_2_562915447 ) ; z3 = MULTIPLY ( - z3 , FIX_1_961570560 ) ; z4 = MULTIPLY ( - d5 , FIX_0_390180644 ) ; z3 += z5 ; z4 += z5 ; tmp0 += z1 + z3 ; tmp1 += z2 + z4 ; tmp2 += z2 + z3 ; tmp3 = z1 + z4 ; } } else { if ( d1 != 0 ) { /* d1 != 0, d3 == 0, d5 != 0, d7 != 0 */ z1 = d7 + d1 ; z4 = d5 + d1 ; z5 = MULTIPLY ( d7 + z4 , FIX_1_175875602 ) ; tmp0 = MULTIPLY ( d7 , FIX_0_298631336 ) ; tmp1 = MULTIPLY ( d5 , FIX_2_053119869 ) ; tmp3 = MULTIPLY ( d1 , FIX_1_501321110 ) ; z1 = MULTIPLY ( - z1 , FIX_0_899976223 ) ; z2 = MULTIPLY ( - d5 , FIX_2_562915447 ) ; z3 = MULTIPLY ( - d7 , FIX_1_961570560 ) ; z4 = MULTIPLY ( - z4 , FIX_0_390180644 ) ; z3 += z5 ; z4 += z5 ; tmp0 += z1 + z3 ; tmp1 += z2 + z4 ; tmp2 = z2 + z3 ; tmp3 += z1 + z4 ; } else { /* d1 == 0, d3 == 0, d5 != 0, d7 != 0 */ tmp0 = MULTIPLY ( - d7 , FIX_0_601344887 ) ; z1 = MULTIPLY ( - d7 , FIX_0_899976223 ) ; z3 = MULTIPLY ( - d7 , FIX_1_961570560 ) ; tmp1 = MULTIPLY ( - d5 , FIX_0_509795579 ) ; z2 = MULTIPLY ( - d5 , FIX_2_562915447 ) ; z4 = MULTIPLY ( - d5 , FIX_0_390180644 ) ; z5 = MULTIPLY ( d5 + d7 , FIX_1_175875602 ) ; z3 += z5 ; z4 += z5 ; tmp0 += z3 ; tmp1 += z4 ; tmp2 = z2 + z3 ; tmp3 = z1 + z4 ; } } } else { if ( d3 != 0 ) { if ( d1 != 0 ) { /* d1 != 0, d3 != 0, d5 == 0, d7 != 0 */ z1 = d7 + d1 ; z3 = d7 + d3 ; z5 = MULTIPLY ( z3 + d1 , FIX_1_175875602 ) ; tmp0 = MULTIPLY ( d7 , FIX_0_298631336 ) ; tmp2 = MULTIPLY ( d3 , FIX_3_072711026 ) ; tmp3 = MULTIPLY ( d1 , FIX_1_501321110 ) ; z1 = MULTIPLY ( - z1 , FIX_0_899976223 ) ; z2 = MULTIPLY ( - d3 , FIX_2_562915447 ) ; z3 = MULTIPLY ( - z3 , FIX_1_961570560 ) ; z4 = MULTIPLY ( - d1 , FIX_0_390180644 ) ; z3 += z5 ; z4 += z5 ; tmp0 += z1 + z3 ; tmp1 = z2 + z4 ; tmp2 += z2 + z3 ; tmp3 += z1 + z4 ; } else { /* d1 == 0, d3 != 0, d5 == 0, d7 != 0 */ z3 = d7 + d3 ; tmp0 = MULTIPLY ( - d7 , FIX_0_601344887 ) ; z1 = MULTIPLY ( - d7 , FIX_0_899976223 ) ; tmp2 = MULTIPLY ( d3 , FIX_0_509795579 ) ; z2 = MULTIPLY ( - d3 , FIX_2_562915447 ) ; z5 = MULTIPLY ( z3 , FIX_1_175875602 ) ; z3 = MULTIPLY ( - z3 , FIX_0_785694958 ) ; tmp0 += z3 ; tmp1 = z2 + z5 ; tmp2 += z3 ; tmp3 = z1 + z5 ; } } else { if ( d1 != 0 ) { /* d1 != 0, d3 == 0, d5 == 0, d7 != 0 */ z1 = d7 + d1 ; z5 = MULTIPLY ( z1 , FIX_1_175875602 ) ; z1 = MULTIPLY ( z1 , FIX_0_275899380 ) ; z3 = MULTIPLY ( - d7 , FIX_1_961570560 ) ; tmp0 = MULTIPLY ( - d7 , FIX_1_662939225 ) ; z4 = MULTIPLY ( - d1 , FIX_0_390180644 ) ; tmp3 = MULTIPLY ( d1 , FIX_1_111140466 ) ; tmp0 += z1 ; tmp1 = z4 + z5 ; tmp2 = z3 + z5 ; tmp3 += z1 ; } else { /* d1 == 0, d3 == 0, d5 == 0, d7 != 0 */ tmp0 = MULTIPLY ( - d7 , FIX_1_387039845 ) ; tmp1 = MULTIPLY ( d7 , FIX_1_175875602 ) ; tmp2 = MULTIPLY ( - d7 , FIX_0_785694958 ) ; tmp3 = MULTIPLY ( d7 , FIX_0_275899380 ) ; } } } } else { if ( d5 != 0 ) { if ( d3 != 0 ) { if ( d1 != 0 ) { /* d1 != 0, d3 != 0, d5 != 0, d7 == 0 */ z2 = d5 + d3 ; z4 = d5 + d1 ; z5 = MULTIPLY ( d3 + z4 , FIX_1_175875602 ) ; tmp1 = MULTIPLY ( d5 , FIX_2_053119869 ) ; tmp2 = MULTIPLY ( d3 , FIX_3_072711026 ) ; tmp3 = MULTIPLY ( d1 , FIX_1_501321110 ) ; z1 = MULTIPLY ( - d1 , FIX_0_899976223 ) ; z2 = MULTIPLY ( - z2 , FIX_2_562915447 ) ; z3 = MULTIPLY ( - d3 , FIX_1_961570560 ) ; z4 = MULTIPLY ( - z4 , FIX_0_390180644 ) ; z3 += z5 ; z4 += z5 ; tmp0 = z1 + z3 ; tmp1 += z2 + z4 ; tmp2 += z2 + z3 ; tmp3 += z1 + z4 ; } else { /* d1 == 0, d3 != 0, d5 != 0, d7 == 0 */ z2 = d5 + d3 ; z5 = MULTIPLY ( z2 , FIX_1_175875602 ) ; tmp1 = MULTIPLY ( d5 , FIX_1_662939225 ) ; z4 = MULTIPLY ( - d5 , FIX_0_390180644 ) ; z2 = MULTIPLY ( - z2 , FIX_1_387039845 ) ; tmp2 = MULTIPLY ( d3 , FIX_1_111140466 ) ; z3 = MULTIPLY ( - d3 , FIX_1_961570560 ) ; tmp0 = z3 + z5 ; tmp1 += z2 ; tmp2 += z2 ; tmp3 = z4 + z5 ; } } else { if ( d1 != 0 ) { /* d1 != 0, d3 == 0, d5 != 0, d7 == 0 */ z4 = d5 + d1 ; z5 = MULTIPLY ( z4 , FIX_1_175875602 ) ; z1 = MULTIPLY ( - d1 , FIX_0_899976223 ) ; tmp3 = MULTIPLY ( d1 , FIX_0_601344887 ) ; tmp1 = MULTIPLY ( - d5 , FIX_0_509795579 ) ; z2 = MULTIPLY ( - d5 , FIX_2_562915447 ) ; z4 = MULTIPLY ( z4 , FIX_0_785694958 ) ; tmp0 = z1 + z5 ; tmp1 += z4 ; tmp2 = z2 + z5 ; tmp3 += z4 ; } else { /* d1 == 0, d3 == 0, d5 != 0, d7 == 0 */ tmp0 = MULTIPLY ( d5 , FIX_1_175875602 ) ; tmp1 = MULTIPLY ( d5 , FIX_0_275899380 ) ; tmp2 = MULTIPLY ( - d5 , FIX_1_387039845 ) ; tmp3 = MULTIPLY ( d5 , FIX_0_785694958 ) ; } } } else { if ( d3 != 0 ) { if ( d1 != 0 ) { /* d1 != 0, d3 != 0, d5 == 0, d7 == 0 */ z5 = d1 + d3 ; tmp3 = MULTIPLY ( d1 , FIX_0_211164243 ) ; tmp2 = MULTIPLY ( - d3 , FIX_1_451774981 ) ; z1 = MULTIPLY ( d1 , FIX_1_061594337 ) ; z2 = MULTIPLY ( - d3 , FIX_2_172734803 ) ; z4 = MULTIPLY ( z5 , FIX_0_785694958 ) ; z5 = MULTIPLY ( z5 , FIX_1_175875602 ) ; tmp0 = z1 - z4 ; tmp1 = z2 + z4 ; tmp2 += z5 ; tmp3 += z5 ; } else { /* d1 == 0, d3 != 0, d5 == 0, d7 == 0 */ tmp0 = MULTIPLY ( - d3 , FIX_0_785694958 ) ; tmp1 = MULTIPLY ( - d3 , FIX_1_387039845 ) ; tmp2 = MULTIPLY ( - d3 , FIX_0_275899380 ) ; tmp3 = MULTIPLY ( d3 , FIX_1_175875602 ) ; } } else { if ( d1 != 0 ) { /* d1 != 0, d3 == 0, d5 == 0, d7 == 0 */ tmp0 = MULTIPLY ( d1 , FIX_0_275899380 ) ; tmp1 = MULTIPLY ( d1 , FIX_0_785694958 ) ; tmp2 = MULTIPLY ( d1 , FIX_1_175875602 ) ; tmp3 = MULTIPLY ( d1 , FIX_1_387039845 ) ; } else { /* d1 == 0, d3 == 0, d5 == 0, d7 == 0 */ tmp0 = tmp1 = tmp2 = tmp3 = 0 ; } } } } /* Final output stage: inputs are tmp10..tmp13, tmp0..tmp3 */ dataptr . put ( 0 , DESCALE11 ( tmp10 + tmp3 ) ) ; dataptr . put ( 7 , DESCALE11 ( tmp10 - tmp3 ) ) ; dataptr . put ( 1 , DESCALE11 ( tmp11 + tmp2 ) ) ; dataptr . put ( 6 , DESCALE11 ( tmp11 - tmp2 ) ) ; dataptr . put ( 2 , DESCALE11 ( tmp12 + tmp1 ) ) ; dataptr . put ( 5 , DESCALE11 ( tmp12 - tmp1 ) ) ; dataptr . put ( 3 , DESCALE11 ( tmp13 + tmp0 ) ) ; dataptr . put ( 4 , DESCALE11 ( tmp13 - tmp0 ) ) ; dataptr = advance ( dataptr , DCTSIZE ) ; /* advance pointer to next row */ } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/components/components/src/main/java/org/mobicents/slee/container/component/deployment/ProfileAbstractClassDecorator.java#L70-L109<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public boolean decorateAbstractClass ( ) throws DeploymentException { ClassPool pool = component . getClassPool ( ) ; ProfileAbstractClassDescriptor abstractClass = component . getDescriptor ( ) . getProfileAbstractClass ( ) ; if ( abstractClass == null ) { return false ; } String abstractClassName = abstractClass . getProfileAbstractClassName ( ) ; try { ctClass = pool . get ( abstractClassName ) ; } catch ( NotFoundException nfe ) { throw new DeploymentException ( "Could not find Abstract Class: " + abstractClassName , nfe ) ; } decorateClassJNDIAddToEnvironmentCalls ( ) ; if ( isAbstractClassDecorated ) { try { String deployDir = component . getDeploymentDir ( ) . getAbsolutePath ( ) ; ctClass . writeFile ( deployDir ) ; ctClass . detach ( ) ; // the file on disk is now in sync with the latest in-memory version  if ( logger . isDebugEnabled ( ) ) { logger . debug ( "Modified Abstract Class " + ctClass . getName ( ) + " generated in the following path " + deployDir ) ; } } catch ( Throwable e ) { throw new SLEEException ( e . getMessage ( ) , e ) ; } finally { ctClass . defrost ( ) ; } return true ; } else { return false ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/mod_cluster/undertow/src/main/java/org/wildfly/mod_cluster/undertow/metric/RunningRequestsHttpHandler.java#L51-L66<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void handleRequest ( HttpServerExchange exchange ) throws Exception { runningCount . increment ( ) ; exchange . addExchangeCompleteListener ( new ExchangeCompletionListener ( ) { @ Override public void exchangeEvent ( HttpServerExchange exchange , NextListener nextListener ) { runningCount . decrement ( ) ; // Proceed to next listener must be called! nextListener . proceed ( ) ; } } ) ; wrappedHandler . handleRequest ( exchange ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/fabric8io/fabric8-maven-plugin/blob/b0e7ad860a5bbe4ab71be3d0613862a1f14a8be3/core/src/main/java/io/fabric8/maven/core/util/PluginServiceFactory.java#L75-L90<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public < T > List < T > createServiceObjects ( String ... descriptorPaths ) { try { ServiceEntry . initDefaultOrder ( ) ; TreeMap < ServiceEntry , T > serviceMap = new TreeMap < ServiceEntry , T > ( ) ; for ( String descriptor : descriptorPaths ) { readServiceDefinitions ( serviceMap , descriptor ) ; } ArrayList < T > ret = new ArrayList < T > ( ) ; for ( T service : serviceMap . values ( ) ) { ret . add ( service ) ; } return ret ; } finally { ServiceEntry . removeDefaultOrder ( ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/container/src/main/java/com/streamsets/datacollector/classpath/CollisionWhitelist.java#L56-L68<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static boolean isWhitelisted ( String name , Properties specificWhitelist , Map < String , List < Dependency > > dependencies ) { if ( specificWhitelist != null && specificWhitelist . containsKey ( name ) ) { return versionsMatch ( specificWhitelist . getProperty ( name ) , dependencies . keySet ( ) ) ; } // Otherwise try hardcoded rules: WhitelistRule rule = WHITELIST_RULES . get ( name ) ; return rule != null && rule . isWhitelisted ( dependencies ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/validation/readers/AnnotationValidatorMetaDataReader.java#L148-L160<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private List < ValidatorMetaData > extractValidatorMetaData ( Class < ? > clazz , String propertyName , List < ValidatorMetaData > validatorMetaDataList ) { /* If the meta-data was not found, then generate it. */ if ( validatorMetaDataList == null ) { // if not found  /* Read the annotation from the class based on the property name. */ Collection < AnnotationData > annotations = Annotations . getAnnotationDataForFieldAndProperty ( clazz , propertyName , this . validationAnnotationPackages ) ; /* Extract the POJO based meta-data from the annotation. */ validatorMetaDataList = extractMetaDataFromAnnotations ( annotations ) ; } return validatorMetaDataList ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/binary/impl/index/OSimpleKeySerializer.java#L180-L186<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public T deserializeFromByteBufferObject ( ByteBuffer buffer , OWALChanges walChanges , int offset ) { final byte typeId = walChanges . getByteValue ( buffer , offset ++ ) ; init ( typeId ) ; return ( T ) binarySerializer . deserializeFromByteBufferObject ( buffer , walChanges , offset ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jkuhnert/ognl/blob/53d51a30c8c299b750dede779d05cb84beee73c3/src/main/java/ognl/OgnlParser.java#L970-L1072<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>final public void multiplicativeExpression ( ) throws ParseException { unaryExpression ( ) ; label_11 : while ( true ) { switch ( ( jj_ntk == - 1 ) ? jj_ntk ( ) : jj_ntk ) { case 37 : case 38 : case 39 : ; break ; default : jj_la1 [ 30 ] = jj_gen ; break label_11 ; } switch ( ( jj_ntk == - 1 ) ? jj_ntk ( ) : jj_ntk ) { case 37 : jj_consume_token ( 37 ) ; ASTMultiply jjtn001 = new ASTMultiply ( JJTMULTIPLY ) ; boolean jjtc001 = true ; jjtree . openNodeScope ( jjtn001 ) ; try { unaryExpression ( ) ; } catch ( Throwable jjte001 ) { if ( jjtc001 ) { jjtree . clearNodeScope ( jjtn001 ) ; jjtc001 = false ; } else { jjtree . popNode ( ) ; } if ( jjte001 instanceof RuntimeException ) { { if ( true ) throw ( RuntimeException ) jjte001 ; } } if ( jjte001 instanceof ParseException ) { { if ( true ) throw ( ParseException ) jjte001 ; } } { if ( true ) throw ( Error ) jjte001 ; } } finally { if ( jjtc001 ) { jjtree . closeNodeScope ( jjtn001 , 2 ) ; } } break ; case 38 : jj_consume_token ( 38 ) ; ASTDivide jjtn002 = new ASTDivide ( JJTDIVIDE ) ; boolean jjtc002 = true ; jjtree . openNodeScope ( jjtn002 ) ; try { unaryExpression ( ) ; } catch ( Throwable jjte002 ) { if ( jjtc002 ) { jjtree . clearNodeScope ( jjtn002 ) ; jjtc002 = false ; } else { jjtree . popNode ( ) ; } if ( jjte002 instanceof RuntimeException ) { { if ( true ) throw ( RuntimeException ) jjte002 ; } } if ( jjte002 instanceof ParseException ) { { if ( true ) throw ( ParseException ) jjte002 ; } } { if ( true ) throw ( Error ) jjte002 ; } } finally { if ( jjtc002 ) { jjtree . closeNodeScope ( jjtn002 , 2 ) ; } } break ; case 39 : jj_consume_token ( 39 ) ; ASTRemainder jjtn003 = new ASTRemainder ( JJTREMAINDER ) ; boolean jjtc003 = true ; jjtree . openNodeScope ( jjtn003 ) ; try { unaryExpression ( ) ; } catch ( Throwable jjte003 ) { if ( jjtc003 ) { jjtree . clearNodeScope ( jjtn003 ) ; jjtc003 = false ; } else { jjtree . popNode ( ) ; } if ( jjte003 instanceof RuntimeException ) { { if ( true ) throw ( RuntimeException ) jjte003 ; } } if ( jjte003 instanceof ParseException ) { { if ( true ) throw ( ParseException ) jjte003 ; } } { if ( true ) throw ( Error ) jjte003 ; } } finally { if ( jjtc003 ) { jjtree . closeNodeScope ( jjtn003 , 2 ) ; } } break ; default : jj_la1 [ 31 ] = jj_gen ; jj_consume_token ( - 1 ) ; throw new ParseException ( ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/http/DefaultHttpErrorHandler.java#L70-L85<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public CompletionStage < Result > onClientError ( RequestHeader request , int statusCode , String message ) { if ( statusCode == 400 ) { return onBadRequest ( request , message ) ; } else if ( statusCode == 403 ) { return onForbidden ( request , message ) ; } else if ( statusCode == 404 ) { return onNotFound ( request , message ) ; } else if ( statusCode >= 400 && statusCode < 500 ) { return onOtherClientError ( request , statusCode , message ) ; } else { throw new IllegalArgumentException ( "onClientError invoked with non client error status code " + statusCode + ": " + message ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-samples/src/main/java/io/aeron/samples/archive/SegmentInspector.java#L70-L91<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void dumpSegment ( final PrintStream out , final int messageDumpLimit , final UnsafeBuffer buffer ) { final DataHeaderFlyweight dataHeaderFlyweight = new DataHeaderFlyweight ( ) ; final int length = buffer . capacity ( ) ; int offset = 0 ; while ( offset < length ) { dataHeaderFlyweight . wrap ( buffer , offset , length - offset ) ; out . println ( offset + ": " + dataHeaderFlyweight . toString ( ) ) ; final int frameLength = dataHeaderFlyweight . frameLength ( ) ; if ( frameLength < DataHeaderFlyweight . HEADER_LENGTH ) { break ; } final int limit = min ( frameLength - HEADER_LENGTH , messageDumpLimit ) ; out . println ( LogInspector . formatBytes ( buffer , offset + HEADER_LENGTH , limit ) ) ; offset += BitUtil . align ( frameLength , FrameDescriptor . FRAME_ALIGNMENT ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/util/StringUtil.java#L2193-L2215<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String join ( final Collection collection , final char separator ) { if ( collection == null ) { return null ; } if ( collection . size ( ) == 0 ) { return StringPool . EMPTY ; } final StringBuilder sb = new StringBuilder ( collection . size ( ) * 16 ) ; final Iterator it = collection . iterator ( ) ; for ( int i = 0 ; i < collection . size ( ) ; i ++ ) { if ( i > 0 ) { sb . append ( separator ) ; } sb . append ( it . next ( ) ) ; } return sb . toString ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/util/DiskCache2.java#L398-L414<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void showCache ( PrintStream pw ) { pw . println ( "Cache files" ) ; pw . println ( "Size   LastModified       Filename" ) ; File dir = new File ( root ) ; File [ ] files = dir . listFiles ( ) ; if ( files != null ) for ( File file : files ) { String org = null ; try { org = URLDecoder . decode ( file . getName ( ) , "UTF8" ) ; } catch ( UnsupportedEncodingException e ) { e . printStackTrace ( ) ; } pw . println ( " " + file . length ( ) + " " + new Date ( file . lastModified ( ) ) + " " + org ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/swing/surface/Surface.java#L343-L385<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void paint ( Graphics g ) { // Get the size of the surface Dimension d = getSize ( ) ; // Check if direct to screen rendering is to be used if ( imageType == 1 ) { // Use no buffered image for direct rendering bimg = null ; } // Check if no buffered image has been created yet or if the existing one has the wrong size else if ( ( bimg == null ) || ( biw != d . width ) || ( bih != d . height ) ) { // Create a new bufferd image. Note that imageType has two subtracted for it as type 0 stands for auto // selection and type 1 for direct to screen. Subtracting two corresponds to the image types in the // BufferedImage class. bimg = createBufferedImage ( d . width , d . height , imageType - 2 ) ; // Set clear once flag to clear the new image on the first pass clearOnce = true ; } // Build a Graphics2D context for the image Graphics2D g2 = createGraphics2D ( d . width , d . height , bimg , g ) ; // Call the subclass to perform rendering render ( d . width , d . height , g2 ) ; // Clear up the Graphics2D context g2 . dispose ( ) ; // Check if a buffered image was used (and not direct to screen rendering) if ( bimg != null ) { // Copy the buffered image onto the screen g . drawImage ( bimg , 0 , 0 , null ) ; // Ensure screen is up to date toolkit . sync ( ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/persistence/play-java-jdbc/src/main/java/play/db/Databases.java#L31-L38<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Database createFrom ( String name , String driver , String url , Map < String , ? extends Object > config ) { ImmutableMap . Builder < String , Object > dbConfig = new ImmutableMap . Builder < String , Object > ( ) ; dbConfig . put ( "driver" , driver ) ; dbConfig . put ( "url" , url ) ; dbConfig . putAll ( config ) ; return new DefaultDatabase ( name , dbConfig . build ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ieb/sparsemapcontent/blob/0570fdf868adbbf7734790cbc09fe66480e5f2dc/app/src/main/java/org/sakaiproject/nakamura/app/NakamuraMain.java#L233-L265<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>static Map < String , String > parseCommandLine ( String [ ] args ) { Map < String , String > commandLine = new HashMap < String , String > ( ) ; boolean readUnparsed = false ; for ( int argc = 0 ; args != null && argc < args . length ; argc ++ ) { String arg = args [ argc ] ; if ( readUnparsed ) { commandLine . put ( arg , arg ) ; } else if ( arg . startsWith ( "-" ) ) { if ( arg . length ( ) == 1 ) { readUnparsed = true ; } else { String key = String . valueOf ( arg . charAt ( 1 ) ) ; if ( arg . length ( ) > 2 ) { commandLine . put ( key , arg . substring ( 2 ) ) ; } else { argc ++ ; if ( argc < args . length && ( args [ argc ] . equals ( "-" ) || ! args [ argc ] . startsWith ( "-" ) ) ) { commandLine . put ( key , args [ argc ] ) ; } else { commandLine . put ( key , key ) ; argc -- ; } } } } else { commandLine . put ( arg , arg ) ; } } return commandLine ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java#L894-L911<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void setTableIcons ( String featureTable , Icons icons ) { deleteTableIcons ( featureTable ) ; if ( icons != null ) { if ( icons . getDefault ( ) != null ) { setTableIconDefault ( featureTable , icons . getDefault ( ) ) ; } for ( Entry < GeometryType , IconRow > icon : icons . getIcons ( ) . entrySet ( ) ) { setTableIcon ( featureTable , icon . getKey ( ) , icon . getValue ( ) ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/thredds/catalog/MetadataType.java#L61-L68<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static MetadataType findType ( String name ) { if ( name == null ) return null ; for ( MetadataType m : members ) { if ( m . name . equalsIgnoreCase ( name ) ) return m ; } return null ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/fluenda/ParCEFone/blob/6c8f1cc0b9a90019e5be25c8bb187a302aebfa1c/src/main/java/com/fluenda/parcefone/parser/CEFParser.java#L121-L123<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public CommonEvent parse ( String cefString , final boolean validate ) { return this . parse ( cefString , validate , Locale . ENGLISH ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/haducloc/appslandia-common/blob/41dc9b0e1dd4fa86a9ad03627f70cbee61e74061/src/main/java/com/appslandia/common/jdbc/ResultSetImpl.java#L1078-L1081<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public boolean isWrapperFor ( java . lang . Class < ? > arg0 ) throws java . sql . SQLException { return this . rs . isWrapperFor ( arg0 ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/snakerflow/snakerflow/blob/9c8cb3148a76702f1eda22f1d113053cb44b1eff/snaker-core/src/main/java/org/snaker/engine/model/NodeModel.java#L89-L94<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected void runOutTransition ( Execution execution ) { for ( TransitionModel tm : getOutputs ( ) ) { tm . setEnabled ( true ) ; tm . execute ( execution ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play-guice/src/main/java/play/inject/guice/GuiceBuilder.java#L172-L174<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public final Self overrides ( play . api . inject . Module ... modules ) { return overrides ( Guiceable . modules ( modules ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/threadpool/BasicTaskWrapper.java#L298-L310<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected boolean taskAccepted ( ) { try { task . accepted ( getElapsedTime ( ) ) ; return true ; } catch ( Throwable t ) { log . warn ( "Unexpected error during 'accepted' for task: " + taskString , t ) ; return false ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/android/src/main/org/jcodec/api/android/AndroidFrameGrab.java#L59-L67<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Bitmap getFrame ( File file , double second ) throws IOException , JCodecException { FileChannelWrapper ch = null ; try { ch = NIOUtils . readableChannel ( file ) ; return ( ( AndroidFrameGrab ) createAndroidFrameGrab ( ch ) . seekToSecondPrecise ( second ) ) . getFrame ( ) ; } finally { NIOUtils . closeQuietly ( ch ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/kinesis-lib/src/main/java/com/streamsets/pipeline/stage/origin/kinesis/StreamSetsRecordProcessor.java#L83-L90<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void initialize ( InitializationInput initializationInput ) { shardId = initializationInput . getShardId ( ) ; if ( LOG . isDebugEnabled ( ) ) { LOG . debug ( "Initializing record processor at: {}" , initializationInput . getExtendedSequenceNumber ( ) . toString ( ) ) ; LOG . debug ( "Initializing record processor for shard: {}" , shardId ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/vigna/fastutil/blob/192ce83affa4a6f2ad34a96c15b5f2ec2929cf1c/src/it/unimi/dsi/fastutil/Arrays.java#L210-L241<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void mergeSort ( final int from , final int to , final IntComparator c , final Swapper swapper ) { /* 		 * We retain the same method signature as quickSort. Given only a comparator and swapper we 		 * do not know how to copy and move elements from/to temporary arrays. Hence, in contrast to 		 * the JDK mergesorts this is an "in-place" mergesort, i.e. does not allocate any temporary 		 * arrays. A non-inplace mergesort would perhaps be faster in most cases, but would require 		 * non-intuitive delegate objects... 		 */ final int length = to - from ; // Insertion sort on smallest arrays if ( length < MERGESORT_NO_REC ) { for ( int i = from ; i < to ; i ++ ) { for ( int j = i ; j > from && ( c . compare ( j - 1 , j ) > 0 ) ; j -- ) { swapper . swap ( j , j - 1 ) ; } } return ; } // Recursively sort halves int mid = ( from + to ) >>> 1 ; mergeSort ( from , mid , c , swapper ) ; mergeSort ( mid , to , c , swapper ) ; // If list is already sorted, nothing left to do. This is an // optimization that results in faster sorts for nearly ordered lists. if ( c . compare ( mid - 1 , mid ) <= 0 ) return ; // Merge sorted halves inPlaceMerge ( from , mid , to , c , swapper ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-ws-java-client/src/main/java/com/fluidbpm/ws/client/v1/form/CollaborationClient.java#L102-L110<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public List < Collaboration > getAllToByForm ( Form formParam ) { if ( formParam != null && this . serviceTicket != null ) { formParam . setServiceTicket ( this . serviceTicket ) ; } return new CollaborationListing ( this . postJson ( formParam , WS . Path . Collaboration . Version1 . getAllToByForm ( ) ) ) . getListing ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/liveontologies/elk-reasoner/blob/cfbe5279a57e0433d45c1676c7658ddb6e29b9eb/elk-reasoner/src/main/java/org/semanticweb/elk/reasoner/indexing/classes/CachedIndexedObjectPropertyImpl.java#L215-L223<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private int indexOf ( IndexedPropertyChain subChain , ElkAxiom reason ) { for ( int i = 0 ; i < toldSubChains_ . size ( ) ; i ++ ) { if ( toldSubChains_ . get ( i ) . equals ( subChain ) && toldSubChainsReasons_ . get ( i ) . equals ( reason ) ) return i ; } // else not found return - 1 ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/nyla-solutions/gedi-geode/blob/3dd71d6e66e941ce350b306b70677ee95a7d9eee/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/client/cq/CqQueueListener.java#L42-L49<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void close ( ) { if ( cqQuery != null ) { try { cqQuery . close ( ) ; } catch ( Exception e ) { Debugger . println ( e . getMessage ( ) ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/rest-assured/src/main/java/io/restassured/authentication/CertificateAuthSettings.java#L113-L115<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public CertificateAuthSettings strictHostnames ( ) { return new CertificateAuthSettings ( keystoreType , trustStoreType , port , trustStore , keyStore , STRICT_HOSTNAME_VERIFIER , sslSocketFactory ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/collections/IntList.java#L96-L121<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static IntList toIntList ( Collection < ? > inputList , String propertyPath ) { if ( inputList . size ( ) == 0 ) { return new IntList ( 0 ) ; } IntList outputList = new IntList ( inputList . size ( ) ) ; if ( propertyPath . contains ( "." ) || propertyPath . contains ( "[" ) ) { String [ ] properties = StringScanner . splitByDelimiters ( propertyPath , ".[]" ) ; for ( Object o : inputList ) { outputList . add ( BeanUtils . getPropertyInt ( o , properties ) ) ; } } else { Map < String , FieldAccess > fields = BeanUtils . getFieldsFromObject ( inputList . iterator ( ) . next ( ) ) ; FieldAccess fieldAccess = fields . get ( propertyPath ) ; for ( Object o : inputList ) { outputList . add ( fieldAccess . getInt ( o ) ) ; } } return outputList ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/dschulten/hydra-java/blob/21f2ec64ed8f8294dcd7705a55477a4f85ed9d0a/spring-hateoas-ext/src/main/java/de/escalon/hypermedia/affordance/Affordance.java#L292-L297<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void setTitleStar ( String titleStar ) { if ( titleStar != null ) linkParams . set ( TITLE_STAR . paramName , titleStar ) ; else linkParams . remove ( TITLE_STAR . paramName ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/geometry/UtilPolygons2D_F64.java#L386-L395<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void shiftDown ( Polygon2D_F64 a ) { final int N = a . size ( ) ; Point2D_F64 last = a . get ( N - 1 ) ; for ( int i = N - 1 ; i > 0 ; i -- ) { a . vertexes . data [ i ] = a . vertexes . data [ i - 1 ] ; } a . vertexes . data [ 0 ] = last ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/fabric8io/fabric8-maven-plugin/blob/b0e7ad860a5bbe4ab71be3d0613862a1f14a8be3/core/src/main/java/io/fabric8/maven/core/util/ProfileUtil.java#L170-L175<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private static List < Profile > readProfileFromClasspath ( String name ) throws IOException { List < Profile > ret = new ArrayList <> ( ) ; ret . addAll ( readAllFromClasspath ( name , "default" ) ) ; ret . addAll ( readAllFromClasspath ( name , "" ) ) ; return ret ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-madvoc/src/main/java/jodd/madvoc/config/Targets.java#L93-L107<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void forEachTargetAndOut ( final MadvocScope scope , final BiConsumer < Target , InjectionPoint > biConsumer ) { for ( final Target target : targets ) { final ScopeData scopeData = target . scopeData ( ) ; if ( scopeData . out ( ) == null ) { continue ; } for ( final InjectionPoint out : scopeData . out ( ) ) { if ( out . scope ( ) != scope ) { continue ; } biConsumer . accept ( target , out ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wavesplatform/WavesJ/blob/ae13a61c4e780b608c30a86e45c9a811549e11dd/src/main/java/com/wavesplatform/wavesj/Node.java#L341-L343<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public String setScript ( PrivateKeyAccount from , String script , byte chainId , long fee ) throws IOException { return send ( Transactions . makeScriptTx ( from , compileScript ( script ) , chainId , fee ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/db/metadata/TableMetadataDataSource.java#L44-L59<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void create ( TableMetadata metadata ) { ContentValues values = new ContentValues ( ) ; values . put ( TableMetadata . COLUMN_GEOPACKAGE_ID , metadata . getGeoPackageId ( ) ) ; values . put ( TableMetadata . COLUMN_TABLE_NAME , metadata . getTableName ( ) ) ; values . put ( TableMetadata . COLUMN_LAST_INDEXED , metadata . getLastIndexed ( ) ) ; long insertId = db . insert ( TableMetadata . TABLE_NAME , null , values ) ; if ( insertId == - 1 ) { throw new GeoPackageException ( "Failed to insert table metadata. GeoPackage Id: " + metadata . getGeoPackageId ( ) + ", Table Name: " + metadata . getTableName ( ) + ", Last Indexed: " + metadata . getLastIndexed ( ) ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentEmbedded.java#L731-L758<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void executeDeleteRecord ( OIdentifiable record , final int iVersion , final boolean iRequired , final OPERATION_MODE iMode , boolean prohibitTombstones ) { checkOpenness ( ) ; checkIfActive ( ) ; final ORecordId rid = ( ORecordId ) record . getIdentity ( ) ; if ( rid == null ) throw new ODatabaseException ( "Cannot delete record because it has no identity. Probably was created from scratch or contains projections of fields rather than a full record" ) ; if ( ! rid . isValid ( ) ) return ; record = record . getRecord ( ) ; if ( record == null ) return ; final OMicroTransaction microTx = beginMicroTransaction ( ) ; try { microTx . deleteRecord ( record . getRecord ( ) , iMode ) ; } catch ( Exception e ) { endMicroTransaction ( false ) ; throw e ; } endMicroTransaction ( true ) ; return ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/distributed/src/main/java/com/orientechnologies/orient/server/distributed/sql/OCommandExecutorSQLHASyncCluster.java#L92-L119<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Object execute ( final Map < Object , Object > iArgs ) { final ODatabaseDocumentInternal database = getDatabase ( ) ; database . checkSecurity ( ORule . ResourceGeneric . CLUSTER , "sync" , ORole . PERMISSION_UPDATE ) ; if ( ! ( database instanceof ODatabaseDocumentDistributed ) ) { throw new OCommandExecutionException ( "OrientDB is not started in distributed mode" ) ; } final OHazelcastPlugin dManager = ( OHazelcastPlugin ) ( ( ODatabaseDocumentDistributed ) database ) . getDistributedManager ( ) ; if ( dManager == null || ! dManager . isEnabled ( ) ) throw new OCommandExecutionException ( "OrientDB is not started in distributed mode" ) ; final String databaseName = database . getName ( ) ; try { if ( this . parsedStatement . modeFull ) { return replaceCluster ( dManager , database , dManager . getServerInstance ( ) , databaseName , this . parsedStatement . clusterName . getStringValue ( ) ) ; } // else { // int merged = 0; // return String.format("Merged %d records", merged); // } } catch ( Exception e ) { throw OException . wrapException ( new OCommandExecutionException ( "Cannot execute synchronization of cluster" ) , e ) ; } return "Mode not supported" ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Core/src/main/java/org/openestate/io/core/NumberUtils.java#L89-L91<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Number parseNumber ( String value , Locale ... locales ) throws NumberFormatException { return parseNumber ( value , false , locales ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/api/jar/src/main/java/javax/slee/AddressPresentation.java#L93-L101<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static AddressPresentation fromInt ( int value ) throws IllegalArgumentException { switch ( value ) { case ADDRESS_PRESENTATION_UNDEFINED : return UNDEFINED ; case ADDRESS_PRESENTATION_ALLOWED : return ALLOWED ; case ADDRESS_PRESENTATION_RESTRICTED : return RESTRICTED ; case ADDRESS_PRESENTATION_ADDRESS_NOT_AVAILABLE : return ADDRESS_NOT_AVAILABLE ; default : throw new IllegalArgumentException ( "Invalid value: " + value ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/FitLayout/api/blob/fcfa67ce2a7485fbd722576413191fff5d68bae8/src/main/java/org/fit/layout/impl/AreaGrid.java#L261-L271<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public int findCellY ( int y ) { int ofs = 0 ; for ( int i = 0 ; i < rows . length ; i ++ ) { ofs += rows [ i ] ; if ( y < ofs + abspos . getY1 ( ) ) return i ; } return - 1 ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-core/src/main/java/ro/isdc/wro/manager/WroManager.java#L167-L175<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public final String encodeVersionIntoGroupPath ( final String groupName , final ResourceType resourceType , final boolean minimize ) { // TODO use CacheKeyFactory final CacheKey key = new CacheKey ( groupName , resourceType , minimize ) ; final CacheValue cacheValue = cacheStrategy . get ( key ) ; final String groupUrl = groupExtractor . encodeGroupUrl ( groupName , resourceType , minimize ) ; // encode the fingerprint of the resource into the resource path return formatVersionedResource ( cacheValue . getHash ( ) , groupUrl ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-hive/parquet-hive-storage-handler/src/main/java/org/apache/hadoop/hive/ql/io/parquet/read/ParquetRecordReaderWrapper.java#L197-L227<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected ParquetInputSplit getSplit ( final InputSplit oldSplit , final JobConf conf ) throws IOException { if ( oldSplit instanceof FileSplit ) { FileSplit fileSplit = ( FileSplit ) oldSplit ; final long splitStart = fileSplit . getStart ( ) ; final long splitLength = fileSplit . getLength ( ) ; final Path finalPath = fileSplit . getPath ( ) ; final JobConf cloneJob = hiveBinding . pushProjectionsAndFilters ( conf , finalPath . getParent ( ) ) ; final ParquetMetadata parquetMetadata = ParquetFileReader . readFooter ( cloneJob , finalPath , SKIP_ROW_GROUPS ) ; final FileMetaData fileMetaData = parquetMetadata . getFileMetaData ( ) ; final ReadContext readContext = new DataWritableReadSupport ( ) . init ( cloneJob , fileMetaData . getKeyValueMetaData ( ) , fileMetaData . getSchema ( ) ) ; schemaSize = MessageTypeParser . parseMessageType ( readContext . getReadSupportMetadata ( ) . get ( DataWritableReadSupport . HIVE_SCHEMA_KEY ) ) . getFieldCount ( ) ; return new ParquetInputSplit ( finalPath , splitStart , splitStart + splitLength , splitLength , fileSplit . getLocations ( ) , null ) ; } else { throw new IllegalArgumentException ( "Unknown split type: " + oldSplit ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-buffer/src/main/java/org/nd4j/linalg/api/complex/BaseComplexDouble.java#L352-L358<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public IComplexNumber muli ( IComplexNumber c , IComplexNumber result ) { double newR = real * c . realComponent ( ) . doubleValue ( ) - imag * c . imaginaryComponent ( ) . doubleValue ( ) ; double newI = real * c . imaginaryComponent ( ) . doubleValue ( ) + imag * c . realComponent ( ) . doubleValue ( ) ; result . set ( newR , newI ) ; return result ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ft/point/standard/plug/CFpointObs.java#L1469-L1488<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected String matchAxisTypeAndDimension ( NetcdfDataset ds , AxisType type , final Dimension outer ) { Variable var = CoordSysEvaluator . findCoordByType ( ds , type , new CoordSysEvaluator . Predicate ( ) { public boolean match ( CoordinateAxis axis ) { if ( ( outer == null ) && ( axis . getRank ( ) == 0 ) ) return true ; if ( ( outer != null ) && ( axis . getRank ( ) == 1 ) && ( outer . equals ( axis . getDimension ( 0 ) ) ) ) return true ; // if axis is structure member, try pulling dimension out of parent structure  if ( axis . getParentStructure ( ) != null ) { Structure parent = axis . getParentStructure ( ) ; if ( ( outer != null ) && ( parent . getRank ( ) == 1 ) && ( outer . equals ( parent . getDimension ( 0 ) ) ) ) return true ; } return false ; } } ) ; if ( var == null ) return null ; return var . getFullName ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/GojaFramework/goja/blob/77179b495f668fc1fa20accc912991df6bb2d917/goja-core/src/main/java/goja/core/libs/IO.java#L313-L334<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void write ( InputStream is , OutputStream os ) { try { int read = 0 ; byte [ ] buffer = new byte [ 8096 ] ; while ( ( read = is . read ( buffer ) ) > 0 ) { os . write ( buffer , 0 , read ) ; } } catch ( IOException e ) { throw new UnexpectedException ( e ) ; } finally { try { is . close ( ) ; } catch ( Exception e ) { // } try { os . close ( ) ; } catch ( Exception e ) { // } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/js-lib-com/tiny-container/blob/ef68deb9ec40b217b4cd2df56d9c5a213dd6b89e/src/main/java/js/container/RemoteInstanceFactory.java#L69-L76<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ SuppressWarnings ( "unchecked" ) @ Override public < T > T newInstance ( ManagedClassSPI managedClass , Object ... args ) { if ( args . length > 0 ) { throw new IllegalArgumentException ( "REMOTE instance factory does not support arguments." ) ; } return getRemoteInstance ( managedClass . getImplementationURL ( ) , ( Class < ? super T > ) managedClass . getInterfaceClass ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/mail/src/main/java/org/jboss/as/mail/extension/MailSubsystemParser.java#L73-L100<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void readElement ( XMLExtendedStreamReader reader , List < ModelNode > list ) throws XMLStreamException { final PathAddress address = PathAddress . pathAddress ( MailExtension . SUBSYSTEM_PATH ) ; list . add ( Util . createAddOperation ( address ) ) ; while ( reader . hasNext ( ) && reader . nextTag ( ) != END_ELEMENT ) { switch ( Namespace . forUri ( reader . getNamespaceURI ( ) ) ) { case MAIL_1_0 : case MAIL_1_1 : case MAIL_1_2 : { final String element = reader . getLocalName ( ) ; switch ( element ) { case MAIL_SESSION : { parseMailSession ( reader , list , address ) ; break ; } default : { reader . handleAny ( list ) ; break ; } } break ; } default : { throw unexpectedElement ( reader ) ; } } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/sql/parser/OrientSql.java#L31546-L31553<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>final public Token getToken ( int index ) { Token t = token ; for ( int i = 0 ; i < index ; i ++ ) { if ( t . next != null ) t = t . next ; else t = t . next = token_source . getNextToken ( ) ; } return t ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.drools.eclipse/src/main/java/org/drools/eclipse/editors/DRLRuleEditorActionContributor.java#L46-L51<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void init ( IActionBars bars , IWorkbenchPage page ) { contributor . init ( bars ) ; super . init ( bars , page ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/JspUtil.java#L642-L659<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void validateExpressions ( Mark where , String expressions , FunctionMapper functionMapper , ErrorDispatcher err ) throws JasperException { try { ELContextImpl elContext = new ELContextImpl ( null ) ; elContext . setFunctionMapper ( functionMapper ) ; getExpressionFactory ( ) . createValueExpression ( elContext , expressions , Object . class ) ; } catch ( ELException e ) { err . jspError ( where , "jsp.error.invalid.expression" , expressions , e . toString ( ) ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/ee/src/main/java/org/jboss/as/ee/subsystem/EeExtension.java#L60-L79<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void initialize ( ExtensionContext context ) { final SubsystemRegistration subsystem = context . registerSubsystem ( SUBSYSTEM_NAME , CURRENT_MODEL_VERSION ) ; // Register the root subsystem resource. final ManagementResourceRegistration rootResource = subsystem . registerSubsystemModel ( EeSubsystemRootResource . create ( ) ) ; // Mandatory describe operation rootResource . registerOperationHandler ( GenericSubsystemDescribeHandler . DEFINITION , GenericSubsystemDescribeHandler . INSTANCE ) ; // register submodels rootResource . registerSubModel ( ContextServiceResourceDefinition . INSTANCE ) ; rootResource . registerSubModel ( ManagedThreadFactoryResourceDefinition . INSTANCE ) ; rootResource . registerSubModel ( ManagedExecutorServiceResourceDefinition . INSTANCE ) ; rootResource . registerSubModel ( ManagedScheduledExecutorServiceResourceDefinition . INSTANCE ) ; rootResource . registerSubModel ( new DefaultBindingsResourceDefinition ( new DefaultBindingsConfigurationProcessor ( ) ) ) ; subsystem . registerXMLElementWriter ( EESubsystemXmlPersister . INSTANCE ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/io/upload/MultipartRequestInputStream.java#L159-L170<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public int copyAll ( final OutputStream out ) throws IOException { int count = 0 ; while ( true ) { byte b = readByte ( ) ; if ( isBoundary ( b ) ) { break ; } out . write ( b ) ; count ++ ; } return count ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-mail/src/main/java/jodd/mail/ImapSslServer.java#L67-L89<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override protected IMAPSSLStore getStore ( final Session session ) { SimpleAuthenticator simpleAuthenticator = ( SimpleAuthenticator ) authenticator ; final URLName url ; if ( simpleAuthenticator == null ) { url = new URLName ( PROTOCOL_IMAP , host , port , StringPool . EMPTY , null , null ) ; } else { final PasswordAuthentication pa = simpleAuthenticator . getPasswordAuthentication ( ) ; url = new URLName ( PROTOCOL_IMAP , host , port , StringPool . EMPTY , pa . getUserName ( ) , pa . getPassword ( ) ) ; } return new IMAPSSLStore ( session , url ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/google/openrtb/blob/384ed8dde6bd16ac2faab9afbe5b33367836fdec/openrtb-core/src/main/java/com/google/openrtb/util/OpenRtbUtils.java#L336-L346<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Nullable public static Imp impWithId ( BidRequest request , String id ) { checkNotNull ( id ) ; for ( Imp imp : request . getImpList ( ) ) { if ( imp . getId ( ) . equals ( id ) ) { return imp ; } } return null ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.apache.jasper.glassfish/src/org/apache/jasper/compiler/ELParser.java#L298-L317<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private Token parseQuotedChars ( char quote ) { StringBuilder buf = new StringBuilder ( ) ; buf . append ( quote ) ; while ( hasNextChar ( ) ) { char ch = nextChar ( ) ; if ( ch == ' ' ) { ch = nextChar ( ) ; if ( ch == ' ' || ch == quote ) { buf . append ( ch ) ; } // else error! } else if ( ch == quote ) { buf . append ( ch ) ; break ; } else { buf . append ( ch ) ; } } return new QuotedString ( buf . toString ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-column/src/main/java/org/apache/parquet/io/RecordConsumerLoggingWrapper.java#L113-L117<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void addBinary ( Binary value ) { if ( LOG . isDebugEnabled ( ) ) log ( Arrays . toString ( value . getBytesUnsafe ( ) ) ) ; delegate . addBinary ( value ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/table/ColumnWidthsResizer.java#L52-L75<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void tableChanged ( final TableModelEvent e ) { if ( e . getFirstRow ( ) == TableModelEvent . HEADER_ROW ) { return ; // Do not respond to changes in the number of columns here, only row and data changes. } // ColumnWidthsResizer requires that the internal Swing TableModelListeners that update the JTable view // run their updates BEFORE it does its thing. Unfortunately, the order in which listeners are notified is // undefined (see https://weblogs.java.net/blog/alexfromsun/archive/2011/06/15/swing-better-world-listeners). // As a work-around, we're going to place the resize operation at the end of the event queue. That way, it'll // be executed after all TableModelListeners have been notified. EventQueue . invokeLater ( new Runnable ( ) { @ Override public void run ( ) { // Do not cache the value of doFullScan; we need to reevaluate each time because the number of rows in // the table could have changed. boolean doFullScan = table . getRowCount ( ) <= fullScanCutoff ; if ( e . getColumn ( ) == TableModelEvent . ALL_COLUMNS ) { resize ( table , doFullScan ) ; // Resize all columns. } else { resize ( table , e . getColumn ( ) , doFullScan ) ; // Resize only the affected column. } } } ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/rest-assured/src/main/java/io/restassured/RestAssured.java#L1571-L1574<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void keyStore ( String pathToJks , String password ) { Validate . notEmpty ( password , "Password cannot be empty" ) ; applyKeyStore ( pathToJks , password ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/cache/LFUCache.java#L64-L109<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override protected int pruneCache ( ) { int count = 0 ; CacheObject < K , V > comin = null ; // remove expired items and find cached object with minimal access count Iterator < CacheObject < K , V > > values = cacheMap . values ( ) . iterator ( ) ; while ( values . hasNext ( ) ) { CacheObject < K , V > co = values . next ( ) ; if ( co . isExpired ( ) ) { values . remove ( ) ; onRemove ( co . key , co . cachedObject ) ; count ++ ; continue ; } if ( comin == null ) { comin = co ; } else { if ( co . accessCount < comin . accessCount ) { comin = co ; } } } if ( ! isFull ( ) ) { return count ; } // decrease access count to all cached objects if ( comin != null ) { long minAccessCount = comin . accessCount ; values = cacheMap . values ( ) . iterator ( ) ; while ( values . hasNext ( ) ) { CacheObject < K , V > co = values . next ( ) ; co . accessCount -= minAccessCount ; if ( co . accessCount <= 0 ) { values . remove ( ) ; onRemove ( co . key , co . cachedObject ) ; count ++ ; } } } return count ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/ma2/MAMath.java#L85-L109<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static boolean conformable ( int [ ] shapeA , int [ ] shapeB ) { if ( reducedRank ( shapeA ) != reducedRank ( shapeB ) ) return false ; int rankB = shapeB . length ; int dimB = 0 ; for ( int aShapeA : shapeA ) { //System.out.println(dimA + " "+ dimB);  //skip length 1 dimensions  if ( aShapeA == 1 ) continue ; while ( dimB < rankB ) if ( shapeB [ dimB ] == 1 ) dimB ++ ; else break ; // test same shape (NB dimB cant be > rankB due to first test)  if ( aShapeA != shapeB [ dimB ] ) return false ; dimB ++ ; } return true ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/JBossEntityResolver.java#L427-L462<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected InputSource resolveSystemID ( String systemId , boolean trace ) { if ( systemId == null ) return null ; if ( trace ) log . trace ( "resolveSystemID, systemId=" + systemId ) ; InputSource inputSource = null ; // Try to resolve the systemId as an entity key String filename = null ; if ( localEntities != null ) filename = ( String ) localEntities . get ( systemId ) ; if ( filename == null ) filename = ( String ) entities . get ( systemId ) ; if ( filename != null ) { if ( trace ) log . trace ( "Found entity systemId=" + systemId + " fileName=" + filename ) ; InputStream ins = loadClasspathResource ( filename , trace ) ; if ( ins != null ) { inputSource = new InputSource ( ins ) ; inputSource . setSystemId ( systemId ) ; } else { log . warn ( "Cannot load systemId from resource: " + filename ) ; } } return inputSource ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/common/src/main/java/com/streamsets/pipeline/lib/parser/shaded/org/aicer/grok/dictionary/GrokDictionary.java#L153-L205<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private String digestExpressionAux ( String originalExpression ) { final String PATTERN_START = "%{" ; final String PATTERN_STOP = "}" ; final char PATTERN_DELIMITER = ' ' ; while ( true ) { int PATTERN_START_INDEX = originalExpression . indexOf ( PATTERN_START ) ; int PATTERN_STOP_INDEX = originalExpression . indexOf ( PATTERN_STOP , PATTERN_START_INDEX + PATTERN_START . length ( ) ) ; // End the loop is %{ or } is not in the current line if ( PATTERN_START_INDEX < 0 || PATTERN_STOP_INDEX < 0 ) { break ; } // Grab what's inside %{ } String grokPattern = originalExpression . substring ( PATTERN_START_INDEX + PATTERN_START . length ( ) , PATTERN_STOP_INDEX ) ; // Where is the : character int PATTERN_DELIMITER_INDEX = grokPattern . indexOf ( PATTERN_DELIMITER ) ; String regexName = grokPattern ; String groupName = null ; if ( PATTERN_DELIMITER_INDEX >= 0 ) { regexName = grokPattern . substring ( 0 , PATTERN_DELIMITER_INDEX ) ; groupName = grokPattern . substring ( PATTERN_DELIMITER_INDEX + 1 , grokPattern . length ( ) ) ; } final String dictionaryValue = regexDictionary . get ( regexName ) ; if ( dictionaryValue == null ) { throw new GrokCompilationException ( "Missing value for regex name : " + regexName ) ; } // Defer till next iteration if ( dictionaryValue . contains ( PATTERN_START ) ) { break ; } String replacement = dictionaryValue ; // Named capture group if ( null != groupName ) { replacement = "(?<" + groupName + ">" + dictionaryValue + ")" ; } originalExpression = new StringBuilder ( originalExpression ) . replace ( PATTERN_START_INDEX , PATTERN_STOP_INDEX + PATTERN_STOP . length ( ) , replacement ) . toString ( ) ; } return originalExpression ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/eclipse/packagedrone/blob/3869c1643cdc6f7cb8b26097a7b6994683b13d7e/bundles/org.tukani.xz/src/org/tukaani/xz/lz/LZEncoder.java#L120-L135<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static LZEncoder getInstance ( int dictSize , int extraSizeBefore , int extraSizeAfter , int niceLen , int matchLenMax , int mf , int depthLimit , ArrayCache arrayCache ) { switch ( mf ) { case MF_HC4 : return new HC4 ( dictSize , extraSizeBefore , extraSizeAfter , niceLen , matchLenMax , depthLimit , arrayCache ) ; case MF_BT4 : return new BT4 ( dictSize , extraSizeBefore , extraSizeAfter , niceLen , matchLenMax , depthLimit , arrayCache ) ; } throw new IllegalArgumentException ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/nyla-solutions/gedi-geode/blob/3dd71d6e66e941ce350b306b70677ee95a7d9eee/gedi-geode-extensions-core/src/main/java/gedi/solutions/geode/util/GemFireMgmt.java#L151-L167<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void stopLocator ( JMX jmx , String locatorName ) { try { ObjectName objectName = new ObjectName ( "GemFire:type=Member,member=" + locatorName ) ; //DistributedSystemMXBean distributedSystemMXBean =  MemberMXBean bean = jmx . newBean ( MemberMXBean . class , objectName ) ; bean . shutDownMember ( ) ; } catch ( MalformedObjectNameException e ) { throw new RuntimeException ( "Cannot stop member:" + locatorName + " ERROR:" + e . getMessage ( ) , e ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/GojaFramework/goja/blob/77179b495f668fc1fa20accc912991df6bb2d917/goja-core/src/main/java/goja/core/kits/reflect/ClassKit.java#L354-L376<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static boolean isCacheSafe ( Class < ? > clazz , ClassLoader classLoader ) { Preconditions . checkNotNull ( clazz , "Class must not be null" ) ; try { ClassLoader target = clazz . getClassLoader ( ) ; if ( target == null ) { return true ; } ClassLoader cur = classLoader ; if ( cur == target ) { return true ; } while ( cur != null ) { cur = cur . getParent ( ) ; if ( cur == target ) { return true ; } } return false ; } catch ( SecurityException ex ) { // Probably from the system ClassLoader - let's consider it safe. return true ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/index/OIndexFullText.java#L79-L107<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public OIndexFullText put ( Object key , final OIdentifiable singleValue ) { if ( key == null ) { return this ; } key = getCollatingValue ( key ) ; final Set < String > words = splitIntoWords ( key . toString ( ) ) ; // FOREACH WORD CREATE THE LINK TO THE CURRENT DOCUMENT for ( final String word : words ) { acquireSharedLock ( ) ; try { if ( apiVersion == 0 ) { doPutV0 ( singleValue , word ) ; } else if ( apiVersion == 1 ) { doPutV1 ( singleValue , word ) ; } else { throw new IllegalStateException ( "Invalid API version, " + apiVersion ) ; } } finally { releaseSharedLock ( ) ; } } return this ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Jasig/NotificationPortlet/blob/a74b87c145b66166a2cb6849d17ce9b0f2c98f3b/notification-portlet-webapp/src/main/java/org/jasig/portlet/notice/service/jpa/JpaNotificationService.java#L136-L157<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void addEntryState ( PortletRequest req , String entryId , NotificationState state ) { if ( usernameFinder . isAuthenticated ( req ) ) { final String username = usernameFinder . findUsername ( req ) ; String idStr = entryId . replaceAll ( ID_PREFIX , "" ) ; // remove the prefix JpaEntry jpaEntry = notificationDao . getEntry ( Long . parseLong ( idStr ) ) ; if ( jpaEntry != null ) { JpaEvent event = new JpaEvent ( ) ; event . setEntry ( jpaEntry ) ; event . setState ( state ) ; event . setTimestamp ( new Timestamp ( new Date ( ) . getTime ( ) ) ) ; event . setUsername ( username ) ; notificationDao . createOrUpdateEvent ( event ) ; } else { throw new IllegalArgumentException ( "JpaEntry not found" ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/messaging-activemq/src/main/java/org/wildfly/extension/messaging/activemq/deployment/injection/TransactedJMSContext.java#L47-L54<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>void registerCleanUpListener ( TransactionSynchronizationRegistry transactionSynchronizationRegistry , JMSContext contextInstance ) { //to avoid registration of more listeners for one context, flag in transaction is used. Object alreadyRegistered = transactionSynchronizationRegistry . getResource ( contextInstance ) ; if ( alreadyRegistered == null ) { transactionSynchronizationRegistry . registerInterposedSynchronization ( new AfterCompletionSynchronization ( contextInstance ) ) ; transactionSynchronizationRegistry . putResource ( contextInstance , AfterCompletionSynchronization . class . getName ( ) ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/client-api/src/main/java/com/streamsets/datacollector/client/ApiClient.java#L547-L556<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private Client getClient ( ) { if ( ! hostMap . containsKey ( basePath ) ) { ClientConfig config = new ClientConfig ( ) ; config . property ( ClientProperties . SUPPRESS_HTTP_COMPLIANCE_VALIDATION , true ) ; Client client = ClientBuilder . newClient ( config ) ; client . register ( new CsrfProtectionFilter ( "CSRF" ) ) ; hostMap . put ( basePath , client ) ; } return hostMap . get ( basePath ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Single.java#L3647-L3652<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ CheckReturnValue @ SchedulerSupport ( SchedulerSupport . NONE ) public final < E extends SingleObserver < ? super T > > E subscribeWith ( E observer ) { subscribe ( observer ) ; return observer ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/dap4/d4core/src/main/java/dap4/core/ce/CEConstraint.java#L634-L658<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public boolean references ( DapNode node ) { boolean isref = false ; switch ( node . getSort ( ) ) { case DIMENSION : DapDimension dim = this . redef . get ( ( DapDimension ) node ) ; if ( dim == null ) dim = ( DapDimension ) node ; isref = this . dimrefs . contains ( dim ) ; break ; case ENUMERATION : isref = ( this . enums . contains ( ( DapEnumeration ) node ) ) ; break ; case VARIABLE : isref = ( findVariableIndex ( ( DapVariable ) node ) >= 0 ) ; break ; case GROUP : case DATASET : isref = ( this . groups . contains ( ( DapGroup ) node ) ) ; break ; default : break ; } return isref ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/converter/tagsoup/Schema.java#L138-L144<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public int getEntity ( String name ) { // System.err.println("%% Looking up entity " + name); Integer ch = ( Integer ) theEntities . get ( name ) ; if ( ch == null ) return 0 ; return ch . intValue ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/stagesupport/src/main/java/com/streamsets/pipeline/lib/util/AntPathMatcher.java#L371-L391<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected String [ ] tokenizePattern ( String pattern ) { String [ ] tokenized = null ; Boolean cachePatterns = this . cachePatterns ; if ( cachePatterns == null || cachePatterns . booleanValue ( ) ) { tokenized = this . tokenizedPatternCache . get ( pattern ) ; } if ( tokenized == null ) { tokenized = tokenizePath ( pattern ) ; if ( cachePatterns == null && this . tokenizedPatternCache . size ( ) >= CACHE_TURNOFF_THRESHOLD ) { // Try to adapt to the runtime situation that we're encountering: // There are obviously too many different patterns coming in here... // So let's turn off the cache since the patterns are unlikely to be reoccurring. deactivatePatternCache ( ) ; return tokenized ; } if ( cachePatterns == null || cachePatterns . booleanValue ( ) ) { this . tokenizedPatternCache . put ( pattern , tokenized ) ; } } return tokenized ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/deeplearning4j/nd4j/blob/8f005bcecb240d1fbb83b9d390ad801d1d3b6933/nd4j-backends/nd4j-api-parent/nd4j-api/src/main/java/org/nd4j/linalg/indexing/BooleanIndexing.java#L233-L258<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void applyWhere ( final INDArray to , final Condition condition , final Number number ) { if ( condition instanceof BaseCondition ) { // for all static conditions we go native Nd4j . getExecutioner ( ) . exec ( new CompareAndSet ( to , number . doubleValue ( ) , condition ) ) ; } else { final double value = number . doubleValue ( ) ; final Function < Number , Number > dynamic = new Function < Number , Number > ( ) { @ Override public Number apply ( Number number ) { return value ; } } ; Shape . iterate ( to , new CoordinateFunction ( ) { @ Override public void process ( long [ ] ... coord ) { if ( condition . apply ( to . getDouble ( coord [ 0 ] ) ) ) to . putScalar ( coord [ 0 ] , dynamic . apply ( to . getDouble ( coord [ 0 ] ) ) . doubleValue ( ) ) ; } } ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-core/src/main/java/ro/isdc/wro/util/WroUtil.java#L162-L165<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String toPackageAsFolder ( final Class < ? > clazz ) { Validate . notNull ( clazz , "Class cannot be null!" ) ; return clazz . getPackage ( ) . getName ( ) . replace ( ' ' , ' ' ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/amedia/meteo/blob/cbb59e1c2f889d15c24f3625d1769b543d4af595/meteo-jaxb/src/main/java/no/api/meteo/jaxb/locationforecast/v1_9/ObjectFactory.java#L654-L657<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ XmlElementDecl ( namespace = "" , name = "lowestTemperature" , scope = LocationType . class ) public JAXBElement < Temperature > createLocationTypeLowestTemperature ( Temperature value ) { return new JAXBElement < Temperature > ( _LocationTypeLowestTemperature_QNAME , Temperature . class , LocationType . class , value ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/agentsoz/jill/blob/13126fc78350465b477386132465f84cad719426/jill/src/main/java/io/github/agentsoz/jill/Main.java#L224-L248<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void finish ( ) { // Terminate the extensions first for ( JillExtension extension : GlobalState . eventHandlers ) { extension . finish ( ) ; } // Now shut down the threads Program . shutdownIntentionSelectionThreads ( ) ; // Finish the agents long t0 = System . currentTimeMillis ( ) ; for ( int i = 0 ; i < GlobalState . agents . size ( ) ; i ++ ) { // Get the agent Agent agent = ( Agent ) GlobalState . agents . get ( i ) ; // Terminate the agent agent . finish ( ) ; } // Close the writer if ( writer != null ) { writer . close ( ) ; } long t1 = System . currentTimeMillis ( ) ; logger . info ( "Terminated " + GlobalState . agents . size ( ) + agentsIn + Log . formattedDuration ( t0 , t1 ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/ui/src/main/java/com/stanfy/enroscar/views/GUIUtils.java#L43-L45<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void setTextOrHide ( final TextView view , final CharSequence text ) { setTextOrHide ( view , text , View . GONE ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/clustering/common/src/main/java/org/jboss/as/clustering/controller/Operations.java#L170-L172<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static ModelNode createReadAttributeOperation ( PathAddress address , Attribute attribute ) { return createAttributeOperation ( ModelDescriptionConstants . READ_ATTRIBUTE_OPERATION , address , attribute ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Netflix-Skunkworks/Numerus/blob/08beb44403ddc2a045e7c2c71fc3f23f5d32723d/numerus/src/main/java/com/netflix/numerus/NumerusRollingPercentile.java#L99-L107<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void addValue ( int ... value ) { /* no-op if disabled */ if ( ! enabled . get ( ) ) return ; for ( int v : value ) { getCurrentBucket ( ) . data . addValue ( v ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/LukeDeighton/WheelView/blob/0949e04df02f7ad43e1c0384542fa4c9bebe5161/WheelViewLib/src/main/java/com/lukedeighton/wheelview/WheelView.java#L1164-L1168<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public int rawPositionToWheelPosition ( int position , int adapterPosition ) { int circularOffset = mIsRepeatable ? ( ( int ) Math . floor ( ( position / ( float ) mAdapterItemCount ) ) * ( mAdapterItemCount - mItemCount ) ) : 0 ; return Circle . clamp ( adapterPosition + circularOffset , mItemCount ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/io/FileUtil.java#L1477-L1487<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static boolean isBinary ( final File file ) throws IOException { byte [ ] bytes = readBytes ( file , 128 ) ; for ( byte b : bytes ) { if ( b < 32 && b != 9 && b != 10 && b != 13 ) { return true ; } } return false ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/api/jar/src/main/java/javax/slee/management/SleeState.java#L115-L122<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static SleeState fromString ( String state ) throws NullPointerException , IllegalArgumentException { if ( state == null ) throw new NullPointerException ( "state is null" ) ; if ( state . equalsIgnoreCase ( STOPPED_STRING ) ) return STOPPED ; if ( state . equalsIgnoreCase ( STARTING_STRING ) ) return STARTING ; if ( state . equalsIgnoreCase ( RUNNING_STRING ) ) return RUNNING ; if ( state . equalsIgnoreCase ( STOPPING_STRING ) ) return STOPPING ; throw new IllegalArgumentException ( "Invalid state: " + state ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/thredds/ui/monitor/TdsDownloader.java#L52-L108<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void getRemoteFiles ( final CancelTask _cancel ) { this . cancel = _cancel ; String urls = config . getServerPrefix ( ) + "/thredds/admin/log/" + type + "/" ; ta . append ( String . format ( "Download URL = %s%n" , urls ) ) ; String contents = null ; try ( HTTPMethod method = HTTPFactory . Get ( session , urls ) ) { int statusCode = method . execute ( ) ; if ( statusCode == 200 ) contents = method . getResponseAsString ( ) ; if ( ( contents == null ) || ( contents . length ( ) == 0 ) ) { ta . append ( String . format ( "Failed to get logs at URL = %s%n%n" , urls ) ) ; return ; } else { ta . append ( String . format ( "Logs at URL = %s%n%s%n" , urls , contents ) ) ; } } catch ( Throwable t ) { ta . append ( String . format ( "Failed to get logs at URL = %s error = %s%n%n" , urls , t . getMessage ( ) ) ) ; t . printStackTrace ( ) ; return ; } // update text area in background  http://technobuz.com/2009/05/update-jtextarea-dynamically/  final String list = contents ; SwingWorker worker = new SwingWorker < String , Void > ( ) { @ Override protected String doInBackground ( ) throws Exception { try { ta . append ( String . format ( "Local log files stored in = %s%n%n" , localDir ) ) ; String [ ] lines = list . split ( "\n" ) ; for ( String line : lines ) { new RemoteLog ( line . trim ( ) ) ; if ( cancel . isCancel ( ) ) { break ; } } } catch ( Throwable t ) { t . printStackTrace ( ) ; } return null ; } public void done ( ) { if ( cancel . isCancel ( ) ) ta . append ( String . format ( "Download was cancelled for %s%n" , type ) ) ; else ta . append ( String . format ( "Download complete for %s%n" , type ) ) ; } } ; // do in background  worker . execute ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/features/user/FeatureCursor.java#L42-L51<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public Object getValue ( FeatureColumn column ) { Object value ; if ( column . isGeometry ( ) ) { value = getGeometry ( ) ; } else { value = super . getValue ( column ) ; } return value ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-extensions/src/main/java/ro/isdc/wro/extensions/script/RhinoScriptBuilder.java#L165-L169<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public RhinoScriptBuilder evaluateChain ( final String script , final String sourceName ) { notNull ( script ) ; getContext ( ) . evaluateString ( scope , script , sourceName , 1 , null ) ; return this ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/redraiment/jactiverecord/blob/d051709c93204658e7f2cc96c9898201c7337269/src/main/java/me/zzp/ar/d/HyperSQLDialect.java#L21-L30<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public boolean accept ( Connection c ) { try { DatabaseMetaData d = c . getMetaData ( ) ; String name = d . getDatabaseProductName ( ) ; // HSQL Database Engine return name . toLowerCase ( ) . contains ( "hsql" ) ; } catch ( SQLException e ) { throw new DBOpenException ( e ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/documentation/manual/working/javaGuide/main/xml/code/javaguide/xml/JavaXmlRequests.java#L16-L28<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Result sayHello ( Http . Request request ) { Document dom = request . body ( ) . asXml ( ) ; if ( dom == null ) { return badRequest ( "Expecting Xml data" ) ; } else { String name = XPath . selectText ( "//name" , dom ) ; if ( name == null ) { return badRequest ( "Missing parameter [name]" ) ; } else { return ok ( "Hello " + name ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ieb/sparsemapcontent/blob/0570fdf868adbbf7734790cbc09fe66480e5f2dc/core/src/main/java/org/sakaiproject/nakamura/api/lite/accesscontrol/AclModification.java#L133-L142<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void addAcl ( boolean grant , Permission permssion , String key , List < AclModification > modifications ) { if ( grant ) { key = AclModification . grantKey ( key ) ; } else { key = AclModification . denyKey ( key ) ; } modifications . add ( new AclModification ( key , permssion . getPermission ( ) , AclModification . Operation . OP_OR ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Examples/src/main/java/org/openestate/io/examples/ImmobiliareItReadingExample.java#L134-L157<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected static void printToConsole ( ImmobiliareItDocument doc ) throws JAXBException { LOGGER . info ( "> process document in version " + doc . getDocumentVersion ( ) ) ; Feed feed = doc . toObject ( ) ; // process properties if ( feed . getProperties ( ) != null ) { for ( Property object : feed . getProperties ( ) . getProperty ( ) ) { // get object nr String objectNr = StringUtils . trimToNull ( object . getUniqueId ( ) ) ; if ( objectNr == null ) objectNr = "???" ; // get object description String objectInfo = ( object . getFeatures ( ) != null && ! object . getFeatures ( ) . getDescription ( ) . isEmpty ( ) ) ? StringUtils . trimToNull ( object . getFeatures ( ) . getDescription ( ) . get ( 0 ) . getValue ( ) ) : null ; if ( objectInfo == null ) objectInfo = "???" ; // print object information to console LOGGER . info ( "> found object " + "'" + objectNr + "': " + objectInfo ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/common/io/OFileUtils.java#L245-L252<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void prepareForFileCreationOrReplacement ( Path path , Object requester , String operation ) throws IOException { if ( Files . deleteIfExists ( path ) ) OLogManager . instance ( ) . warn ( requester , "'%s' deleted while %s" , path , operation ) ; final Path parent = path . getParent ( ) ; if ( parent != null ) Files . createDirectories ( parent ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/DaftIE/src/main/jaxb/org/openestate/io/daft_ie/xml/Daft.java#L134-L137<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Generated ( value = "com.sun.tools.xjc.Driver" , date = "2018-10-12T02:41:42+02:00" , comments = "JAXB RI v2.2.11" ) public void setOverseasRental ( Daft . OverseasRental value ) { this . overseasRental = value ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/opendap/src/main/java/opendap/dap/parsers/DDSXMLParser.java#L256-L341<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void parseBase ( Element e , String indent ) throws DASException , NoSuchTypeException , BadSemanticsException { parseLevel ++ ; String type = e . getName ( ) ; if ( type . equals ( "Attribute" ) ) { // Do nothing here, the Attributes get parsed when the BaseType's  // get built. This conditional basically serves as a "trap" to  // ignore the <Attribute> tag.  } else if ( type . equals ( "Alias" ) ) { // Do nothing here, the Aliases get parsed when the BaseType's  // get built. This conditional basically serves as a "trap" to  // ignore the <Alias> tag.  } else if ( type . equals ( "dataBLOB" ) ) { // dataBLOB?  // The schema says that the href attribute is  // required for the dataBLOB element.  org . jdom2 . Attribute hrefAttr = e . getAttribute ( "href" ) ; // Since it's required we know that the getAttribute()  // method is not going to return null.  String contentID = hrefAttr . getValue ( ) ; if ( _Debug ) System . out . println ( "Found dataBLOB element. contentID=\"" + contentID + "\"" ) ; dds . setBlobContentID ( contentID ) ; } else { // What's left must be a OPeNDAP BaseType  if ( _Debug ) System . out . println ( "Parsing new BaseType element. Parse level: " + parseLevel ) ; if ( _Debug ) showXMLElement ( e , indent ) ; // Go get a new BaseType formed from this element  BaseType bt = newBaseType ( e ) ; // Set it's parent.  // bt.setParent(parentDC);  // Add it to it's parent (container)  parentDC . addVariable ( bt ) ; // Now we need to make sure this particular BaseType  // derived element isn't some special type that needs  // additional parsing:  // Is it a container?  if ( bt instanceof DConstructor ) { // Up date the parsers state, (cache my parent)  DConstructor myParentDC = parentDC ; parentDC = ( DConstructor ) bt ; try { // Grids are special containers, handle them  if ( bt instanceof DGrid ) { parseGrid ( e , indent ) ; } else { // Otherwise, recurse on the children  for ( Element child : e . getChildren ( ) ) { parseBase ( child , indent + "    " ) ; } } } finally { // restore my parent  parentDC = myParentDC ; } } else if ( bt instanceof DArray ) { // Array's are special, better build it if it is one  if ( _Debug ) System . out . println ( "Parsing Array instance.  Array name: '" + bt . getClearName ( ) + "'" ) ; parseArray ( e , ( DArray ) bt , indent ) ; } } parseLevel -- ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-avro/src/main/java/org/apache/parquet/avro/AvroRecordConverter.java#L177-L207<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private static Map < String , Class < ? > > getFieldsByName ( Class < ? > recordClass , boolean excludeJava ) { Map < String , Class < ? > > fields = new LinkedHashMap < String , Class < ? > > ( ) ; if ( recordClass != null ) { Class < ? > current = recordClass ; do { if ( excludeJava && current . getPackage ( ) != null && current . getPackage ( ) . getName ( ) . startsWith ( "java." ) ) { break ; // skip java built-in classes } for ( Field field : current . getDeclaredFields ( ) ) { if ( field . isAnnotationPresent ( AvroIgnore . class ) || isTransientOrStatic ( field ) ) { continue ; } AvroName altName = field . getAnnotation ( AvroName . class ) ; Class < ? > existing = fields . put ( altName != null ? altName . value ( ) : field . getName ( ) , field . getType ( ) ) ; if ( existing != null ) { throw new AvroTypeException ( current + " contains two fields named: " + field . getName ( ) ) ; } } current = current . getSuperclass ( ) ; } while ( current != null ) ; } return fields ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/converter/ConverterHtmlToText.java#L57-L63<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static RTPlainText convert ( RTHtml < ? extends RTImage , ? extends RTAudio , ? extends RTVideo > input ) { String result = Html . fromHtml ( input . getText ( ) , null , new HtmlToTextTagHandler ( ) ) . toString ( ) . replace ( PREVIEW_OBJECT_CHARACTER , PREVIEW_OBJECT_REPLACEMENT ) . replace ( NBSP_CHARACTER , NBSP_REPLACEMENT ) ; return new RTPlainText ( result ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/intellimate/IzouSDK/blob/bc8705ad48a6ca12a722f2b787be435949fa5d08/src/main/java/org/intellimate/izou/sdk/frameworks/presence/events/PresenceEvent.java#L64-L85<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Optional < PresenceEvent > createPresenceEvent ( Identification source , boolean strict , boolean known , boolean firstEncounter , List < String > descriptors ) { try { if ( strict ) { descriptors . add ( STRICT_DESCRIPTOR ) ; } else { descriptors . add ( GENERAL_DESCRIPTOR ) ; } if ( known ) { descriptors . add ( KNOWN_DESCRIPTOR ) ; } else { descriptors . add ( UNKNOWN_DESCRIPTOR ) ; } if ( firstEncounter ) descriptors . add ( FIRST_ENCOUNTER_DESCRIPTOR ) ; descriptors . add ( ID ) ; PresenceEvent stopRequest = new PresenceEvent ( source , descriptors ) ; return Optional . of ( stopRequest ) ; } catch ( IllegalArgumentException e ) { return Optional . empty ( ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Examples/src/main/java/org/openestate/io/examples/FilemakerWritingExample.java#L61-L103<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ SuppressWarnings ( "Duplicates" ) public static void main ( String [ ] args ) { // init logging PropertyConfigurator . configure ( FilemakerWritingExample . class . getResource ( PACKAGE + "/log4j.properties" ) ) ; // create a FMPXMLRESULT object with some example data // this object corresponds to the <FMPXMLRESULT> root element in XML FMPXMLRESULT result = FACTORY . createFMPXMLRESULT ( ) ; result . setERRORCODE ( "0" ) ; result . setPRODUCT ( createProduct ( ) ) ; result . setDATABASE ( createDatabase ( ) ) ; result . setMETADATA ( createMetaData ( ) ) ; result . setRESULTSET ( createResultSet ( ) ) ; // convert the Openimmo object into a XML document FilemakerResultDocument doc = null ; try { doc = FilemakerResultDocument . newDocument ( result ) ; } catch ( Exception ex ) { LOGGER . error ( "Can't create XML document!" ) ; LOGGER . error ( "> " + ex . getLocalizedMessage ( ) , ex ) ; System . exit ( 1 ) ; } // write XML document into a java.io.File try { write ( doc , File . createTempFile ( "output-" , ".xml" ) ) ; } catch ( IOException ex ) { LOGGER . error ( "Can't create temporary file!" ) ; LOGGER . error ( "> " + ex . getLocalizedMessage ( ) , ex ) ; System . exit ( 1 ) ; } // write XML document into a java.io.OutputStream write ( doc , new NullOutputStream ( ) ) ; // write XML document into a java.io.Writer write ( doc , new NullWriter ( ) ) ; // write XML document into a string and send it to the console writeToConsole ( doc ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/mvc/Results.java#L2552-L2554<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Result notAcceptable ( File content , boolean inline ) { return notAcceptable ( content , inline , StaticFileMimeTypes . fileMimeTypes ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/ma2/Index5D.java#L163-L166<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>int setDirect ( int v0 , int v1 , int v2 , int v3 , int v4 ) { return offset + v0 * stride0 + v1 * stride1 + v2 * stride2 + v3 * stride3 + v4 * stride4 ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jcuda/jcublas/blob/80875235d24562073f4d66651dd17263f306427d/JCublasJava/src/main/java/jcuda/jcublas/JCublas.java#L10037-L10041<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void cublasZtrmm ( char side , char uplo , char transa , char diag , int m , int n , cuDoubleComplex alpha , Pointer A , int lda , Pointer B , int ldb ) { cublasZtrmmNative ( side , uplo , transa , diag , m , n , alpha , A , lda , B , ldb ) ; checkResultBLAS ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/spring-projects/spring-security/blob/98a8467e4c2ae05b3e09c67ece856944fa48ed23/config/src/main/java/org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer.java#L339-L346<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private AuthenticationUserDetailsService < OpenIDAuthenticationToken > getAuthenticationUserDetailsService ( H http ) { if ( this . authenticationUserDetailsService != null ) { return this . authenticationUserDetailsService ; } return new UserDetailsByNameServiceWrapper <> ( http . getSharedObject ( UserDetailsService . class ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Examples/src/main/java/org/openestate/io/examples/Is24CsvWritingExample.java#L268-L279<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected static void write ( List < Is24CsvRecord > records , OutputStream output ) { LOGGER . info ( "writing document" ) ; try { Is24CsvPrinter printer = Is24CsvPrinter . create ( output ) ; printer . printRecords ( records ) ; LOGGER . info ( "> written to a java.io.OutputStream" ) ; } catch ( Exception ex ) { LOGGER . error ( "Can't write document into an OutputStream!" ) ; LOGGER . error ( "> " + ex . getLocalizedMessage ( ) , ex ) ; System . exit ( 1 ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-db/src/main/java/jodd/db/type/BlobSqlType.java#L46-L49<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void set ( final PreparedStatement st , final int index , final Blob value , final int dbSqlType ) throws SQLException { st . setBlob ( index , value ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/geoloc/Navigation.java#L81-L86<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public boolean wantRotate ( double displayWidth , double displayHeight ) { getMapArea ( bb ) ; // current world bounding box boolean aspectDisplay = displayHeight < displayWidth ; boolean aspectWorldBB = bb . getHeight ( ) < bb . getWidth ( ) ; return ( aspectDisplay ^ aspectWorldBB ) ; // aspects are different }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/fabric8io/fabric8-maven-plugin/blob/b0e7ad860a5bbe4ab71be3d0613862a1f14a8be3/core/src/main/java/io/fabric8/maven/core/config/ProcessorConfig.java#L154-L165<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static ProcessorConfig mergeProcessorConfigs ( ProcessorConfig ... processorConfigs ) { // Merge the configuration Map < String , TreeMap > configs = mergeConfig ( processorConfigs ) ; // Get all includes Set < String > excludes = mergeExcludes ( processorConfigs ) ; // Find the set of includes, which are the ones from the profile + the ones configured List < String > includes = mergeIncludes ( processorConfigs ) ; return new ProcessorConfig ( includes , excludes , configs ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/vdmeer/execs/blob/ac73170bfd449de1f460248d56ece57ff3b0c761/src/main/java/de/vandermeer/execs/Gen_RunScripts.java#L247-L254<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected final ST generateScript ( String clazz , HashMap < String , Boolean > targetMap ) { ST ret = this . stg . getInstanceOf ( "generateExec" ) ; ret . add ( "target" , targetMap ) ; ret . add ( "applicationHome" , this . applicationDir ) ; ret . add ( "runName" , this . configuration . get ( PROP_RUN_SCRIPT_NAME ) ) ; ret . add ( "class" , clazz ) ; return ret ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/maps/CircularArrayMap.java#L338-L367<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void expand ( int key ) { // Set the new size to whichever is the larger of 1.5 times the old size, or an array large enough to hold // the proposed key that caused the expansion. int newFactorSize = ( ( length * 3 ) / 2 ) + 1 ; int newSpaceSize = spaceRequired ( key ) ; int newSize = ( newSpaceSize > newFactorSize ) ? newSpaceSize : newFactorSize ; Object [ ] oldData = data ; data = new Object [ newSize ] ; // The valid data in the old array runs from offset(start) to offset(end) when offset(start) < offset(end), and // from offset(start) to length - 1 and 0 to offset(end) when offset(start) >= offset(end). int offsetStart = offset ( start ) ; int offsetEnd = offset ( end ) ; if ( offsetStart < offsetEnd ) { System . arraycopy ( oldData , offsetStart , data , 0 , end - start ) ; } else { System . arraycopy ( oldData , offsetStart , data , 0 , length - offsetStart ) ; System . arraycopy ( oldData , 0 , data , length - offsetStart , offsetEnd ) ; } offset = - start ; length = newSize ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/fitting/curves/FitConicA_F64.java#L51-L84<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public boolean process ( List < Point2D_F64 > points , ConicGeneral_F64 output ) { final int N = points . size ( ) ; if ( N < 3 ) throw new IllegalArgumentException ( "At least 3 points required" ) ; A . reshape ( N , 6 ) ; for ( int i = 0 , index = 0 ; i < N ; i ++ ) { Point2D_F64 p = points . get ( i ) ; double x = p . x ; double y = p . y ; A . data [ index ++ ] = x * x ; A . data [ index ++ ] = x * y ; A . data [ index ++ ] = y * y ; A . data [ index ++ ] = x ; A . data [ index ++ ] = y ; A . data [ index ++ ] = 1 ; } if ( ! solver . process ( A , 1 , nullspace ) ) return false ; output . A = nullspace . data [ 0 ] ; output . B = nullspace . data [ 1 ] ; output . C = nullspace . data [ 2 ] ; output . D = nullspace . data [ 3 ] ; output . E = nullspace . data [ 4 ] ; output . F = nullspace . data [ 5 ] ; return true ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-servlet/src/main/java/jodd/servlet/ServletUtil.java#L316-L322<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String getContextPath ( final ServletContext servletContext ) { String contextPath = servletContext . getContextPath ( ) ; if ( contextPath == null || contextPath . equals ( StringPool . SLASH ) ) { contextPath = StringPool . EMPTY ; } return contextPath ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/util/doublemaps/HashMapXY.java#L108-L121<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public boolean containsKey ( Long x , Long y ) { // Extract the region containing the coordinates from the hash table Bucket region = ( Bucket ) regions . get ( new Coordinates ( div ( x , bucketSize ) , div ( y , bucketSize ) ) ) ; // Check if the whole region is empty if ( region == null ) { return false ; } // Check if the coordinates within the region contain data return ( region . array [ mod ( x , bucketSize ) ] [ mod ( y , bucketSize ) ] != null ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Koekiebox-PTY-LTD/Fluid/blob/81153d865f71b84ca933532c7115717bc3979270/fluid-api/src/main/java/com/fluidbpm/program/api/util/cache/CacheUtil.java#L386-L407<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ SuppressWarnings ( "unchecked" ) private static Method getMethod ( Class clazzParam , String nameParam ) { try { if ( clazzParam == null || nameParam == null ) { return null ; } Method returnVal = clazzParam . getDeclaredMethod ( nameParam ) ; returnVal . setAccessible ( true ) ; return returnVal ; } // catch ( NoSuchMethodException e ) { throw new FluidCacheException ( "Unable to get method '" + nameParam + "'. " + e . getMessage ( ) , e ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/security/subsystem/src/main/java/org/jboss/as/security/plugins/SecurityActions.java#L116-L127<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>static ModuleClassLoaderLocator . CombinedClassLoader createCombinedClassLoader ( final List < ClassLoader > classLoaders ) { if ( WildFlySecurityManager . isChecking ( ) ) { return doPrivileged ( new PrivilegedAction < ModuleClassLoaderLocator . CombinedClassLoader > ( ) { @ Override public CombinedClassLoader run ( ) { return new ModuleClassLoaderLocator . CombinedClassLoader ( classLoaders ) ; } } ) ; } else { return new ModuleClassLoaderLocator . CombinedClassLoader ( classLoaders ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/common_helper/src/main/java/com/xiongyingqi/util/FileHelper.java#L718-L759<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static byte [ ] readFileToBytes ( File iconFile ) throws Exception { try { validateFile ( iconFile ) ; } catch ( Exception e2 ) { e2 . printStackTrace ( ) ; } long fileSize = iconFile . length ( ) ; if ( fileSize > Integer . MAX_VALUE ) { throw new Exception ( "读取的文件过大！");   } byte [ ] data = new byte [ ( int ) fileSize ] ; // 由于文件已经确定，因此大小也可以确定 try { int length = - 1 ; FileInputStream inputStream = new FileInputStream ( iconFile ) ; try { int bufferSize = 128 ; byte [ ] buffer = new byte [ bufferSize ] ; int offset = 0 ; while ( ( length = inputStream . read ( buffer ) ) != - 1 ) { // if(length != bufferSize){ // System.arraycopy(buffer, 0, data, offset, length); // } System . arraycopy ( buffer , 0 , data , offset , length ) ; // 从缓冲区拷贝数组 offset += length ; } } catch ( IOException e ) { LOGGER . error ( e ) ; } finally { try { inputStream . close ( ) ; } catch ( IOException e1 ) { e1 . printStackTrace ( ) ; } } } catch ( FileNotFoundException e1 ) { e1 . printStackTrace ( ) ; return null ; } return data ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jkuhnert/ognl/blob/53d51a30c8c299b750dede779d05cb84beee73c3/src/main/java/ognl/Ognl.java#L105-L116<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Object parseExpression ( String expression ) throws OgnlException { try { OgnlParser parser = new OgnlParser ( new StringReader ( expression ) ) ; return parser . topLevelExpression ( ) ; } catch ( ParseException e ) { throw new ExpressionSyntaxException ( expression , e ) ; } catch ( TokenMgrError e ) { throw new ExpressionSyntaxException ( expression , e ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/thredds/client/catalog/tools/CatalogXmlWriter.java#L438-L446<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected void writeInheritedMetadata ( Element elem , Dataset ds ) { Element mdataElem = new Element ( "metadata" , Catalog . defNS ) ; mdataElem . setAttribute ( "inherited" , "true" ) ; ThreddsMetadata tmi = ( ThreddsMetadata ) ds . getLocalField ( Dataset . ThreddsMetadataInheritable ) ; if ( tmi == null ) return ; writeThreddsMetadata ( mdataElem , tmi ) ; if ( mdataElem . getChildren ( ) . size ( ) > 0 ) elem . addContent ( mdataElem ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/basic-lib/src/main/java/com/streamsets/pipeline/stage/processor/aggregation/aggregator/Aggregators.java#L164-L169<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void start ( long newDataWindowEndTimeMillis ) { Utils . checkState ( ! started , "Already started" ) ; Utils . checkState ( ! stopped , "Already stopped" ) ; dataProvider . start ( newDataWindowEndTimeMillis ) ; started = true ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Trovit/src/main/java/org/openestate/io/trovit/TrovitUtils.java#L284-L307<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Calendar parseDateValue ( String value ) { value = StringUtils . trimToNull ( value ) ; if ( value == null ) return null ; final String [ ] patterns = new String [ ] { "dd/MM/yyyy" , "dd/MM/yyyy hh:mm:ss" , "dd-MM-yyyy" , "dd-MM-yyyy hh:mm:ss" , "yyyy/MM/dd" , "yyyy/MM/dd hh:mm:ss" , "yyyy-MM-dd" , "yyyy-MM-dd hh:mm:ss" } ; try { Date date = DateUtils . parseDateStrictly ( value , Locale . ENGLISH , patterns ) ; Calendar cal = Calendar . getInstance ( Locale . getDefault ( ) ) ; cal . setTime ( date ) ; return cal ; } catch ( ParseException ex ) { throw new IllegalArgumentException ( "Can't parse date value '" + value + "'!" , ex ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jkuhnert/ognl/blob/53d51a30c8c299b750dede779d05cb84beee73c3/src/main/java/ognl/Ognl.java#L807-L811<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void setValue ( Object tree , Object root , Object value ) throws OgnlException { setValue ( tree , createDefaultContext ( root ) , root , value ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/extension/style/FeatureStyleExtension.java#L1665-L1668<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void deleteStyle ( String featureTable , long featureId , GeometryType geometryType ) { deleteMapping ( getStyleMappingDao ( featureTable ) , featureId , geometryType ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Netflix/hollow/blob/43ca100034a01050fb764170bd32b085ac9a3c22/hollow/src/main/java/com/netflix/hollow/api/producer/metrics/AbstractProducerMetricsListener.java#L85-L106<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void onAnnouncementComplete ( com . netflix . hollow . api . producer . Status status , HollowProducer . ReadState readState , long version , Duration elapsed ) { boolean isAnnouncementSuccess = false ; long dataSizeBytes = 0l ; if ( status . getType ( ) == com . netflix . hollow . api . producer . Status . StatusType . SUCCESS ) { isAnnouncementSuccess = true ; lastAnnouncementSuccessTimeNanoOptional = OptionalLong . of ( System . nanoTime ( ) ) ; } HollowReadStateEngine stateEngine = readState . getStateEngine ( ) ; dataSizeBytes = stateEngine . calcApproxDataSize ( ) ; announcementMetricsBuilder . setDataSizeBytes ( dataSizeBytes ) . setIsAnnouncementSuccess ( isAnnouncementSuccess ) . setAnnouncementDurationMillis ( elapsed . toMillis ( ) ) ; lastAnnouncementSuccessTimeNanoOptional . ifPresent ( announcementMetricsBuilder :: setLastAnnouncementSuccessTimeNano ) ; announcementMetricsReporting ( announcementMetricsBuilder . build ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/ejb3/src/main/java/org/jboss/as/ejb3/deployment/processors/SessionBeanComponentDescriptionFactory.java#L78-L102<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override protected void processAnnotations ( final DeploymentUnit deploymentUnit , final CompositeIndex compositeIndex ) throws DeploymentUnitProcessingException { if ( MetadataCompleteMarker . isMetadataComplete ( deploymentUnit ) ) { return ; } // Find and process any @Stateless bean annotations final List < AnnotationInstance > slsbAnnotations = compositeIndex . getAnnotations ( STATELESS_ANNOTATION ) ; if ( ! slsbAnnotations . isEmpty ( ) ) { processSessionBeans ( deploymentUnit , slsbAnnotations , SessionBeanComponentDescription . SessionBeanType . STATELESS ) ; } // Find and process any @Stateful bean annotations final List < AnnotationInstance > sfsbAnnotations = compositeIndex . getAnnotations ( STATEFUL_ANNOTATION ) ; if ( ! sfsbAnnotations . isEmpty ( ) ) { processSessionBeans ( deploymentUnit , sfsbAnnotations , SessionBeanComponentDescription . SessionBeanType . STATEFUL ) ; } // Find and process any @Singleton bean annotations final List < AnnotationInstance > sbAnnotations = compositeIndex . getAnnotations ( SINGLETON_ANNOTATION ) ; if ( ! sbAnnotations . isEmpty ( ) ) { processSessionBeans ( deploymentUnit , sbAnnotations , SessionBeanComponentDescription . SessionBeanType . SINGLETON ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/messaging-activemq/src/main/java/org/wildfly/extension/messaging/activemq/ManagementUtil.java#L63-L87<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>static ModelNode convertSecurityRole ( final ModelNode camelCase ) { final ModelNode result = new ModelNode ( ) ; result . setEmptyList ( ) ; if ( camelCase . isDefined ( ) ) { for ( ModelNode role : camelCase . asList ( ) ) { final ModelNode roleNode = result . add ( ) ; for ( Property prop : role . asPropertyList ( ) ) { String key = prop . getName ( ) ; if ( "createDurableQueue" . equals ( key ) ) { key = SecurityRoleDefinition . CREATE_DURABLE_QUEUE . getName ( ) ; } else if ( "deleteDurableQueue" . equals ( key ) ) { key = SecurityRoleDefinition . DELETE_DURABLE_QUEUE . getName ( ) ; } else if ( "createNonDurableQueue" . equals ( key ) ) { key = SecurityRoleDefinition . CREATE_NON_DURABLE_QUEUE . getName ( ) ; } else if ( "deleteNonDurableQueue" . equals ( key ) ) { key = SecurityRoleDefinition . DELETE_NON_DURABLE_QUEUE . getName ( ) ; } roleNode . get ( key ) . set ( prop . getValue ( ) ) ; } } } return result ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/ejb3/src/main/java/org/jboss/as/ejb3/subsystem/EJB3Subsystem11Parser.java#L71-L121<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void readElement ( final XMLExtendedStreamReader reader , final List < ModelNode > operations ) throws XMLStreamException { final ModelNode ejb3SubsystemAddOperation = new ModelNode ( ) ; ejb3SubsystemAddOperation . get ( OP ) . set ( ADD ) ; ejb3SubsystemAddOperation . get ( OP_ADDR ) . add ( SUBSYSTEM , EJB3Extension . SUBSYSTEM_NAME ) ; operations . add ( ejb3SubsystemAddOperation ) ; // elements final EnumSet < EJB3SubsystemXMLElement > encountered = EnumSet . noneOf ( EJB3SubsystemXMLElement . class ) ; while ( reader . hasNext ( ) && reader . nextTag ( ) != XMLStreamConstants . END_ELEMENT ) { switch ( EJB3SubsystemNamespace . forUri ( reader . getNamespaceURI ( ) ) ) { case EJB3_1_1 : { final EJB3SubsystemXMLElement element = EJB3SubsystemXMLElement . forName ( reader . getLocalName ( ) ) ; if ( ! encountered . add ( element ) ) { throw unexpectedElement ( reader ) ; } switch ( element ) { case MDB : { // read <mdb> this . parseMDB ( reader , operations , ejb3SubsystemAddOperation ) ; break ; } case POOLS : { // read <pools> this . parsePools ( reader , operations ) ; break ; } case SESSION_BEAN : { // read <session-bean> this . parseSessionBean ( reader , operations , ejb3SubsystemAddOperation ) ; break ; } case TIMER_SERVICE : { parseTimerService ( reader , operations ) ; break ; } default : { throw unexpectedElement ( reader ) ; } } break ; } default : { throw unexpectedElement ( reader ) ; } } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/util/ArraysUtil.java#L2284-L2293<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String [ ] toStringArray ( String [ ] array ) { if ( array == null ) { return null ; } String [ ] result = new String [ array . length ] ; for ( int i = 0 ; i < array . length ; i ++ ) { result [ i ] = String . valueOf ( array [ i ] ) ; } return result ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/apache/parquet-mr/blob/62dcc68acaf64012bf731e103be780956f1f446d/parquet-column/src/main/java/org/apache/parquet/column/statistics/Statistics.java#L162-L184<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Deprecated public static Statistics getStatsBasedOnType ( PrimitiveTypeName type ) { switch ( type ) { case INT32 : return new IntStatistics ( ) ; case INT64 : return new LongStatistics ( ) ; case FLOAT : return new FloatStatistics ( ) ; case DOUBLE : return new DoubleStatistics ( ) ; case BOOLEAN : return new BooleanStatistics ( ) ; case BINARY : return new BinaryStatistics ( ) ; case INT96 : return new BinaryStatistics ( ) ; case FIXED_LEN_BYTE_ARRAY : return new BinaryStatistics ( ) ; default : throw new UnknownColumnTypeException ( type ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/grid/GridHorizCoordSys.java#L623-L636<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void addCoordSystemVariable ( NetcdfFile ncfile , String name , String dims ) { Variable v = new Variable ( ncfile , g , null , name ) ; v . setDataType ( DataType . CHAR ) ; v . setDimensions ( "" ) ; // scalar Array dataArray = Array . factory ( DataType . CHAR , new int [ 0 ] , new char [ ] { ' ' } ) ; v . setCachedData ( dataArray , false ) ; v . addAttribute ( new Attribute ( _Coordinate . Axes , dims ) ) ; if ( isLatLon ( ) ) v . addAttribute ( new Attribute ( _Coordinate . Transforms , "" ) ) ; // to make sure its identified as a Coordinate System Variable else v . addAttribute ( new Attribute ( _Coordinate . Transforms , getGridName ( ) ) ) ; addGDSparams ( v ) ; ncfile . addVariable ( g , v ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentAbstract.java#L255-L268<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public OCommandRequest command ( final OCommandRequest iCommand ) { checkSecurity ( ORule . ResourceGeneric . COMMAND , ORole . PERMISSION_READ ) ; checkIfActive ( ) ; final OCommandRequestInternal command = ( OCommandRequestInternal ) iCommand ; try { command . reset ( ) ; return command ; } catch ( Exception e ) { throw OException . wrapException ( new ODatabaseException ( "Error on command execution" ) , e ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-madvoc/src/main/java/jodd/madvoc/component/MadvocContainer.java#L106-L110<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void registerComponentInstance ( final Object componentInstance ) { Class component = componentInstance . getClass ( ) ; String name = resolveBaseComponentName ( component ) ; registerComponentInstance ( name , componentInstance ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/core/reflection/Reflection.java#L317-L348<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Map < String , FieldAccess > getPropertyFieldAccessMapFieldFirstForSerializer ( Class < ? > clazz ) { Map < String , FieldAccess > combinedFieldsFieldFirst = getCombinedFieldsFieldFirstForSerializer ( clazz ) ; if ( combinedFieldsFieldFirst != null ) { return combinedFieldsFieldFirst ; } else { /* Fallback map. */ Map < String , FieldAccess > fieldsFallbacks = null ; /* Primary merge into this one. */ Map < String , FieldAccess > fieldsPrimary = null ; /* Try to find the fields first if this is set. */ fieldsPrimary = Reflection . getAllAccessorFields ( clazz , true ) ; fieldsFallbacks = Reflection . getPropertyFieldAccessors ( clazz ) ; fieldsPrimary = removeNonSerializable ( fieldsPrimary ) ; fieldsFallbacks = removeNonSerializable ( fieldsFallbacks ) ; combineFieldMaps ( fieldsFallbacks , fieldsPrimary ) ; combinedFieldsFieldFirst = fieldsPrimary ; putCombinedFieldsFieldFirstForSerializer ( clazz , combinedFieldsFieldFirst ) ; return combinedFieldsFieldFirst ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/logic/src/main/com/thesett/aima/logic/fol/compiler/AnnotatingVisitor.java#L110-L143<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void visit ( Variable variable ) { SymbolKey symbolKey = variable . getSymbolKey ( ) ; // Check if the variable has already been annotated. TermDomain annotation = ( TermDomain ) symbolTable . get ( symbolKey , TERM_DOMAIN ) ; if ( annotation == null ) { // variable is ground if it appears in a call to a predicate that always grounds that argument. /*log.fine("non-ground " + variable.toString(interner, true, false));*/ symbolTable . put ( symbolKey , TERM_DOMAIN , new TermDomain ( false ) ) ; } else { /*log.fine("already seen " + variable.toString(interner, true, false));*/ } // Check if the variable domain has already been annotated for a previous occurrence of the variable. VarDomain varDomain = ( VarDomain ) symbolTable . get ( symbolKey , VARIABLE_DOMAIN ) ; if ( varDomain == null ) { varDomain = new VarDomain ( traverser . isInHead ( ) ) ; symbolTable . put ( symbolKey , VARIABLE_DOMAIN , varDomain ) ; } else { varDomain . isTemporary = traverser . isInHead ( ) && varDomain . isTemporary ( ) ; } /*log.fine(variable.toString(interner, true, false) +             (varDomain.isTemporary() ? " may be temporary." : " is not temporary."));*/ }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/prolog/src/main/com/thesett/aima/logic/fol/prolog/PrologCompiler.java#L77-L105<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void compile ( Sentence < Clause > clauseSentence ) throws SourceCodeException { Clause clause = clauseSentence . getT ( ) ; PrologCompiledClause result = new PrologCompiledClause ( clause . getHead ( ) , clause . getBody ( ) ) ; // Create stack frame slots for all variables in a program. if ( ! clause . isQuery ( ) ) { StackVariableTransform stackVariableTransform = new StackVariableTransform ( 0 , result ) ; result = ( PrologCompiledClause ) result . acceptTransformer ( stackVariableTransform ) ; // Set the required stack frame size on the compiled clause. result . setStackSize ( stackVariableTransform . offset ) ; } // Apply the built-in transformation to map any built-ins to their implementations. TermTransformer builtInTransformation = new BuiltInExpressionTransform ( interner ) ; result = ( PrologCompiledClause ) result . acceptTransformer ( builtInTransformation ) ; // Return the compiled version of the clause. if ( clause . isQuery ( ) ) { observer . onQueryCompilation ( result ) ; } else { observer . onCompilation ( result ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/lojix/logic/src/main/com/thesett/aima/logic/fol/BasePositionalVisitor.java#L64-L75<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void visit ( Term term ) { if ( traverser . isEnteringContext ( ) ) { enterTerm ( term ) ; } else if ( traverser . isLeavingContext ( ) ) { leaveTerm ( term ) ; term . setTermTraverser ( null ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/snakerflow/snakerflow/blob/9c8cb3148a76702f1eda22f1d113053cb44b1eff/snaker-core/src/main/java/org/snaker/engine/core/SnakerEngineImpl.java#L211-L213<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Order startInstanceByName ( String name , Integer version ) { return startInstanceByName ( name , version , null , null ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-servlet/src/main/java/jodd/servlet/CsrfShield.java#L145-L149<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ SuppressWarnings ( { "unchecked" } ) public static boolean checkCsrfToken ( final HttpServletRequest request , final String tokenName ) { String tokenValue = request . getParameter ( tokenName ) ; return checkCsrfToken ( request . getSession ( ) , tokenValue ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/utils/io/IOUtils.java#L1595-L1600<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Deprecated public static void write ( StringBuffer data , OutputStream output , String encoding ) throws IOException { if ( data != null ) { output . write ( data . toString ( ) . getBytes ( Charsets . toCharset ( encoding ) ) ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Maybe.java#L1531-L1536<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ CheckReturnValue @ SchedulerSupport ( SchedulerSupport . NONE ) @ SuppressWarnings ( "unchecked" ) public static < T > Maybe < T > never ( ) { return RxJavaPlugins . onAssembly ( ( Maybe < T > ) MaybeNever . INSTANCE ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-mail/src/main/java/jodd/mail/EMLProperties.java#L71-L79<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected Session createSession ( Properties properties ) { if ( properties == null ) { properties = System . getProperties ( ) ; } this . session = Session . getInstance ( properties ) ; return session ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/utils/io/IOUtils.java#L1411-L1414<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void write ( CharSequence data , OutputStream output ) throws IOException { write ( data , output , Charset . defaultCharset ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/util/StringUtil.java#L1892-L1912<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String stripChar ( final String string , final char c ) { if ( string . length ( ) == 0 ) { return string ; } if ( string . length ( ) == 1 ) { if ( string . charAt ( 0 ) == c ) { return StringPool . EMPTY ; } return string ; } int left = 0 ; int right = string . length ( ) ; if ( string . charAt ( left ) == c ) { left ++ ; } if ( string . charAt ( right - 1 ) == c ) { right -- ; } return string . substring ( left , right ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/PistoiaHELM/HELMNotationParser/blob/685d7ab7886e9b5cc15fb904025fe6eee703f8f6/src/main/java/org/helm/notation2/parser/simplepolymerssection/RepeatingMonomerParser.java#L57-L90<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void doAction ( char cha ) throws SimplePolymerSectionException { /* repeating information is finished */ if ( cha == ' ' ) { if ( _parser . checkRepeating ( repeating ) ) { String [ ] range = repeating . split ( "-" ) ; int first = Integer . parseInt ( range [ 0 ] ) ; if ( range . length > 1 ) { int second = Integer . parseInt ( range [ 1 ] ) ; /* range is wrong */ if ( second - first <= 0 ) { LOG . error ( "Information about repeating is wrong: " + repeating ) ; throw new SimplePolymerSectionException ( "Information about repeating is wrong: " + repeating ) ; } else { LOG . info ( "Monomer unit is repeated:" ) ; _parser . notationContainer . getCurrentPolymer ( ) . getPolymerElements ( ) . getCurrentMonomerNotation ( ) . setCount ( repeating ) ; _parser . setState ( new BetweenMonomerParser ( _parser ) ) ; } } else { LOG . info ( "Monomer unit is repeated:" ) ; _parser . notationContainer . getCurrentPolymer ( ) . getPolymerElements ( ) . getCurrentMonomerNotation ( ) . setCount ( repeating ) ; _parser . setState ( new BetweenMonomerParser ( _parser ) ) ; } } else { LOG . error ( "Information about repeating is wrong: " + repeating ) ; throw new SimplePolymerSectionException ( "Information about repeating is wrong: " + repeating ) ; } } /* add characters to repeating information */ else { repeating += cha ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/storage/impl/local/statistic/OSessionStoragePerformanceStatistic.java#L1092-L1100<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void stopCommitTimer ( ) { final long endTs = nanoTimer . getNano ( ) ; final long timeDiff = ( endTs - timeStamps . pop ( ) ) ; performanceCountersHolder . commitTime += timeDiff ; performanceCountersHolder . commitCount ++ ; makeSnapshotIfNeeded ( endTs ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/medcl/elasticsearch-analysis-ik/blob/a1d6ba8ca206d750e68bbf3e53a25284100174bd/src/main/java/org/wltea/analyzer/dic/Dictionary.java#L383-L394<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void loadMainDict ( ) { // 建立一个主词典实例  _MainDict = new DictSegment ( ( char ) 0 ) ; // 读取主词典文件  Path file = PathUtils . get ( getDictRoot ( ) , Dictionary . PATH_DIC_MAIN ) ; loadDictFile ( _MainDict , file , false , "Main Dict" ) ; // 加载扩展词典  this . loadExtDict ( ) ; // 加载远程自定义词库  this . loadRemoteExtDict ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jkuhnert/ognl/blob/53d51a30c8c299b750dede779d05cb84beee73c3/src/main/java/ognl/enhance/ExpressionCompiler.java#L99-L137<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String getRootExpression ( Node expression , Object root , OgnlContext context ) { String rootExpr = "" ; if ( ! shouldCast ( expression ) ) return rootExpr ; if ( ( ! ASTList . class . isInstance ( expression ) && ! ASTVarRef . class . isInstance ( expression ) && ! ASTStaticMethod . class . isInstance ( expression ) && ! ASTStaticField . class . isInstance ( expression ) && ! ASTConst . class . isInstance ( expression ) && ! ExpressionNode . class . isInstance ( expression ) && ! ASTCtor . class . isInstance ( expression ) && ! ASTStaticMethod . class . isInstance ( expression ) && root != null ) || ( root != null && ASTRootVarRef . class . isInstance ( expression ) ) ) { Class castClass = OgnlRuntime . getCompiler ( ) . getRootExpressionClass ( expression , context ) ; if ( castClass . isArray ( ) || ASTRootVarRef . class . isInstance ( expression ) || ASTThisVarRef . class . isInstance ( expression ) ) { rootExpr = "((" + getCastString ( castClass ) + ")$2)" ; if ( ASTProperty . class . isInstance ( expression ) && ! ( ( ASTProperty ) expression ) . isIndexedAccess ( ) ) rootExpr += "." ; } else if ( ( ASTProperty . class . isInstance ( expression ) && ( ( ASTProperty ) expression ) . isIndexedAccess ( ) ) || ASTChain . class . isInstance ( expression ) ) { rootExpr = "((" + getCastString ( castClass ) + ")$2)" ; } else { rootExpr = "((" + getCastString ( castClass ) + ")$2)." ; } } return rootExpr ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/ft/point/StationProfileCollectionImpl.java#L188-L196<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public Iterator < StationProfileFeature > iterator ( ) { try { PointFeatureCCIterator pfIterator = getNestedPointFeatureCollectionIterator ( ) ; return new NestedCollectionIteratorAdapter <> ( pfIterator ) ; } catch ( IOException e ) { throw new RuntimeException ( e ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/deliveredtechnologies/rulebook/blob/253738f6bc1e7804bb8649863e969956075a19ae/rulebook-core/src/main/java/com/deliveredtechnologies/rulebook/util/AnnotationUtils.java#L91-L100<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ SuppressWarnings ( "unchecked" ) public static < A extends Annotation > A getAnnotation ( Class < A > annotation , Class < ? > clazz ) { return Optional . ofNullable ( clazz . getAnnotation ( annotation ) ) . orElse ( ( A ) Arrays . stream ( clazz . getDeclaredAnnotations ( ) ) . flatMap ( anno -> Arrays . stream ( anno . getClass ( ) . getInterfaces ( ) ) . flatMap ( iface -> Arrays . stream ( iface . getDeclaredAnnotations ( ) ) ) ) . filter ( annotation :: isInstance ) . findFirst ( ) . orElse ( null ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/dom/ResponseBody.java#L210-L220<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public PropStat addPropStat ( ) { Element firstHref = getFirstChild ( root , "href" ) ; //$NON-NLS-1$ Assert . isTrue ( firstHref == null || getNextSibling ( firstHref , new String [ ] { "href" , "status" } ) == null ) ; //$NON-NLS-1$ //$NON-NLS-2$ Element element = addChild ( root , "propstat" , fgNamesPropStat , false ) ; //$NON-NLS-1$ try { return new PropStat ( element ) ; } catch ( MalformedElementException e ) { Assert . isTrue ( false , Policy . bind ( "assert.internalError" ) ) ; //$NON-NLS-1$ return null ; // Never reached. } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/OpenImmo/src/main/jaxb/org/openestate/io/openimmo/xml/ObjectFactory.java#L2751-L2754<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ XmlElementDecl ( namespace = "" , name = "wasch_trockenraum" ) public JAXBElement < Boolean > createWaschTrockenraum ( Boolean value ) { return new JAXBElement < Boolean > ( _WaschTrockenraum_QNAME , Boolean . class , null , value ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/arnohaase/a-foundation/blob/f3eef2ca89d67775f202a4c28140230a6229291e/a-foundation/src/main/java/com/ajjpj/afoundation/collection/graph/ADiGraph.java#L49-L66<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static < N , E extends AEdge < N > > ADiGraph < N , E > create ( Collection < N > nodes , Collection < E > edges ) { final Object [ ] nodeArr = new Object [ nodes . size ( ) ] ; final AEdge [ ] edgeArr = new AEdge [ edges . size ( ) ] ; int idx = 0 ; for ( N node : nodes ) { nodeArr [ idx ] = node ; idx += 1 ; } idx = 0 ; for ( E edge : edges ) { edgeArr [ idx ] = edge ; idx += 1 ; } return new ADiGraph < N , E > ( nodeArr , edgeArr ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/legacy/src/main/java/thredds/catalog/query/DqcFactory.java#L150-L221<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public QueryCapability readXML ( String uriString ) throws IOException { // get URI URI uri ; try { uri = new URI ( uriString ) ; } catch ( URISyntaxException e ) { throw new MalformedURLException ( e . getMessage ( ) ) ; } // check if its cached if ( diskCache != null ) { File file = diskCache . getCacheFile ( uriString ) ; if ( file != null ) { HttpURLConnection conn = null ; try { URL url = uri . toURL ( ) ; conn = ( HttpURLConnection ) url . openConnection ( ) ; conn . setRequestMethod ( "GET" ) ; conn . setIfModifiedSince ( file . lastModified ( ) ) ; int code = conn . getResponseCode ( ) ; if ( code == HttpURLConnection . HTTP_OK ) { java . io . InputStream is = conn . getInputStream ( ) ; if ( is != null ) { try ( FileOutputStream fout = new FileOutputStream ( file ) ) { IO . copyB ( is , fout , buffer_size ) ; // cache it } try ( InputStream fin = new BufferedInputStream ( new FileInputStream ( file ) , 50000 ) ) { return readXML ( fin , uri ) ; } } } else { // use file try ( FileInputStream fin = new FileInputStream ( file ) ) { return readXML ( fin , uri ) ; } } } finally { if ( conn != null ) conn . disconnect ( ) ; } } // has file // no file - read and cache IO . readURLtoFileWithExceptions ( uriString , file , buffer_size ) ; try ( InputStream fin = new BufferedInputStream ( new FileInputStream ( file ) , 50000 ) ) { return readXML ( fin , uri ) ; } } // has diskCache // otherwise just open the URL warnMessages . setLength ( 0 ) ; errMessages . setLength ( 0 ) ; fatalMessages . setLength ( 0 ) ; Document doc = null ; try { doc = builder . build ( uriString ) ; } catch ( JDOMException e ) { fatalMessages . append ( e . getMessage ( ) ) ; // makes it invalid } return readXML ( doc , uri ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/lucene/src/main/java/com/orientechnologies/spatial/strategy/SpatialQueryBuilderOverlap.java#L46-L56<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public OSpatialQueryContext build ( Map < String , Object > query ) throws Exception { Shape shape = parseShape ( query ) ; SpatialStrategy strategy = manager . strategy ( ) ; SpatialArgs args = new SpatialArgs ( SpatialOperation . Intersects , shape . getBoundingBox ( ) ) ; Query filterQuery = strategy . makeQuery ( args ) ; BooleanQuery q = new BooleanQuery . Builder ( ) . add ( filterQuery , BooleanClause . Occur . MUST ) . add ( new MatchAllDocsQuery ( ) , BooleanClause . Occur . SHOULD ) . build ( ) ; return new OSpatialQueryContext ( null , manager . searcher ( ) , q ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/mvc/Results.java#L3125-L3127<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Result preconditionRequired ( File content , FileMimeTypes fileMimeTypes ) { return status ( PRECONDITION_REQUIRED , content , fileMimeTypes ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/hdfs-protolib/src/main/java/com/streamsets/pipeline/stage/destination/hdfs/writer/RecordWriterManager.java#L346-L371<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Path commitWriter ( RecordWriter writer ) throws IOException , StageException { Path path = null ; if ( ( ! writer . isClosed ( ) || writer . isIdleClosed ( ) ) && ! writer . isRenamed ( ) ) { // Unset the interrupt flag before close(). InterruptedIOException makes close() fail // resulting that the tmp file never gets renamed when stopping the pipeline. boolean interrupted = Thread . interrupted ( ) ; try { // Since this method is always called from exactly one thread, and // we checked to make sure that it was not closed or it was idle closed, this method either closes // the file or pushes us into the catch block. writer . close ( ) ; } catch ( IdleClosedException e ) { LOG . info ( "Writer for {} was idle closed, renaming.." , writer . getPath ( ) ) ; } LOG . debug ( "Path[{}] - Committing Writer" , writer . getPath ( ) ) ; path = renameToFinalName ( fs , writer . getPath ( ) ) ; writer . setRenamed ( true ) ; LOG . debug ( "Path[{}] - Committed Writer to '{}'" , writer . getPath ( ) , path ) ; // Reset the interrupt flag back. if ( interrupted ) { Thread . currentThread ( ) . interrupt ( ) ; } } return path ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/interface/org/eclipse/webdav/dom/ActiveLock.java#L205-L211<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void setIsShared ( boolean isShared ) { Element lockscope = setChild ( root , "lockscope" , childNames , true ) ; //$NON-NLS-1$ if ( isShared ) appendChild ( lockscope , "shared" ) ; //$NON-NLS-1$ else appendChild ( lockscope , "exclusive" ) ; //$NON-NLS-1$ }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/components/components/src/main/java/org/mobicents/slee/container/component/security/PolicyFileImpl.java#L179-L193<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private Permissions getPermissions ( Permissions permissions , final CodeSource cs , Principal [ ] principals ) { List < PolicyHolderEntry > entries = this . currentPolicy . get ( ) . policyHolderEntries ; for ( PolicyHolderEntry phe : entries ) { // general selectPermissions ( permissions , cs , principals , phe ) ; // FIXME: certs? } return permissions ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/geometry/UtilPlane3D_F64.java#L135-L141<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void hessianNormalForm ( PlaneGeneral3D_F64 plane ) { double n = Math . sqrt ( plane . A * plane . A + plane . B * plane . B + plane . C * plane . C ) ; plane . A /= n ; plane . B /= n ; plane . C /= n ; plane . D /= n ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/real-logic/aeron/blob/045c32f0256d1ea35d562520216affc281a41239/aeron-client/src/main/java/io/aeron/logbuffer/TermAppender.java#L399-L495<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public int appendFragmentedMessage ( final HeaderWriter header , final DirectBuffer bufferOne , final int offsetOne , final int lengthOne , final DirectBuffer bufferTwo , final int offsetTwo , final int lengthTwo , final int maxPayloadLength , final ReservedValueSupplier reservedValueSupplier , final int activeTermId ) { final int length = lengthOne + lengthTwo ; final int numMaxPayloads = length / maxPayloadLength ; final int remainingPayload = length % maxPayloadLength ; final int lastFrameLength = remainingPayload > 0 ? align ( remainingPayload + HEADER_LENGTH , FRAME_ALIGNMENT ) : 0 ; final int requiredLength = ( numMaxPayloads * ( maxPayloadLength + HEADER_LENGTH ) ) + lastFrameLength ; final UnsafeBuffer termBuffer = this . termBuffer ; final int termLength = termBuffer . capacity ( ) ; final long rawTail = getAndAddRawTail ( requiredLength ) ; final int termId = termId ( rawTail ) ; final long termOffset = rawTail & 0xFFFF_FFFF  L ; checkTerm ( activeTermId , termId ) ; long resultingOffset = termOffset + requiredLength ; if ( resultingOffset > termLength ) { resultingOffset = handleEndOfLogCondition ( termBuffer , termOffset , header , termLength , termId ) ; } else { int frameOffset = ( int ) termOffset ; byte flags = BEGIN_FRAG_FLAG ; int remaining = length ; int positionOne = 0 ; int positionTwo = 0 ; do { final int bytesToWrite = Math . min ( remaining , maxPayloadLength ) ; final int frameLength = bytesToWrite + HEADER_LENGTH ; final int alignedLength = align ( frameLength , FRAME_ALIGNMENT ) ; header . write ( termBuffer , frameOffset , frameLength , termId ) ; int bytesWritten = 0 ; int payloadOffset = frameOffset + HEADER_LENGTH ; do { final int remainingOne = lengthOne - positionOne ; if ( remainingOne > 0 ) { final int numBytes = Math . min ( bytesToWrite - bytesWritten , remainingOne ) ; termBuffer . putBytes ( payloadOffset , bufferOne , offsetOne + positionOne , numBytes ) ; bytesWritten += numBytes ; payloadOffset += numBytes ; positionOne += numBytes ; } else { final int numBytes = Math . min ( bytesToWrite - bytesWritten , lengthTwo - positionTwo ) ; termBuffer . putBytes ( payloadOffset , bufferTwo , offsetTwo + positionTwo , numBytes ) ; bytesWritten += numBytes ; payloadOffset += numBytes ; positionTwo += numBytes ; } } while ( bytesWritten < bytesToWrite ) ; if ( remaining <= maxPayloadLength ) { flags |= END_FRAG_FLAG ; } frameFlags ( termBuffer , frameOffset , flags ) ; if ( null != reservedValueSupplier ) { final long reservedValue = reservedValueSupplier . get ( termBuffer , frameOffset , frameLength ) ; termBuffer . putLong ( frameOffset + RESERVED_VALUE_OFFSET , reservedValue , LITTLE_ENDIAN ) ; } frameLengthOrdered ( termBuffer , frameOffset , frameLength ) ; flags = 0 ; frameOffset += alignedLength ; remaining -= bytesToWrite ; } while ( remaining > 0 ) ; } return ( int ) resultingOffset ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/ui/src/main/java/ucar/nc2/ui/widget/UrlAuthenticatorDialog.java#L118-L135<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Credentials getCredentials ( AuthScope scope ) { serverF . setText ( scope . getHost ( ) + ":" + scope . getPort ( ) ) ; String realmName = scope . getRealm ( ) ; if ( realmName == null ) { realmName = "THREDDS Data Server" ; } realmF . setText ( realmName ) ; dialog . setVisible ( true ) ; if ( pwa == null ) throw new IllegalStateException ( ) ; if ( debug ) { System . out . println ( "user= (" + pwa . getUserName ( ) + ")" ) ; System . out . println ( "password= (" + new String ( pwa . getPassword ( ) ) + ")" ) ; } // Is this really necessary? UsernamePasswordCredentials upc = new UsernamePasswordCredentials ( pwa . getUserName ( ) , new String ( pwa . getPassword ( ) ) ) ; return upc ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-core/src/main/java/ro/isdc/wro/util/Base64.java#L450-L453<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String encodeObject ( final java . io . Serializable serializableObject ) throws java . io . IOException { return encodeObject ( serializableObject , NO_OPTIONS ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jbundle/util/blob/5af0f2292f56f29f70cbc26d0bfa72f89ae31be0/jbackup/src/main/java/org/jbundle/jbackup/util/Util.java#L82-L108<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Object makeObjectFromClassName ( String interfaceName , String strPackage , String strClassName ) { if ( strClassName == null ) return null ; if ( strClassName . indexOf ( ' ' ) == - 1 ) if ( strPackage != null ) { // Use default structure strClassName = org . jbundle . jbackup . JBackupConstants . ROOT_PACKAGE + "jbackup." + strPackage . toLowerCase ( ) + ' ' + strClassName + strPackage . substring ( 0 , 1 ) . toUpperCase ( ) + strPackage . substring ( 1 ) ; } Object objClass = null ; try { if ( strClassName . indexOf ( ' ' ) == 0 ) strClassName = org . jbundle . jbackup . JBackupConstants . ROOT_PACKAGE + strClassName . substring ( 1 ) ; Class < ? > c = Class . forName ( strClassName ) ; if ( c != null ) { objClass = c . newInstance ( ) ; } } catch ( Exception ex ) { System . out . println ( "Error on attempt to make class: " + strClassName ) ; ex . printStackTrace ( ) ; System . exit ( 0 ) ; } return objClass ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/OpenImmo/src/main/jaxb/org/openestate/io/openimmo/xml/ObjectFactory.java#L3327-L3330<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ XmlElementDecl ( namespace = "" , name = "weitergabe_positiv" ) public JAXBElement < String > createWeitergabePositiv ( String value ) { return new JAXBElement < String > ( _WeitergabePositiv_QNAME , String . class , null , value ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/DigitalPebble/storm-crawler/blob/5d0465192ab8fbd89a90db32cb20960a282411ea/core/src/main/java/com/digitalpebble/stormcrawler/util/CookieConverter.java#L49-L131<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static List < Cookie > getCookies ( String [ ] cookiesStrings , URL targetURL ) { ArrayList < Cookie > list = new ArrayList < Cookie > ( ) ; for ( String cs : cookiesStrings ) { String name = null ; String value = null ; String expires = null ; String domain = null ; String path = null ; boolean secure = false ; String [ ] tokens = cs . split ( ";" ) ; int equals = tokens [ 0 ] . indexOf ( "=" ) ; name = tokens [ 0 ] . substring ( 0 , equals ) ; value = tokens [ 0 ] . substring ( equals + 1 ) ; for ( int i = 1 ; i < tokens . length ; i ++ ) { String ti = tokens [ i ] . trim ( ) ; if ( ti . equalsIgnoreCase ( "secure" ) ) secure = true ; if ( ti . toLowerCase ( ) . startsWith ( "path=" ) ) { path = ti . substring ( 5 ) ; } if ( ti . toLowerCase ( ) . startsWith ( "domain=" ) ) { domain = ti . substring ( 7 ) ; } if ( ti . toLowerCase ( ) . startsWith ( "expires=" ) ) { expires = ti . substring ( 8 ) ; } } BasicClientCookie cookie = new BasicClientCookie ( name , value ) ; // check domain if ( domain != null ) { cookie . setDomain ( domain ) ; if ( ! checkDomainMatchToUrl ( domain , targetURL . getHost ( ) ) ) continue ; } // check path if ( path != null ) { cookie . setPath ( path ) ; if ( ! path . equals ( "" ) && ! path . equals ( "/" ) && ! targetURL . getPath ( ) . startsWith ( path ) ) continue ; } // check secure if ( secure ) { cookie . setSecure ( secure ) ; if ( ! targetURL . getProtocol ( ) . equalsIgnoreCase ( "https" ) ) continue ; } // check expiration if ( expires != null ) { try { Date expirationDate = DATE_FORMAT . parse ( expires ) ; cookie . setExpiryDate ( expirationDate ) ; // check that it hasn't expired? if ( cookie . isExpired ( new Date ( ) ) ) continue ; cookie . setExpiryDate ( expirationDate ) ; } catch ( ParseException e ) { // ignore exceptions } } // attach additional infos to cookie list . add ( cookie ) ; } return list ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/google-cloud-lib/src/main/java/com/streamsets/pipeline/stage/bigquery/lib/BigQueryDelegate.java#L180-L228<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public TableResult runQuery ( QueryJobConfiguration queryConfig , long timeout , long pageSize ) throws StageException { checkArgument ( timeout >= 1000 , "Timeout must be at least one second." ) ; Instant maxTime = Instant . now ( ) . plusMillis ( timeout ) ; // Create a job ID so that we can safely retry. JobId jobId = JobId . of ( UUID . randomUUID ( ) . toString ( ) ) ; JobInfo jobInfo = JobInfo . newBuilder ( queryConfig ) . setJobId ( jobId ) . build ( ) ; Job queryJob = bigquery . create ( jobInfo ) ; // Check for errors if ( queryJob == null ) { LOG . error ( "Job no longer exists: {}" , jobInfo ) ; throw new RuntimeException ( "Job no longer exists: " + jobInfo ) ; } else if ( queryJob . getStatus ( ) . getError ( ) != null ) { BigQueryError error = queryJob . getStatus ( ) . getError ( ) ; LOG . error ( "Query Job execution error: {}" , error ) ; throw new StageException ( Errors . BIGQUERY_02 , error ) ; } //Should consider using .waitFor(RetryOption.totalTimeout()) while ( ! queryJob . isDone ( ) ) { if ( Instant . now ( clock ) . isAfter ( maxTime ) || ! ThreadUtil . sleep ( 100 ) ) { if ( bigquery . cancel ( queryJob . getJobId ( ) ) ) { LOG . info ( "Job {} cancelled successfully." , queryJob . getJobId ( ) ) ; } else { LOG . warn ( "Job {} not found" , queryJob . getJobId ( ) ) ; } throw new StageException ( Errors . BIGQUERY_00 ) ; } } if ( queryJob . getStatus ( ) . getError ( ) != null ) { String errorMsg = queryJob . getStatus ( ) . getError ( ) . toString ( ) ; throw new StageException ( Errors . BIGQUERY_02 , errorMsg ) ; } // Get the results. TableResult result = null ; try { result = queryJob . getQueryResults ( QueryResultsOption . pageSize ( pageSize ) ) ; } catch ( InterruptedException e ) { String errorMsg = e . getMessage ( ) ; throw new StageException ( Errors . BIGQUERY_02 , errorMsg ) ; } return result ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/org/jcodec/containers/mkv/util/EbmlUtil.java#L87-L97<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static int ebmlLength ( long v ) { if ( v == 0 ) return 1 ; int length = 8 ; while ( length > 0 && ( v & ebmlLengthMasks [ length ] ) == 0 ) length -- ; return length ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/alipay/sofa-bolt/blob/0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046/src/main/java/com/alipay/remoting/RemotingContext.java#L143-L145<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public UserProcessor < ? > getUserProcessor ( String className ) { return StringUtils . isBlank ( className ) ? null : this . userProcessors . get ( className ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/cologneintelligence/FitGoodies/blob/834e42d1f41b4b9226060b1e83a80cc69ea88c7b/fitgoodies-core/src/main/java/de/cologneintelligence/fitgoodies/runners/FitResultTable.java#L165-L178<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public String getSummaryRow ( final File directory ) { StringBuilder builder = new StringBuilder ( ) ; Counts counts = getSummary ( ) ; builder . append ( "<tr bgcolor=\"" ) ; builder . append ( color ( counts ) ) ; builder . append ( "\"><th style=\"text-align: left\">" ) ; builder . append ( directory . getName ( ) ) ; builder . append ( "</th><th style=\"text-align: left\">" ) ; builder . append ( counts . toString ( ) ) ; builder . append ( "</th></tr>" ) ; return builder . toString ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/tony19/logback-android/blob/028489c11ccfc1237a53923db06f22a90b41809c/logback-android/src/main/java/ch/qos/logback/core/subst/Parser.java#L123-L134<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private Node C ( ) throws ScanException { Node e0 = E ( ) ; Token t = peekAtCurentToken ( ) ; if ( isDefaultToken ( t ) ) { advanceTokenPointer ( ) ; Node literal = makeNewLiteralNode ( CoreConstants . DEFAULT_VALUE_SEPARATOR ) ; e0 . append ( literal ) ; Node e1 = E ( ) ; e0 . append ( e1 ) ; } return e0 ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/tx/OTransactionOptimistic.java#L90-L108<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void commit ( final boolean force ) { checkTransaction ( ) ; if ( txStartCounter < 0 ) throw new OStorageException ( "Invalid value of tx counter" ) ; if ( force ) txStartCounter = 0 ; else txStartCounter -- ; if ( txStartCounter == 0 ) { doCommit ( ) ; } else if ( txStartCounter > 0 ) OLogManager . instance ( ) . debug ( this , "Nested transaction was closed but transaction itself was not committed." ) ; else throw new OTransactionException ( "Transaction was committed more times than it is started." ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Examples/src/main/java/org/openestate/io/examples/FilemakerWritingExample.java#L158-L164<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected static ProductType createProduct ( ) { ProductType product = FACTORY . createProductType ( ) ; product . setNAME ( "OpenEstate-IO" ) ; product . setVERSION ( "1.4" ) ; product . setBUILD ( "123" ) ; return product ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/client-api/src/main/java/com/streamsets/datacollector/client/api/StoreApi.java#L187-L227<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public PipelineFragmentEnvelopeJson createDraftPipelineFragment ( String fragmentId , String description , List < StageConfigurationJson > stageInstances ) throws ApiException { Object postBody = stageInstances ; byte [ ] postBinaryBody = null ; // verify the required parameter 'pipelineId' is set if ( fragmentId == null ) { throw new ApiException ( 400 , "Missing the required parameter 'fragmentId' when calling createPipelineFragment" ) ; } // create path and map variables String path = "/v1/fragment/{fragmentId}" . replaceAll ( "\\{format\\}" , "json" ) . replaceAll ( "\\{" + "fragmentId" + "\\}" , apiClient . escapeString ( fragmentId . toString ( ) ) ) ; // query params List < Pair > queryParams = new ArrayList < Pair > ( ) ; Map < String , String > headerParams = new HashMap < String , String > ( ) ; Map < String , Object > formParams = new HashMap < String , Object > ( ) ; queryParams . addAll ( apiClient . parameterToPairs ( "" , "description" , description ) ) ; queryParams . addAll ( apiClient . parameterToPairs ( "" , "draft" , true ) ) ; final String [ ] accepts = { "application/json" } ; final String accept = apiClient . selectHeaderAccept ( accepts ) ; final String [ ] contentTypes = { } ; final String contentType = apiClient . selectHeaderContentType ( contentTypes ) ; String [ ] authNames = new String [ ] { "basic" } ; TypeRef returnType = new TypeRef < PipelineFragmentEnvelopeJson > ( ) { } ; return apiClient . invokeAPI ( path , "PUT" , queryParams , postBody , postBinaryBody , headerParams , formParams , accept , contentType , authNames , returnType ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-json/src/main/java/jodd/json/MapToBean.java#L165-L181<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private Object generifyList ( final List list , final Class componentType ) { for ( int i = 0 ; i < list . size ( ) ; i ++ ) { Object element = list . get ( i ) ; if ( element != null ) { if ( element instanceof Map ) { Object bean = map2bean ( ( Map ) element , componentType ) ; list . set ( i , bean ) ; } else { Object value = convert ( element , componentType ) ; list . set ( i , value ) ; } } } return list ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/gempak/GempakFileReader.java#L1174-L1205<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public float [ ] getFileHeader ( String name ) throws IOException { DMFileHeaderInfo fh = findFileHeader ( name ) ; if ( ( fh == null ) || ( fh . kfhtyp != MDREAL ) ) { return null ; } int knt = fileHeaderInfo . indexOf ( fh ) ; // 0 based int iread = dmLabel . kpfile + 3 * dmLabel . kfhdrs ; for ( int i = 0 ; i < knt ; i ++ ) { DMFileHeaderInfo fhi = fileHeaderInfo . get ( i ) ; iread = iread + fhi . kfhlen + 1 ; } int nword = DM_RINT ( iread ) ; if ( nword <= 0 ) { logError ( "Invalid header length for " + name ) ; return null ; } iread ++ ; float [ ] rheader = new float [ nword ] ; if ( name . equals ( "NAVB" ) && needToSwap ) { DM_RFLT ( iread , 1 , rheader , 0 ) ; needToSwap = false ; iread ++ ; DM_RFLT ( iread , 1 , rheader , 1 ) ; needToSwap = true ; iread ++ ; DM_RFLT ( iread , nword - 2 , rheader , 2 ) ; } else { DM_RFLT ( iread , rheader ) ; } return rheader ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/io/findfile/FindFile.java#L252-L259<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public FindFile searchPath ( final URL searchPath ) { File file = FileUtil . toContainerFile ( searchPath ) ; if ( file == null ) { throw new FindFileException ( "URL error: " + searchPath ) ; } addPath ( file ) ; return this ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ReactiveX/RxJava/blob/ac84182aa2bd866b53e01c8e3fe99683b882c60e/src/main/java/io/reactivex/Maybe.java#L303-L308<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ BackpressureSupport ( BackpressureKind . FULL ) @ CheckReturnValue @ SchedulerSupport ( SchedulerSupport . NONE ) public static < T > Flowable < T > concat ( Publisher < ? extends MaybeSource < ? extends T > > sources ) { return concat ( sources , 2 ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/api/jar/src/main/java/javax/slee/management/VendorExtensionUtils.java#L45-L54<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Object readObject ( ObjectInputStream in , boolean vendorDataDeserializationEnabled ) throws IOException , ClassNotFoundException { // read non-transient fields in . defaultReadObject ( ) ; // read any possible marshalled vendor data from the stream MarshalledObject vendorData = in . readBoolean ( ) ? ( MarshalledObject ) in . readObject ( ) : null ; // now figure out what to return return ( vendorData != null && vendorDataDeserializationEnabled ) ? vendorData . get ( ) : null ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/visad/src/main/java/ucar/nc2/iosp/grid/GridServiceProvider.java#L270-L282<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public boolean isMissingXY ( Variable v2 , int timeIdx , int ensIdx , int levIdx ) throws InvalidRangeException { GridVariable pv = ( GridVariable ) v2 . getSPobject ( ) ; if ( ( timeIdx < 0 ) || ( timeIdx >= pv . getNTimes ( ) ) ) { throw new InvalidRangeException ( "timeIdx=" + timeIdx ) ; } if ( ( levIdx < 0 ) || ( levIdx >= pv . getVertNlevels ( ) ) ) { throw new InvalidRangeException ( "levIdx=" + levIdx ) ; } if ( ( ensIdx < 0 ) || ( ensIdx >= pv . getNEnsembles ( ) ) ) { throw new InvalidRangeException ( "ensIdx=" + ensIdx ) ; } return ( null == pv . findRecord ( ensIdx , timeIdx , levIdx ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/jdbc-protolib/src/main/java/com/streamsets/pipeline/stage/origin/jdbc/cdc/oracle/OracleCDCSource.java#L1440-L1468<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ VisibleForTesting String getListOfSchemasAndTables ( List < SchemaAndTable > schemaAndTables ) { Map < String , List < String > > schemas = new HashMap <> ( ) ; for ( SchemaAndTable schemaAndTable : schemaAndTables ) { if ( schemas . containsKey ( schemaAndTable . getSchema ( ) ) ) { schemas . get ( schemaAndTable . getSchema ( ) ) . add ( schemaAndTable . getTable ( ) ) ; } else { List < String > tbls = new ArrayList <> ( ) ; tbls . add ( schemaAndTable . getTable ( ) ) ; schemas . put ( schemaAndTable . getSchema ( ) , tbls ) ; } } List < String > queries = new ArrayList <> ( ) ; for ( Map . Entry < String , List < String > > entry : schemas . entrySet ( ) ) { List < String > tables = new ArrayList <> ( ) ; int fromIndex = 0 ; int range = 1000 ; int maxIndex = entry . getValue ( ) . size ( ) ; int toIndex = range < maxIndex ? range : maxIndex ; while ( fromIndex < toIndex ) { tables . add ( Utils . format ( "TABLE_NAME IN ({})" , formatTableList ( entry . getValue ( ) . subList ( fromIndex , toIndex ) ) ) ) ; fromIndex = toIndex ; toIndex = ( toIndex + range ) < maxIndex ? ( toIndex + range ) : maxIndex ; } queries . add ( Utils . format ( "(SEG_OWNER='{}' AND ({}))" , entry . getKey ( ) , String . join ( " OR " , tables ) ) ) ; } return "( " + String . join ( " OR " , queries ) + " )" ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/rest-assured/src/main/java/io/restassured/builder/MultiPartSpecBuilder.java#L227-L234<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public MultiPartSpecBuilder charset ( String charset ) { Validate . notEmpty ( charset , "Charset cannot be empty" ) ; if ( content instanceof byte [ ] || content instanceof InputStream ) { throw new IllegalArgumentException ( "Cannot specify charset input streams or byte arrays." ) ; } this . charset = charset ; return this ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/TooTallNate/Java-WebSocket/blob/73c6805ca2c7801b2828ffd3ec12e5cb0daefcf9/src/main/java/org/java_websocket/AbstractWebSocket.java#L205-L220<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void executeConnectionLostDetection ( WebSocket webSocket , long minimumPongTime ) { if ( ! ( webSocket instanceof WebSocketImpl ) ) { return ; } WebSocketImpl webSocketImpl = ( WebSocketImpl ) webSocket ; if ( webSocketImpl . getLastPong ( ) < minimumPongTime ) { log . trace ( "Closing connection due to no pong received: {}" , webSocketImpl ) ; webSocketImpl . closeConnection ( CloseFrame . ABNORMAL_CLOSE , "The connection was closed because the other endpoint did not respond with a pong in time. For more information check: https://github.com/TooTallNate/Java-WebSocket/wiki/Lost-connection-detection" ) ; } else { if ( webSocketImpl . isOpen ( ) ) { webSocketImpl . sendPing ( ) ; } else { log . trace ( "Trying to ping a non open connection: {}" , webSocketImpl ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jcodec/jcodec/blob/cd6efa51ef05f409a8ba8cfb7521f4b4f10ccc75/src/main/java/org/jcodec/containers/mp4/boxes/TrakBox.java#L266-L273<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Size getCodedSize ( ) { SampleEntry se = getSampleEntries ( ) [ 0 ] ; if ( ! ( se instanceof VideoSampleEntry ) ) throw new IllegalArgumentException ( "Not a video track" ) ; VideoSampleEntry vse = ( VideoSampleEntry ) se ; return new Size ( vse . getWidth ( ) , vse . getHeight ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/util/prefs/XMLStore.java#L106-L109<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>static public XMLStore createFromInputStream ( InputStream is1 , InputStream is2 , XMLStore storedDefaults ) throws java . io . IOException { if ( debugWhichStore ) System . out . println ( "XMLStore read from input stream " + is1 ) ; return new XMLStore ( is1 , is2 , storedDefaults ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/configuration/RowsMapping.java#L110-L120<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public final void mergeMap ( final RowsMapping addMap ) { Map < Integer , List < SerialRow > > map = addMap . getRowsMap ( ) ; for ( Map . Entry < Integer , List < SerialRow > > entry : map . entrySet ( ) ) { List < SerialRow > entryRowList = entry . getValue ( ) ; if ( ( entryRowList != null ) && ( ! entryRowList . isEmpty ( ) ) ) { for ( SerialRow row : entryRowList ) { this . addRow ( entry . getKey ( ) , row . getRow ( ) ) ; } } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/artclarke/humble-video/blob/aa349ae2d7ef74160b7074feac8d298cf90394d1/humble-video-noarch/src/main/java/io/humble/video/FilterGraph.java#L154-L157<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public FilterAudioSource addAudioSource ( String name , int sampleRate , AudioChannel . Layout channelLayout , AudioFormat . Type format , Rational timeBase ) { long cPtr = VideoJNI . FilterGraph_addAudioSource ( swigCPtr , this , name , sampleRate , channelLayout . swigValue ( ) , format . swigValue ( ) , Rational . getCPtr ( timeBase ) , timeBase ) ; return ( cPtr == 0 ) ? null : new FilterAudioSource ( cPtr , false ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-db/src/main/java/jodd/db/DbQueryParser.java#L114-L123<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected int getBatchParameterSize ( final String name ) { if ( batchParams == null ) { return 0 ; } Integer size = batchParams . get ( name ) ; if ( size == null ) { return 0 ; } return size . intValue ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/streamsets/datacollector/blob/ea63245ea14d59d5229248387f0628f46131eae5/google-cloud-lib/src/main/java/com/streamsets/pipeline/stage/bigquery/destination/BigQueryTarget.java#L237-L252<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private String getInsertIdForRecord ( ELVars elVars , Record record ) throws OnRecordErrorException { String recordId = null ; RecordEL . setRecordInContext ( elVars , record ) ; try { if ( ! ( StringUtils . isEmpty ( conf . rowIdExpression ) ) ) { recordId = rowIdELEval . eval ( elVars , conf . rowIdExpression , String . class ) ; if ( StringUtils . isEmpty ( recordId ) ) { throw new OnRecordErrorException ( record , Errors . BIGQUERY_15 ) ; } } } catch ( ELEvalException e ) { LOG . error ( "Error evaluating Row Expression EL" , e ) ; throw new OnRecordErrorException ( record , Errors . BIGQUERY_10 , e ) ; } return recordId ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/metric/alg/DistancePointTriangle3D_F64.java#L113-L120<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public double sign ( Point3D_F64 P ) { GeometryMath_F64 . cross ( E1 , E0 , N ) ; // dot product of double d = N . x * ( P . x - B . x ) + N . y * ( P . y - B . y ) + N . z * ( P . z - B . z ) ; return Math . signum ( d ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/GlenKPeterson/Paguro/blob/eac0d64b2eb9496967334f635cdb270cffb2197b/src/main/java/org/organicdesign/fp/collections/PersistentHashMap.java#L154-L164<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ SuppressWarnings ( "WeakerAccess" ) public static < K , V > PersistentHashMap < K , V > ofEq ( Equator < K > eq , Iterable < Map . Entry < K , V > > es ) { if ( es == null ) { return empty ( eq ) ; } MutableHashMap < K , V > map = emptyMutable ( eq ) ; for ( Map . Entry < K , V > entry : es ) { if ( entry != null ) { map . assoc ( entry . getKey ( ) , entry . getValue ( ) ) ; } } return map . immutable ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/undertow/src/main/java/org/wildfly/extension/undertow/deployment/UndertowDeploymentInfoService.java#L465-L478<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void handleJASPIMechanism ( final DeploymentInfo deploymentInfo ) { ApplicationPolicy applicationPolicy = SecurityConfiguration . getApplicationPolicy ( this . securityDomain ) ; if ( applicationPolicy != null && JASPIAuthenticationInfo . class . isInstance ( applicationPolicy . getAuthenticationInfo ( ) ) ) { String authMethod = null ; LoginConfig loginConfig = deploymentInfo . getLoginConfig ( ) ; if ( loginConfig != null && loginConfig . getAuthMethods ( ) . size ( ) > 0 ) { authMethod = loginConfig . getAuthMethods ( ) . get ( 0 ) . getName ( ) ; } deploymentInfo . setJaspiAuthenticationMechanism ( new JASPICAuthenticationMechanism ( securityDomain , authMethod ) ) ; deploymentInfo . setSecurityContextFactory ( new JASPICSecurityContextFactory ( this . securityDomain ) ) ; deploymentInfo . addOuterHandlerChainWrapper ( next -> new JASPICSecureResponseHandler ( next ) ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/fabric8io/fabric8-maven-plugin/blob/b0e7ad860a5bbe4ab71be3d0613862a1f14a8be3/enricher/standard/src/main/java/io/fabric8/maven/enricher/standard/ImageEnricher.java#L214-L226<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void mergeImageConfigurationWithContainerSpec ( List < Container > containers ) { getImages ( ) . ifPresent ( images -> { int idx = 0 ; for ( ImageConfiguration image : images ) { Container container = getContainer ( idx , containers ) ; mergeImagePullPolicy ( image , container ) ; mergeImage ( image , container ) ; mergeContainerName ( image , container ) ; mergeEnvVariables ( container ) ; idx ++ ; } } ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/google/guice/blob/a0552a16d813ead98fe73737fb001db336650251/core/src/com/google/inject/internal/Errors.java#L79-L86<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>static < T > T checkNotNull ( T reference , String name ) { if ( reference != null ) { return reference ; } NullPointerException npe = new NullPointerException ( name ) ; throw new ConfigurationException ( ImmutableSet . of ( new Message ( npe . toString ( ) , npe ) ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/stanfy/enroscar/blob/0e64f3c309d62e359b55ddcba10e3cc592f5e083/io/src/main/java/com/stanfy/enroscar/io/IoUtils.java#L161-L165<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static InputStream getUncompressedInputStream ( final URLConnection connection ) throws IOException { final InputStream source = connection . getInputStream ( ) ; final String encoding = connection . getContentEncoding ( ) ; return getUncompressedInputStream ( encoding , source ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rockagen/commons-lib/blob/f37141cf40be79d130db804c39ce61690541d5f1/src/main/java/com/rockagen/commons/http/HttpConn.java#L1274-L1296<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static String sendBody ( UsernamePasswordCredentials upc , InputStream keystore , char [ ] password , HttpHost targetHost , String uri , HttpEntity entity , HttpHost proxyHost , String encoding , RequestMethod method , Header ... headers ) throws IOException { if ( ! uri . startsWith ( "/" ) ) { uri = "/" + uri ; } HttpEntityEnclosingRequestBase hm = getHttpEntityMethod ( method , uri ) ; if ( headers != null && headers . length > 0 ) { hm . setHeaders ( headers ) ; } if ( entity != null ) { hm . setEntity ( entity ) ; } log . debug ( "url: {} method: {}" , getURL ( targetHost , uri ) , method ) ; return execute ( targetHost , proxyHost , hm , encoding , upc , keystore , password ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/debugger/enhanced_text_model/src/main/com/thesett/aima/logic/fol/wam/debugger/text/AttributeGridImpl.java#L67-L74<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public AttributeSet getAttributeAt ( int c , int r ) { AttributeSet attributeSet = cellAttributes . get ( ( long ) c , ( long ) r ) ; attributeSet = ( attributeSet == null ) ? getColumnAttributeOrNull ( c ) : attributeSet ; attributeSet = ( attributeSet == null ) ? getRowAttributeOrNull ( r ) : attributeSet ; return attributeSet ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/clcommon/src/main/java/thredds/inventory/bdb/MetadataManager.java#L114-L134<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>static synchronized public void closeAll ( ) { List < MetadataManager > closeDatabases = new ArrayList <> ( openDatabases ) ; for ( MetadataManager mm : closeDatabases ) { if ( debug ) System . out . println ( "  close database " + mm . collectionName ) ; mm . close ( ) ; } openDatabases = new ArrayList <> ( ) ; // empty if ( myEnv != null ) { try { // Finally, close the store and environment. myEnv . close ( ) ; myEnv = null ; logger . info ( "closed bdb caching" ) ; } catch ( DatabaseException dbe ) { logger . error ( "Error closing bdb: " , dbe ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-db/src/main/java/jodd/db/type/BigDecimalSqlType.java#L37-L40<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public BigDecimal get ( final ResultSet rs , final int index , final int dbSqlType ) throws SQLException { return rs . getBigDecimal ( index ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/lightcouch/LightCouch/blob/9646889503475e862fd2158487e1cdd805447f4a/src/main/java/org/lightcouch/CouchDbClientBase.java#L297-L308<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public boolean contains ( String id ) { assertNotEmpty ( id , "id" ) ; HttpResponse response = null ; try { response = head ( buildUri ( getDBUri ( ) ) . pathEncoded ( id ) . build ( ) ) ; } catch ( NoDocumentException e ) { return false ; } finally { close ( response ) ; } return true ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/common/src/main/java/org/mobicents/slee/container/management/jmx/DeploymentMBeanImpl.java#L625-L632<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public DeployableUnitID [ ] getDeployableUnits ( ) throws ManagementException { try { return getSleeContainer ( ) . getDeployableUnitManagement ( ) . getDeployableUnits ( ) ; } catch ( Throwable e ) { throw new ManagementException ( "failed to get deployable units" , e ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wro4j/wro4j/blob/d2a3de71ab8bf0af7061fb6327501e08198338df/wro4j-core/src/main/java/ro/isdc/wro/manager/factory/BaseWroManagerFactory.java#L340-L346<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public BaseWroManagerFactory addModelTransformer ( final Transformer < WroModel > modelTransformer ) { if ( modelTransformers == null ) { modelTransformers = new ArrayList < Transformer < WroModel > > ( ) ; } this . modelTransformers . add ( modelTransformer ) ; return this ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/weld/subsystem/src/main/java/org/jboss/as/weld/WeldExtension.java#L77-L83<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public void initializeParsers ( final ExtensionParsingContext context ) { context . setSubsystemXmlMapping ( SUBSYSTEM_NAME , WeldSubsystem10Parser . NAMESPACE , ( ) -> WeldSubsystem10Parser . INSTANCE ) ; context . setSubsystemXmlMapping ( SUBSYSTEM_NAME , WeldSubsystem20Parser . NAMESPACE , ( ) -> WeldSubsystem20Parser . INSTANCE ) ; context . setSubsystemXmlMapping ( SUBSYSTEM_NAME , WeldSubsystem30Parser . NAMESPACE , ( ) -> WeldSubsystem30Parser . INSTANCE ) ; context . setSubsystemXmlMapping ( SUBSYSTEM_NAME , WeldSubsystem40Parser . NAMESPACE , ( ) -> WeldSubsystem40Parser . INSTANCE ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jpush/jiguang-java-client-common/blob/5fc5a7f3433568131e198d54b315e7d23c4f2626/src/main/java/cn/jiguang/common/utils/sm2/BCECUtil.java#L290-L294<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static ECPrivateKeyParameters convertSEC1ToECPrivateKey ( byte [ ] sec1Key ) throws NoSuchAlgorithmException , NoSuchProviderException , InvalidKeySpecException , IOException { BCECPrivateKey privateKey = convertSEC1ToBCECPrivateKey ( sec1Key ) ; return convertPrivateKeyToParameters ( privateKey ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/io/FileUtil.java#L455-L467<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private static void _moveDirectory ( final File srcDest , File destDir ) throws IOException { if ( destDir . exists ( ) ) { checkIsDirectory ( destDir ) ; destDir = file ( destDir , destDir . getName ( ) ) ; destDir . mkdir ( ) ; } final boolean rename = srcDest . renameTo ( destDir ) ; if ( ! rename ) { _copyDirectory ( srcDest , destDir ) ; deleteDir ( srcDest ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oblac/jodd/blob/85ad7f813ec0e07ecd27042aeb47ff2047631fa5/jodd-core/src/main/java/jodd/buffer/FastFloatBuffer.java#L84-L92<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public FastFloatBuffer append ( final float [ ] array , final int off , final int len ) { if ( offset + len - buffer . length > 0 ) { grow ( offset + len ) ; } System . arraycopy ( array , off , buffer , offset , len ) ; offset += len ; return this ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ArpNetworking/logback-steno/blob/abd5c68ce7d42c39f80ffbad6d162d5fed3a346e/src/main/java/com/arpnetworking/logback/KeyValueEncoder.java#L284-L294<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected String buildFormatString ( @ Nullable final String name , @ Nullable final String [ ] keys ) { final String effectiveName = name == null ? _logEventName : name ; final StringWriter stringWriter = new StringWriter ( ) ; stringWriter . append ( "name=\"" ) . append ( effectiveName ) . append ( "\"" ) ; if ( keys != null && keys . length > 0 ) { for ( final String key : keys ) { stringWriter . append ( ", " ) . append ( key ) . append ( "=\"{}\"" ) ; } } return stringWriter . toString ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/catalog/readers/OASISXMLCatalogReader.java#L106-L111<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void startDocument ( ) throws SAXException { baseURIStack . push ( catalog . getCurrentBase ( ) ) ; overrideStack . push ( catalog . getDefaultOverride ( ) ) ; return ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/rest-assured/src/main/java/io/restassured/internal/http/AuthConfig.java#L86-L91<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void basic ( String host , int port , String user , String pass ) { builder . getClient ( ) . getCredentialsProvider ( ) . setCredentials ( new AuthScope ( host , port ) , new UsernamePasswordCredentials ( user , pass ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/orientechnologies/orientdb/blob/d970b12033f0462f0239ea0ad8ed41207e6e26f1/core/src/main/java/com/orientechnologies/orient/core/db/document/ODatabaseDocumentAbstract.java#L1907-L1913<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public long countView ( final String viewName ) { final OView cls = getMetadata ( ) . getImmutableSchemaSnapshot ( ) . getView ( viewName ) ; if ( cls == null ) throw new IllegalArgumentException ( "View '" + cls + "' not found in database" ) ; return countClass ( cls , false ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jcuda/jcublas/blob/80875235d24562073f4d66651dd17263f306427d/JCublasJava/src/main/java/jcuda/jcublas/JCublas2.java#L1667-L1675<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static int cublasDrotg ( cublasHandle handle , Pointer a , /** host or device pointer */ Pointer b , /** host or device pointer */ Pointer c , /** host or device pointer */ Pointer s ) /** host or device pointer */ { return checkResult ( cublasDrotgNative ( handle , a , b , c , s ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/MagicTheGathering/mtg-sdk-java/blob/2fce7d14155c07d41ec2830d56308287ae4646d9/src/main/java/io/magicthegathering/javasdk/api/MTGAPI.java#L43-L49<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected static < TYPE > TYPE get ( String path , String key , Class < TYPE > expectedClass ) { Gson deserializer = new GsonBuilder ( ) . create ( ) ; JsonObject jsonObject = getJsonObject ( path , deserializer ) . get ( 0 ) ; return deserializer . fromJson ( jsonObject . get ( key ) , expectedClass ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/media/crop/CropImageView.java#L95-L114<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void recomputeFocus ( MotionEvent event ) { for ( int i = 0 ; i < mHighlightViews . size ( ) ; i ++ ) { HighlightView hv = mHighlightViews . get ( i ) ; hv . setFocus ( false ) ; hv . invalidate ( ) ; } for ( int i = 0 ; i < mHighlightViews . size ( ) ; i ++ ) { HighlightView hv = mHighlightViews . get ( i ) ; int edge = hv . getHit ( event . getX ( ) , event . getY ( ) ) ; if ( edge != HighlightView . GROW_NONE ) { if ( ! hv . hasFocus ( ) ) { hv . setFocus ( true ) ; hv . invalidate ( ) ; } break ; } } invalidate ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/opendap/src/main/java/opendap/dap/DVector.java#L225-L263<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public synchronized void deserialize ( DataInputStream source , ServerVersion sv , StatusUI statusUI ) throws IOException , EOFException , DataReadException { // Because arrays of primitive types (ie int32, float32, byte, etc) are  // handled in the C++ core using the XDR package we must read the  // length twice for those types. For BaseType vectors, we should read  // it only once. This is in effect a work around for a bug in the C++  // core as the C++ core does not consume 2 length values for the  // BaseType vectors. Bummer...  int length ; length = source . readInt ( ) ; if ( ! ( vals instanceof BaseTypePrimitiveVector ) ) { // because both XDR and OPeNDAP write the length, we must read it twice  int length2 = source . readInt ( ) ; //LogStream.out.println("array1 length read: "+getName()+" "+length+ " -- "+length2);  //LogStream.out.println("  array type = : "+vals.getClass().getName());  // QC the second length  if ( length != length2 ) { throw new DataReadException ( "Inconsistent array length read: " + length + " != " + length2 ) ; } } /* else {           LogStream.dbg.println("array2 length read: "+getName()+" "+length);           LogStream.dbg.println("  array type = : "+vals.getClass().getName());         } */ if ( length < 0 ) throw new DataReadException ( "Negative array length read." ) ; if ( statusUI != null ) statusUI . incrementByteCount ( 8 ) ; vals . setLength ( length ) ; vals . deserialize ( source , sv , statusUI ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/xml/catalog/Catalog.java#L890-L1062<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void addEntry ( CatalogEntry entry ) { int type = entry . getEntryType ( ) ; if ( type == BASE ) { String value = entry . getEntryArg ( 0 ) ; URL newbase = null ; catalogManager . debug . message ( 5 , "BASE CUR" , base . toString ( ) ) ; catalogManager . debug . message ( 4 , "BASE STR" , value ) ; try { value = fixSlashes ( value ) ; newbase = new URL ( base , value ) ; } catch ( MalformedURLException e ) { try { newbase = new URL ( "file:" + value ) ; } catch ( MalformedURLException e2 ) { catalogManager . debug . message ( 1 , "Malformed URL on base" , value ) ; newbase = null ; } } if ( newbase != null ) { base = newbase ; } catalogManager . debug . message ( 5 , "BASE NEW" , base . toString ( ) ) ; } else if ( type == CATALOG ) { String fsi = makeAbsolute ( entry . getEntryArg ( 0 ) ) ; catalogManager . debug . message ( 4 , "CATALOG" , fsi ) ; localCatalogFiles . addElement ( fsi ) ; } else if ( type == PUBLIC ) { String publicid = PublicId . normalize ( entry . getEntryArg ( 0 ) ) ; String systemid = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 1 ) ) ) ; entry . setEntryArg ( 0 , publicid ) ; entry . setEntryArg ( 1 , systemid ) ; catalogManager . debug . message ( 4 , "PUBLIC" , publicid , systemid ) ; catalogEntries . addElement ( entry ) ; } else if ( type == SYSTEM ) { String systemid = normalizeURI ( entry . getEntryArg ( 0 ) ) ; String fsi = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 1 ) ) ) ; entry . setEntryArg ( 1 , fsi ) ; catalogManager . debug . message ( 4 , "SYSTEM" , systemid , fsi ) ; catalogEntries . addElement ( entry ) ; } else if ( type == URI ) { String uri = normalizeURI ( entry . getEntryArg ( 0 ) ) ; String altURI = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 1 ) ) ) ; entry . setEntryArg ( 1 , altURI ) ; catalogManager . debug . message ( 4 , "URI" , uri , altURI ) ; catalogEntries . addElement ( entry ) ; } else if ( type == DOCUMENT ) { String fsi = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 0 ) ) ) ; entry . setEntryArg ( 0 , fsi ) ; catalogManager . debug . message ( 4 , "DOCUMENT" , fsi ) ; catalogEntries . addElement ( entry ) ; } else if ( type == OVERRIDE ) { catalogManager . debug . message ( 4 , "OVERRIDE" , entry . getEntryArg ( 0 ) ) ; catalogEntries . addElement ( entry ) ; } else if ( type == SGMLDECL ) { // meaningless in XML String fsi = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 0 ) ) ) ; entry . setEntryArg ( 0 , fsi ) ; catalogManager . debug . message ( 4 , "SGMLDECL" , fsi ) ; catalogEntries . addElement ( entry ) ; } else if ( type == DELEGATE_PUBLIC ) { String ppi = PublicId . normalize ( entry . getEntryArg ( 0 ) ) ; String fsi = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 1 ) ) ) ; entry . setEntryArg ( 0 , ppi ) ; entry . setEntryArg ( 1 , fsi ) ; catalogManager . debug . message ( 4 , "DELEGATE_PUBLIC" , ppi , fsi ) ; addDelegate ( entry ) ; } else if ( type == DELEGATE_SYSTEM ) { String psi = normalizeURI ( entry . getEntryArg ( 0 ) ) ; String fsi = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 1 ) ) ) ; entry . setEntryArg ( 0 , psi ) ; entry . setEntryArg ( 1 , fsi ) ; catalogManager . debug . message ( 4 , "DELEGATE_SYSTEM" , psi , fsi ) ; addDelegate ( entry ) ; } else if ( type == DELEGATE_URI ) { String pui = normalizeURI ( entry . getEntryArg ( 0 ) ) ; String fsi = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 1 ) ) ) ; entry . setEntryArg ( 0 , pui ) ; entry . setEntryArg ( 1 , fsi ) ; catalogManager . debug . message ( 4 , "DELEGATE_URI" , pui , fsi ) ; addDelegate ( entry ) ; } else if ( type == REWRITE_SYSTEM ) { String psi = normalizeURI ( entry . getEntryArg ( 0 ) ) ; String rpx = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 1 ) ) ) ; entry . setEntryArg ( 0 , psi ) ; entry . setEntryArg ( 1 , rpx ) ; catalogManager . debug . message ( 4 , "REWRITE_SYSTEM" , psi , rpx ) ; catalogEntries . addElement ( entry ) ; } else if ( type == REWRITE_URI ) { String pui = normalizeURI ( entry . getEntryArg ( 0 ) ) ; String upx = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 1 ) ) ) ; entry . setEntryArg ( 0 , pui ) ; entry . setEntryArg ( 1 , upx ) ; catalogManager . debug . message ( 4 , "REWRITE_URI" , pui , upx ) ; catalogEntries . addElement ( entry ) ; } else if ( type == DOCTYPE ) { String fsi = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 1 ) ) ) ; entry . setEntryArg ( 1 , fsi ) ; catalogManager . debug . message ( 4 , "DOCTYPE" , entry . getEntryArg ( 0 ) , fsi ) ; catalogEntries . addElement ( entry ) ; } else if ( type == DTDDECL ) { // meaningless in XML String fpi = PublicId . normalize ( entry . getEntryArg ( 0 ) ) ; entry . setEntryArg ( 0 , fpi ) ; String fsi = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 1 ) ) ) ; entry . setEntryArg ( 1 , fsi ) ; catalogManager . debug . message ( 4 , "DTDDECL" , fpi , fsi ) ; catalogEntries . addElement ( entry ) ; } else if ( type == ENTITY ) { String fsi = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 1 ) ) ) ; entry . setEntryArg ( 1 , fsi ) ; catalogManager . debug . message ( 4 , "ENTITY" , entry . getEntryArg ( 0 ) , fsi ) ; catalogEntries . addElement ( entry ) ; } else if ( type == LINKTYPE ) { // meaningless in XML String fsi = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 1 ) ) ) ; entry . setEntryArg ( 1 , fsi ) ; catalogManager . debug . message ( 4 , "LINKTYPE" , entry . getEntryArg ( 0 ) , fsi ) ; catalogEntries . addElement ( entry ) ; } else if ( type == NOTATION ) { String fsi = makeAbsolute ( normalizeURI ( entry . getEntryArg ( 1 ) ) ) ; entry . setEntryArg ( 1 , fsi ) ; catalogManager . debug . message ( 4 , "NOTATION" , entry . getEntryArg ( 0 ) , fsi ) ; catalogEntries . addElement ( entry ) ; } else { catalogEntries . addElement ( entry ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/alipay/sofa-bolt/blob/0ad7b46b2649bfc4e2ecc1f5e1c1f935d179c046/src/main/java/com/alipay/remoting/rpc/RpcClient.java#L288-L292<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Object invokeSync ( final String addr , final Object request , final int timeoutMillis ) throws RemotingException , InterruptedException { return this . rpcRemoting . invokeSync ( addr , request , null , timeoutMillis ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/unidata/io/RandomAccessFile.java#L1601-L1605<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public final void writeChar ( char [ ] pa , int start , int n ) throws IOException { for ( int i = 0 ; i < n ; i ++ ) { writeChar ( pa [ start + i ] ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jboss/jboss-common-core/blob/c191bb18db83fa106c6913cf34ed47989b65dc97/src/main/java/org/jboss/util/graph/Graph.java#L194-L220<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public boolean removeVertex ( Vertex < T > v ) { if ( ! verticies . containsValue ( v ) ) return false ; verticies . remove ( v . getName ( ) ) ; if ( v == rootVertex ) rootVertex = null ; // Remove the edges associated with v for ( int n = 0 ; n < v . getOutgoingEdgeCount ( ) ; n ++ ) { Edge < T > e = v . getOutgoingEdge ( n ) ; v . remove ( e ) ; Vertex < T > to = e . getTo ( ) ; to . remove ( e ) ; edges . remove ( e ) ; } for ( int n = 0 ; n < v . getIncomingEdgeCount ( ) ; n ++ ) { Edge < T > e = v . getIncomingEdge ( n ) ; v . remove ( e ) ; Vertex < T > predecessor = e . getFrom ( ) ; predecessor . remove ( e ) ; } return true ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/iosp/sigmet/SigmetVolumeScan.java#L718-L793<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>void checkSort ( Ray [ ] r ) { int j = 0 , n = 0 , n1 = 0 , n2 = 0 ; short time1 = 0 , time2 = 0 ; int [ ] k1 = new int [ 300 ] ; int [ ] k2 = new int [ 300 ] ; //      define the groups of rays with the same "time". For ex.:  //      group1 - ray[0]={time=1,az=344}, ray[1]={time=1,az=345}, ... ray[11]={time=1,az=359}  //      group2 - ray[12]={time=1,az=0}, ray[13]={time=1,az=1}, ... ray[15]={time=1,az=5}  //      k1- array of begin indx (0,12), k2- array of end indx (11,15)  for ( int i = 0 ; i < r . length - 1 ; i ++ ) { time1 = r [ i ] . getTime ( ) ; time2 = r [ i + 1 ] . getTime ( ) ; if ( time1 != time2 ) { k2 [ j ] = i ; j = j + 1 ; k1 [ j ] = i + 1 ; } } if ( k2 [ j ] < r . length - 1 ) { k1 [ j ] = k2 [ j - 1 ] + 1 ; k2 [ j ] = r . length - 1 ; n = j + 1 ; } //      if different groups have the same value of "time" (may be 2 and more groups) -  //      it1= indx of "k1" of 1st group, it2= indx of "k2" of last group  int it1 = 0 , it2 = 0 ; for ( int ii = 0 ; ii < j + 1 ; ii ++ ) { n1 = k1 [ ii ] ; for ( int i = 0 ; i < j + 1 ; i ++ ) { if ( i != ii ) { n2 = k1 [ i ] ; if ( r [ n1 ] . getTime ( ) == r [ n2 ] . getTime ( ) ) { it1 = ii ; it2 = i ; } } } } n1 = k1 [ it1 ] ; n2 = k1 [ it2 ] ; int s1 = k2 [ it1 ] - k1 [ it1 ] + 1 ; int s2 = k2 [ it2 ] - k1 [ it2 ] + 1 ; float [ ] t0 = new float [ s1 ] ; float [ ] t00 = new float [ s2 ] ; for ( int i = 0 ; i < s1 ; i ++ ) { t0 [ i ] = r [ n1 + i ] . getAz ( ) ; } for ( int i = 0 ; i < s2 ; i ++ ) { t00 [ i ] = r [ n2 + i ] . getAz ( ) ; } float mx0 = t0 [ 0 ] ; for ( int i = 0 ; i < s1 ; i ++ ) { if ( mx0 < t0 [ i ] ) mx0 = t0 [ i ] ; } float mx00 = t00 [ 0 ] ; for ( int i = 0 ; i < s2 ; i ++ ) { if ( mx00 < t00 [ i ] ) mx00 = t00 [ i ] ; } if ( ( mx0 > 330.0f & mx00 < 50.0f ) ) { for ( int i = 0 ; i < s1 ; i ++ ) { float q = r [ n1 + i ] . getAz ( ) ; r [ n1 + i ] . setAz ( q - 360.0f ) ; } } Arrays . sort ( r , new RayComparator ( ) ) ; for ( int i = 0 ; i < r . length ; i ++ ) { float a = r [ i ] . getAz ( ) ; if ( a < 0 & a > - 361.0f ) { float qa = r [ i ] . getAz ( ) ; r [ i ] . setAz ( qa + 360.0f ) ; } } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/ma2/MAMath.java#L251-L259<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void copyLong ( Array result , Array a ) throws IllegalArgumentException { if ( ! conformable ( a , result ) ) throw new IllegalArgumentException ( "copy arrays are not conformable" ) ; IndexIterator iterA = a . getIndexIterator ( ) ; IndexIterator iterR = result . getIndexIterator ( ) ; while ( iterA . hasNext ( ) ) iterR . setLongNext ( iterA . getLongNext ( ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/FileUtil.java#L212-L233<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Map . Entry < String , String > cutExtension ( final String filename ) { String prefix ; String suffix = null ; final StringTokenizer tokenizer = new StringTokenizer ( filename , "." ) ; int tokenCount = tokenizer . countTokens ( ) ; if ( tokenCount > 1 ) { final StringBuffer prefCollect = new StringBuffer ( ) ; while ( tokenCount > 1 ) { tokenCount -- ; prefCollect . append ( tokenizer . nextToken ( ) ) ; if ( tokenCount > 1 ) { prefCollect . append ( "." ) ; } } prefix = prefCollect . toString ( ) ; suffix = tokenizer . nextToken ( ) ; } else { prefix = filename ; suffix = "" ; } return new Entry < String , String > ( prefix , suffix ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/tony19/logback-android/blob/028489c11ccfc1237a53923db06f22a90b41809c/logback-android/src/main/java/ch/qos/logback/core/net/server/RemoteReceiverServerRunner.java#L52-L57<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override protected boolean configureClient ( RemoteReceiverClient client ) { client . setContext ( getContext ( ) ) ; client . setQueue ( new ArrayBlockingQueue < Serializable > ( clientQueueSize ) ) ; return true ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/boonproject/boon/blob/9bc6870dbe5dd58c45c18d8edb493e8efc089463/boon/src/main/java/org/boon/cache/CacheEntry.java#L84-L99<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public final int compareTo ( CacheEntry other ) { switch ( type ) { case LFU : return compareToLFU ( other ) ; case LRU : return compareToLRU ( other ) ; case FIFO : return compareToFIFO ( other ) ; default : die ( ) ; return 0 ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kiegroup/droolsjbpm-tools/blob/05e1f73c591178360a198dca29f99d73918991db/drools-eclipse/org.guvnor.eclipse.webdav/src/client/org/eclipse/webdav/client/AbstractResourceHandle.java#L545-L590<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public URLTable getProperties ( Collection propertyNames , String depth ) throws DAVException { // Set up the request context. IContext context = newContext ( ) ; context . setDepth ( depth ) ; // Set up the request body. Document document = newDocument ( ) ; PropFind propfind = PropFind . create ( document ) ; // null is a special value meaning 'all properties'. if ( propertyNames == null ) propfind . setIsAllProp ( true ) ; else { // Add all the property names to the request body. Prop prop = propfind . setProp ( ) ; Iterator namesItr = propertyNames . iterator ( ) ; while ( namesItr . hasNext ( ) ) prop . addPropertyName ( ( QualifiedName ) namesItr . next ( ) ) ; } // Were ready to make the server call. IResponse response = null ; try { // This contacts the server. response = davClient . propfind ( locator , context , document ) ; examineResponse ( response ) ; // Create a multi-status element editor on the response. if ( ! response . hasDocumentBody ( ) ) throw new DAVException ( Policy . bind ( "exception.respMustShareXMLDoc" ) ) ; //$NON-NLS-1$ Element documentElement = response . getDocumentBody ( ) . getDocumentElement ( ) ; if ( documentElement == null ) throw new DAVException ( Policy . bind ( "exception.respHasInvalidDoc" ) ) ; //$NON-NLS-1$ MultiStatus multiStatus = new MultiStatus ( documentElement ) ; // Construct a URLTable of results to return to the user. return extractPropStats ( multiStatus ) ; } catch ( IOException e ) { throw new SystemException ( e ) ; } catch ( MalformedElementException e ) { throw new SystemException ( e ) ; } finally { closeResponse ( response ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/wildfly/wildfly/blob/64896f1500fe465ad83d96ede9fa19d0c3747f18/jpa/hibernate5_3/src/main/java/org/jboss/as/jpa/hibernate5/HibernatePersistenceProviderAdaptor.java#L194-L204<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private boolean isHibernateExtendedBeanManagerSupported ( ) { try { Class . forName ( HIBERNATE_EXTENDED_BEANMANAGER ) ; return true ; } catch ( ClassNotFoundException ignore ) { return false ; } catch ( NoClassDefFoundError ignore ) { return false ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/ngageoint/geopackage-android/blob/d19e9fcc636462c0f0ae1b7eca4acafae48de21b/geopackage-sdk/src/main/java/mil/nga/geopackage/db/GeoPackageConnection.java#L75-L88<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>@ Override public int count ( String table , String where , String [ ] args ) { StringBuilder countQuery = new StringBuilder ( ) ; countQuery . append ( "select count(*) from " ) . append ( CoreSQLUtils . quoteWrap ( table ) ) ; if ( where != null ) { countQuery . append ( " where " ) . append ( where ) ; } String sql = countQuery . toString ( ) ; int count = querySingleInteger ( sql , args , true ) ; return count ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/common/src/main/java/org/mobicents/slee/container/deployment/jboss/DeploymentManagerMBeanImpl.java#L100-L107<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void clusterInstall ( URL deployableUnitURL ) throws DeploymentException { try { doPersistentInstall ( deployableUnitURL , farmDeployDir ) ; } catch ( Exception e ) { throw new DeploymentException ( e ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/tiefaces/TieFaces/blob/3b57b9701ed0f080b5fa4fa78269cc0c422b34ba/src/org/tiefaces/components/websheet/utility/WebSheetUtility.java#L289-L296<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static int widthUnits2Pixel ( final int widthUnits ) { int pixels = ( widthUnits / EXCEL_COLUMN_WIDTH_FACTOR ) * UNIT_OFFSET_LENGTH ; int offsetWidthUnits = widthUnits % EXCEL_COLUMN_WIDTH_FACTOR ; pixels += Math . round ( offsetWidthUnits / ( ( float ) EXCEL_COLUMN_WIDTH_FACTOR / UNIT_OFFSET_LENGTH ) ) ; return pixels ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/artclarke/humble-video/blob/aa349ae2d7ef74160b7074feac8d298cf90394d1/humble-video-demos/src/main/java/io/humble/video/demos/DecodeAndPlayAudio.java#L72-L207<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private static void playSound ( String filename ) throws InterruptedException , IOException , LineUnavailableException { /*      * Start by creating a container object, in this case a demuxer since      * we are reading, to get audio data from.      */ Demuxer demuxer = Demuxer . make ( ) ; /*      * Open the demuxer with the filename passed on.      */ demuxer . open ( filename , null , false , true , null , null ) ; /*      * Query how many streams the call to open found      */ int numStreams = demuxer . getNumStreams ( ) ; /*      * Iterate through the streams to find the first audio stream      */ int audioStreamId = - 1 ; Decoder audioDecoder = null ; for ( int i = 0 ; i < numStreams ; i ++ ) { final DemuxerStream stream = demuxer . getStream ( i ) ; final Decoder decoder = stream . getDecoder ( ) ; if ( decoder != null && decoder . getCodecType ( ) == MediaDescriptor . Type . MEDIA_AUDIO ) { audioStreamId = i ; audioDecoder = decoder ; // stop at the first one. break ; } } if ( audioStreamId == - 1 ) throw new RuntimeException ( "could not find audio stream in container: " + filename ) ; /*      * Now we have found the audio stream in this file.  Let's open up our decoder so it can      * do work.      */ audioDecoder . open ( null , null ) ; /*      * We allocate a set of samples with the same number of channels as the      * coder tells us is in this buffer.      */ final MediaAudio samples = MediaAudio . make ( audioDecoder . getFrameSize ( ) , audioDecoder . getSampleRate ( ) , audioDecoder . getChannels ( ) , audioDecoder . getChannelLayout ( ) , audioDecoder . getSampleFormat ( ) ) ; /*      * A converter object we'll use to convert Humble Audio to a format that      * Java Audio can actually play. The details are complicated, but essentially      * this converts any audio format (represented in the samples object) into      * a default audio format suitable for Java's speaker system (which will      * be signed 16-bit audio, stereo (2-channels), resampled to 22,050 samples      * per second).      */ final MediaAudioConverter converter = MediaAudioConverterFactory . createConverter ( MediaAudioConverterFactory . DEFAULT_JAVA_AUDIO , samples ) ; /*      * An AudioFrame is a wrapper for the Java Sound system that abstracts away      * some stuff. Go read the source code if you want -- it's not very complicated.      */ final AudioFrame audioFrame = AudioFrame . make ( converter . getJavaFormat ( ) ) ; if ( audioFrame == null ) throw new LineUnavailableException ( ) ; /* We will use this to cache the raw-audio we pass to and from      * the java sound system.      */ ByteBuffer rawAudio = null ; /*      * Now, we start walking through the container looking at each packet. This      * is a decoding loop, and as you work with Humble you'll write a lot      * of these.      *       * Notice how in this loop we reuse all of our objects to avoid      * reallocating them. Each call to Humble resets objects to avoid      * unnecessary reallocation.      */ final MediaPacket packet = MediaPacket . make ( ) ; while ( demuxer . read ( packet ) >= 0 ) { /*        * Now we have a packet, let's see if it belongs to our audio stream        */ if ( packet . getStreamIndex ( ) == audioStreamId ) { /*          * A packet can actually contain multiple sets of samples (or frames of samples          * in audio-decoding speak).  So, we may need to call decode audio multiple          * times at different offsets in the packet's data.  We capture that here.          */ int offset = 0 ; int bytesRead = 0 ; do { bytesRead += audioDecoder . decode ( samples , packet , offset ) ; if ( samples . isComplete ( ) ) { rawAudio = converter . toJavaAudio ( rawAudio , samples ) ; audioFrame . play ( rawAudio ) ; } offset += bytesRead ; } while ( offset < packet . getSize ( ) ) ; } } // Some audio decoders (especially advanced ones) will cache // audio data before they begin decoding, so when you are done you need // to flush them. The convention to flush Encoders or Decoders in Humble Video // is to keep passing in null until incomplete samples or packets are returned. do { audioDecoder . decode ( samples , null , 0 ) ; if ( samples . isComplete ( ) ) { rawAudio = converter . toJavaAudio ( rawAudio , samples ) ; audioFrame . play ( rawAudio ) ; } } while ( samples . isComplete ( ) ) ; // It is good practice to close demuxers when you're done to free // up file handles. Humble will EVENTUALLY detect if nothing else // references this demuxer and close it then, but get in the habit // of cleaning up after yourself, and your future girlfriend/boyfriend // will appreciate it. demuxer . close ( ) ; // similar with the demuxer, for the audio playback stuff, clean up after yourself. audioFrame . dispose ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/grib/src/main/java/ucar/nc2/grib/grib2/table/Grib2Tables.java#L282-L314<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public double getForecastTimeIntervalSizeInHours ( Grib2Pds pds ) { Grib2Pds . PdsInterval pdsIntv = ( Grib2Pds . PdsInterval ) pds ; int timeUnitOrg = pds . getTimeUnit ( ) ; // calculate total "range" in units of timeUnit  int range = 0 ; for ( Grib2Pds . TimeInterval ti : pdsIntv . getTimeIntervals ( ) ) { if ( ti . timeRangeUnit == 255 ) continue ; if ( ( ti . timeRangeUnit != timeUnitOrg ) || ( ti . timeIncrementUnit != timeUnitOrg && ti . timeIncrementUnit != 255 && ti . timeIncrement != 0 ) ) { logger . warn ( "TimeInterval(2) has different units timeUnit org=" + timeUnitOrg + " TimeInterval=" + ti . timeIncrementUnit ) ; throw new RuntimeException ( "TimeInterval(2) has different units" ) ; } range += ti . timeRangeLength ; if ( ti . timeIncrementUnit != 255 ) range += ti . timeIncrement ; } // now convert that range to units of the requested period.  CalendarPeriod timeUnitPeriod = Grib2Utils . getCalendarPeriod ( convertTimeUnit ( timeUnitOrg ) ) ; if ( timeUnitPeriod == null ) return GribNumbers . UNDEFINEDD ; if ( timeUnitPeriod . equals ( CalendarPeriod . Hour ) ) return range ; double fac ; if ( timeUnitPeriod . getField ( ) == CalendarPeriod . Field . Month ) { fac = 30.0 * 24.0 ; // nominal hours in a month  } else if ( timeUnitPeriod . getField ( ) == CalendarPeriod . Field . Year ) { fac = 365.0 * 24.0 ; // nominal hours in a year  } else { fac = CalendarPeriod . Hour . getConvertFactor ( timeUnitPeriod ) ; } return fac * range ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/1gravity/Android-RTEditor/blob/9d8fb4bb865b3b3d011e7633afedcdfb8d21754f/RTEditor/src/main/java/com/onegravity/rteditor/media/crop/CropImageView.java#L208-L223<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private void ensureVisible ( HighlightView hv ) { Rect r = hv . mDrawRect ; int panDeltaX1 = Math . max ( 0 , mLeft - r . left ) ; int panDeltaX2 = Math . min ( 0 , mRight - r . right ) ; int panDeltaY1 = Math . max ( 0 , mTop - r . top ) ; int panDeltaY2 = Math . min ( 0 , mBottom - r . bottom ) ; int panDeltaX = panDeltaX1 != 0 ? panDeltaX1 : panDeltaX2 ; int panDeltaY = panDeltaY1 != 0 ? panDeltaY1 : panDeltaY2 ; if ( panDeltaX != 0 || panDeltaY != 0 ) { panBy ( panDeltaX , panDeltaY ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jcuda/jcublas/blob/80875235d24562073f4d66651dd17263f306427d/JCublasJava/src/main/java/jcuda/jcublas/JCublas.java#L2064-L2068<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static void cublasZswap ( int n , Pointer x , int incx , Pointer y , int incy ) { cublasZswapNative ( n , x , incx , y , incy ) ; checkResultBLAS ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/artclarke/humble-video/blob/aa349ae2d7ef74160b7074feac8d298cf90394d1/humble-video-noarch/src/main/java/io/humble/video/Codec.java#L590-L592<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public AudioChannel . Layout getSupportedAudioChannelLayout ( int index ) { return AudioChannel . Layout . swigToEnum ( VideoJNI . Codec_getSupportedAudioChannelLayout ( swigCPtr , this , index ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/core/play/src/main/java/play/mvc/Results.java#L84-L89<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Result status ( int status , String content , String charset ) { if ( content == null ) { throw new NullPointerException ( "Null content" ) ; } return new Result ( status , HttpEntity . fromString ( content , charset ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/OpenEstate/OpenEstate-IO/blob/f961dae78f40823f05a8c0d4e59d639e718aa18a/Examples/src/main/java/org/openestate/io/examples/FilemakerWritingExample.java#L171-L178<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected static ResultSetType createResultSet ( ) { ResultSetType result = FACTORY . createResultSetType ( ) ; result . getROW ( ) . add ( createResultSetRow ( 1 , 3 , 100 , "a first example" ) ) ; result . getROW ( ) . add ( createResultSetRow ( 2 , null , 200 , "a second example" ) ) ; result . getROW ( ) . add ( createResultSetRow ( 3 , 5 , 300 , null ) ) ; result . setFOUND ( BigInteger . valueOf ( result . getROW ( ) . size ( ) ) ) ; return result ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/lessthanoptimal/GeoRegression/blob/c067cd44a4e95bd826119f6e658bd82386ef289f/main/src/georegression/metric/UtilAngle.java#L249-L254<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static double distanceCW ( double angA , double angB ) { if ( angA >= angB ) return angA - angB ; else return GrlConstants . PI2 - ( angB - angA ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/oaqa/baseqa/blob/6ea632d8e51e3e617d4876fc1185c49be0ad7eb8/src/main/java/edu/cmu/lti/oaqa/type/retrieval/AbstractQuery.java#L84-L87<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void setConcepts ( FSList v ) { if ( AbstractQuery_Type . featOkTst && ( ( AbstractQuery_Type ) jcasType ) . casFeat_concepts == null ) jcasType . jcas . throwFeatMissing ( "concepts" , "edu.cmu.lti.oaqa.type.retrieval.AbstractQuery" ) ; jcasType . ll_cas . ll_setRefValue ( addr , ( ( AbstractQuery_Type ) jcasType ) . casFeatCode_concepts , jcasType . ll_cas . ll_getFSRef ( v ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/iosp/nids/Nidsheader.java#L3382-L3418<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>protected Object convert ( byte [ ] barray , DataType dataType , int byteOrder ) { if ( dataType == DataType . BYTE ) { return new Byte ( barray [ 0 ] ) ; } if ( dataType == DataType . CHAR ) { return new Character ( ( char ) barray [ 0 ] ) ; } ByteBuffer bbuff = ByteBuffer . wrap ( barray ) ; if ( byteOrder >= 0 ) bbuff . order ( byteOrder == ucar . unidata . io . RandomAccessFile . LITTLE_ENDIAN ? ByteOrder . LITTLE_ENDIAN : ByteOrder . BIG_ENDIAN ) ; if ( dataType == DataType . SHORT ) { ShortBuffer tbuff = bbuff . asShortBuffer ( ) ; return new Short ( tbuff . get ( ) ) ; } else if ( dataType == DataType . INT ) { IntBuffer tbuff = bbuff . asIntBuffer ( ) ; return new Integer ( tbuff . get ( ) ) ; } else if ( dataType == DataType . LONG ) { LongBuffer tbuff = bbuff . asLongBuffer ( ) ; return new Long ( tbuff . get ( ) ) ; } else if ( dataType == DataType . FLOAT ) { FloatBuffer tbuff = bbuff . asFloatBuffer ( ) ; return new Float ( tbuff . get ( ) ) ; } else if ( dataType == DataType . DOUBLE ) { DoubleBuffer tbuff = bbuff . asDoubleBuffer ( ) ; return new Double ( tbuff . get ( ) ) ; } throw new IllegalStateException ( ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rupertlssmith/lojix/blob/ad494dc8bce2345567de7689d42291d4b30fbd51/base/common/src/main/com/thesett/common/throttle/BaseThrottle.java#L74-L97<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void throttle ( ) throws InterruptedException { // Don't introduce any pause on the first call. if ( ! firstCall ) { // Check if there is any time left in the cycle since the last throttle call to this method and introduce a // short pause to fill that time if there is. long remainingTimeNanos = timeToThrottleNanos ( ) ; while ( remainingTimeNanos > 0 ) { long milliPause = remainingTimeNanos / 1000000 ; int nanoPause = ( int ) ( remainingTimeNanos % 1000000 ) ; Thread . sleep ( milliPause , nanoPause ) ; remainingTimeNanos = timeToThrottleNanos ( ) ; } } else { firstCall = false ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/rest-assured/rest-assured/blob/165a85b65070f5a07fe0045175613fb2c2811642/modules/spring-mock-mvc/src/main/java/io/restassured/module/mockmvc/config/RestAssuredMockMvcConfig.java#L167-L171<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public RestAssuredMockMvcConfig encoderConfig ( EncoderConfig encoderConfig ) { notNull ( encoderConfig , "EncoderConfig" ) ; return new RestAssuredMockMvcConfig ( logConfig , encoderConfig , decoderConfig , sessionConfig , objectMapperConfig , jsonConfig , xmlConfig , headerConfig , asyncConfig , multiPartConfig , mockMvcConfig , paramConfig , matcherConfig ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/Unidata/thredds/blob/d2d68f9eee87f345625211324d71d5dc3e162ee1/cdm/src/main/java/ucar/nc2/units/DateFromString.java#L34-L47<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static Date getDateUsingSimpleDateFormat ( String dateString , String dateFormatString ) { // Determine first numeric character in dateString and drop proceeding characters. int smallestIndex = dateString . length ( ) ; if ( smallestIndex == 0 ) return null ; for ( int i = 0 ; i < 10 ; i ++ ) { int curIndex = dateString . indexOf ( String . valueOf ( i ) ) ; if ( curIndex != - 1 && smallestIndex > curIndex ) smallestIndex = curIndex ; } return getDateUsingCompleteDateFormatWithOffset ( dateString , dateFormatString , smallestIndex ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/lightcouch/LightCouch/blob/9646889503475e862fd2158487e1cdd805447f4a/src/main/java/org/lightcouch/View.java#L124-L131<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public InputStream queryForStream ( ) { URI uri = uriBuilder . build ( ) ; if ( allDocsKeys != null ) { // bulk docs return getStream ( dbc . post ( uri , allDocsKeys ) ) ; } return dbc . get ( uri ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/playframework/playframework/blob/3c46dca803d24e715d85de678c59dcfac9525a00/documentation/manual/working/javaGuide/main/i18n/code/javaguide/i18n/JavaI18N.java#L256-L262<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private MessagesApi explicitMessagesApi ( ) { return new play . i18n . MessagesApi ( new play . api . i18n . DefaultMessagesApi ( Collections . singletonMap ( Lang . defaultLang ( ) . code ( ) , Collections . singletonMap ( "foo" , "bar" ) ) , new play . api . i18n . DefaultLangs ( ) . asJava ( ) ) ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/RestComm/jain-slee/blob/0eaa16ff2d4b6faf43f0d99260e88878fd54dee0/container/services/src/main/java/org/mobicents/slee/container/management/ServiceManagementImpl.java#L614-L629<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public ObjectName getServiceUsageMBean ( ServiceID serviceID ) throws NullPointerException , UnrecognizedServiceException , ManagementException { if ( logger . isDebugEnabled ( ) ) { logger . debug ( "getServiceUsageMBean " + serviceID ) ; } final ServiceComponent serviceComponent = componentRepositoryImpl . getComponentByID ( serviceID ) ; if ( serviceComponent != null ) { return serviceComponent . getServiceUsageMBean ( ) . getObjectName ( ) ; } else { throw new UnrecognizedServiceException ( serviceID . toString ( ) ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/jbundle/util/blob/5af0f2292f56f29f70cbc26d0bfa72f89ae31be0/jbackup/src/main/java/org/jbundle/jbackup/destination/ZipDestination.java#L78-L113<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public void initTransfer ( Properties properties ) { super . initTransfer ( properties ) ; String strPathname = properties . getProperty ( ZIPOUT_PATHNAME_PARAM ) ; if ( ( strPathname != null ) && ( strPathname . length ( ) > 0 ) && ( strPathname . lastIndexOf ( System . getProperties ( ) . getProperty ( "file.separator" ) ) == strPathname . length ( ) - 1 ) && ( strPathname . lastIndexOf ( ' ' ) == strPathname . length ( ) - 1 ) ) strPathname += System . getProperties ( ) . getProperty ( "file.separator" ) ; m_strZipFilename = properties . getProperty ( ZIPOUT_FILENAME_PARAM ) ; if ( ( m_strZipFilename == null ) || ( m_strZipFilename . length ( ) == 0 ) || ( m_strZipFilename . equals ( "[automatic]" ) ) ) m_strZipFilename = this . getBackupFilename ( ) ; if ( strPathname != null ) m_strZipFilename = strPathname + m_strZipFilename ; String strMaxSize = properties . getProperty ( MAX_SIZE_PARAM ) ; m_lMaxZipFileSize = 0 ; try { if ( strMaxSize != null ) m_lMaxZipFileSize = Long . parseLong ( strMaxSize ) ; } catch ( NumberFormatException ex ) { m_lMaxZipFileSize = 0 ; } m_lCurrentLength = 0 ; m_iFileNumber = 0 ; try { FileOutputStream outStream = new FileOutputStream ( m_strZipFilename ) ; m_outZip = new ZipOutputStream ( outStream ) ; } catch ( IOException ex ) { ex . printStackTrace ( ) ; } }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/braintree/braintree_android/blob/07b32e6fad73f9fb8432971b0e79fc8c94b11873/Braintree/src/main/java/com/braintreepayments/api/PayPal.java#L216-L291<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>private static void createPaymentResource ( BraintreeFragment fragment , PayPalRequest request , boolean isBillingAgreement , HttpResponseCallback callback ) throws JSONException , ErrorWithResponse , BraintreeException { String currencyCode = request . getCurrencyCode ( ) ; if ( currencyCode == null ) { currencyCode = fragment . getConfiguration ( ) . getPayPal ( ) . getCurrencyIsoCode ( ) ; } CheckoutRequest checkoutRequest = getCheckoutRequest ( fragment , null ) ; JSONObject parameters = new JSONObject ( ) . put ( RETURN_URL_KEY , checkoutRequest . getSuccessUrl ( ) ) . put ( CANCEL_URL_KEY , checkoutRequest . getCancelUrl ( ) ) . put ( OFFER_CREDIT_KEY , request . shouldOfferCredit ( ) ) ; if ( fragment . getAuthorization ( ) instanceof ClientToken ) { parameters . put ( AUTHORIZATION_FINGERPRINT_KEY , fragment . getAuthorization ( ) . getBearer ( ) ) ; } else { parameters . put ( TOKENIZATION_KEY , fragment . getAuthorization ( ) . getBearer ( ) ) ; } if ( ! isBillingAgreement ) { parameters . put ( AMOUNT_KEY , request . getAmount ( ) ) . put ( CURRENCY_ISO_CODE_KEY , currencyCode ) . put ( INTENT_KEY , request . getIntent ( ) ) ; } else { if ( ! TextUtils . isEmpty ( request . getBillingAgreementDescription ( ) ) ) { parameters . put ( DESCRIPTION_KEY , request . getBillingAgreementDescription ( ) ) ; } } JSONObject experienceProfile = new JSONObject ( ) ; experienceProfile . put ( NO_SHIPPING_KEY , ! request . isShippingAddressRequired ( ) ) ; experienceProfile . put ( LANDING_PAGE_TYPE_KEY , request . getLandingPageType ( ) ) ; String displayName = request . getDisplayName ( ) ; if ( TextUtils . isEmpty ( displayName ) ) { displayName = fragment . getConfiguration ( ) . getPayPal ( ) . getDisplayName ( ) ; } experienceProfile . put ( DISPLAY_NAME_KEY , displayName ) ; if ( request . getLocaleCode ( ) != null ) { experienceProfile . put ( LOCALE_CODE_KEY , request . getLocaleCode ( ) ) ; } if ( request . getShippingAddressOverride ( ) != null ) { experienceProfile . put ( ADDRESS_OVERRIDE_KEY , ! request . isShippingAddressEditable ( ) ) ; JSONObject shippingAddressJson ; if ( isBillingAgreement ) { shippingAddressJson = new JSONObject ( ) ; parameters . put ( SHIPPING_ADDRESS_KEY , shippingAddressJson ) ; } else { shippingAddressJson = parameters ; } PostalAddress shippingAddress = request . getShippingAddressOverride ( ) ; shippingAddressJson . put ( PostalAddressParser . LINE_1_KEY , shippingAddress . getStreetAddress ( ) ) ; shippingAddressJson . put ( PostalAddressParser . LINE_2_KEY , shippingAddress . getExtendedAddress ( ) ) ; shippingAddressJson . put ( PostalAddressParser . LOCALITY_KEY , shippingAddress . getLocality ( ) ) ; shippingAddressJson . put ( PostalAddressParser . REGION_KEY , shippingAddress . getRegion ( ) ) ; shippingAddressJson . put ( PostalAddressParser . POSTAL_CODE_UNDERSCORE_KEY , shippingAddress . getPostalCode ( ) ) ; shippingAddressJson . put ( PostalAddressParser . COUNTRY_CODE_UNDERSCORE_KEY , shippingAddress . getCountryCodeAlpha2 ( ) ) ; shippingAddressJson . put ( PostalAddressParser . RECIPIENT_NAME_UNDERSCORE_KEY , shippingAddress . getRecipientName ( ) ) ; } else { experienceProfile . put ( ADDRESS_OVERRIDE_KEY , false ) ; } if ( request . getMerchantAccountId ( ) != null ) { parameters . put ( MERCHANT_ACCOUNT_ID , request . getMerchantAccountId ( ) ) ; } parameters . put ( EXPERIENCE_PROFILE_KEY , experienceProfile ) ; String apiUrl = isBillingAgreement ? SETUP_BILLING_AGREEMENT_ENDPOINT : CREATE_SINGLE_PAYMENT_ENDPOINT ; String versionedPath = "/v1/" + apiUrl ; fragment . getHttpClient ( ) . post ( versionedPath , parameters . toString ( ) , callback ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/khennig/jpql-querybuilder/blob/61206f7c42631c67a49603b9beddccf48a8112e8/src/main/java/com/tri/persistence/jpql/QueryBuilder.java#L282-L289<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public QueryBuilder setParameters ( final List < Parameter < ? > > parameters ) { if ( parent == null ) { this . parameters . addAll ( parameters ) ; } else { parent . setParameters ( parameters ) ; } return this ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/nutzam/ssdb4j/blob/9d907857b9bbf5d068c72e5fc7590df24db63862/src/main/java/org/nutz/ssdb4j/SSDBs.java#L63-L65<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public static final SSDB pool ( String host , int port , int timeout , Object config ) { return pool ( host , port , timeout , config , null ) ; }

1<CODESPLIT>https://github.com/blademainer/common_utils/blob/ef6baf0367c16de95a28caab67a7d5842a6d13db/commons-file/src/main/java/info/monitorenter/util/ExceptionUtil.java#L274-L279<CODESPLIT>https://github.com/kocakosm/pitaya/blob/f2b203b6cdb32723bd1249a1325a3bb5918bf99a/src/org/kocakosm/pitaya/math/Fraction.java#L199-L202<CODESPLIT>Returns the singleton instance of this class . <p > This method is useless for now as all methods are static . It may be used in future if VM - global configuration will be put to the state of the instance . <p ><CODESPLIT>public Fraction multipliedBy ( Fraction f ) { return new Fraction ( n . multiply ( f . n ) , d . multiply ( f . d ) ) . reduced ( ) ; }

